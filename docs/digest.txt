Directory structure:
└── any2/
    ├── README.md
    ├── LICENSE
    ├── Night.sln
    ├── .editorconfig
    ├── .pre-commit-config.yaml
    ├── docs/
    │   ├── API.md
    │   ├── NOTICE.md
    │   ├── PRD.md
    │   ├── operational-guidelines.md
    │   ├── testing-plan.md
    │   ├── .DS_Store
    │   ├── epics/
    │   │   ├── epic10.md
    │   │   ├── release.md
    │   │   └── archive/
    │   │       ├── epic1.md
    │   │       ├── epic2.md
    │   │       ├── epic3.md
    │   │       ├── epic4.md
    │   │       ├── epic5.md
    │   │       ├── epic6.md
    │   │       ├── epic7-design.md
    │   │       ├── epic7.md
    │   │       ├── epic8.md
    │   │       └── epic9.md
    │   └── love2d-api/
    │       ├── roadmap.md
    │       └── modules/
    │           ├── audio.md
    │           ├── data.md
    │           ├── event.md
    │           ├── filesystem.md
    │           ├── font.md
    │           ├── graphics.md
    │           ├── image.md
    │           ├── joystick.md
    │           ├── keyboard.md
    │           ├── love.md
    │           ├── math.md
    │           ├── mouse.md
    │           ├── sound.md
    │           ├── system.md
    │           ├── thread.md
    │           ├── timer.md
    │           ├── touch.md
    │           ├── video.md
    │           └── window.md
    ├── lib/
    ├── scripts/
    │   ├── sync_sdl3.py
    │   ├── update_api_doc.py
    │   └── update_tools.py
    ├── site/
    │   ├── docfx.json
    │   ├── index.md
    │   ├── toc.yml
    │   ├── _site/
    │   │   ├── index.html
    │   │   ├── index.json
    │   │   ├── manifest.json
    │   │   ├── toc.html
    │   │   ├── toc.json
    │   │   ├── xrefmap.yml
    │   │   ├── api/
    │   │   │   ├── Night.AudioConfig.html
    │   │   │   ├── Night.Color.html
    │   │   │   ├── Night.ConfigurationManager.html
    │   │   │   ├── Night.DrawMode.html
    │   │   │   ├── Night.Error.html
    │   │   │   ├── Night.ErrorHandlerDelegate.html
    │   │   │   ├── Night.FileMode.html
    │   │   │   ├── Night.FileSystemInfo.html
    │   │   │   ├── Night.FileType.html
    │   │   │   ├── Night.Filesystem.html
    │   │   │   ├── Night.Framework.html
    │   │   │   ├── Night.FullscreenType.html
    │   │   │   ├── Night.GameConfig.html
    │   │   │   ├── Night.Graphics.html
    │   │   │   ├── Night.IGame.html
    │   │   │   ├── Night.KeyCode.html
    │   │   │   ├── Night.KeySymbol.html
    │   │   │   ├── Night.Keyboard.html
    │   │   │   ├── Night.ModulesConfig.html
    │   │   │   ├── Night.Mouse.html
    │   │   │   ├── Night.MouseButton.html
    │   │   │   ├── Night.NightSDL.html
    │   │   │   ├── Night.PointF.html
    │   │   │   ├── Night.Rectangle.html
    │   │   │   ├── Night.SampleGame.Game.html
    │   │   │   ├── Night.SampleGame.Platformer.html
    │   │   │   ├── Night.SampleGame.PlatformerGame.html
    │   │   │   ├── Night.SampleGame.Player.html
    │   │   │   ├── Night.SampleGame.Program.html
    │   │   │   ├── Night.SampleGame.html
    │   │   │   ├── Night.Sprite.html
    │   │   │   ├── Night.System.html
    │   │   │   ├── Night.Timer.html
    │   │   │   ├── Night.VersionInfo.html
    │   │   │   ├── Night.Window.html
    │   │   │   ├── Night.WindowConfig.html
    │   │   │   ├── Night.WindowMode.html
    │   │   │   ├── Night.html
    │   │   │   ├── index.html
    │   │   │   ├── toc.html
    │   │   │   └── toc.json
    │   │   ├── docs/
    │   │   │   ├── getting-started.html
    │   │   │   ├── index.html
    │   │   │   ├── introduction.html
    │   │   │   ├── toc.html
    │   │   │   └── toc.json
    │   │   └── public/
    │   │       ├── bootstrap-icons-OCU552PF.woff
    │   │       ├── bootstrap-icons-X6UQXWUS.woff2
    │   │       ├── main.css
    │   │       └── main.js
    │   ├── api/
    │   │   ├── Night.AudioConfig.yml
    │   │   ├── Night.Color.yml
    │   │   ├── Night.ConfigurationManager.yml
    │   │   ├── Night.DrawMode.yml
    │   │   ├── Night.Error.yml
    │   │   ├── Night.ErrorHandlerDelegate.yml
    │   │   ├── Night.FileMode.yml
    │   │   ├── Night.FileSystemInfo.yml
    │   │   ├── Night.FileType.yml
    │   │   ├── Night.Filesystem.yml
    │   │   ├── Night.Framework.yml
    │   │   ├── Night.FullscreenType.yml
    │   │   ├── Night.GameConfig.yml
    │   │   ├── Night.Graphics.yml
    │   │   ├── Night.IGame.yml
    │   │   ├── Night.KeyCode.yml
    │   │   ├── Night.KeySymbol.yml
    │   │   ├── Night.Keyboard.yml
    │   │   ├── Night.ModulesConfig.yml
    │   │   ├── Night.Mouse.yml
    │   │   ├── Night.MouseButton.yml
    │   │   ├── Night.NightSDL.yml
    │   │   ├── Night.PointF.yml
    │   │   ├── Night.Rectangle.yml
    │   │   ├── Night.SampleGame.Game.yml
    │   │   ├── Night.SampleGame.Platformer.yml
    │   │   ├── Night.SampleGame.PlatformerGame.yml
    │   │   ├── Night.SampleGame.Player.yml
    │   │   ├── Night.SampleGame.Program.yml
    │   │   ├── Night.SampleGame.yml
    │   │   ├── Night.Sprite.yml
    │   │   ├── Night.System.yml
    │   │   ├── Night.Timer.yml
    │   │   ├── Night.VersionInfo.yml
    │   │   ├── Night.Window.yml
    │   │   ├── Night.WindowConfig.yml
    │   │   ├── Night.WindowMode.yml
    │   │   ├── Night.yml
    │   │   ├── index.md
    │   │   ├── toc.yml
    │   │   └── .manifest
    │   └── docs/
    │       ├── getting-started.md
    │       ├── index.md
    │       ├── introduction.md
    │       └── toc.yml
    ├── src/
    │   ├── .DS_Store
    │   ├── Night/
    │   │   ├── Error.cs
    │   │   ├── Framework.cs
    │   │   ├── IGame.cs
    │   │   ├── Night.csproj
    │   │   ├── VersionInfo.cs
    │   │   ├── stylecop.json
    │   │   ├── Configuration/
    │   │   │   ├── AudioConfig.cs
    │   │   │   ├── ConfigurationManager.cs
    │   │   │   ├── GameConfig.cs
    │   │   │   ├── ModulesConfig.cs
    │   │   │   └── WindowConfig.cs
    │   │   ├── Engine/
    │   │   │   └── .gitkeep
    │   │   ├── Filesystem/
    │   │   │   ├── FileMode.cs
    │   │   │   ├── FileSystemInfo.cs
    │   │   │   ├── FileType.cs
    │   │   │   └── Filesystem.cs
    │   │   ├── Graphics/
    │   │   │   ├── Color.cs
    │   │   │   ├── DrawMode.cs
    │   │   │   ├── Graphics.cs
    │   │   │   ├── ImageData.cs
    │   │   │   ├── PointF.cs
    │   │   │   ├── Rectangle.cs
    │   │   │   └── Sprite.cs
    │   │   ├── Keyboard/
    │   │   │   ├── KeyCode.cs
    │   │   │   ├── KeySymbol.cs
    │   │   │   └── Keyboard.cs
    │   │   ├── Mouse/
    │   │   │   ├── Mouse.cs
    │   │   │   └── MouseButton.cs
    │   │   ├── SDL/
    │   │   │   └── NightSDL.cs
    │   │   ├── System/
    │   │   │   └── System.cs
    │   │   ├── Timer/
    │   │   │   └── Timer.cs
    │   │   ├── Window/
    │   │   │   ├── FullscreenType.cs
    │   │   │   ├── Window.cs
    │   │   │   └── WindowMode.cs
    │   │   ├── bin/
    │   │   │   ├── Debug/
    │   │   │   │   └── net9.0/
    │   │   │   │       ├── Night.Engine.deps.json
    │   │   │   │       ├── Night.deps.json
    │   │   │   │       └── Night.xml
    │   │   │   └── Release/
    │   │   │       └── net9.0/
    │   │   │           └── Night.deps.json
    │   │   └── obj/
    │   │       ├── Night.Engine.csproj.nuget.dgspec.json
    │   │       ├── Night.Engine.csproj.nuget.g.props
    │   │       ├── Night.Engine.csproj.nuget.g.targets
    │   │       ├── Night.csproj.nuget.dgspec.json
    │   │       ├── Night.csproj.nuget.g.props
    │   │       ├── Night.csproj.nuget.g.targets
    │   │       ├── project.assets.json
    │   │       ├── project.nuget.cache
    │   │       ├── Debug/
    │   │       │   └── net9.0/
    │   │       │       ├── Night.AssemblyInfo.cs
    │   │       │       ├── Night.AssemblyInfoInputs.cache
    │   │       │       ├── Night.Engine.AssemblyInfo.cs
    │   │       │       ├── Night.Engine.AssemblyInfoInputs.cache
    │   │       │       ├── Night.Engine.GeneratedMSBuildEditorConfig.editorconfig
    │   │       │       ├── Night.Engine.GlobalUsings.g.cs
    │   │       │       ├── Night.Engine.assets.cache
    │   │       │       ├── Night.Engine.csproj.AssemblyReference.cache
    │   │       │       ├── Night.Engine.csproj.CoreCompileInputs.cache
    │   │       │       ├── Night.Engine.sourcelink.json
    │   │       │       ├── Night.GeneratedMSBuildEditorConfig.editorconfig
    │   │       │       ├── Night.GlobalUsings.g.cs
    │   │       │       ├── Night.assets.cache
    │   │       │       ├── Night.csproj.AssemblyReference.cache
    │   │       │       ├── Night.csproj.CoreCompileInputs.cache
    │   │       │       ├── Night.sourcelink.json
    │   │       │       ├── .NETCoreApp,Version=v9.0.AssemblyAttributes.cs
    │   │       │       ├── ref/
    │   │       │       └── refint/
    │   │       └── Release/
    │   │           └── net9.0/
    │   │               ├── Night.AssemblyInfo.cs
    │   │               ├── Night.AssemblyInfoInputs.cache
    │   │               ├── Night.GeneratedMSBuildEditorConfig.editorconfig
    │   │               ├── Night.GlobalUsings.g.cs
    │   │               ├── Night.assets.cache
    │   │               ├── Night.csproj.AssemblyReference.cache
    │   │               ├── Night.csproj.CoreCompileInputs.cache
    │   │               ├── Night.sourcelink.json
    │   │               ├── .NETCoreApp,Version=v9.0.AssemblyAttributes.cs
    │   │               ├── ref/
    │   │               └── refint/
    │   └── SampleGame/
    │       ├── Game.cs
    │       ├── Night.SampleGame.csproj
    │       ├── Player.cs
    │       ├── Program.cs
    │       ├── config.json
    │       ├── stylecop.json
    │       ├── .DS_Store
    │       ├── Samples/
    │       │   ├── Platformer.cs
    │       │   └── PlatformerGame.cs
    │       ├── assets/
    │       │   ├── data/
    │       │   └── images/
    │       │       ├── pixel_green.pixi
    │       │       └── player_sprite_blue_32x64.aseprite
    │       ├── bin/
    │       │   ├── Debug/
    │       │   │   └── net9.0/
    │       │   │       ├── Night.SampleGame
    │       │   │       ├── Night.SampleGame.deps.json
    │       │   │       ├── Night.SampleGame.runtimeconfig.json
    │       │   │       ├── Night.SampleGame.xml
    │       │   │       ├── Night.xml
    │       │   │       ├── config.json
    │       │   │       └── assets/
    │       │   │           ├── data/
    │       │   │           └── images/
    │       │   │               ├── pixel_green.pixi
    │       │   │               └── player_sprite_blue_32x64.aseprite
    │       │   └── Release/
    │       │       └── net9.0/
    │       │           ├── Night.SampleGame
    │       │           ├── Night.SampleGame.deps.json
    │       │           ├── Night.SampleGame.runtimeconfig.json
    │       │           ├── config.json
    │       │           └── assets/
    │       │               ├── data/
    │       │               └── images/
    │       │                   ├── pixel_green.pixi
    │       │                   └── player_sprite_blue_32x64.aseprite
    │       └── obj/
    │           ├── Night.SampleGame.csproj.nuget.dgspec.json
    │           ├── Night.SampleGame.csproj.nuget.g.props
    │           ├── Night.SampleGame.csproj.nuget.g.targets
    │           ├── project.assets.json
    │           ├── project.nuget.cache
    │           ├── Debug/
    │           │   └── net9.0/
    │           │       ├── Night.Sa.E6945040.Up2Date
    │           │       ├── Night.SampleGame.AssemblyInfo.cs
    │           │       ├── Night.SampleGame.AssemblyInfoInputs.cache
    │           │       ├── Night.SampleGame.GeneratedMSBuildEditorConfig.editorconfig
    │           │       ├── Night.SampleGame.GlobalUsings.g.cs
    │           │       ├── Night.SampleGame.assets.cache
    │           │       ├── Night.SampleGame.csproj.AssemblyReference.cache
    │           │       ├── Night.SampleGame.csproj.CoreCompileInputs.cache
    │           │       ├── Night.SampleGame.genruntimeconfig.cache
    │           │       ├── Night.SampleGame.sourcelink.json
    │           │       ├── apphost
    │           │       ├── .NETCoreApp,Version=v9.0.AssemblyAttributes.cs
    │           │       ├── ref/
    │           │       └── refint/
    │           └── Release/
    │               └── net9.0/
    │                   ├── Night.Sa.E6945040.Up2Date
    │                   ├── Night.SampleGame.AssemblyInfo.cs
    │                   ├── Night.SampleGame.AssemblyInfoInputs.cache
    │                   ├── Night.SampleGame.GeneratedMSBuildEditorConfig.editorconfig
    │                   ├── Night.SampleGame.GlobalUsings.g.cs
    │                   ├── Night.SampleGame.assets.cache
    │                   ├── Night.SampleGame.csproj.AssemblyReference.cache
    │                   ├── Night.SampleGame.csproj.CoreCompileInputs.cache
    │                   ├── Night.SampleGame.genruntimeconfig.cache
    │                   ├── Night.SampleGame.sourcelink.json
    │                   ├── apphost
    │                   ├── .NETCoreApp,Version=v9.0.AssemblyAttributes.cs
    │                   ├── ref/
    │                   └── refint/
    ├── tests/
    │   └── Night.Tests/
    │       ├── FilesystemTests.cs
    │       ├── Night.Tests.csproj
    │       ├── stylecop.json
    │       ├── bin/
    │       │   ├── Debug/
    │       │   │   └── net9.0/
    │       │   │       ├── CoverletSourceRootsMapping_Night.Engine.Tests
    │       │   │       ├── CoverletSourceRootsMapping_Night.Tests
    │       │   │       ├── Night.Engine.Tests.deps.json
    │       │   │       ├── Night.Engine.Tests.runtimeconfig.json
    │       │   │       ├── Night.Tests.deps.json
    │       │   │       ├── Night.Tests.runtimeconfig.json
    │       │   │       ├── Night.Tests.xml
    │       │   │       ├── Night.xml
    │       │   │       ├── .msCoverageSourceRootsMapping_Night.Engine.Tests
    │       │   │       ├── .msCoverageSourceRootsMapping_Night.Tests
    │       │   │       ├── cs/
    │       │   │       ├── de/
    │       │   │       ├── es/
    │       │   │       ├── fr/
    │       │   │       ├── it/
    │       │   │       ├── ja/
    │       │   │       ├── ko/
    │       │   │       ├── pl/
    │       │   │       ├── pt-BR/
    │       │   │       ├── ru/
    │       │   │       ├── tr/
    │       │   │       ├── zh-Hans/
    │       │   │       └── zh-Hant/
    │       │   └── Release/
    │       │       └── net9.0/
    │       │           ├── CoverletSourceRootsMapping_Night.Tests
    │       │           ├── Night.Tests.deps.json
    │       │           ├── Night.Tests.runtimeconfig.json
    │       │           ├── .msCoverageSourceRootsMapping_Night.Tests
    │       │           ├── cs/
    │       │           ├── de/
    │       │           ├── es/
    │       │           ├── fr/
    │       │           ├── it/
    │       │           ├── ja/
    │       │           ├── ko/
    │       │           ├── pl/
    │       │           ├── pt-BR/
    │       │           ├── ru/
    │       │           ├── tr/
    │       │           ├── zh-Hans/
    │       │           └── zh-Hant/
    │       └── obj/
    │           ├── Night.Engine.Tests.csproj.nuget.dgspec.json
    │           ├── Night.Engine.Tests.csproj.nuget.g.props
    │           ├── Night.Engine.Tests.csproj.nuget.g.targets
    │           ├── Night.Tests.csproj.nuget.dgspec.json
    │           ├── Night.Tests.csproj.nuget.g.props
    │           ├── Night.Tests.csproj.nuget.g.targets
    │           ├── project.assets.json
    │           ├── project.nuget.cache
    │           ├── Debug/
    │           │   └── net9.0/
    │           │       ├── Night.En.ACB7F3D8.Up2Date
    │           │       ├── Night.Engine.Tests.AssemblyInfo.cs
    │           │       ├── Night.Engine.Tests.AssemblyInfoInputs.cache
    │           │       ├── Night.Engine.Tests.GeneratedMSBuildEditorConfig.editorconfig
    │           │       ├── Night.Engine.Tests.GlobalUsings.g.cs
    │           │       ├── Night.Engine.Tests.assets.cache
    │           │       ├── Night.Engine.Tests.csproj.AssemblyReference.cache
    │           │       ├── Night.Engine.Tests.csproj.CoreCompileInputs.cache
    │           │       ├── Night.Engine.Tests.genruntimeconfig.cache
    │           │       ├── Night.Engine.Tests.sourcelink.json
    │           │       ├── Night.Te.8CE7B445.Up2Date
    │           │       ├── Night.Tests.AssemblyInfo.cs
    │           │       ├── Night.Tests.AssemblyInfoInputs.cache
    │           │       ├── Night.Tests.GeneratedMSBuildEditorConfig.editorconfig
    │           │       ├── Night.Tests.GlobalUsings.g.cs
    │           │       ├── Night.Tests.assets.cache
    │           │       ├── Night.Tests.csproj.AssemblyReference.cache
    │           │       ├── Night.Tests.csproj.CoreCompileInputs.cache
    │           │       ├── Night.Tests.genruntimeconfig.cache
    │           │       ├── Night.Tests.sourcelink.json
    │           │       ├── .NETCoreApp,Version=v9.0.AssemblyAttributes.cs
    │           │       ├── ref/
    │           │       └── refint/
    │           └── Release/
    │               └── net9.0/
    │                   ├── Night.Te.8CE7B445.Up2Date
    │                   ├── Night.Tests.AssemblyInfo.cs
    │                   ├── Night.Tests.AssemblyInfoInputs.cache
    │                   ├── Night.Tests.GeneratedMSBuildEditorConfig.editorconfig
    │                   ├── Night.Tests.GlobalUsings.g.cs
    │                   ├── Night.Tests.assets.cache
    │                   ├── Night.Tests.csproj.AssemblyReference.cache
    │                   ├── Night.Tests.csproj.CoreCompileInputs.cache
    │                   ├── Night.Tests.genruntimeconfig.cache
    │                   ├── Night.Tests.sourcelink.json
    │                   ├── .NETCoreApp,Version=v9.0.AssemblyAttributes.cs
    │                   ├── ref/
    │                   └── refint/
    ├── tools/
    │   ├── manifest.json
    │   ├── codegen/
    │   │   ├── PRD.md
    │   │   └── example.json
    │   └── crunch/
    │       ├── linux/
    │       │   └── crunch
    │       ├── macos/
    │       │   └── crunch
    │       └── windows/
    ├── .config/
    │   └── dotnet-tools.json
    ├── .cursor/
    ├── .github/
    │   ├── CODEOWNERS
    │   ├── copilot-instructions.md
    │   ├── dependabot.yml
    │   ├── scripts/
    │   │   └── determine_next_version.py
    │   └── workflows/
    │       ├── ci.yml
    │       ├── codeql-analysis.yml
    │       ├── dependency-review.yml
    │       ├── docs.yml
    │       ├── release.yml
    │       └── scorecard.yml
    ├── .roo/
    └── .windsurf/

================================================
File: README.md
================================================
# Night Engine

A C# game engine built on top of SDL3.

This project aims to provide a "batteries-included," in code editor experience to game development. A near-parity Love2D-inspired API for C# developers serves as the framework base. On top of this framework, there is an (optional) engine that will provide opinionated solutions for the engine so game designers can focus on building games.

This project also intends to be AI friendly so that non-programmer game designers can build games faster.

## Library Structure

The core of the project is the `Night.dll` library. This assembly contains:

- The `Night` namespace: Provides the Love2D-inspired framework API for low-level game development tasks.
- The `Night.Engine` namespace: Will house higher-level, more opinionated game engine components (e.g., Scene Management, ECS) built upon the `Night` framework.

## Features

### Project

- [ ] Near-parity Love2D-inspired API
- [ ] LLM friendly documentation automagically generated
- [ ] Game samples

### Engine-Specific Features

- [ ] Manager system (Assets, Scenes, Joystick, etc.)
- [ ] ECS

## Getting Started (Development)

1. Ensure [mise](https://mise.jdx.dev/) is installed.
2. Clone repository

### macOS Development Notes

#### VS Code and `mise` for .NET SDK Versioning

If you are using `mise` to manage your .NET SDK versions on macOS, you might encounter issues where VS Code (when launched via its `.app` bundle, e.g., from Finder, Spotlight, or Raycast) does not correctly pick up the `mise`-activated .NET SDK. This can lead to:

- Linter errors complaining about incorrect .NET versions or missing fundamental types.
- NuGet restore failures (e.g., `NETSDK1045` error) because VS Code's C# Dev Kit attempts to use a globally installed .NET SDK (like .NET 8) instead of the project-specified one (e.g., .NET 9).

This happens because GUI-launched applications on macOS do not typically inherit the full shell environment (like `PATH` modifications) that `mise` sets up in your terminal.

##### Solution: Wrapper Script for Launching VS Code

To ensure VS Code launches with the correct `mise`-managed environment, you can use a wrapper shell script. This script explicitly sets up the environment before launching VS Code.

1. **Create the script** (e.g., save as `~/vscode-launcher.sh` or `~/bin/vscode-launcher.sh`):

    ```zsh
    #!/bin/zsh

    # Wrapper script to launch VS Code with the mise-managed environment.

    # Add mise shims directory to PATH
    MISE_SHIMS_PATH="$HOME/.local/share/mise/shims"
    export PATH="$MISE_SHIMS_PATH:$PATH"

    # Optional: Navigate to your specific project directory if desired
    # cd "/path/to/your/project"

    # Launch VS Code, passing through any arguments
    exec code "$@"
    ```

2. **Make it executable:**

    ```bash
    chmod +x /path/to/your/vscode-launcher.sh
    ```

3. **Configure your launcher** (e.g., Raycast, Alfred, or even a custom Dock icon) to execute this script instead of `Visual Studio Code.app` directly.

This ensures that VS Code and its extensions (like the C# Dev Kit) inherit the correct PATH and use the .NET SDK version specified by `mise` for your project.

## License

This project is licensed under the zlib License. See [LICENSE](LICENSE) for details. Third-party library licences can be found in [NOTICE](docs/NOTICE.md).



================================================
File: LICENSE
================================================
zlib License

Copyright (c) 2025 Danny Solivan, Night Circle

This software is provided ‘as-is’, without any express or implied
warranty. In no event will the authors be held liable for any damages
arising from the use of this software.

Permission is granted to anyone to use this software for any purpose,
including commercial applications, and to alter it and redistribute it
freely, subject to the following restrictions:

1. The origin of this software must not be misrepresented; you must not
claim that you wrote the original software. If you use this software
in a product, an acknowledgment in the product documentation would be
appreciated but is not required.

2. Altered source versions must be plainly marked as such, and must not be
misrepresented as being the original software.

3. This notice may not be removed or altered from any source
distribution.



================================================
File: Night.sln
================================================
﻿Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 17
VisualStudioVersion = 17.0.31903.59
MinimumVisualStudioVersion = 10.0.40219.1
Project("{2150E333-8FDC-42A3-9474-1A3956D46DE8}") = "src", "src", "{827E0CD3-B72D-47B6-A68D-7590B98EB39B}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "Night", "src\Night\Night.csproj", "{259774D0-6C26-4CD6-8611-D184D8D04BF4}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "Night.SampleGame", "src\SampleGame\Night.SampleGame.csproj", "{665B8256-5042-4354-99DC-25D560A0DF8B}"
EndProject
Project("{2150E333-8FDC-42A3-9474-1A3956D46DE8}") = "tests", "tests", "{0AB3BF05-4346-4AA6-1389-037BE0695223}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "Night.Tests", "tests\Night.Tests\Night.Tests.csproj", "{D9CEF2DF-0142-4130-8F26-E580B0B36D9E}"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|Any CPU = Debug|Any CPU
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|Any CPU = Release|Any CPU
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{259774D0-6C26-4CD6-8611-D184D8D04BF4}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{259774D0-6C26-4CD6-8611-D184D8D04BF4}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{259774D0-6C26-4CD6-8611-D184D8D04BF4}.Debug|x64.ActiveCfg = Debug|Any CPU
		{259774D0-6C26-4CD6-8611-D184D8D04BF4}.Debug|x64.Build.0 = Debug|Any CPU
		{259774D0-6C26-4CD6-8611-D184D8D04BF4}.Debug|x86.ActiveCfg = Debug|Any CPU
		{259774D0-6C26-4CD6-8611-D184D8D04BF4}.Debug|x86.Build.0 = Debug|Any CPU
		{259774D0-6C26-4CD6-8611-D184D8D04BF4}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{259774D0-6C26-4CD6-8611-D184D8D04BF4}.Release|Any CPU.Build.0 = Release|Any CPU
		{259774D0-6C26-4CD6-8611-D184D8D04BF4}.Release|x64.ActiveCfg = Release|Any CPU
		{259774D0-6C26-4CD6-8611-D184D8D04BF4}.Release|x64.Build.0 = Release|Any CPU
		{259774D0-6C26-4CD6-8611-D184D8D04BF4}.Release|x86.ActiveCfg = Release|Any CPU
		{259774D0-6C26-4CD6-8611-D184D8D04BF4}.Release|x86.Build.0 = Release|Any CPU
		{665B8256-5042-4354-99DC-25D560A0DF8B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{665B8256-5042-4354-99DC-25D560A0DF8B}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{665B8256-5042-4354-99DC-25D560A0DF8B}.Debug|x64.ActiveCfg = Debug|Any CPU
		{665B8256-5042-4354-99DC-25D560A0DF8B}.Debug|x64.Build.0 = Debug|Any CPU
		{665B8256-5042-4354-99DC-25D560A0DF8B}.Debug|x86.ActiveCfg = Debug|Any CPU
		{665B8256-5042-4354-99DC-25D560A0DF8B}.Debug|x86.Build.0 = Debug|Any CPU
		{665B8256-5042-4354-99DC-25D560A0DF8B}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{665B8256-5042-4354-99DC-25D560A0DF8B}.Release|Any CPU.Build.0 = Release|Any CPU
		{665B8256-5042-4354-99DC-25D560A0DF8B}.Release|x64.ActiveCfg = Release|Any CPU
		{665B8256-5042-4354-99DC-25D560A0DF8B}.Release|x64.Build.0 = Release|Any CPU
		{665B8256-5042-4354-99DC-25D560A0DF8B}.Release|x86.ActiveCfg = Release|Any CPU
		{665B8256-5042-4354-99DC-25D560A0DF8B}.Release|x86.Build.0 = Release|Any CPU
		{D9CEF2DF-0142-4130-8F26-E580B0B36D9E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{D9CEF2DF-0142-4130-8F26-E580B0B36D9E}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{D9CEF2DF-0142-4130-8F26-E580B0B36D9E}.Debug|x64.ActiveCfg = Debug|Any CPU
		{D9CEF2DF-0142-4130-8F26-E580B0B36D9E}.Debug|x64.Build.0 = Debug|Any CPU
		{D9CEF2DF-0142-4130-8F26-E580B0B36D9E}.Debug|x86.ActiveCfg = Debug|Any CPU
		{D9CEF2DF-0142-4130-8F26-E580B0B36D9E}.Debug|x86.Build.0 = Debug|Any CPU
		{D9CEF2DF-0142-4130-8F26-E580B0B36D9E}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{D9CEF2DF-0142-4130-8F26-E580B0B36D9E}.Release|Any CPU.Build.0 = Release|Any CPU
		{D9CEF2DF-0142-4130-8F26-E580B0B36D9E}.Release|x64.ActiveCfg = Release|Any CPU
		{D9CEF2DF-0142-4130-8F26-E580B0B36D9E}.Release|x64.Build.0 = Release|Any CPU
		{D9CEF2DF-0142-4130-8F26-E580B0B36D9E}.Release|x86.ActiveCfg = Release|Any CPU
		{D9CEF2DF-0142-4130-8F26-E580B0B36D9E}.Release|x86.Build.0 = Release|Any CPU
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(NestedProjects) = preSolution
		{259774D0-6C26-4CD6-8611-D184D8D04BF4} = {827E0CD3-B72D-47B6-A68D-7590B98EB39B}
		{665B8256-5042-4354-99DC-25D560A0DF8B} = {827E0CD3-B72D-47B6-A68D-7590B98EB39B}
		{D9CEF2DF-0142-4130-8F26-E580B0B36D9E} = {0AB3BF05-4346-4AA6-1389-037BE0695223}
	EndGlobalSection
EndGlobal



================================================
File: .editorconfig
================================================
# top-most EditorConfig file
root = true

# Unix-style newlines with a newline ending every file
[*]
end_of_line = lf
insert_final_newline = true
trim_trailing_whitespace = true

[*.{cs}]
indent_style = space
indent_size = 2
csharp_max_line_length = 100
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = true

# Style - Naming Conventions
dotnet_diagnostic.IDE1006.severity = error # Naming rule violation (covers PascalCase, camelCase, _camelCase based on symbols)
dotnet_diagnostic.IDE0051.severity = warning # Remove unused private members
dotnet_diagnostic.IDE0052.severity = warning # Remove unread private members
dotnet_diagnostic.IDE0060.severity = warning # Remove unused parameter

# Style - Code Clarity and Consistency
dotnet_diagnostic.IDE0003.severity = suggestion # Add 'this.' or 'Me.' qualification
dotnet_diagnostic.IDE0009.severity = suggestion # Add 'this.' or 'Me.' qualification (for members)
dotnet_diagnostic.IDE0011.severity = suggestion # Add braces
dotnet_diagnostic.IDE0017.severity = suggestion # Simplify object initialization
dotnet_diagnostic.IDE0028.severity = suggestion # Simplify collection initialization
dotnet_diagnostic.IDE0036.severity = suggestion # Order modifiers
dotnet_diagnostic.IDE0040.severity = suggestion # Add accessibility modifiers
dotnet_diagnostic.IDE0041.severity = warning # Use 'is null' check
dotnet_diagnostic.IDE0044.severity = suggestion # Make field readonly
dotnet_diagnostic.IDE0055.severity = error # Format document (enforce dotnet format)
dotnet_diagnostic.IDE0058.severity = warning # Remove unnecessary expression value
dotnet_diagnostic.IDE0059.severity = warning # Remove unnecessary value assignment
dotnet_diagnostic.IDE0063.severity = suggestion # Use simple 'using' statement
dotnet_diagnostic.IDE0066.severity = suggestion # Use switch expression
dotnet_diagnostic.IDE0074.severity = suggestion # Use coalesce compound assignment
dotnet_diagnostic.IDE0090.severity = suggestion # Simplify 'new' expression

# Style - Expression-bodied members (preference for conciseness where appropriate)
dotnet_style_prefer_expression_bodied_constructors = false
dotnet_style_prefer_expression_bodied_methods = true:suggestion
dotnet_style_prefer_expression_bodied_operators = true:suggestion
dotnet_style_prefer_expression_bodied_properties = true:suggestion
dotnet_style_prefer_expression_bodied_indexers = true:suggestion
dotnet_style_prefer_expression_bodied_accessors = true:suggestion
dotnet_style_prefer_expression_bodied_lambdas = true:suggestion
dotnet_style_prefer_expression_bodied_local_functions = true:suggestion

# Quality - General
dotnet_diagnostic.CA1822.severity = warning # Mark members as static (if no instance data is accessed)
dotnet_diagnostic.CA2211.severity = warning # Non-constant fields should not be visible

# Disable StyleCop's opinion on using directive placement, defer to csharp_preferred_using_directive_placement
dotnet_diagnostic.SA1200.severity = none

# Disable StyleCop's opinion on file name matching type name
dotnet_diagnostic.SA1649.severity = none

# StyleCop Analyzer SA1633: The file header is missing or not located at the top of the file.
# Set to warning or error to ensure it's reported.
dotnet_diagnostic.SA1633.severity = warning
dotnet_diagnostic.SA1636.severity = warning

# use 2-spaces for csproj
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,nativeproj,locproj}]
indent_style = space
indent_size = 2



================================================
File: .pre-commit-config.yaml
================================================
# Top-level pre-commit config for C# project
repos:
  - repo: local
    hooks:
      - id: dotnet-format
        name: dotnet format
        entry: dotnet format Night.sln --verify-no-changes
        language: system
        types: [csharp]
        pass_filenames: false # Run on the whole solution if any C# file changes
        always_run: false
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.18.2 # Updated to a more recent version
    hooks:
      - id: gitleaks
  - repo: https://github.com/jumanjihouse/pre-commit-hooks
    rev: 3.0.0
    hooks:
      - id: shellcheck
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0 # Updated to a more recent version
    hooks:
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: check-yaml
      - id: check-json
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-added-large-files



================================================
File: docs/API.md
================================================
# Night / Love2D API

## Configuration

### Types (Configuration)

- AudioConfig
- GameConfig
- ModulesConfig
- WindowConfig

## Filesystem

### Types (Filesystem)

- FileSystemInfo

### Functions (Filesystem)

- GetInfo() - love.filesystem.getInfo
  - GetInfo(string path, FileSystemInfo info)
  - GetInfo(string path, FileType filterType, FileSystemInfo info)
  - GetInfo(string path, FileType? filterType)
- ReadBytes() - love.filesystem.readBytes
  - ReadBytes(string path)
- ReadText() - love.filesystem.readText
  - ReadText(string path)

### Enums (Filesystem)

- FileMode
- FileType

## Graphics

### Types (Graphics)

- Color
- ImageData
- PointF
- Rectangle
- Sprite

### Functions (Graphics)

- Circle() - love.graphics.circle
  - Circle(DrawMode mode, float x, float y, float radius, int segments)
- Clear() - love.graphics.clear
  - Clear(Color color)
- Draw() - love.graphics.draw
  - Draw(Sprite sprite, float x, float y, float rotation, float scaleX, float scaleY, float offsetX, float offsetY)
- Line() - love.graphics.line
  - Line(PointF[] points)
  - Line(float x1, float y1, float x2, float y2)
- NewImage() - love.graphics.newImage
  - NewImage(string filePath)
- Polygon() - love.graphics.polygon
  - Polygon(DrawMode mode, PointF[] vertices)
- Present() - love.graphics.present
- Rectangle() - love.graphics.rectangle
  - Rectangle(DrawMode mode, float x, float y, float width, float height)
- SetColor() - love.graphics.setColor
  - SetColor(Color color)
  - SetColor(byte r, byte g, byte b, byte a)

### Enums (Graphics)

- DrawMode

## Keyboard

### Functions (Keyboard)

- IsDown() - love.keyboard.isDown
  - IsDown(KeyCode key)

### Enums (Keyboard)

- KeyCode
- KeySymbol

## Mouse

### Functions (Mouse)

- GetPosition() - love.mouse.getPosition
- IsDown() - love.mouse.isDown
  - IsDown(MouseButton button)
- SetGrabbed() - love.mouse.setGrabbed
  - SetGrabbed(bool grabbed)
- SetRelativeMode() - love.mouse.setRelativeMode
  - SetRelativeMode(bool enabled)
- SetVisible() - love.mouse.setVisible
  - SetVisible(bool visible)

### Enums (Mouse)

- MouseButton

## System

### Functions (System)

- GetClipboardText() - love.system.getClipboardText
- SetClipboardText() - love.system.setClipboardText
  - SetClipboardText(string text)

## Timer

### Functions (Timer)

- GetAverageDelta() - love.timer.getAverageDelta
- GetDelta() - love.timer.getDelta
- GetFPS() - love.timer.getFPS
- GetTime() - love.timer.getTime
- Sleep() - love.timer.sleep
  - Sleep(double seconds)
- Step() - love.timer.step

## Window

### Types (Window)

- WindowMode

### Functions (Window)

- Close() - love.window.close
- FromPixels() - love.window.fromPixels
  - FromPixels(float value)
- GetDPIScale() - love.window.getDPIScale
- GetDesktopDimensions() - love.window.getDesktopDimensions
  - GetDesktopDimensions(int displayIndex)
- GetDisplayCount() - love.window.getDisplayCount
- GetFullscreen() - love.window.getFullscreen
- GetFullscreenModes() - love.window.getFullscreenModes
  - GetFullscreenModes(int displayIndex)
- GetIcon() - love.window.getIcon
- GetMode() - love.window.getMode
- IsOpen() - love.window.isOpen
- SetFullscreen() - love.window.setFullscreen
  - SetFullscreen(bool fullscreen, FullscreenType fsType)
- SetIcon() - love.window.setIcon
  - SetIcon(string imagePath)
- SetMode() - love.window.setMode
  - SetMode(int width, int height, SDL.WindowFlags flags)
- SetTitle() - love.window.setTitle
  - SetTitle(string title)
- ToPixels() - love.window.toPixels
  - ToPixels(float value)

### Enums (Window)

- FullscreenType



================================================
File: docs/NOTICE.md
================================================
# Third-Party Software Notices

This project incorporates copyrighted material from the following third-party projects.

## Libraries

### SDL

- Copyright (C) 1997-2025 Sam Lantinga <slouken@libsdl.org>
- License: zlib
- Website: [https://www.libsdl.org/](https://www.libsdl.org/)

### SDL_image (SDL Image Library)

- Copyright (C) 1997-2025 Sam Lantinga <slouken@libsdl.org>
- License: zlib
- Website: [https://github.com/libsdl-org/SDL_mixer](https://github.com/libsdl-org/SDL_mixer)

### SDL_mixer (SDL Audio Mixer Library)

- Copyright (C) 1997-2025 Sam Lantinga <slouken@libsdl.org>
- License: zlib
- Website: [https://github.com/libsdl-org/SDL_mixer](https://github.com/libsdl-org/SDL_mixer)

### SDL_ttf (SDL TrueType Font Library)

- Copyright (C) 1997-2025 Sam Lantinga <slouken@libsdl.org> and contributors
- License: zlib
- Website: [https://github.com/libsdl-org/SDL_ttf](https://github.com/libsdl-org/SDL_ttf)
- Dependency licenses:
  - FreeType, licensed under [FTL](https://gitlab.freedesktop.org/freetype/freetype/-/blob/master/docs/FTL.TXT)
  - HarfBuzz licensed under the [MIT license](https://github.com/harfbuzz/harfbuzz/blob/main/COPYING)
  - PlutoSVG, licensed under the [MIT license](https://github.com/sammycage/plutosvg/blob/master/LICENSE)
  - PlutoVG, licensed under the [MIT license](https://github.com/sammycage/plutovg/blob/master/LICENSE)

### SDL3# (SDL3 C# Bindings)

- Copyright (C) 2024-2025 Eduard Gushchin <eduardgushchin@yandex.ru>
- License: zlib
- Website: [https://github.com/edwardgushchin/SDL3-CS](https://github.com/edwardgushchin/SDL3-CS)

## License Text

### zlib

```plaintext
This software is provided ‘as-is’, without any express or implied
warranty. In no event will the authors be held liable for any damages
arising from the use of this software.

Permission is granted to anyone to use this software for any purpose,
including commercial applications, and to alter it and redistribute it
freely, subject to the following restrictions:

1. The origin of this software must not be misrepresented; you must not
claim that you wrote the original software. If you use this software
in a product, an acknowledgment in the product documentation would be
appreciated but is not required.

2. Altered source versions must be plainly marked as such, and must not be
misrepresented as being the original software.

3. This notice may not be removed or altered from any source
distribution.
```

### FTL

```plaintext
                    The FreeType Project LICENSE
                    ----------------------------

                            2006-Jan-27

                    Copyright 1996-2002, 2006 by
          David Turner, Robert Wilhelm, and Werner Lemberg



Introduction
============

  The FreeType  Project is distributed in  several archive packages;
  some of them may contain, in addition to the FreeType font engine,
  various tools and  contributions which rely on, or  relate to, the
  FreeType Project.

  This  license applies  to all  files found  in such  packages, and
  which do not  fall under their own explicit  license.  The license
  affects  thus  the  FreeType   font  engine,  the  test  programs,
  documentation and makefiles, at the very least.

  This  license   was  inspired  by  the  BSD,   Artistic,  and  IJG
  (Independent JPEG  Group) licenses, which  all encourage inclusion
  and  use of  free  software in  commercial  and freeware  products
  alike.  As a consequence, its main points are that:

    o We don't promise that this software works. However, we will be
      interested in any kind of bug reports. (`as is' distribution)

    o You can  use this software for whatever you  want, in parts or
      full form, without having to pay us. (`royalty-free' usage)

    o You may not pretend that  you wrote this software.  If you use
      it, or  only parts of it,  in a program,  you must acknowledge
      somewhere  in  your  documentation  that  you  have  used  the
      FreeType code. (`credits')

  We  specifically  permit  and  encourage  the  inclusion  of  this
  software, with  or without modifications,  in commercial products.
  We  disclaim  all warranties  covering  The  FreeType Project  and
  assume no liability related to The FreeType Project.


  Finally,  many  people  asked  us  for  a  preferred  form  for  a
  credit/disclaimer to use in compliance with this license.  We thus
  encourage you to use the following text:

   """
    Portions of this software are copyright © <year> The FreeType
    Project (www.freetype.org).  All rights reserved.
   """

  Please replace <year> with the value from the FreeType version you
  actually use.


Legal Terms
===========

0. Definitions
--------------

  Throughout this license,  the terms `package', `FreeType Project',
  and  `FreeType  archive' refer  to  the  set  of files  originally
  distributed  by the  authors  (David Turner,  Robert Wilhelm,  and
  Werner Lemberg) as the `FreeType Project', be they named as alpha,
  beta or final release.

  `You' refers to  the licensee, or person using  the project, where
  `using' is a generic term including compiling the project's source
  code as  well as linking it  to form a  `program' or `executable'.
  This  program is  referred to  as  `a program  using the  FreeType
  engine'.

  This  license applies  to all  files distributed  in  the original
  FreeType  Project,   including  all  source   code,  binaries  and
  documentation,  unless  otherwise  stated   in  the  file  in  its
  original, unmodified form as  distributed in the original archive.
  If you are  unsure whether or not a particular  file is covered by
  this license, you must contact us to verify this.

  The FreeType  Project is copyright (C) 1996-2000  by David Turner,
  Robert Wilhelm, and Werner Lemberg.  All rights reserved except as
  specified below.

1. No Warranty
--------------

  THE FREETYPE PROJECT  IS PROVIDED `AS IS' WITHOUT  WARRANTY OF ANY
  KIND, EITHER  EXPRESS OR IMPLIED,  INCLUDING, BUT NOT  LIMITED TO,
  WARRANTIES  OF  MERCHANTABILITY   AND  FITNESS  FOR  A  PARTICULAR
  PURPOSE.  IN NO EVENT WILL ANY OF THE AUTHORS OR COPYRIGHT HOLDERS
  BE LIABLE  FOR ANY DAMAGES CAUSED  BY THE USE OR  THE INABILITY TO
  USE, OF THE FREETYPE PROJECT.

2. Redistribution
-----------------

  This  license  grants  a  worldwide, royalty-free,  perpetual  and
  irrevocable right  and license to use,  execute, perform, compile,
  display,  copy,   create  derivative  works   of,  distribute  and
  sublicense the  FreeType Project (in  both source and  object code
  forms)  and  derivative works  thereof  for  any  purpose; and  to
  authorize others  to exercise  some or all  of the  rights granted
  herein, subject to the following conditions:

    o Redistribution of  source code  must retain this  license file
      (`FTL.TXT') unaltered; any  additions, deletions or changes to
      the original  files must be clearly  indicated in accompanying
      documentation.   The  copyright   notices  of  the  unaltered,
      original  files must  be  preserved in  all  copies of  source
      files.

    o Redistribution in binary form must provide a  disclaimer  that
      states  that  the software is based in part of the work of the
      FreeType Team,  in  the  distribution  documentation.  We also
      encourage you to put an URL to the FreeType web page  in  your
      documentation, though this isn't mandatory.

  These conditions  apply to any  software derived from or  based on
  the FreeType Project,  not just the unmodified files.   If you use
  our work, you  must acknowledge us.  However, no  fee need be paid
  to us.

3. Advertising
--------------

  Neither the  FreeType authors and  contributors nor you  shall use
  the name of the  other for commercial, advertising, or promotional
  purposes without specific prior written permission.

  We suggest,  but do not require, that  you use one or  more of the
  following phrases to refer  to this software in your documentation
  or advertising  materials: `FreeType Project',  `FreeType Engine',
  `FreeType library', or `FreeType Distribution'.

  As  you have  not signed  this license,  you are  not  required to
  accept  it.   However,  as  the FreeType  Project  is  copyrighted
  material, only  this license, or  another one contracted  with the
  authors, grants you  the right to use, distribute,  and modify it.
  Therefore,  by  using,  distributing,  or modifying  the  FreeType
  Project, you indicate that you understand and accept all the terms
  of this license.

4. Contacts
-----------

  There are two mailing lists related to FreeType:

    o freetype@nongnu.org

      Discusses general use and applications of FreeType, as well as
      future and  wanted additions to the  library and distribution.
      If  you are looking  for support,  start in  this list  if you
      haven't found anything to help you in the documentation.

    o freetype-devel@nongnu.org

      Discusses bugs,  as well  as engine internals,  design issues,
      specific licenses, porting, etc.

  Our home page can be found at

    https://www.freetype.org
```

### MIT

```plaintext
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
```



================================================
File: docs/PRD.md
================================================
# Night Engine - Product Requirements Document

## 1. Introduction

- **Project Idea:** Night Engine is a C# game engine built on SDL3, designed to provide a "batteries-included" development experience. It features a Love2D-inspired API for its foundational framework (`Night.Framework`), with plans for a more opinionated, higher-level engine (`Night.Engine`) to be built on top, offering common game systems. The project also aims to be AI-friendly to assist non-programmers in game development.

- **Problem/Need:** The primary goal is to offer C# developers a streamlined and efficient workflow for game and multimedia development. `Night.Framework` provides direct, SDL3-powered capabilities through a familiar API style, reducing context switching. The future `Night.Engine` will further simplify complex game development tasks.

- **Development Goal:** The current development phase focuses on completing the core features of `Night.Framework` to align with Version 0.1.0 of the API roadmap, providing a robust C# wrapper layer that leverages SDL3's capabilities with an API style reminiscent of Love2D. Future phases will concentrate on building out `Night.Engine` components and subsequent roadmap versions.

## 2. Core Features

### Night.Framework (Love2D-style API)

The following features are largely implemented for the foundational framework:

- **Feature 0: Project Foundation & SDL3 Integration:**

  - **Description:** Established C# project structure for `Night.Engine` (which encompasses `Night.Framework` and placeholders for future engine components) and `Night.SampleGame`. Utilizes `SDL3-CS` C# bindings (via NuGet package) for SDL3 integration. Native SDL3 libraries (for core, image, mixer, ttf) are fetched using the `scripts/sync_sdl3.py` script into `lib/SDL3-Prebuilt/` and included in the `Night.SampleGame` build.

  - **Status:** Mostly Complete (Epics 1 & 8).

- **Feature 1: Window Management (`Night.Window`):**

  - **Description:** Provides capabilities to create, configure (mode, title), and manage the application window (check if open, close). Uses the `Night` namespace with an API style similar to Love2D's `love.window`.

  - **Implemented Functions:** `SetMode`, `SetTitle`, `IsOpen`, `Close`, internal `Shutdown`.

  - **Status:** Largely Complete (Epic 3).

- **Feature 2: Input Handling (Keyboard and Mouse):**

  - **Description:** Allows polling of keyboard (`Night.Keyboard`) and mouse (`Night.Mouse`) states. Mirrors Love2D's `love.keyboard` and `love.mouse` modules.

  - **Implemented Functions:** `Night.Keyboard.IsDown`, `Night.Mouse.IsDown`, `Night.Mouse.GetPosition`. Event `IGame.KeyPressed` is also implemented.

  - **Status:** Largely Complete (Epic 4).

- **Feature 3: 2D Graphics Rendering (`Night.Graphics`):**

  - **Description:** Enables loading images (`.png` via SDL_image) as sprites and drawing them. Includes screen clearing and frame presentation. Leverages SDL_Renderer.

  - **Implemented Functions:** `NewImage` (for sprites), `Draw` (for sprites with transformations), `Clear`, `Present`.

  - **Status:** Largely Complete (Epic 5).

- **Feature 4: Game Loop Structure (`Night.Framework.Run`):**

  - **Description:** Provides a pre-defined game loop managed by `Night.Framework`. Developers implement `Night.IGame` interface callbacks (`Load`, `Update`, `Draw`, `KeyPressed`). Includes delta time calculation and event polling (Quit, KeyDown).

  - **Status:** Largely Complete (Epic 6).

- **Feature 5: Sample Game & Integration Testing (`Night.SampleGame`):**

  - **Description:** A simple platformer game demonstrating the use of `Night.Framework` features. Includes player movement, collision, and basic level structure. Platform message simplification for macOS also completed.

  - **Status:** Implemented (Epics 7 & 9).

### Night.Engine (Future - High-Level Opinionated Systems)

These are planned features for the higher-level engine, to be built upon `Night.Framework`:

- Entity Component System (ECS)

- Scene Management & Scene Graph

- Advanced Asset Management

- Physics Integration (Optional)

- Joystick Manager

## 3. Technical Specifications

- **Primary Language(s):** C# 13 (using .NET 9).

- **Key Frameworks/Libraries:**

  - SDL3 (latest version).

  - C# Bindings: `edwardgushchin/SDL3-CS` (SDL3#) via NuGet package (`SDL3-CS`).

  - Native Binaries:

    - SDL3 (core, SDL_image, SDL_mixer, SDL_ttf) native libraries are fetched by the `scripts/sync_sdl3.py` script into the `lib/SDL3-Prebuilt/` directory.

    - The `Night.SampleGame` project copies these required native binaries (e.g., `SDL3.dll`, `SDL3_image.dll`) to its output directory during build to ensure they are available at runtime.

  - No other external runtime libraries are currently planned for `Night.Framework`.

- **Database:** None.

- **Key APIs/Integrations:** Direct interaction with SDL3 via SDL3-CS C# bindings.

- **Rendering Backend:**

  - `Night.Framework` utilizes SDL_Renderer for 2D graphics operations.

  - Future consideration: Migration to SDL_GPU.

- **Deployment Target:**

  - `Night` (containing `Night.Framework` and `Night.Engine`) is a C# class library (DLL named `Night.dll`).

  - `Night.SampleGame` is a C# console application that consumes `Night`.

- **Target Platforms:** Current focus on Windows, macOS, Linux. Long-term goals include iOS and Android. Console support is a distant stretch goal.

- **High-Level Architectural Approach:**

  - **Night.Framework:** A C# library providing a static API, stylistically similar to Love2D, over the SDL3 native library (via SDL3-CS). Public API primarily within the `Night` C# namespace. This is part of the `Night.dll`.

  - **Night.Engine:** (Future) A C# library providing opinionated game development constructs (e.g., ECS, scene management), using `Night.Framework` for low-level operations. This will also be part of `Night.dll` under the `Night.Engine` namespace.

- **Critical Technical Decisions/Constraints:**

  - The public API of `Night.Framework` aims to mirror the Love2D API where practical and idiomatic for C#.

  - All interactions with SDL3 within `Night.Framework` are through the SDL3-CS bindings. `Night.Engine` will not use SDL3-CS directly.

  - Simplicity and achieving the core Love2D-like developer experience are primary focuses for `Night.Framework`.

## 4. Project Structure

```mermaid
graph TD
    A(any2) --> B(README.md);
    A --> C(LICENSE);
    A --> D(Night.sln);
    A --> E(.editorconfig);
    A --> F(.pre-commit-config.yaml);
    A --> G(docs);
    A --> H(lib);
    A --> I(licenses);
    A --> J(scripts);
    A --> K(src);
    A --> L(.cursor);
    A --> M(.github);
    A --> N(.roo);
    A --> O(.windsurf);

    G --> G1(NOTICE.md);
    G --> G2(PRD.md);
    G --> G3(operational-guidelines.md);
    G --> G4(epics);
    G4 --> G4_1(epic1.md);
    G4 --> G4_2(epic2.md);
    G4 --> G4_3(epic3.md);
    G4 --> G4_4(epic4.md);
    G4 --> G4_5(epic5.md);
    G4 --> G4_6(epic6.md);
    G4 --> G4_7("epic7-design.md");
    G4 --> G4_8(epic7.md);
    G4 --> G4_9(epic8.md);
    G4 --> G4_10(epic9.md);
    G --> G5(love2d-api);
    G5 --> G5_1(roadmap.md);
    G5 --> G5_2(modules);
    G5_2 --> G5_2_1(audio.md);
    G5_2 --> G5_2_2(data.md);
    G5_2 --> G5_2_3(event.md);
    G5_2 --> G5_2_4(filesystem.md);
    G5_2 --> G5_2_5(font.md);
    G5_2 --> G5_2_6(graphics.md);
    G5_2 --> G5_2_7(image.md);
    G5_2 --> G5_2_8(joystick.md);
    G5_2 --> G5_2_9(keyboard.md);
    G5_2 --> G5_2_10(love.md);
    G5_2 --> G5_2_11(math.md);
    G5_2 --> G5_2_12(mouse.md);
    G5_2 --> G5_2_13(sound.md);
    G5_2 --> G5_2_14(system.md);
    G5_2 --> G5_2_15(thread.md);
    G5_2 --> G5_2_16(timer.md);
    G5_2 --> G5_2_17(touch.md);
    G5_2 --> G5_2_18(video.md);
    G5_2 --> G5_2_19(window.md);

    J --> J1(sync_sdl3.py);

    K --> K1(src/Night);
    K1 --> K1_1(FrameworkLoop.cs);
    K1 --> K1_2(Night.csproj);
    K1 --> K1_3(Types.cs);
    K1 --> K1_4(Engine);
    K1_4 --> K1_4_1(.gitkeep);
    K1 --> K1_M_Graphics(Graphics/);
    K1_M_Graphics --> K1_M_G_Graphics_cs(Graphics.cs);
    K1 --> K1_M_Window(Window/);
    K1_M_Window --> K1_M_W_Window_cs(Window.cs);
    K1 --> K1_6(Utilities);
    K1_6 --> K1_6_1(.gitkeep);
    K1 --> K1_7(bin);
    K1 --> K1_8(obj);

    K --> K2(Night.SampleGame);
    K2 --> K2_1(Night.SampleGame.csproj);
    K2 --> K2_2(Player.cs);
    K2 --> K2_3(Program.cs);
    K2 --> K2_4(Samples);
    K2_4 --> K2_4_1(Platformer.cs);
    K2 --> K2_5(assets);
    K2_5 --> K2_5_1(images);
    K2_5_1 --> K2_5_1_1(pixel_green.pixi);
    K2_5_1 --> K2_5_1_2(player_sprite_blue_32x64.aseprite);
    K2 --> K2_6(bin);
    K2 --> K2_7(obj);

    M --> M1(CODEOWNERS);
    M --> M2(copilot-instructions.md);
    M --> M3(dependabot.yml);
    M --> M4(deactivated);
    M4 --> M4_1(build-sdl3.yml);
    M4 --> M4_2(ci.yml);
    M4 --> M4_3(codeql.yml);
    M4 --> M4_4(dependency-review.yml);
    M4 --> M4_5(release.yml);
    M4 --> M4_6(scorecard.yml);
    M --> M5(scripts);
    M5 --> M5_1(determine_next_version.py);
```

- `/docs`: Project documentation (PRD, operational guidelines, epics, API mapping, etc.).

- `/lib`: Contains `SDL3-Prebuilt/` populated by `sync_sdl3.py` and potentially other third-party libraries.

- `/scripts`: Utility scripts for the project (e.g., `sync_sdl3.py`).

- `/src`: Contains all C# source code.

  - `/src/Night`: C# class library project for `Night.Framework` and future `Night.Engine` components. This project references the `SDL3-CS` NuGet package and produces `Night.dll`.

    - `Night.csproj`: MSBuild project file.

    - `FrameworkLoop.cs`: Manages the main game loop (`Night.Framework.Run()`) and event polling.

    - `Types.cs`: Defines core data types and interfaces (e.g., `Night.Color`, `Night.KeyCode`, `Night.KeySymbol`, `Night.Sprite`, `Night.IGame`, `Night.MouseButton`, `Night.Rectangle`).

    - Module directories (e.g., `/Graphics/`, `/Window/`): Contain individual C# files for each Love2D-like framework module (e.g., `Graphics.cs`, `Window.cs`). These primarily contain static classes within the `Night` namespace or sub-namespaces like `Night.Graphics`.

    - `/Engine/`: Directory for future high-level engine components, which will reside in the `Night.Engine` namespace. Contains `.gitkeep`.

    - `/Utilities/`: Placeholder for utility classes. Contains `.gitkeep`.

  - `/src/Night.SampleGame`: C# console application project demonstrating the use of `Night.Framework`.

    - `Night.SampleGame.csproj`: MSBuild project file. References `Night` (the `Night.dll`) and includes native SDL binary deployment logic.

    - `Program.cs`: Main entry point and `IGame` implementation for the sample game.

    - `Player.cs`: Player logic for the sample platformer game.

    - `/Samples/Platformer.cs`: Contains an alternative or modularized `Platformer` game class.

    - `/assets`: Game assets (images, etc.) for the sample game.

- `Night.sln`: Visual Studio solution file.

- `README.md`: Main project readme.

- `.github/`: GitHub-specific files including active `dependabot.yml` and `CODEOWNERS`, plus deactivated workflows.

- `.editorconfig`, `.pre-commit-config.yaml`: Code style and pre-commit hook configurations.

## 5. File Descriptions

- **`Night.sln`**: Visual Studio Solution file grouping `Night.Engine` and `Night.SampleGame` projects. Defines project paths and configurations.

- **`src/Night/Night.csproj`**: The MSBuild project file for the main `Night` C# class library. This library, `Night.dll`, includes the `Night` namespace (for the Love2D-like framework) and the `Night.Engine` namespace (for future higher-level engine features).

- **`src/Night.SampleGame/Night.SampleGame.csproj`**: MSBuild project file for the sample game application. References `Night` (the `Night.dll`) and includes steps to copy native SDL3 binaries (from `lib/SDL3-Prebuilt/`) to the output directory.

## 6. Future Considerations (Post Version 0.1.0)

**Out of Scope for Version 0.1.0 (Night.Framework):** (Based on `roadmap.md` and existing "Out of Scope" items from `docs/love2d-api/modules/*.md` for modules beyond 0.1.0, and previous PRD version)

- **Full Love2D API Parity:** Modules and features beyond those specified for v0.1.0 in `roadmap.md`. This includes:

  - `love.audio` and `love.sound` (Audio playback, recording, effects, decoding).

  - `love.joystick` (Gamepad/joystick support).

  - `love.event` (User-managed event queue, custom event pushing beyond basic callbacks).

  - `love.font` (Advanced font rendering, rasterizers beyond basic text if not part of Graphics 0.1.0).

  - `love.thread` (User-managed threading abstractions).

  - `love.touch` (Touchscreen input).

  - `love.video` (Video playback).

  - `love.data` (Compression, encoding, hashing beyond standard .NET libraries if specific Love2D behavior is needed).

  - `love.math` (Advanced math functions like noise, triangulation, Bezier curves beyond System.Math).

  - `love.system` (Clipboard, power info, openURL, etc., beyond basic OS info).

- **Advanced Rendering in Night.Framework:** Custom shaders, 3D graphics, complex lighting, particle systems beyond what SDL_Renderer offers for 2D and what's planned for 0.1.0 graphics.

- **Game Packaging/Distribution Tools, Editor/GUI Tools:** Not included.

**Potential Future Enhancements (Post-0.1.0, or as part of Night.Engine):**

- **Night.Engine Core:**

  - Entity Component System (ECS) Architecture.

  - Scene Management & Scene Graph.

  - Advanced Game State Management.

- **Expanded Night.Framework Modules (as per roadmap.md versions > 0.1.0):**

  - Audio Module (`Night.Audio`)

  - Font Rendering (`Night.Font`)

  - Expanded Input (`Night.Joystick`, `Night.Touch`)

  - More Graphics Primitives & Features in `Night.Graphics` (shapes, basic shader integration, camera).

  - Filesystem Abstraction (`Night.Filesystem` - beyond basic 0.1.0 needs).

  - Timing Module (`Night.Timer` - beyond basic 0.1.0 needs).

- **Tooling & Developer Experience:**

  - Dear ImGui Integration.

  - Quake-Style Debug Console.

  - Lua Scripting Interface.

- **General:**

  - Improved Error Handling & Debugging Tools.

  - Performance Profiling and Optimization.

  - Expanded Platform Support Verification (Android, iOS).

  - Community Building: Tutorials, more examples, comprehensive documentation.



================================================
File: docs/operational-guidelines.md
================================================
# Operational Guidelines

The "Night" engine project will ALWAYS adhere to the **Google C# Style Guide**. Key aspects of this guide, supplemented by project-specific interpretations, are outlined below.

- **Formatting & Style:**
  - **Indentation:** 2 spaces, no tabs.
  - **Column Limit:** 100 characters.
  - **Whitespace, Braces, Line Wrapping:** Adhere to the detailed rules in the Google C# Style Guide. This includes rules like no line break before an opening brace, and braces used even when optional.
  - **Tooling:**
    - `dotnet format` will be used to help enforce formatting rules.
    - An `.editorconfig` file will be added to the project root, configured to align with the Google C# Style Guide's formatting and style rules (e.g., indentation, column limit, using directives order).
  - Format the `using` directives with specific spacing. Place all System.* directives first, followed by a blank line. Then, group other using directives (like third-party libraries or project-specific namespaces) logically, and insert a blank line between each distinct group. For example, list System usings, then a blank line, then Night usings, then a blank line, then SDL3 usings, rather than listing them all contiguously.
  -`using` directives should NEVER have any comments associated with them or on the same line
- **Linting:**
  - **Tooling:** Utilize Roslyn Analyzers provided with the .NET SDK.
  - The `.editorconfig` file will be configured to enable and set the severity of analyzer rules to align with the principles of the Google C# Style Guide. This includes rules related to naming, organization, and other code quality aspects.
- **Naming Conventions:**
  - **General Rules Summary:**
    - Names of classes, methods, enumerations, public fields, public properties, namespaces: `PascalCase`.
    - Names of local variables, parameters: `camelCase`.
    - Names of private, protected, internal, and protected internal fields and properties: `_camelCase` (e.g., `_privateField`).
    - Naming convention is unaffected by modifiers such as `const`, `static`, `readonly`, etc..
    - For casing, a “word” is anything written without internal spaces, including acronyms (e.g., `MyRpc` not `MyRPC`).
    - Names of interfaces start with `I` (e.g., `IInterface`).
    - Filenames and directory names are `PascalCase` (e.g., `MyFile.cs`).
  - **Project Specific (API Design):** When naming public API elements for "Night" intended to mirror Love2D functions (e.g., `love.window.setTitle`), use the `PascalCase` version adhering to the above rules (e.g., `Night.Window.SetTitle(...)`).
- **Code Organization:**
  - **Modifier Order:** `public protected internal private new abstract virtual override sealed static readonly extern unsafe volatile async`.
  - **Namespace `using` Declarations:** Place at the top of the file, before any namespace declarations. Order alphabetically, with `System` imports always first.
  - **Class Member Ordering:** Follow the prescribed order: Nested types, static/const/readonly fields, instance fields/properties, constructors/finalizers, methods. Within each group, elements are ordered by access: Public, Internal, Protected internal, Protected, Private.
- **Key Principles (Project-Specific additions and emphasis):**
  - **API Design (Night Engine):** Strive for an API design that is idiomatic to C# while closely mirroring the spirit, structure, and ease of use of the Love2D API for the features being implemented.
  - **Clarity over Premature Optimization:** For the prototype, prioritize clear, understandable, and maintainable code.
  - **Scope Adherence:** Focus strictly on implementing the agreed-upon features (0-4) for this prototype.
- **Testing (if applicable for prototype):**
  - **Primary Integration Test:** The `Night.SampleGame` project will serve as the main method for testing the integration and functionality of the `Night.Framework`/`Night.Engine` features. Write the necessary code to test out new functionality in the SampleGame project to allow the user to manually verify. The `Program.cs` file in the SampleGame project is the best place to put this code.
  - **Unit Tests (Optional):** Consider adding basic unit tests for any complex internal helper functions or critical non-P/Invoke logic within `Night.Framework`.
  - **Manual Verification:** Manual testing of the sample game against the defined user actions and outcomes for each feature in the PRD will be essential.

## Mapping Native SDL3 Functions to SDL3-CS (C#) Bindings

When working with the `lib/SDL3-CS` C# wrapper for SDL3, it's often necessary to find the C# equivalent of a native SDL3 C function, enum, or struct. This section provides guidance on that process. The `lib/SDL3-CS` bindings are located in the `lib/SDL3-CS/SDL3-CS/` directory.

**1. Naming Conventions:**

*   **Functions:** Native SDL3 functions (e.g., `SDL_CreateWindow`, `SDL_PollEvent`) are generally mapped to C# methods within the static `SDL` class using PascalCase. The `SDL_` prefix is removed, and the rest of the name is converted to PascalCase.
    *   `SDL_CreateWindow` becomes `SDL.CreateWindow()`
    *   `SDL_PollEvent` becomes `SDL.PollEvent()`
*   **Enums and Structs:** Native SDL3 enums and structs (e.g., `SDL_WindowFlags`, `SDL_Event`, `SDL_Keycode`) are typically mapped to C# enums or structs within the `SDL` static class (or directly in the `SDL3` namespace if they are complex types used by the static class members), also using PascalCase.
    *   `SDL_WindowFlags` becomes `SDL.WindowFlags` (enum)
    *   `SDL_Event` becomes `SDL.Event` (struct)
    *   `SDL_Keycode` becomes `SDL.Keycode` (enum)
*   **Constants:** Native SDL3 `#define` constants (e.g., `SDL_INIT_VIDEO`) are usually mapped to enum members or `public const int` fields within the relevant C# enum or static class.
    *   `SDL_INIT_VIDEO` becomes `SDL.InitFlags.Video`

**2. File Structure of `lib/SDL3-CS/SDL3-CS/SDL/`:**

The C# source files for the core SDL3 bindings are primarily located under `lib/SDL3-CS/SDL3-CS/SDL/`. This directory is further organized into subdirectories that often mirror SDL3's own categorization of its API (e.g., `Basics`, `Video`, `Audio`, `Input Events`, `GPU`).

*   **P/Invoke Declarations:** The actual `[LibraryImport]` or `[DllImport]` attributes for native functions are often found in files named `PInvoke.cs` within the relevant subdirectory (e.g., [`lib/SDL3-CS/SDL3-CS/SDL/Basics/init/PInvoke.cs`](lib/SDL3-CS/SDL3-CS/SDL/Basics/init/PInvoke.cs:1) for `SDL_Init`, [`lib/SDL3-CS/SDL3-CS/SDL/Video/video/PInvoke.cs`](lib/SDL3-CS/SDL3-CS/SDL/Video/video/PInvoke.cs:1) for windowing functions).
*   **Enum and Struct Definitions:** These are typically in their own dedicated `.cs` files, named after the type (e.g., [`lib/SDL3-CS/SDL3-CS/SDL/Video/video/WindowFlags.cs`](lib/SDL3-CS/SDL3-CS/SDL/Video/video/WindowFlags.cs:1), [`lib/SDL3-CS/SDL3-CS/SDL/Input Events/events/Event.cs`](lib/SDL3-CS/SDL3-CS/SDL/Input%20Events/events/Event.cs:1), [`lib/SDL3-CS/SDL3-CS/SDL/Input Events/keycode/Keycode.cs`](lib/SDL3-CS/SDL3-CS/SDL/Input%20Events/keycode/Keycode.cs:1)).
*   **Partial Class `SDL`:** The main C# static class `SDL` (in the `SDL3` namespace) is defined as a `partial class`. This means its members (P/Invoke methods, nested enums/structs, helper functions) are spread across multiple files within these subdirectories but are all part of the single `SDL3.SDL` static class from the perspective of an API consumer.

**3. Strategy for Finding C# Equivalents:**

*   **Identify the Native SDL3 Element:** Start with the name of the native C function, enum, struct, or constant you need (e.g., `SDL_GetWindowFlags`, `SDL_EventType`, `SDL_SCANCODE_A`).
*   **Apply C# Naming Conventions:**
    *   Remove `SDL_` prefix.
    *   Convert to `PascalCase` (e.g., `GetWindowFlags`, `EventType`, `ScancodeA`). Note that for constants like scancodes, the C# enum member might be simpler (e.g. `SDL.Scancode.A`).
*   **Determine the SDL Subsystem:** Understand which part of SDL the function belongs to (e.g., Video, Events, Keyboard, Mouse). This will guide you to the likely subdirectory in `lib/SDL3-CS/SDL3-CS/SDL/`.
    *   Example: `SDL_CreateWindow` is a Video function. Look in `lib/SDL3-CS/SDL3-CS/SDL/Video/video/`.
    *   Example: `SDL_PollEvent` is an Event function. Look in `lib/SDL3-CS/SDL3-CS/SDL/Input Events/events/`.
*   **Search within the Subsystem Directory:**
    *   For functions, check `PInvoke.cs` files first.
    *   For enums/structs, look for a `.cs` file matching the PascalCase name (e.g., `EventType.cs`, `WindowFlags.cs`).
    *   The C# equivalent will typically be a static method or nested type of `SDL3.SDL` (e.g., `SDL.CreateWindow()`, `SDL.EventType`, `SDL.WindowFlags`).
*   **Use Code Search:** If the location isn't immediately obvious:
    *   Use your IDE's search functionality (or a command-line tool like `grep` or `rg`) within the `lib/SDL3-CS/SDL3-CS/SDL/` directory.
    *   Search for the PascalCase C# name (e.g., `CreateWindow`).
    *   Search for the native C name (e.g., `SDL_CreateWindow`) as it often appears in comments or `EntryPoint` attributes of P/Invoke declarations (e.g., `[LibraryImport(SDLLibrary, EntryPoint = "SDL_CreateWindow")]`).
*   **Consult SDL3 Wiki & SDL3-CS Examples:**
    *   The official [SDL Wiki](https://wiki.libsdl.org/SDL3/FrontPage) provides documentation for the native SDL3 API. Understanding the native function's purpose and parameters helps.
    *   The `SDL3-CS` repository includes examples in `lib/SDL3-CS/SDL3-CS.Examples/` which demonstrate common usage patterns.

**4. Key C# Idioms and Marshalling in SDL3-CS:**

Be aware of common C# idioms used in the bindings:

*   **Return Values for Success/Failure:** Many SDL C functions return `0` for success and a negative value for error. In SDL3-CS, these are often converted to `bool`, where `true` indicates success and `false` indicates failure. Use `SDL.GetError()` to get detailed error information. (e.g., `SDL.Init()` returns `bool`).
*   **String Marshalling:**
    *   `const char*` input parameters in C are often marshalled as `string` in C#.
    *   `char*` (for output strings from SDL) or `const char*` return values from SDL might be marshalled as `string`, or sometimes as `IntPtr` requiring manual marshalling (e.g., using `Marshal.PtrToStringUTF8()` or `SDL.PtrToStringUTF8()` if available). SDL3-CS aims for direct `string` usage where idiomatic.
*   **Pointer Parameters (`*`, `**`):**
    *   Pointers to simple types or structs passed by value to C functions might become `ref` or `out` parameters in C# for structs, or direct value types (`int`, `float`).
    *   `SDL_Event*` in C (like in `SDL_PollEvent(SDL_Event* event)`) becomes `out SDL.Event e` or `ref SDL.Event e` in C#.
    *   Opaque pointers (handles like `SDL_Window*`, `SDL_Renderer*`) are typically represented as `IntPtr` in C# or wrapped in dedicated C# classes/structs if the binding provides higher-level abstractions. SDL3-CS often uses `IntPtr` for these handles.
*   **Enums:** C enums are mapped to C# enums, often with the `[Flags]` attribute if they are bitmasks.
*   **Callbacks:** C function pointers for callbacks are mapped to C# delegates.
*   **Helper Methods:** The `SDL` static class in SDL3-CS includes various helper methods for marshalling and pointer manipulation (e.g., `SDL.PointerToStructure<T>()`, `SDL.StructureToPointer<T>()`, `SDL.StringToPointer()`). These can be useful if you need to interact with more complex native patterns not fully abstracted by a direct C# method.

*   **Troubleshooting SDL Extension Libraries (e.g., SDL3_image, SDL3_ttf) with SDL3-CS:**
    *   SDL extension libraries (like `SDL3_image` for image loading or `SDL3_ttf` for font rendering) provide specialized functionality on top of the core SDL3 library. While `SDL3-CS` provides bindings for these, their interaction with core SDL3 features (like the properties system for `SDL_Texture`) might not always be straightforward or fully documented externally.
    *   **Problem Identification:** If a function from an SDL extension library (e.g., `SDL3.Image.LoadTexture()`) returns an SDL object (like an `SDL_Texture`), but subsequent attempts to use standard SDL3 mechanisms on that object (e.g., `SDL.GetTextureProperties()` to get dimensions) fail or don't yield expected results, it might indicate that the extension library handles or exposes information differently.
    *   **Investigation Strategy:**
        1.  **Consult Official SDL Wiki:** First, check the official SDL Wiki (or the specific extension library's documentation, if available and linked) for guidance on the function in question and how it interacts with core SDL types. However, be aware that C# binding specifics might not be covered.
        2.  **Examine SDL3-CS Bindings Directly:** If official documentation is insufficient or doesn't clarify the C# binding behavior, the most reliable source of truth is the `SDL3-CS` library's source code itself (located in `lib/SDL3-CS/SDL3-CS/`).
            *   Look for the C# wrapper function corresponding to the native SDL extension library function you're using (e.g., in `lib/SDL3-CS/SDL3-CS/Image/PInvoke.cs` for `SDL3_image` functions).
            *   See if the extension library offers alternative C# functions within its own namespace (e.g., `SDL3.Image.Load()` to load to an `SDL_Surface` first, from which dimensions can be reliably obtained before converting to an `SDL_Texture`).
            *   Check how the C# structs for relevant types (e.g., `SDL.Surface` in `lib/SDL3-CS/SDL3-CS/SDL/Video/surface/Surface.cs`) are defined to understand how to access their members (like `Width`, `Height`) after marshalling an `IntPtr`.
        3.  **Consider Intermediate Steps:** Sometimes, an extension library might require or work more reliably with an intermediate step. For example, instead of directly loading an image to an `SDL_Texture`, loading it to an `SDL_Surface` first (using a function from the image extension library), then getting information from the `SDL_Surface` (which is a well-defined core SDL structure), and finally creating the `SDL_Texture` from the `SDL_Surface` using a core SDL function (e.g., `SDL.CreateTextureFromSurface()`) can be a more robust approach. Remember to manage the lifecycle of intermediate objects (like freeing the `SDL_Surface` after the texture is created).
        4.  **Error Checking:** Always check return values from SDL functions. For functions from extension libraries, use the standard `SDL.GetError()` to retrieve error messages, as specific `Extension.GetError()` functions may not exist or be necessary.
By understanding these conventions and the structure of the `lib/SDL3-CS` library, an AI (or human developer) can more effectively locate and utilize the C# equivalents of native SDL3 functionalities.



================================================
File: docs/testing-plan.md
================================================
# Night.Engine Testing Plan

## 1. Introduction and Philosophy

This document outlines the testing strategy for the `Night.Engine` project, specifically focusing on unit testing its constituent modules. The primary goal is to ensure the reliability and correctness of individual components within the engine.

The testing philosophy draws inspiration from Love2D's module-based testing approach, aiming to test each logical module of `Night.Engine` as independently as possible. We will use xUnit as the primary testing framework for C#.

This plan adheres to the standards and guidelines set forth in the `operational-guidelines.md` and aligns with the project goals detailed in `PRD.md`.

## 2. Testing Framework

- **Framework:** xUnit.net
- **Assertion Library:** xUnit's built-in assertions.

## 3. Test Project Structure

A dedicated test project will be created for `Night.Engine` tests:

- **Project Name:** `Night.Engine.Tests`
- **Location:** `src/Night.Engine.Tests/` (This is a recommendation; final location to be decided based on solution structure).
- **Dependencies:** This project will reference the `Night.Engine` project.

## 4. Naming Conventions

Consistency in naming is crucial for maintainability and readability of tests.

- **Test Classes:**
    - Named after the class or module being tested, suffixed with `Tests`.
    - Example: `GraphicsTests.cs` for testing `Night.Graphics`, `WindowTests.cs` for `Night.Window`.
- **Test Methods:**
    - Follow the pattern: `[MethodUnderTest]_[ScenarioOrCondition]_[ExpectedBehavior]`
    - `[MethodUnderTest]`: The name of the method being tested.
    - `[ScenarioOrCondition]`: A brief description of the specific test case or input conditions.
    - `[ExpectedBehavior]`: The expected outcome or state.
    - Example: `SetMode_ValidResolution_ReturnsTrue`, `IsOpen_WhenWindowIsActive_ReturnsTrue`, `Draw_NullSprite_ThrowsArgumentNullException`.

## 5. Scope of Testing - Night.Engine Modules

The following modules and components within `Night.Engine` are the primary targets for unit testing. Given that `Night.Engine` (specifically `Night.Framework`) largely consists of static classes providing a Love2D-like API over SDL3, tests will focus on the C# logic, parameter validation, and correct invocation patterns where feasible.

### 5.1. `Night.Framework` Modules:

These modules are typically static classes in the `Night` namespace.

-   **`Night.Window` (`Window.cs`)**
    -   Test methods like `SetMode`, `SetTitle`, `IsOpen`, `Close`.
    -   Focus on parameter validation (e.g., null title, invalid dimensions for `SetMode` if applicable before SDL call).
    -   Testing the actual window manipulation might be difficult in pure unit tests and leans towards integration testing (covered by `Night.SampleGame`). We can, however, test the C# logic paths before SDL calls.
-   **`Night.Graphics` (`Graphics.cs`)**
    -   Test methods like `NewImage`, `Draw`, `Clear`, `Present`.
    -   Parameter validation (e.g., null paths for `NewImage`, null sprites for `Draw`).
    -   Testing actual rendering output is an integration concern. Unit tests should focus on the C# logic (e.g., does `Draw` handle transform parameters correctly before passing to SDL?).
-   **`Night.Keyboard` (`Keyboard.cs`)**
    -   Test methods like `IsDown`.
    -   Focus on validating input parameters (e.g., specific `KeyCode` values).
    -   Directly testing key states requires OS-level interaction, which is beyond typical unit test scope. Tests might focus on internal logic if any exists separate from direct SDL calls.
-   **`Night.Mouse` (`Mouse.cs`)**
    -   Test methods like `IsDown`, `GetPosition`.
    -   Similar to Keyboard, parameter validation for `MouseButton`.
    -   Testing actual mouse states/positions is an integration concern.
-   **`Night.SDL` (`SDL.cs`)**
    -   This module directly wraps SDL3 P/Invoke calls.
    -   Unit testing P/Invoke wrappers is complex and often provides limited value compared to the effort.
    -   Focus should be on any C# helper methods within this class that do not directly call SDL or that perform significant logic before/after an SDL call.
    -   Most testing for `SDL.cs` functionality will be indirect, through the higher-level framework modules and `Night.SampleGame`.
-   **`FrameworkLoop.cs`**
    -   Testing the main game loop (`Run` method) in isolation is challenging.
    -   Focus on unit testing helper methods or individual components within the loop's logic if they can be isolated (e.g., delta time calculation if it's a separate utility).
    -   The overall loop functionality is best tested via `Night.SampleGame`.
-   **`Types.cs`**
    -   Contains data structures (e.g., `Color`, `Rectangle`, `Sprite`) and interfaces (`IGame`).
    -   Test constructors and any methods on these types if they contain logic (e.g., `Color.ToSDLColor`, methods on `Rectangle`).
    -   Interfaces themselves are not tested directly but are implemented by mocks or test classes.

### 5.2. `Night.Engine` (Future High-Level Systems)

As `Night.Engine` evolves with higher-level systems (ECS, Scene Management, etc.), dedicated test classes will be created for each new component, following the same principles.

## 6. Test Case Design

-   **Positive Tests:** Verify that methods work correctly with valid inputs.
-   **Negative Tests (Error Handling):**
    -   Verify behavior with invalid inputs (e.g., null arguments, out-of-range values).
    -   Ensure appropriate exceptions are thrown as per API contracts (e.g., `ArgumentNullException`, `ArgumentOutOfRangeException`).
-   **Edge Cases:** Test boundary conditions and less common scenarios.
-   **Idempotency:** For methods that should be idempotent, verify this behavior.

## 7. Dealing with SDL Dependencies

Directly testing code that relies heavily on SDL3 native calls can be difficult in unit tests, as it often requires an initialized SDL environment and may involve external system state (like window handles or graphics contexts).

-   **Focus on C# Logic:** Prioritize testing the C# logic that wraps or precedes SDL calls. This includes parameter validation, state management within the C# layer, and correct translation of parameters for SDL functions.
-   **Abstraction (If Necessary):** For more complex C# logic interacting with SDL, consider if introducing a thin abstraction over direct SDL calls (internal to the module) could facilitate testing. This should be weighed against added complexity.
-   **Integration Tests as a Complement:** Acknowledge that `Night.SampleGame` serves as the primary integration test suite where the full interaction with SDL is validated. Unit tests are meant to catch issues at a more granular C# level.
-   **Mocking/Faking SDL (Use with Caution):**
    -   Creating mocks or fakes for SDL functions is possible but can be very time-consuming and complex to maintain.
    -   This approach should generally be avoided unless a critical piece of C# logic cannot be tested otherwise and its correctness is paramount.
    -   If used, these fakes would need to simulate SDL behavior, which can be error-prone.

## 8. Running Tests

-   Tests can be run using the `dotnet test` command from the command line in the solution root or the test project directory.
-   Test runners integrated into IDEs (like Visual Studio, VS Code, Rider) can also be used.

## 9. Test Maintenance

-   Tests should be kept up-to-date with code changes.
-   Refactor tests along with production code to maintain clarity and relevance.
-   Remove or update tests for deprecated or changed functionality.

## 10. Continuous Integration (Future)

Once a CI/CD pipeline is established, automated execution of these unit tests will be a key component to ensure code quality with every change.

This testing plan provides a foundation for building a robust suite of unit tests for `Night.Engine`. It will evolve as the engine grows and new features are added. 


================================================
File: docs/.DS_Store
================================================
[Non-text file]


================================================
File: docs/epics/epic10.md
================================================
# Epic 10: Achieving Roadmap Version 0.1.0

**Goal:** Implement the remaining core features and functionalities outlined for Version 0.1.0 in `docs/love2d-api/roadmap.md`. This epic focuses on API completion for the initial public feature set of Night.Framework.

**User Stories:**

- As a game developer using Night Engine, I want a `love.filesystem`-like API to manage game assets and data.
- As a game developer, I want to draw basic 2D shapes (rectangles, circles, lines) using `Night.Graphics`.
- As a game developer, I need to query timing information like FPS and total elapsed time via a `love.timer`-like API.
- As a game developer, I want more complete keyboard and mouse event callbacks (`KeyReleased`, `MousePressed`, `MouseReleased`).
- As a game developer, I need to manage window properties like dimensions, desktop info, and fullscreen modes via a `love.window`-like API.
- As a project maintainer, I want automated documentation generation and a basic CI setup.
- As a game developer, I want a way to handle errors originating from my game code gracefully via a `love.errorhandler`-like mechanism.
- As a game developer, I want to be able to configure basic game settings through a configuration file.

**Version 0.1.0 Roadmap Items to Address:**
(Reference: `docs/love2d-api/roadmap.md`)

## Tasks

### Phase 1: Core Framework Enhancements

- [x] **Task 10.1: Implement `Night.Filesystem` (Basic)**
  - **Description:** Create the `Night.Filesystem` static class. Implement core functions needed for 0.1.0, focusing on reading files (e.g., for `Graphics.NewImage`), checking file/directory existence. Refer to `docs/love2d-api/modules/filesystem.md` for API inspiration, but scope to essential read operations.
  - **Implementation:**
    - [x] Create `Night.Filesystem` static class
    - [-] ~~Implement `Exists(string path)` - Check if a file or directory exists~~ (Replaced by `GetInfo`)
    - [-] ~~Implement `IsFile(string path)` - Check if path is a file~~ (Replaced by `GetInfo`)
    - [-] ~~Implement `IsDirectory(string path)` - Check if path is a directory~~ (Replaced by `GetInfo`)
    - [x] Implement `ReadBytes(string path)` - Read file as byte array
    - [x] Implement `ReadText(string path)` - Read file as text
    - [x] **Task 10.1.1: Refactor File/Directory Checks to `GetInfo`**
      - **Description:** Replace `Exists`, `IsFile`, and `IsDirectory` with a new `GetInfo(string path, FileType? filterType = null, FileSystemInfo? existingInfo = null)` function, based on `love.filesystem.getInfo`. This new function will provide comprehensive file/directory attributes.
      - **Implementation:**
        - [x] Define `Night.FileType` enum (`File`, `Directory`, `Symlink`, `Other`, `None`).
        - [x] Define `Night.FileSystemInfo` class (with `Type`, `Size`, `ModTime`).
        - [x] Remove `Night.Filesystem.Exists(string path)`.
        - [x] Remove `Night.Filesystem.IsFile(string path)`.
        - [x] Remove `Night.Filesystem.IsDirectory(string path)`.
        - [x] Implement `Night.Filesystem.GetInfo(...)` and its overloads.
        - [x] Update `Night.SampleGame` to use `GetInfo` instead of the removed methods.
      - **Acceptance Criteria:** `Night.Filesystem.GetInfo` correctly returns information for files and directories. `Night.SampleGame` is updated and functions correctly with the new API. The old methods are removed.
      - **Status:** Done
  - **Acceptance Criteria:** Basic file operations are available and usable by other modules (e.g., `Night.Graphics.NewImage` can use it). Sample game can demonstrate reading a simple text file.
  - **Status:** In-Progress

- [x] **Task 10.2: Extend `Night.Graphics` with Basic Shape Drawing**
  - **Description:** Add methods to `Night.Graphics` for drawing 2D primitives.
  - **Implementation:**
    - [x] Define `Night.DrawMode` enum with values:
      - `Fill` - Filled shapes
      - `Line` - Outlined shapes
    - [x] Implement `Rectangle(DrawMode mode, float x, float y, float width, float height)`
    - [x] Implement `Circle(DrawMode mode, float x, float y, float radius, int segments = 12)` (Note: `Color color` param removed to rely on `SetColor`)
    - [x] Implement `Line(float x1, float y1, float x2, float y2)`
    - [x] Implement `Line(DrawMode mode, PointF[] points)` (Note: `List<PointF>` changed to `PointF[]` for consistency)
    - [x] Implement `Polygon(DrawMode mode, PointF[] vertices)`
    - [x] Implement `SetColor(Night.Color color)`
    - [x] Implement `SetColor(byte r, byte g, byte b, byte a = 255)`
    - [x] Update `Night.SampleGame` to demonstrate drawing these shapes
  - **Acceptance Criteria:** Rectangles, circles, and lines can be drawn with specified colors and modes. Sample game showcases this.
  - **Status:** Review

- [x] **Task 10.3: Implement `Night.Timer` Module**
  - **Description:** Create the `Night.Timer` static class.
  - [x] Implement `GetFPS()` and `GetTime()` (time since game start in seconds). Refer to `docs/love2d-api/modules/timer.md`.
  - [x] `GetDeltaTime()` is already available implicitly via `IGame.Update()`, but should be renamed to `GetDelta()`. (Implemented as `Night.Timer.GetDelta()`)
  - [x] Implement `GetAverageDelta()`.
  - [x] Implement `Sleep()` to pause the current thread for the specified amount of time. This function causes the entire thread to pause for the duration of the sleep. Graphics will not draw, input events will not trigger, code will not run, and the window will be unresponsive if you use this as "wait()" in the main thread.
  - [x] Implement `Step()` to measures the time between two frames.
  - **Acceptance Criteria:** `Night.Timer.GetFPS()` returns current FPS. `Night.Timer.GetTime()` returns elapsed game time. Sample game can display these values.
  - **Status:** Done

- [x] **Task 10.4: Implement Remaining Input Event Callbacks**
  - **Description:** Add remaining input event callbacks to handle keyboard and mouse interactions.
  - **Implementation:**
    - [x] Add to `IGame` interface:
      - [x] `KeyReleased(KeySymbol key, KeyCode scancode)`
      - [x] `MousePressed(int x, int y, MouseButton button, bool istouch, int presses)`. Stub istouch for now as a TODO.
      - [x] `MouseReleased(int x, int y, MouseButton button,bool istouch, int presses)`. Stub istouch for now as a TODO.`
    - [x] Update `FrameworkLoop.cs` to handle and dispatch:
      - [x] `SDL.EventType.KeyUp` events
      - [x] `SDL.EventType.MouseButtonDown` events
      - [x] `SDL.EventType.MouseButtonUp` events
  - **Acceptance Criteria:** Sample game can react to key releases, mouse button presses, and mouse button releases, triggering the appropriate `IGame` callbacks.
  - **Status:** Done

- [x] **Task 10.5: Extend `Night.Window` Functionality**
  - **Description:** Implement window management functionality based on `docs/love2d-api/modules/window.md` "In Scope" items.
  - **Implementation:**
    - [x] Core Methods:
      - [x] `GetDesktopDimensions(int displayIndex = 0)` - Get desktop dimensions [cite: 1280]
      - [x] `GetDisplayCount()` - Get number of displays [cite: 1283]
    - [x] Fullscreen Management:
      - [x] `GetFullscreen()` - Check if window is fullscreen. Returns bool fullscreen and FullscreenType fstype. FullscreenType is enumeration `desktop` and `exclusive`. `desktop` is sometimes known as borderless fullscreen windowed mode. A borderless screen-sized window is created which sits on top of all desktop UI elements. The window is automatically resized to match the dimensions of the desktop, and its size cannot be changed. `exclusive` is standard exclusive-fullscreen mode. Changes the display mode (actual resolution) of the monitor.
      - [x] `SetFullscreen(bool fullscreen, FullscreenType type = Desktop)` - Toggle fullscreen. Returns bool success.
      - [x] `GetFullscreenModes(int displayIndex = 0)` - Get available fullscreen modes. Returns table modes. A table of width/height pairs. (Note that this may not be in order.)
      - [x] Define `Night.FullscreenType` struct/class
    - [x] Window State:
      - [x] `GetMode()` - Get current window mode (width, height, flags) [cite: 1295]
    - [x] (Optional Stretch) High DPI Support:
      - [x] `FromPixels` - Converts a number from pixels to density-independent units.
      - [x] `ToPixels` - Converts a number from density-independent units to pixels.
      - [x] `GetDPIScale` - Gets the DPI scale factor associated with the window.
  - **Acceptance Criteria:** Window dimension and mode queries work. Fullscreen can be toggled. Sample game can demonstrate some of these (e.g., printing dimensions).
  - **Status:** Review

### Phase 2: Project Infrastructure & Polish

- [x] **Task 10.6: Implement User-Definable Error Handler**
  - **Description:** Design and implement a mechanism similar to `love.errorhandler`. Allow the user to register a custom error handling function/delegate that `FrameworkLoop.cs` will call when an unhandled exception occurs in `IGame.Load`, `IGame.Update`, `IGame.Draw`, or input callbacks.
  - The handler should receive error details (exception object, message, stack trace).
  - If no custom handler is set, implement the following equivalent from Love2D as the default error handling.
  - **Notes:**
    - The default error handler logs to console, ensures the window is open (or attempts to reopen to 800x600), clears it to a blue color, and resets mouse state (visible, not grabbed, not relative).
    - It then enters a loop allowing the user to quit (Esc key or closing the window) or copy the full error message and stack trace to the clipboard (Ctrl+C).
    - Clipboard functionality uses `Night.System.SetClipboardText(string)`.
    - Due to `Night.Font` not being part of the 0.1.0 scope, the default error handler does *not* render the error text directly into the game window. Users must check the console for the detailed error message.
    - Implemented `Night.Error.SetHandler(ErrorHandlerDelegate)` for users to provide their custom delegate.
    - Added `Night.Mouse.SetVisible(bool)`, `Night.Mouse.SetGrabbed(bool)`, and `Night.Mouse.SetRelativeMode(bool)`.

```lua
local utf8 = require("utf8")

local function error_printer(msg, layer)
 print((debug.traceback("Error: " .. tostring(msg), 1+(layer or 1)):gsub("\n[^\n]+$", "")))
end

function love.errorhandler(msg)
 msg = tostring(msg)

 error_printer(msg, 2)

 if not love.window or not love.graphics or not love.event then
  return
 end

 if not love.graphics.isCreated() or not love.window.isOpen() then
  local success, status = pcall(love.window.setMode, 800, 600)
  if not success or not status then
   return
  end
 end

 -- Reset state.
 if love.mouse then
  love.mouse.setVisible(true)
  love.mouse.setGrabbed(false)
  love.mouse.setRelativeMode(false)
  if love.mouse.isCursorSupported() then
   love.mouse.setCursor()
  end
 end
 if love.joystick then
  -- Stop all joystick vibrations.
  for i,v in ipairs(love.joystick.getJoysticks()) do
   v:setVibration()
  end
 end
 if love.audio then love.audio.stop() end

 love.graphics.reset()
 local font = love.graphics.setNewFont(14)

 love.graphics.setColor(1, 1, 1)

 local trace = debug.traceback()

 love.graphics.origin()

 local sanitizedmsg = {}
 for char in msg:gmatch(utf8.charpattern) do
  table.insert(sanitizedmsg, char)
 end
 sanitizedmsg = table.concat(sanitizedmsg)

 local err = {}

 table.insert(err, "Error\n")
 table.insert(err, sanitizedmsg)

 if #sanitizedmsg ~= #msg then
  table.insert(err, "Invalid UTF-8 string in error message.")
 end

 table.insert(err, "\n")

 for l in trace:gmatch("(.-)\n") do
  if not l:match("boot.lua") then
   l = l:gsub("stack traceback:", "Traceback\n")
   table.insert(err, l)
  end
 end

 local p = table.concat(err, "\n")

 p = p:gsub("\t", "")
 p = p:gsub("%[string \"(.-)\"%]", "%1")

 local function draw()
  if not love.graphics.isActive() then return end
  local pos = 70
  love.graphics.clear(89/255, 157/255, 220/255)
  love.graphics.printf(p, pos, pos, love.graphics.getWidth() - pos)
  love.graphics.present()
 end

 local fullErrorText = p
 local function copyToClipboard()
  if not love.system then return end
  love.system.setClipboardText(fullErrorText)
  p = p .. "\nCopied to clipboard!"
 end

 if love.system then
  p = p .. "\n\nPress Ctrl+C or tap to copy this error"
 end

 return function()
  love.event.pump()

  for e, a, b, c in love.event.poll() do
   if e == "quit" then
    return 1
   elseif e == "keypressed" and a == "escape" then
    return 1
   elseif e == "keypressed" and a == "c" and love.keyboard.isDown("lctrl", "rctrl") then
    copyToClipboard()
   elseif e == "touchpressed" then
    local name = love.window.getTitle()
    if #name == 0 or name == "Untitled" then name = "Game" end
    local buttons = {"OK", "Cancel"}
    if love.system then
     buttons[3] = "Copy to clipboard"
    end
    local pressed = love.window.showMessageBox("Quit "..name.."?", "", buttons)
    if pressed == 1 then
     return 1
    elseif pressed == 3 then
     copyToClipboard()
    end
   end
  end

  draw()

  if love.timer then
   love.timer.sleep(0.1)
  end
 end

end
```

- **Acceptance Criteria:** A user can provide a custom function to `Night.Framework` that gets called on unhandled game code exceptions, allowing custom display or logging.
- **Status:** Done

- [x] **Task 10.7: Basic Game Configuration File Support**
  - **Description:** Implement functionality to load basic game settings from a configuration file (e.g., `config.json`) at startup.
  - Focus on settings like default window width, height, title, vsync toggle.
  - `Night.Framework.Run` or `IGame.Load` could access these.
  - **Implementation:**
    - [x] Create `Night.Configuration.GameConfig` class with nested `WindowConfig`, `AudioConfig`, `ModulesConfig` to define configuration structure and defaults. (`src/Night.Engine/Framework/Configuration/GameConfig.cs`)
    - [x] Create `Night.Configuration.ConfigurationManager` static class to load `config.json` and provide access to `GameConfig`. (`src/Night.Engine/Framework/Configuration/ConfigurationManager.cs`)
    - [x] Modify `Night.FrameworkLoop.Run()` to call `ConfigurationManager.LoadConfig()` before `game.Load()`.
    - [x] Modify `Night.FrameworkLoop.Run()` to initialize the window using `ConfigurationManager.CurrentConfig.Window` settings if `game.Load()` does not create a window. This includes:
      - Window dimensions (width, height)
      - Window title
      - Window flags (Resizable, Borderless, HighDPI)
      - Fullscreen mode (Fullscreen, FullscreenType)
      - VSync
      - Initial window position (X, Y)
    - [x] Update `Night.SampleGame` to demonstrate overriding initial window settings via `config.json`.
    - [ ] TODO: Add handling for `t.window.icon` (requires `Night.Window.SetIcon` to be implemented first, which is out of scope for 0.1.0 according to Task 10.10 notes, but config option should exist).
    - [ ] TODO: Add console message for `t.console = true` on Windows (actual console attachment is a larger task).
    - [ ] TODO: Consider `t.identity` and `t.appendidentity` for `Night.Filesystem` initialization.
    - [ ] TODO: Implement logic for `t.modules.*` flags to actually enable/disable modules (currently placeholder flags).
  - **Acceptance Criteria:** The engine loads `config.json`. If `game.Load()` doesn't open a window, the engine uses `config.json` values (or defaults) for window width, height, title, resizable, borderless, fullscreen, fullscreen type, VSync, and initial position. The sample game can have its initial window settings overridden by a `config.json` file (once sample game is updated).
  - **Status:** In-Progress

- [x] **Task 10.8: Setup `docfx` Documentation Generation**
  - **Description:** Integrate `docfx` into the project. Configure it to generate API documentation from C# XML comments for `Night`. Setup a GitHub Actions workflow to build and deploy this documentation to GitHub Pages.
  - **Acceptance Criteria:** API documentation is automatically generated and published to a GitHub Pages site.
  - **Status:** Review

- [ ] **Task 10.9: Formalize Basic Test Suite**
  - **Description:** Review current testing strategy (`Night.SampleGame` as integration test [cite: 209]). Establish a basic structure for more formal tests if deemed necessary (e.g., a separate test project). Add minimal unit tests for any new complex, non-SDL-dependent logic introduced in this epic (e.g., utility functions in `Night.Filesystem` or `Night.Timer`).
  - **Acceptance Criteria:** A clear testing strategy for 0.1.0 is in place. Any new critical utility functions have basic unit tests.
  - **Status:** In-Progress

- [x] **Task 10.10: Create Project Logo and Icon**
  - **Description:** Design or procure a logo for Night Engine. Prepare application icon files (e.g., .ico, .icns) and integrate them so the `Night.SampleGame` window uses the icon. `Night.Window.SetIcon()` would be needed if not already planned. (Roadmap `love.window` has `setIcon` [cite: 1291, 1327] as out of scope, may need to be scoped in for this).
  - **Implementation Details:**
    - [x] Design/Procure Night Engine logo and create `.ico` and `.icns` files. (Responsibility of User)
    - [x] Add `private static string? currentIconPath;` to `Night.Window`.
    - [x] Implement `public static bool Night.Window.SetIcon(string imagePath)`:
      - Takes a file path string (e.g., ".ico", ".bmp"). Uses `SDL.LoadBMP` for loading.
      - Sets the window icon using `SDL.SetWindowIcon`.
      - Converts loaded surface to RGBA8888 format, extracts pixel data into a `Night.ImageData` object, and stores it.
    - [x] Implement `public static Night.ImageData? Night.Window.GetIcon()`:
      - Returns the stored `Night.ImageData` object (or null).
    - [x] Update `Night.Configuration.GameConfig` to include `IconPath` in `WindowConfig` (and split config classes to separate files).
    - [x] Update `Night.FrameworkLoop.Run()` (now `Framework.Run()`) to load icon from `config.json` if specified.
    - [x] Update `Night.SampleGame` to call `SetIcon` (commented out, driven by config) and include a sample icon file (user to provide actual file, config updated).
    - [x] Update `docs/love2d-api/modules/window.md` for `SetIcon` and `GetIcon`.
  - **Acceptance Criteria:** Project has a logo. Sample game displays a custom window icon. `Night.Window.GetIcon()` returns the path of the set icon.
  - **Status:** In-Progress

- [x] **Task 10.11: Establish Basic CI Workflow**
  - **Description:** Review deactivated CI workflows. Create a new, active GitHub Actions workflow that, at a minimum, builds `Night` and `SampleGame` on push/PR to main branch for Windows, Linux, and macOS. Run any automated tests established in Task 10.9.
  - **Acceptance Criteria:** CI workflow successfully builds and (if applicable) tests the project on all target OS upon code changes.
  - **Status:** Done (Basic requirements met by existing `.github/workflows/ci.yml`. Further enhancements can be added.)

- [x] **Task 10.12: Create API Documentation Script**
  - **Description:** Write a new Python script `scripts/get_api.py`. This script will parse all C# files in `src/Night.Engine/Framework` and its subdirectories. It will generate a markdown file listing all public static classes and their public static functions (including overloads). The script should attempt to derive an equivalent Love2D API call for each function.
  - **Output Format:**
    - Modules (classes) should be Header Level 2.
    - Functions should be an unordered list item: `FunctionName() - love.module.functionName`
    - Overloaded functions should have a nested unordered list detailing each overload with parameters:
      - `FunctionName(paramType1 paramName1, paramType2 paramName2)`
  - **Example:**

    ```markdown
    ## filesystem
    - GetInfo() - love.filesystem.getInfo
      - GetInfo(string path, FileSystemInfo info)
      - GetInfo(string path, FileType filterType, FileSystemInfo info)
    ```

  - **Acceptance Criteria:** The script `scripts/get_api.py` is created and generates a markdown file as specified. The markdown file accurately reflects the public API of `src/Night.Engine/Framework`.
  - **Status:** To Do

[x] **Task 10.13: Refactor Project Structure, Naming, and Documentation**

- **Description:** Restructure the project's directories and C# project files to align with the "Night" and "Night.Engine" namespace strategy. Update all relevant documentation to reflect these changes. The goal is to have a primary assembly named `Night.dll` which contains both the `Night` (framework) and `Night.Engine` (engine extensions) namespaces.

- **Implementation Details:**
    - **1. Directory Renaming and Restructuring:**
        - [x] Rename the main C# project directory from `src/Night.Engine/` to `src/Night/`.
        - [x] Move all contents of the former `src/Night.Engine/Framework/` directory (e.g., `Graphics/`, `Window/`, etc.) directly into the new `src/Night/` directory.

            - Example: `src/Night.Engine/Framework/Graphics/Graphics.cs` becomes `src/Night/Graphics/Graphics.cs`.

        - [x] Move the contents of the former `src/Night.Engine/Engine/` directory into a new `Engine` subdirectory within `src/Night/`.

            - Example: `src/Night.Engine/Engine/.gitkeep` becomes `src/Night/Engine/.gitkeep`.

            - Future engine components like `SceneManager.cs` would go into `src/Night/Engine/`.

    - **2. C# Project File (.csproj) Adjustments:**

        - [x] Rename the C# project file from `src/Night.Engine/Night.Engine.csproj` to `src/Night/Night.csproj`.

        - [x] Update the `src/Night/Night.csproj` file:

            - [x] Modify the `<AssemblyName>` property (or add it if not present) to ensure the output assembly is named `Night`. (e.g., `<AssemblyName>Night</AssemblyName>`)

            - [x] Verify that all source file paths (`<Compile Include="..." />` if explicit, or implicit globbing patterns) are correct after the directory restructuring.

    - **3. Solution File (`.sln`) Update:**

        - [x] Edit the `Night.sln` file to reflect the new path and name of the C# project file.

            - Example: Change `Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "Night.Engine", "src\Night.Engine\Night.Engine.csproj", "{...}"`

            - To: `Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "Night", "src\Night\Night.csproj", "{...}"` (The project GUID `{...}` should remain the same).

            - [x] Also update `Night.Engine.Tests` to `Night.Tests` and its path in the solution.

    - **4. Namespace Verification (Conceptual - No Code Change unless inconsistencies found):**

        - [x] Conceptually verify that all files moved from `src/Night.Engine/Framework/*` are already in the `Night` namespace (or sub-namespaces like `Night.Graphics`).

        - [x] Conceptually verify that any files moved to `src/Night/Engine/*` will use the `Night.Engine` namespace.

    - **5. Documentation Updates:**

        - [x] **`docs/PRD.md`:**

            - [x] Update Section 3 "Technical Specifications"

                - Change primary library name from `Night.Engine` to `Night`.

                - Reflect that the output DLL is `Night.dll`.

                - Clarify that this `Night.dll` contains both `Night` (framework) and `Night.Engine` (engine extensions) namespaces.

            - [x] Update Section 4 "Project Structure"

                - Modify the Mermaid diagram and textual descriptions to show the new `src/Night/` top-level directory for the main library.

                - Show module directories (e.g., `Graphics`, `Window`) directly under `src/Night/`.

                - Show the `Engine` subdirectory as `src/Night/Engine/`.

            - [x] Update Section 5 "File Descriptions"

                - Change `src/Night.Engine/Night.Engine.csproj` to `src/Night/Night.csproj`.

                - Describe `Night.csproj` as the project file for the main `Night.dll` library.

        - [x] **`README.md`:**

            - [x] Review and update any mentions of `Night.Engine` as the primary library name or `Night.Engine.dll` if they exist.

            - [x] Ensure any "Getting Started" or API usage examples correctly reflect `using Night;` and `using Night.Engine;` and the concept of a single `Night.dll`.

        - [x] **`docs/epics/*.md` (especially `epic10.md` and any active epics):**

            - [x] Review all task descriptions and implementation details.

            - [x] Update file paths (e.g., references to `src/Night.Engine/Framework/...` should become `src/Night/...`).

            - [x] Update references to `Night.Engine.csproj` to `Night.csproj`.

        - [x] **`docs/operational-guidelines.md`:**

            - [x] Review for any path or project name specifics that might need updating.

        - [x] **`.github/workflows/ci.yml` (and any other relevant workflows):**

            - [x] Update paths to the solution file (`Night.sln` - likely no change here unless solution name changes).

            - [x] Update paths to the C# project file if explicitly referenced (e.g., `dotnet build src/Night/Night.csproj`).

            - [x] Ensure build steps correctly produce `Night.dll`.

        - [x] **`scripts/update_api_doc.py` (Task 10.12 in `epic10.md`):**

            - [x] Ensure the script's `framework_dir` points to `src/Night/` (or its relevant subdirectories like `src/Night/Graphics`, etc., if it iterates that way) instead of `src/Night.Engine/Framework/`.

- **Acceptance Criteria:**

    - The project directory structure is updated as specified.

    - The C# project file is renamed to `Night.csproj`, located in `src/Night/`, and configured to output `Night.dll`.

    - The `Night.sln` file correctly references the renamed and relocated project.

    - The solution builds successfully, producing `Night.dll`.

    - The `Night.SampleGame` project still builds and runs correctly, referencing the new `Night.dll` and using the `Night` and `Night.Engine` namespaces as intended.

    - All specified documentation files (`PRD.md`, `README.md`, relevant epics, CI workflows, API doc script) are updated to accurately reflect the new structure, naming, and API organization.

- **Status:** Review

- [x] **Task 10.14: Fix Linting Errors**
  - **Description:** Address StyleCop linting errors reported in the codebase.
  - **Errors to fix:**
    - `src/Night/Filesystem/Types.cs(33,12): error SA1201: A constructor should not follow a property`
    - `src/Night/Graphics/Types.cs(35,12): error SA1201: A constructor should not follow a property`
    - `src/Night/Timer/Timer.cs(54,26): error SA1202: 'public' members should come before 'internal' members`
    - `src/Night/FrameworkLoop.cs(101,24): error SA1202: 'public' members should come before 'private' members`
    - `src/Night/FrameworkLoop.cs(29,23): error SA1203: Constant fields should appear before non-constant fields`
    - `src/Night/Window/Window.cs(152,23): error SA1202: 'public' members should come before 'internal' members`
    - `src/Night/Graphics/Structs.cs(30,34): error SA1201: A field should not follow a constructor`
    - `src/Night/Configuration/GameConfig.cs(42,16): error SA1402: File may only contain a single type`
    - `src/Night/Configuration/GameConfig.cs(51,16): error SA1402: File may only contain a single type`
    - `src/Night/Configuration/GameConfig.cs(111,16): error SA1402: File may only contain a single type`
    - `src/Night/ErrorHandler.cs(19,23): error SA1649: File name should match first type name`
    - `src/Night/Filesystem/Types.cs(12,16): error SA1649: File name should match first type name`
    - `src/Night/FrameworkLoop.cs(21,23): error SA1649: File name should match first type name`
    - `src/Night/Timer/Timer.cs(36,25): error SA1201: A property should not follow a method`
    - `src/Night/Timer/Timer.cs(69,23): error SA1202: 'public' members should come before 'internal' members`
    - `src/Night/FrameworkLoop.cs(32,23): error SA1203: Constant fields should appear before non-constant fields`
    - `src/Night/Window/Window.cs(173,43): error SA1202: 'public' members should come before 'internal' members`
    - `src/Night/Graphics/Enums.cs(12,15): error SA1649: File name should match first type name`
    - `src/Night/Window/Window.cs(50,32): error SA1108: Block statements should not contain embedded comments`
    - `src/Night/Window/Window.cs(203,25): error SA1316: Tuple element names should use correct casing`
    - `src/Night/Window/Window.cs(203,54): error SA1316: Tuple element names should use correct casing`
    - `src/Night/Mouse/Mouse.cs(64,24): error SA1316: Tuple element names should use correct casing`
    - `src/Night/Mouse/Mouse.cs(64,31): error SA1316: Tuple element names should use correct casing`
    - `src/Night/Timer/Timer.cs(121,57): error SA1108: Block statements should not contain embedded comments`
    - `src/Night/Timer/Timer.cs(128,38): error SA1108: Block statements should not contain embedded comments`
    - `src/Night/Window/Window.cs(340,48): error SA1108: Block statements should not contain embedded comments`
    - `src/Night/Window/Window.cs(257,14): error SA1108: Block statements should not contain embedded comments`
    - `src/Night/Window/Window.cs(289,12): error SA1108: Block statements should not contain embedded comments`
    - `src/Night/Graphics/Structs.cs(14,17): error SA1649: File name should match first type name`
    - `src/Night/Graphics/Graphics.cs(130,12): error SA1108: Block statements should not contain embedded comments`
    - `src/Night/Graphics/Types.cs(12,16): error SA1649: File name should match first type name`
    - `src/Night/Configuration/ConfigurationManager.cs(66,30): error SA1108: Block statements should not contain embedded comments`
    - `src/Night/FrameworkLoop.cs(438,68): error SA1108: Block statements should not contain embedded comments`
    - `src/Night/FrameworkLoop.cs(460,33): error SA1108: Block statements should not contain embedded comments`
    - `src/Night/Graphics/Graphics.cs(233,12): error SA1108: Block statements should not contain embedded comments`
    - `src/Night/Graphics/Graphics.cs(281,81): error SA1108: Block statements should not contain embedded comments`
    - `src/Night/Graphics/Graphics.cs(277,38): error SA1117: The parameters should all be placed on the same line or each parameter should be placed on its own line`
    - `src/Night/Mouse/Enums.cs(14,15): error SA1649: File name should match first type name`
    - `src/Night/FrameworkLoop.cs(264,29): error SA1108: Block statements should not contain embedded comments`
    - `src/Night/FrameworkLoop.cs(274,30): error SA1108: Block statements should not contain embedded comments`
    - `src/Night/FrameworkLoop.cs(291,30): error SA1108: Block statements should not contain embedded comments`
    - `src/Night/Types.cs(13,20): error SA1649: File name should match first type name`
    - `src/Night/Window/Enums.cs(12,15): error SA1649: File name should match first type name`
    - `src/Night/Window/Structs.cs(12,17): error SA1649: File name should match first type name`
    - `CSC : error SA0001: XML comment analysis is disabled due to project configuration`
    - `src/Night/Window/Window.cs(306,11): error CS1501: No overload for method 'GetFullscreenDisplayModes' takes 3 arguments`
  - **Acceptance Criteria:** All listed StyleCop errors are resolved.
  - **Status:** In-Progress



================================================
File: docs/epics/release.md
================================================
Status: In-Progress

GitHub Actions Release Plan for Night Engine (Night.dll) - Compiled Version Info

This document outlines the implementation plan for a robust, manually triggerable GitHub Actions-based release process for the Night C# library, focusing on creating GitHub Releases. The version information will be compiled directly into the library.
1. Overview

The goal is to automate the versioning, building, testing, and packaging of the Night.dll library, culminating in a GitHub Release with the generated packages as assets. The process will be initiated manually via workflow_dispatch, allowing the user to specify the exact Semantic Version for the release. The library will contain a `VersionInfo.cs` file where the Semantic Version is updated by the GitHub Action, and a manually editable `CodeName` is stored.

Key Information from Repository Digest:

    Solution File: Night.sln (located at the repository root)
    Main Library Project: src/Night/Night.csproj (this is the project to be versioned and packaged as Night.dll)
    Test Project: tests/Night.Tests/Night.Tests.csproj
    Target Framework: net9.0
    .NET SDK Version: 9.0.x (aligning with existing CI)
    Default Branch: main
    Root Namespace for Library: Night

2. Prerequisites and Initial Setup

Before implementing the release workflow, ensure the following are in place:

    .NET SDK:
        Ensure your development environment and GitHub Actions runners have access to .NET SDK version 9.0.x. The workflow will use actions/setup-dotnet to configure this.
    GitHub CLI (gh):
        The GitHub CLI is used for creating GitHub Releases. It's typically available on GitHub-hosted runners.
    GitHub Actions Workflow Permissions:
        The workflow will need permissions to write to the repository (for committing .csproj and .cs changes, creating tags, and creating GitHub releases). The following permissions block should be included in the workflow file:

        permissions:
          contents: write

3. GitHub Actions Workflow File (`.github/workflows/release.yml`)

Create/update the file with the following content:

```yaml
name: Release Night Library (GitHub Release)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Semantic Version for the release (e.g., 1.0.0, 1.0.0-beta.1). This is the pure SemVer.'
        required: true
        type: string

permissions:
  contents: write # To create commits, tags, and releases

jobs:
  release:
    name: Build and Create GitHub Release for Night Library
    runs-on: ubuntu-latest
    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      SOLUTION_FILE_PATH: Night.sln
      MAIN_PROJECT_FILE_PATH: src/Night/Night.csproj
      VERSION_INFO_FILE_PATH: src/Night/VersionInfo.cs # Path to the version C# file
      TEST_PROJECT_FILE_PATH: tests/Night.Tests/Night.Tests.csproj
      PACKAGE_OUTPUT_DIR: ./packages

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required to analyze history

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Validate Version Input (SemVer)
        run: |
          version_input="${{ github.event.inputs.version }}"
          semver_regex="^([0-9]+)\\.([0-9]+)\\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*))?(?:\\+([0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*))?$"
          if [[ ! "$version_input" =~ $semver_regex ]]; then
            echo "Error: Invalid version format. Input must be a pure Semantic Version (e.g., 1.0.0, 1.2.3-beta.1)."
            exit 1
          fi
          echo "SemVer input '$version_input' is valid."
        shell: bash

      - name: Update Version in .csproj
        id: update_version_csproj
        run: |
          $newSemVer = "${{ github.event.inputs.version }}"
          $projectFilePath = "${{ env.MAIN_PROJECT_FILE_PATH }}"
          Write-Host "Attempting to update <Version> in '$projectFilePath' to '$newSemVer'"
          [xml]$csproj = Get-Content -Path $projectFilePath -Raw
          $versionNode = $csproj.SelectSingleNode("//PropertyGroup/Version")
          if (-not $versionNode) {
              $propertyGroupNode = $csproj.SelectSingleNode("//PropertyGroup")
              if (-not $propertyGroupNode) {
                  $propertyGroupNode = $csproj.CreateElement("PropertyGroup")
                  $csproj.Project.AppendChild($propertyGroupNode) | Out-Null
              }
              $versionNode = $csproj.CreateElement("Version")
              $propertyGroupNode.AppendChild($versionNode) | Out-Null
          }
          $versionNode.'#text' = $newSemVer
          $csproj.Save($projectFilePath)
          Write-Host "Saved <Version> $newSemVer to '$projectFilePath'"
          echo "version_tag=v$newSemVer" >> $GITHUB_OUTPUT
        shell: pwsh

      - name: Update Version in VersionInfo.cs
        run: |
          $newSemVer = "${{ github.event.inputs.version }}"
          $versionInfoFilePath = "${{ env.VERSION_INFO_FILE_PATH }}"
          Write-Host "Attempting to update Version constant in '$versionInfoFilePath' to '$newSemVer'"
          $content = Get-Content $versionInfoFilePath -Raw
          # Regex to find 'public const string Version = ".*";' and replace the version string part
          $updatedContent = $content -replace '(?<=public const string Version = ")([^"]*)(?=";)', $newSemVer
          Set-Content -Path $versionInfoFilePath -Value $updatedContent
          Write-Host "Updated Version constant in '$versionInfoFilePath'"
        shell: pwsh

      - name: Commit Version Changes
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git add "${{ env.MAIN_PROJECT_FILE_PATH }}" # .csproj
          git add "${{ env.VERSION_INFO_FILE_PATH }}" # VersionInfo.cs
          git commit -m "Update version to ${{ github.event.inputs.version }} [skip ci]"
          echo "Committed version updates for ${{ github.event.inputs.version }}"
        shell: bash

      - name: Create Git Tag
        run: |
          git tag "${{ steps.update_version_csproj.outputs.version_tag }}"
          echo "Created git tag ${{ steps.update_version_csproj.outputs.version_tag }}"
        shell: bash

      - name: Push Commit and Tag
        run: |
          git push origin HEAD:main --follow-tags
          echo "Pushed commit and tag to remote."
        shell: bash

      - name: Build Solution
        run: dotnet build "${{ env.SOLUTION_FILE_PATH }}" -c Release /p:Version="${{ github.event.inputs.version }}"

      - name: Run Tests
        run: dotnet test "${{ env.SOLUTION_FILE_PATH }}" --no-build -c Release

      - name: Create Package Output Directory
        run: mkdir -p "${{ env.PACKAGE_OUTPUT_DIR }}"

      - name: Package Library
        run: |
          dotnet pack "${{ env.MAIN_PROJECT_FILE_PATH }}" `
            --no-build `
            -c Release `
            -o "${{ env.PACKAGE_OUTPUT_DIR }}" `
            /p:Version="${{ github.event.inputs.version }}" `
            /p:IncludeSymbols=true `
            /p:SymbolPackageFormat=snupkg
        shell: pwsh

      - name: List Packaged Files
        run: ls -R "${{ env.PACKAGE_OUTPUT_DIR }}"
        shell: bash

      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION_TAG: ${{ steps.update_version_csproj.outputs.version_tag }}
          RELEASE_VERSION: ${{ github.event.inputs.version }}
        run: |
          gh release create "$VERSION_TAG" \
            "${{ env.PACKAGE_OUTPUT_DIR }}"/*.nupkg \
            "${{ env.PACKAGE_OUTPUT_DIR }}"/*.snupkg \
            --title "Release $RELEASE_VERSION" \
            --notes "Night Engine Release $RELEASE_VERSION" \
            --draft=false \
            --prerelease=$([[ "$RELEASE_VERSION" == *-* ]] && echo true || echo false)
        shell: bash
```

4. C# Library Version Information (`src/Night/VersionInfo.cs`)

The library's version information will be stored and retrieved from a compiled C# file.

    Create `src/Night/VersionInfo.cs`:
    This file will contain the version information. The `Version` constant will be updated by the GitHub Actions workflow. The `CodeName` constant is for manual developer updates.

    ```csharp
    // In src/Night/VersionInfo.cs
    namespace Night
    {
        public static class VersionInfo
        {
            // This SemVer value is updated by the GitHub Action (e.g., "1.0.0", "1.2.3-beta.1")
            // It is used for AssemblyInformationalVersion and runtime GetVersion()
            public const string Version = "0.0.0-dev"; // Initial placeholder

            // This value is manually updated by the developer during development cycles.
            // It is not automatically used in the release title or notes by default.
            public const string CodeName = "Initial Development"; // Manual placeholder

            /// <summary>
            /// Gets the Semantic Version of the Night library.
            /// This version is set during the release process.
            /// </summary>
            /// <returns>The library's semantic version string.</returns>
            public static string GetVersion()
            {
                return Version;
            }

            // Example: If you want a way to get codename, you can add a method like this:
            // public static string GetCodeName()
            // {
            //     return CodeName;
            // }
            //
            // public static string GetFullVersionDisplay()
            // {
            //     return $"{Version} ('{CodeName}')";
            // }
        }
    }
    ```

    Update `.csproj` File (`src/Night/Night.csproj`):
    Ensure `VERSION.txt` is NO LONGER included if it was previously. The `VersionInfo.cs` file is compiled by default as a `.cs` file within the project. No specific `<Content>` tag is needed for it. The `<Version>` tag in the `.csproj` will still be updated by the workflow, which influences `AssemblyVersion`, `FileVersion`, and `AssemblyInformationalVersion` if not otherwise specified. The `AssemblyInformationalVersion` will effectively be the same as `VersionInfo.Version` after the workflow runs.

5. Step-by-Step Implementation Instructions for You (Agent)

    Update Workflow File:
        Create or update the `.github/workflows/release.yml` file with the YAML content from Section 3.

    Create `src/Night/VersionInfo.cs`:
        Create the `src/Night/VersionInfo.cs` file with the C# code from Section 4. Commit with the initial placeholders.

    Delete `src/Night/VERSION.txt` (if it exists):
        Ensure this file is removed from the `src/Night/` directory and from source control if previously committed.

    Update `src/Night/Night.csproj`:
        If the `<Content Include="VERSION.txt">...</Content>` item group exists from a previous plan, remove it. The workflow updates `<Version>` in the .csproj directly.

    Commit and Push Changes:
        Commit all changes:
        `git add .github/workflows/release.yml src/Night/VersionInfo.cs src/Night/Night.csproj`
        (If `VERSION.txt` was tracked, also `git rm src/Night/VERSION.txt`)
        `git commit -m "refactor: Implement compiled versioning with VersionInfo.cs and update release workflow"`
        `git push origin main`

6. User Guide for Running the Release Workflow

    Navigate to Actions in your GitHub repository.
    Select the "Release Night Library (GitHub Release)" workflow.
    Click `Run workflow`.
    Enter the pure Semantic Version (e.g., 1.0.0, 0.2.0-beta.1) in the input field. This version will be used for Git tagging, .csproj updates, `VersionInfo.cs` updates, and the GitHub release title.
    Click `Run workflow`.

7. Tailored Considerations and Best Practices

    `AssemblyInformationalVersion`: The `<Version>` tag set in the `.csproj` by the workflow directly influences the `AssemblyInformationalVersionAttribute` during the build. The `VersionInfo.GetVersion()` method will return the same SemVer string that is also effectively in `AssemblyInformationalVersionAttribute`.
    `CodeName` Usage: The `CodeName` constant in `VersionInfo.cs` is for your internal tracking and development. It is not automatically included in release artifacts or titles by this workflow. You can manually include it in `CHANGELOG.md` or release notes if desired.
    Branching Strategy: Unchanged. All operations target the `main` branch by default in the workflow.
    Testing the Workflow: Test with pre-release SemVer strings.

This revised plan focuses on a compiled-in version string, updated by the GitHub Action, and includes a manual codename field, removing the need for an external `VERSION.txt`.



================================================
File: docs/epics/archive/epic1.md
================================================
**Epic 1: Project Setup & SDL3 Integration**

**Goal:** Establish the development environment, project structure as defined in the PRD, and ensure SDL3 native libraries are correctly fetched, linked, and usable by the C# projects.

- [x] **Task 1.0:** Align Project Structure with PRD Section 4 (Revised) (Status: Review)
    - [x] Review current project structure against `docs/PRD.md` Section 4 diagram.
    - [x] Move `Night.Engine/SDL3` submodule to `lib/SDL3-CS`.
    - [x] Remove `Night.Engine/runtimes` directory.
    - [x] Verify no `scripts` directory exists at root (remove if found and not in PRD).
    - [x] Create `lib/TASKS.md`.
    - **Verification:** Project structure matches `docs/PRD.md` Section 4 diagram. `.gitmodules` is updated.
- [x] **Task 1.1:** Initialize Git Repository & Solution Structure
    - [x] Initialize Git repository with a `.gitignore` file suitable for a .NET project.
    - [x] Create the `Night.sln` solution file.
    - [x] Create the main folder structure: `/docs`, `/scripts`, `/Night.Engine`, `/Night.SampleGame` as per PRD Section 4.
    - [x] Add initial `PRD.md` and a placeholder `TASKS.md` to `/docs`.
    - [x] Add a basic `README.md` to the project root.
    - **Verification:** Repository is cloneable, solution opens in IDE, folder structure matches PRD.

- [x] **Task 1.2.1:** Refactor `Platform` Build System and Workflow (Status: Review)
    - [x] Rename `FosterPlatform` to `Night.Platform` in [`src/Night.Platform/CMakeLists.txt`](src/Night.Platform/CMakeLists.txt:0) and update associated variables (e.g., `FOSTER_LIB_NAME` to `NIGHT_LIB_NAME`).
    - [x] Rename `foster_platform.h` to `night_platform.h` and `foster_platform.c` to `night_platform.c`. Update include guards and internal references.
    - [x] Update [`src/Night.Platform/README.md`](src/Night.Platform/README.md:0) to reflect the new naming.
    - [x] Update [` .github/workflows/build-libs.yml`](.github/workflows/build-libs.yml:0) to use `NIGHT_OVERRIDE_TARGET` and reflect any other necessary changes due to renaming.
    - **Verification:** The `Platform` project builds successfully with the new names. The GitHub Actions workflow runs successfully, producing artifacts like `Night.Platform.dll`.

- [x] **Task 1.3:** Set up C# Projects (`Night.Engine` & `Night.SampleGame`) (Status: Review)
    - [x] Create `Night.Engine.csproj` as a .NET 9 C# class library.
    - [x] Configure it to use C# 13.
    - [x] Ensure it's set up to correctly include/load native binaries from the `/runtimes` folder for multiple platforms.
    - [x] Create `Night.SampleGame.csproj` as a .NET 9 C# console application.
    - [x] Configure it to use C# 13.
    - [x] Add a project reference to `Night.Engine`.
    - [x] Add basic placeholder C# files (`API.cs`, `Engine.cs` in `Night.Engine`; `Program.cs`, `Game.cs` in `Night.SampleGame`).
    - **Verification:** Both projects build successfully. `Night.SampleGame` can reference types from `Night.Engine`.

- [x] **Task 1.4:** Initial SDL3 P/Invoke Test (Status: Review)
    - [x] In `Night.Engine` or `Night.SampleGame`, add P/Invoke declarations for simple functions from `src/Night.Platform/` (e.g., for `SDL_Init`, `SDL_Quit`, `SDL_GetVersion` equivalents via `Night.Platform.dll`). (Implemented directly against SDL3.dll in `Program.cs`)
    - [x] Call these P/Invoke functions from `Night.SampleGame`'s `Program.cs`. (Implemented in `Program.cs`)
    - **Verification:** The P/Invoke call executes without errors (e.g., `DllNotFoundException`), and if applicable, returns expected data (like SDL version). SDL can be initialized and quit. (Checked 2025-05-24: `SDL3.dll` copying mechanism via `Night.Engine.csproj` for `win-x64` is correctly configured.)

- [x] **Task 1.4.1:** Setup Coding Standards Enforcement (Status: Review)
    - [x] Create and configure `.editorconfig` at the project root to align with the Google C# Style Guide (indentation, column limit, `using` directive order, placeholder for Roslyn Analyzers).
    - [x] Updated `.pre-commit-config.yaml` for C# project with `dotnet format` and other standard hooks.
    - [x] Ensure Roslyn Analyzers are active and *fully* configured via `.editorconfig` for style and quality checks.
    - **Verification:** Code formatting tools (`dotnet format`) apply styles consistent with `.editorconfig`. IDE shows warnings/errors based on analyzer settings. `.pre-commit` hooks run successfully.

- **Task 1.5:** Integrate `lib/SDL3-CS` Bindings into `Night.Engine` (Status: Review)
    - **Description:** Modify `Night.Engine` to use the C# bindings from `lib/SDL3-CS` for SDL3 interop, and update `Night.SampleGame` to use these new capabilities. This replaces any direct P/Invoke to `SDL3.dll` or reliance on `Night.Platform` for SDL3 functions.
    - **Sub-tasks:**
        - [x] Add a project reference from `src/Night.Engine/Night.Engine.csproj` to `lib/SDL3-CS/SDL3/SDL3.Core.csproj` (or `SDL3.Legacy.csproj` if .NET 8+ is not guaranteed for all targets, though PRD specifies .NET 9).
        - [x] Update `src/Night.Engine/API.cs` (or a new `NativeMethods.cs` / `SDL3Integration.cs` file) to expose necessary SDL3 functions (e.g., `Init`, `Quit`, `GetVersion`) using the `SDL3-CS` bindings.
        - [x] Remove any direct P/Invoke declarations for SDL3 functions from `src/Night.SampleGame/Program.cs` or other files if they were using `Night.Platform.dll` or `SDL3.dll` directly for these.
        - [x] Update `src/Night.SampleGame/Program.cs` to call the SDL3 functions exposed by `Night.Engine` (which now use `SDL3-CS`).
    - **Verification:** `Night.Engine` and `Night.SampleGame` build successfully. `Night.SampleGame` can initialize and quit SDL, and retrieve version information using the `SDL3-CS` bindings via `Night.Engine`. No direct P/Invokes to `SDL3.dll` (for functions now covered by `Night.Engine`) remain in `Night.SampleGame`.

- **Task 1.6:** Remove `Night.Platform` (Status: In-Progress)
    - **Description:** Remove the `src/Night.Platform` directory and all references to it, as its functionality (primarily SDL3 building and basic interop) is now superseded by `lib/SDL3-CS` and pre-built SDL3 binaries.
    - **Sub-tasks:**
        - [ ] Delete the `src/Night.Platform` directory.
        - [ ] Update or remove ` .github/workflows/build-libs.yml` to eliminate `Night.Platform` build steps.
        - [ ] Remove any references to `Night.Platform` or its output libraries (e.g., `NightPlatform.dll`, `libNightPlatform.so`) from `.csproj` files, `Night.sln`, or other build/configuration files.
        - [ ] Verify that `Night.Engine` and `Night.SampleGame` still build and run correctly using `lib/SDL3-CS` for all SDL3 interactions.
    - **Verification:** The `src/Night.Platform` directory is gone. The project builds and runs without errors. The GitHub Actions workflow, if modified, completes successfully without trying to build `Night.Platform`.



================================================
File: docs/epics/archive/epic2.md
================================================
# Epic 2: Core Engine API - Foundations (Leveraging SDL3-CS)

[ ] **Task 2.1:** Define Core `Night` API Data Structures

- [ ] Create C# enums, structs, or classes for the data types exposed by the `Night` API (e.g., `Night.Color`, `Night.Rectangle`, `Night.Key`, `Night.WindowFlags`, a basic `Night.Sprite` class). These will be part of `Night.Engine`'s public interface.
- [ ] For each `Night` data structure, determine if it will directly wrap or map to/from corresponding C# structs/enums provided by SDL3-CS (e.g., SDL3-CS might provide `SDL_Rect`, `SDL_Color`, `SDL_Keycode`, etc.) or if it's a purely `Night`-level concept.

[ ] **Task 2.2:** Integrate and Verify SDL3-CS Bindings

- [ ] Add the SDL3-CS library to the `Night.Engine` project. This might involve:
    - Adding it as a NuGet package if it's published as one.
    - Including its source code or project as a submodule or directly in your solution if preferred/necessary.
- [ ] Review the specific SDL3-CS generated files (e.g., `SDL3.Core.cs` or `SDL3.Legacy.cs` based on your .NET target) to understand the available functions and data types.

[ ] **Task 2.3:** Stub out `Night` Public API Surface (`NightAPI.cs`, `Engine.cs`)

- [x] In `API.cs`, create the static classes `Night.Window`, `Night.Keyboard`, `Night.Mouse`, and `Night.Graphics`.
- [x] Add public method signatures (as stubs, initially throwing `NotImplementedException` or logging) for the API functions outlined in PRD Features 1, 2, and 3.
    - Example: `public static class Night.Window { public static void SetMode(int width, int height, WindowFlags flags) { throw new NotImplementedException(); /* Future: call SDL.SDL_CreateWindow via SDL3-CS */ } }`
- [x] In `Engine.cs`, create the `Night.Engine` class with a public `Run` method (stubbed).
- [x] Define placeholders for how the `Run` method will invoke the user's `Load()`, `Update()`, and `Draw()` methods.
- **Verification:** The stubbed public `Night` API is callable from `Night.SampleGame`. The structure aligns with the PRD. It's clear where SDL3-CS calls will be made in future implementation steps.



================================================
File: docs/epics/archive/epic3.md
================================================
**Epic 3: Window Management Implementation**

**Goal:** Fully implement the `Night.Window` module's public API (as stubbed in Epic 2) for creating, configuring, and managing the application window, using the SDL3-CS bindings.

- [x] **Task 3.1:** Implement `Night.Window.SetMode(int width, int height, WindowFlags flags)` (Status: Done)
    - [x] Use SDL3-CS functions to create an SDL window (e.g., `SDL.SDL_CreateWindow()`).
        - [x] Ensure the window is created with the specified `width` and `height`.
        - [x] Map the `Night.WindowFlags` (e.g., for fullscreen, resizable, borderless) to the corresponding SDL window flags or subsequent SDL function calls (e.g., `SDL.SDL_SetWindowFullscreen()`, `SDL.SDL_SetWindowResizable()`).
    - [x] If a default renderer is conceptually tied to the window in your design (common for 2D), create an SDL renderer (e.g., `SDL.SDL_CreateRenderer()`) associated with the window.
        - [x] Store the SDL window handle (and renderer handle, if applicable) internally within a private static part of `Night.Window`.
    - [x] Handle any necessary SDL initialization for video subsystems (`SDL.SDL_InitSubSystem(SDL.SDL_INIT_VIDEO)`) if not already handled globally.
    - [x] **Verification:** Calling `Night.Window.SetMode()` from `Night.SampleGame` successfully creates and displays a window with the specified dimensions and properties (e.g., fullscreen, resizable). No SDL errors are reported.

- [x] **Task 3.2:** Implement `Night.Window.SetTitle(string title)` (Status: Review)
    - [x] Use the appropriate SDL3-CS function to set the window's title (e.g., `SDL.SDL_SetWindowTitle()`), using the stored window handle.
    - **Verification:** Calling `Night.Window.SetTitle()` from `Night.SampleGame` changes the title displayed in the window's title bar.

- [x] **Task 3.3:** Implement `Night.Window.IsOpen()` (Status: Review)
    - [x] This method's primary role is to control the game loop. For now, its state will likely be tied to whether a `Quit` event has been received (which will be handled more fully in Epic 6: Game Loop).
    - [x] Create an internal static boolean flag (e.g., `_isWindowOpen` or `_isRunning`, default to `false` until `SetMode` is called, then `true`). `IsOpen()` will return this flag's value. The game loop (Epic 6) will set this to `false` on a quit event.
    - **Verification:** The `Night.Window.IsOpen()` method can be called and returns `true` after a window is created, and its state can be conceptually altered (though full quit logic is later).

- [x] **Task 3.4:** Implement Basic Error Handling for Window Operations (Status: Review)
    - [x] For all SDL3-CS function calls made within `Night.Window` methods, check their return values for errors (e.g., null pointers for window/renderer handles, negative values for error codes).
    - [x] If an SDL error occurs, retrieve the error message (e.g., using `SDL.SDL_GetError()`).
    - [x] Log errors using a simple mechanism for the prototype (e.g., `Console.WriteLine($"Error in {methodName}: {SDL.SDL_GetError()}");`).
    - [x] Decide on an error strategy for the prototype (e.g., throw an exception, return a boolean success/failure from `Night` API methods).
    - **Verification:** Invalid operations (e.g., setting title on a non-existent window if possible, or SDL internal errors) are caught and reported via console logs. The application behaves predictably (e.g., doesn't crash silently if window creation fails).

---

**Not Epic 4: Game Loop Implementation** (Status: In-Progress)

**Goal:** Implement the core game loop structure as defined in Feature 4 of the PRD, enabling the execution of a game using the `Night.Engine.Run` method.

- [x] **Task 4.1:** Implement `Night.Engine.Run<TGame>`
    - [x] Create an instance of `TGame`.
    - [x] Call `game.Load()`.
    - [x] Implement the main game loop (e.g., `while (Night.Window.IsOpen())`).
        - [x] Process system events (placeholder for now, full event handling in later tasks).
        - [x] Call `game.Update(deltaTime)` (deltaTime calculation to be basic for now).
        - [x] Call `game.Draw()`.
        - [x] Call `Night.Graphics.Present()` (assuming this will be available from Graphics module).
    - [x] Implement basic cleanup when the loop exits.
    - [x] Remove the `NotImplementedException`.
    - **Verification:** Calling `Night.Engine.Run&lt;SampleGame.Game&gt;()` from `Night.SampleGame` initializes the game, runs a basic loop, and calls `Load`, `Update`, `Draw` methods on the `SampleGame.Game` instance. Console output indicates these methods are being called.
- [x] **Task 4.2:** Resolve SDL3 native library loading for cross-platform execution (Status: In-Progress)
    - [x] Ensure `SDL3.dylib` (macOS), `SDL3.dll` (Windows), and `libSDL3.so.0` (Linux) are correctly located or copied to the output directory for `Night.SampleGame` during build.
    - [x] Verify that `mise run game` executes successfully on macOS.
    - [x] Document the solution for ensuring cross-platform native library availability.
    - **Verification:** The `DllNotFoundException` for SDL3 is resolved, and the game starts without this error on the primary development platform (macOS).



================================================
File: docs/epics/archive/epic4.md
================================================

**Epic 4: Input Handling Implementation**

**Goal:** Implement the `Night.Keyboard` and `Night.Mouse` modules for polling keyboard and mouse states, using the SDL3-CS bindings, to allow the game to respond to user input.

- [x] **Task 4.1:** Implement `Night.Keyboard.IsDown(KeyCode key)` (Status: Completed)
    - [x] Use SDL3-CS functions to get the current keyboard state (e.g., `SDL.SDL_GetKeyboardState(out int numkeys)` which returns a pointer to an array of key states).
    - [x] Define the `Night.KeyCode` enum if not already fully specified in Epic 2, ensuring it can be mapped to SDL's key representation (e.g., `SDL_Scancode` values). This mapping might involve looking up values in SDL3-CS's own enums (like `SDL_Scancode`).
    - [x] Implement the logic to check the state of the specified `Night.KeyCode` by looking up its corresponding SDL scancode in the state array returned by SDL.
    - **Verification:** Calling `Night.Keyboard.IsDown()` with various `Night.KeyCode` values correctly returns `true` when the respective keys are held down and `false` otherwise, as tested in `Night.SampleGame`.

- [x] **Task 4.2:** Implement `Night.Mouse.IsDown(MouseButton button)`
    - [x] Use SDL3-CS functions to get the current mouse button state (e.g., `SDL.SDL_GetMouseState(out float x, out float y)` which typically also returns the button mask).
    - [x] Define the `Night.MouseButton` enum (e.g., `Left`, `Middle`, `Right`, `X1`, `X2`) if not already fully specified in Epic 2.
    - [x] Map `Night.MouseButton` enum values to the SDL button masks (e.g., `SDL.SDL_BUTTON_LMASK`, `SDL.SDL_BUTTON_RMASK`).
    - [x] Implement the logic to check if the specified `Night.MouseButton` is currently pressed by checking the bitmask returned by the SDL mouse state function.
    - [x] **Verification:** Calling `Night.Mouse.IsDown()` with various `Night.MouseButton` values correctly returns `true` when the respective buttons are held down and `false` otherwise, as tested in `Night.SampleGame`.

- [x] **Task 4.3:** Implement `Night.Mouse.GetPosition()` (Status: Completed)
    - [x] Use an SDL3-CS function to get the current mouse cursor coordinates relative to the focused window (e.g., `SDL.SDL_GetMouseState(out float x, out float y)` usually provides coordinates relative to the current window, but verify this behavior with SDL3).
    - [x] Ensure the returned coordinates are cast or converted to `(int x, int y)` as per the `Night` API.
    - **Verification:** Calling `Night.Mouse.GetPosition()` returns the correct (x, y) integer coordinates of the mouse cursor within the game window boundaries.

- [x] **Task 4.4:** Define and Map `Night.KeyCode` and `Night.MouseButton` Enums (Status: Review)
    - [x] Research and define comprehensive `Night.KeyCode` and `Night.MouseButton` enums that align with common keyboard layouts and mouse buttons, and correspond to SDL3's `SDL_Scancode` and mouse button definitions provided by SDL3-CS.
    - [x] Create any necessary internal mapping functions or structures if a direct cast is not possible or if `Night` enums need to be more abstract than SDL's.
    - **Verification:** `Night.KeyCode` and `Night.MouseButton` enums are clearly defined and accurately map to the underlying SDL input system values.

- [x] **Task 4.5:** Basic Error Handling and State Management for Input (Status: Review)
    - [x] Ensure that input functions behave gracefully if called before SDL subsystems are fully initialized (e.g., return default/false values, log a warning). (Note: The main `Night.Framework.Run` should handle initialization order).
    - [x] Review SDL documentation for any specific error conditions or edge cases for the input functions being used.
    - **Verification:** Input functions do not cause crashes if queried at an inappropriate time (though this should be rare with a proper game loop) and provide default 'safe' return values.



================================================
File: docs/epics/archive/epic5.md
================================================
**Epic 5: 2D Graphics & Rendering Implementation**

**Goal:** Implement the core functionalities of the `Night.Graphics` module, enabling the loading of images as sprites and rendering them to the window. This includes screen clearing and handling the presentation of the rendered frame, all utilizing SDL3-CS bindings.

- [X] **Task 5.1:** Implement `Night.Graphics.NewImage(string filePath)` (Status: Review)
    - [X] Use SDL3-CS functions (specifically `SDL3.Image.LoadTexture()`) to load an image from a file path into an SDL Texture. This requires an active SDL Renderer.
    - [X] Refine the `Night.Sprite` class to store the SDL Texture handle, width, and height (queried using `SDL.GetTextureProperties()` and `SDL.GetNumberProperty()`).
    - [X] Implement error handling for file loading (file not found, texture load errors, property query errors, invalid dimensions) and log appropriately. Return `null` if loading fails.
    - **Verification:** Calling `Night.Graphics.NewImage()` with a path to a valid image file (e.g., a PNG) returns a `Night.Sprite` object. This object contains a non-null texture handle and correct width/height attributes. Attempting to load an invalid file results in a clear error message and no crash.

- [X] **Task 5.2:** Implement `Night.Graphics.Draw(Sprite sprite, float x, float y, float rotation = 0, float scaleX = 1, float scaleY = 1, float offsetX = 0, offsetY = 0)` (Status: Review)
    - [X] Use SDL3-CS functions to render the `SDL_Texture` associated with the `Night.Sprite` object (e.g., `SDL.SDL_RenderTexture()` or `SDL.SDL_RenderTextureRotated()`, or similar SDL3 equivalents that support rotation and scaling).
    - [X] Define the source rectangle (to draw the whole texture) and destination rectangle (`SDL_FRect` for float precision) based on the sprite's dimensions and the `x, y` parameters.
    - [X] Apply `rotation` (in degrees), `scaleX`, `scaleY`. The `offsetX` and `offsetY` parameters should define the origin point for these transformations (e.g., if (0,0), top-left; if (sprite.Width/2, sprite.Height/2), center).
    - [X] Ensure the correct SDL Renderer (obtained during window creation) is used for drawing.
    - **Verification:** Calling `Night.Graphics.Draw()` renders the specified `Night.Sprite` at the correct screen position, with the specified rotation and scale applied accurately. The origin of transformation (`offsetX`, `offsetY`) works as expected.

- [X] **Task 5.3:** Implement `Night.Graphics.Clear(Color color)` (Status: Review)
    - [X] Map the `Night.Color` struct (R, G, B, A byte values) to the format required by SDL.
    - [X] Use SDL3-CS functions to set the renderer's current drawing color (e.g., `SDL.SDL_SetRenderDrawColor()`).
    - [X] Use SDL3-CS functions to clear the entire rendering target with the set color (e.g., `SDL.SDL_RenderClear()`).
    - **Verification:** Calling `Night.Graphics.Clear()` fills the game window with the specified `Night.Color`.

- [X] **Task 5.4:** Implement `Night.Graphics.Present()` (Actual call in Game Loop) (Status: Review)
    - [X] The `Night.Graphics.Present()` method now calls `SDL.RenderPresent()` using the active renderer. This is called by `Night.Framework.Run()` after all `Draw()` calls for a frame.
    - [X] Error handling for `SDL.RenderPresent()` has been added.
    - **Verification:** The method `Night.Graphics.Present()` exists, calls `SDL.RenderPresent()`, and graphics drawn in the `Draw()` phase are now visible on screen.

- [X] **Task 5.5:** Renderer Initialization and Management (Status: Review)
    - [X] Confirm that the SDL Renderer instance is properly created (typically alongside the SDL Window in Epic 3, e.g., via `SDL.SDL_CreateRenderer()`) and stored internally where `Night.Graphics` methods can access it.
        - *Implementation Notes: Renderer is created in `Night.Window.SetMode()` using `SDL.CreateRenderer(window, null)`, requesting a hardware-accelerated renderer. It's stored in `Night.Window` and accessed by `Night.Graphics` via `Window.RendererPtr`.*
    - [X] Ensure renderer flags are appropriately set during creation (e.g., for hardware acceleration, vsync if desired by default for the prototype).
        - *Implementation Notes: Hardware acceleration is implicitly requested. VSync was not set via `CreateRenderer` flags due to SDL3-CS overload; SDL3 typically defaults to VSync with accelerated renderers or it can be set via `SDL.SetRenderVSync()` post-creation if needed.*
    - [X] Implement logic for destroying the SDL Renderer when the window is closed or the application quits (e.g., `SDL.SDL_DestroyRenderer()`).
        - *Implementation Notes: `Night.Window.Shutdown()` method added to destroy renderer, window, and quit video subsystem. This is called from `Night.Framework.Run()` on exit.*
    - **Verification:** Graphics operations use a valid, initialized SDL Renderer. The renderer is cleanly destroyed on application exit.

- [ ] **Task 5.6:** Basic Error Handling for Graphics Operations
    - [ ] For all relevant SDL3-CS graphics function calls, check return values for errors.
    - [ ] Retrieve and log specific SDL error messages (e.g., using `SDL.SDL_GetError()`) via `Console.WriteLine` or a similar simple logging mechanism for the prototype.
    - **Verification:** Errors during graphics operations (e.g., texture loading failure, issues during rendering calls) are reported with meaningful messages. The application does not crash silently due to graphics errors.



================================================
File: docs/epics/archive/epic6.md
================================================
**Epic 6: Game Loop Implementation** `Status: In-Progress`

**Goal:** Implement the `Night.Engine` class to manage the main game loop. This includes initializing and shutting down SDL, polling for events (especially quit events), calling the user-defined `Load`, `Update`, and `Draw` methods in the correct sequence, managing frame timing (delta time), and handling screen presentation.

- [x] **Task 6.1:** Implement Core `Night.Engine.Run(IGame gameLogic)` Structure `Status: Review`

  - [x] Define an interface (e.g., `Night.IGame`) that user game classes will implement, specifying methods like `Load()`, `Update(double deltaTime)`, `Draw()`, and optional input event handlers like `KeyPressed(KeyCode key, bool isRepeat)` etc., if this event-based approach is chosen for Feature 4. (Verified: Exists in `Types.cs`)
  - [x] Implement the main `Night.Engine.Run(IGame gameLogic)` method. (Verified: Implemented in `FrameworkLoop.cs`)
  - [x] **Initialization:**
    - [x] Inside `Run`, before the loop, call `SDL.SDL_Init(SDL.SDL_INIT_VIDEO | ...other_subsystems_if_needed...)` using SDL3-CS. Log errors if initialization fails. (Verified: `SDL.Init(SDL.InitFlags.Video | SDL.InitFlags.Events)` in `FrameworkLoop.cs`)
    - [x] Call the provided `gameLogic.Load()` method once after successful SDL initialization. (Verified: Implemented in `FrameworkLoop.cs`)
  - [x] **Main Loop:**
    - [x] Implement the primary game loop (e.g., `while (Night.Window.IsOpen()) { ... }`). The `Night.Window.IsOpen()` flag (from Epic 3) will be controlled by quit events. (Verified: Implemented in `FrameworkLoop.cs`)
  - [x] **Shutdown:**
    - [x] After the loop terminates, call appropriate SDL cleanup functions (e.g., destroy window, destroy renderer if not handled elsewhere, `SDL.SDL_QuitSubSystem(...)`, `SDL.SDL_Quit()`). (Verified: `Window.Shutdown()` and `SDL.Quit()` in `FrameworkLoop.cs`)
  - **Verification:** Calling `Night.Engine.Run()` with a simple `IGame` implementation initializes SDL, calls `Load()`, enters a loop, and then quits SDL. The `Night.SampleGame` can be launched using this. (Verified: `SampleGame/Program.cs` updated)

- [x] **Task 6.2:** Implement Event Polling within the Game Loop `Status: Review`
  - [x] Inside the main loop, use SDL3-CS functions to poll for SDL events (e.g., `while (SDL.SDL_PollEvent(out SDL_Event ev) != 0) { ... }`). (Verified: Implemented in `FrameworkLoop.cs`)
  - [x] Handle `SDL_EVENT_QUIT`: If this event is received, set the internal flag that `Night.Window.IsOpen()` checks to `false` to terminate the game loop. (Verified: Implemented in `FrameworkLoop.cs` via `Window.Close()`)
  - [x] **Task 6.2.1:** Implement `IGame.KeyPressed` callback `Status: Review`
    - [x] Add `KeyPressed(Night.KeySymbol key, Night.KeyCode scancode, bool isRepeat)` method to the `Night.IGame` interface. (Verified: Implemented in `Types.cs` with new `KeySymbol` enum)
    - [x] In `FrameworkLoop.cs`, when an `SDL.EventType.KeyDown` event occurs, call `game.KeyPressed` with mapped parameters. (Verified: Implemented in `FrameworkLoop.cs` using `KeySymbol`)
    - [x] Implement `KeyPressed` in `SampleGame` to demonstrate functionality (e.g., log key presses or quit on Escape). (Verified: Implemented in `SampleGame/Program.cs` using `KeySymbol`)
    - **Verification:** Pressing keys in the `SampleGame` triggers the `KeyPressed` callback with correct parameters (correct `KeySymbol` and `KeyCode`), and the sample implementation (e.g., logging or quitting) works as expected.
  - (Optional for initial prototype, can be basic) If pursuing event-based input handlers from Feature 4:
    - [x] Based on `ev.type`, dispatch to relevant `gameLogic` methods (e.g., `gameLogic.KeyPressed(ev.key.keysym.sym, ...)`). This requires mapping SDL event data to `Night` API parameters. (Addressed by Task 6.2.1 with `KeySymbol`)
  - **Verification:** The game loop correctly polls for events. The application closes cleanly when the window's close button is clicked (which generates an `SDL_EVENT_QUIT`). If basic event handlers are implemented, they are triggered. The `KeyPressed` callback is now a basic event handler with corrected key symbol reporting.

- [x] **Task 6.3:** Implement Delta Time Calculation and Pass to `Update` `Status: Review`
  - [x] Before the main loop, get initial timing values using SDL3-CS timing functions (e.g., `SDL.SDL_GetPerformanceCounter()` and `SDL.SDL_GetPerformanceFrequency()` for high-resolution timing, or `SDL.SDL_GetTicks()` for millisecond-based timing).
  - [x] At the beginning of each loop iteration (or end), calculate the time elapsed since the last frame (`deltaTime`) in seconds (e.g., as a `double` or `float`).
  - [x] Call `gameLogic.Update(deltaTime)` method, passing the calculated delta time.
  - **Verification:** The `gameLogic.Update()` method is called each frame and receives a `deltaTime` value that reasonably reflects the actual time elapsed per frame. Frame rate can be roughly monitored (e.g., by logging FPS) for stability.

- [x] **Task 6.4:** Integrate `gameLogic.Draw()` and Screen Presentation `Status: Review`
  - [ ] Inside the main loop, after `gameLogic.Update(deltaTime)`, call `gameLogic.Draw()`.
  - [ ] Immediately after `gameLogic.Draw()` completes, call the SDL function to present the renderer's back buffer to the window (e.g., `SDL.SDL_RenderPresent(rendererHandle)` using the renderer handle established in Epic 3/5).
  - **Verification:** The `gameLogic.Draw()` method is called each frame. Graphics drawn within this method (using `Night.Graphics` calls) are visible on the screen and update frame by frame.

- [x] **Task 6.5:** Basic Game Loop Error Handling and Robustness `Status: Review`
  - [x] Wrap calls to user-provided `gameLogic` methods (`Load`, `Update`, `Draw`, event handlers) in `try-catch` blocks. (Verified: `Load` covered by main try-catch; `Update`, `Draw`, `KeyPressed` have specific try-catch blocks in `FrameworkLoop.cs`)
  - [x] If an exception occurs in user code, log the exception (e.g., `Console.WriteLine`) and decide on a strategy: (Verified: Exceptions are logged, and `Window.Close()` is called to terminate loop gracefully for `Update`, `Draw`, `KeyPressed`. `Load` exceptions also lead to cleanup.)
    - For prototype: an unhandled exception in user code might gracefully terminate the engine loop and ensure SDL is shut down. (Verified)
  - [x] Ensure SDL initialization and shutdown are robust (e.g., `SDL_Quit` is always called even if `Load` throws an error). (Verified: Handled by the main `try-finally` block in `FrameworkLoop.cs`)
  - **Verification:** Unhandled exceptions within the `gameLogic` methods are caught by the `Night.Engine`, an error is logged, and the engine attempts to shut down SDL and exit cleanly rather than crashing without context.



================================================
File: docs/epics/archive/epic7-design.md
================================================
# Epic 7: Night.SampleGame - Platformer Design

This document outlines the design for the simple platformer game to be built using the Night Engine, as part of Epic 7.

## 1. Player Character

- **Appearance:** A solid **blue** colored rectangle.
- **Size:**
  - Width: 32 pixels
  - Height: 64 pixels
- **Initial Position:** Centered horizontally, resting on the first platform.

## 2. Player Actions

Player actions are controlled via keyboard input.

- **Move Left:**
  - **Input:** `Night.KeyCode.Left` (Left Arrow Key)
  - **Action:** Player character moves horizontally to the left at a defined speed.
- **Move Right:**
  - **Input:** `Night.KeyCode.Right` (Right Arrow Key)
  - **Action:** Player character moves horizontally to the right at a defined speed.
- **Jump:**
  - **Input:** `Night.KeyCode.Space` (Spacebar)
  - **Action:** Player character gains an initial upward vertical velocity. Gravity will then affect the player, bringing them back down. The player can only jump if they are currently on a platform (grounded).

## 3. Level Elements

The level will consist of static platforms.

- **Platforms:**
  - **Appearance:** Solid **green** colored rectangles.
  - **Properties:** Each platform will be defined by its position (X, Y coordinates of the top-left corner) and size (width, height).
  - **Arrangement (Example for initial prototype):**
    - Platform 1 (Ground):
      - Position: (X: 50, Y: 500)
      - Size: (Width: 700, Height: 50)
    - Platform 2:
      - Position: (X: 200, Y: 400)
      - Size: (Width: 150, Height: 30)
    - Platform 3:
      - Position: (X: 450, Y: 300)
      - Size: (Width: 100, Height: 30)
    - Platform 4 (Goal Platform):
      - Position: (X: 600, Y: 200)
      - Size: (Width: 100, Height: 30)
      - **Special:** Reaching this platform signifies the objective.

## 4. Game Objective / Success State

- **Objective:** The player must navigate their character from the starting platform to **Platform 4 (Goal Platform)**.
- **Success State:** The game successfully demonstrates stable player movement (left, right, jump), collision with platforms (landing, not passing through), and the ability to reach the designated goal platform. For the prototype, simply reaching the platform is sufficient; no complex "win" screen is required.

## 5. Implementation Checklist (for Tasks 7.2+)

This section can be used to track progress for subsequent implementation tasks.

### Task 7.2: Implement Player Character

- [ ] Create `Player` class in `Night.SampleGame`.
- [ ] `Player.Load()`:
  - [ ] Initialize player position (e.g., centered on Platform 1).
  - [ ] Initialize player size (32x64).
  - [ ] Initialize movement properties (speed, jump height, gravity value).
  - [ ] (No sprite loading needed, will draw a rectangle).
- [ ] `Player.Update(double deltaTime)`:
  - [ ] Handle horizontal movement input (`Night.Keyboard.IsDown(Night.KeyCode.Left)` / `Right`).
  - [ ] Implement jump logic (`Night.Keyboard.IsDown(Night.KeyCode.Space)`), apply upward velocity (only if grounded).
  - [ ] Apply gravity to vertical velocity.
  - [ ] Update player position based on velocity and `deltaTime`.
- [ ] `Player.Draw()`:
  - [ ] Render the player as a blue rectangle at its current position. (Requires a way to draw filled rectangles with `Night.Graphics`. If not directly available, a 1x1 white pixel sprite could be loaded and scaled/colored, or this highlights a need for basic primitive drawing).
        *Self-correction: PRD Feature 3 for `Night.Graphics` focuses on "loading images and drawing them as sprites". It does not explicitly mention drawing geometric primitives like rectangles. For the prototype, if `Night.Graphics.DrawRectangle(x, y, w, h, color)` is not available, the player (and platforms) might need to be represented by simple 1x1 pixel sprites that are then scaled and tinted, or use a pre-made colored square image if tinting is not yet supported. The design assumes a simple way to draw a colored rectangle will be feasible, potentially by creating a small colored texture in memory if direct drawing isn't an option.*

### Task 7.3: Implement Basic Level (Platforms)

- [ ] Define platform data (e.g., array/list of `Night.Rectangle` or custom struct for position, size, color).
  - [ ] Platform 1: (X: 50, Y: 500), Size: (700x50), Color: Green
  - [ ] Platform 2: (X: 200, Y: 400), Size: (150x30), Color: Green
  - [ ] Platform 3: (X: 450, Y: 300), Size: (100x30), Color: Green
  - [ ] Platform 4: (X: 600, Y: 200), Size: (100x30), Color: Green (Goal)
- [ ] `Game.Load()` or `Level.Load()`: Initialize platform objects/data.
- [ ] `Game.Update()` or `Player.Update()`:
  - [ ] Implement AABB collision detection between player and platforms.
  - [ ] Resolve collisions:
    - [ ] Prevent player from falling through platforms (stop downward movement).
    - [ ] Prevent player from moving horizontally into platforms.
- [ ] `Game.Draw()` or `Level.Draw()`:
  - [ ] Render platforms as green rectangles. (Same rendering consideration as the player character).

### Task 7.4: Implement Main Game Logic in `Game.cs`

- [ ] Ensure `Night.SampleGame.Game` class implements `Night.IGame`.
- [ ] `Game.Load()`:
  - [ ] Initialize/Load player object.
  - [ ] Initialize/Load platform data/level objects.
  - [ ] Set window title to "Night Platformer Sample".
  - [ ] Set window size (e.g., 800x600).
- [ ] `Game.Update(double deltaTime)`:
  - [ ] Call `Player.Update(deltaTime)`.
  - [ ] (Optional: Check if player reached Platform 4 - simple log message for now).
- [ ] `Game.Draw()`:
  - [ ] `Night.Graphics.Clear(backgroundColor)` (e.g., light gray or sky blue).
  - [ ] Call draw methods for platforms.
  - [ ] Call draw method for the player.
- [ ] **Verification:** `Night.SampleGame` runs via `Night.Engine.Run(new Game())`. All elements are present and interactive.



================================================
File: docs/epics/archive/epic7.md
================================================

**Status: In-Progress**

**Epic 7: Sample Game & Integration Testing**

**Goal:** Develop a simple platformer game using the "Night Engine." This sample game will serve as a comprehensive integration test, verifying that all core engine features (Window, Input, Graphics, Game Loop) function correctly and cohesively as defined in the PRD.

- [X] **Task 7.1:** Design Basic Platformer Game Mechanics for `Night.SampleGame`
  - [x] Define the player character: appearance (e.g., a simple colored rectangle or a basic sprite), size.
  - [x] Define player actions: move left, move right, jump.
  - [x] Define basic level elements: static platforms (rectangles) for the player to stand on and jump between.
  - [x] Define a simple objective or success state for the prototype (e.g., navigate to a specific point, or simply demonstrate stable movement and interaction).
  - **Verification:** A minimal design document or sketch outlining the platformer's mechanics, player abilities, and level structure is created.

**Status: Review**

- [X] **Task 7.2:** Implement Player Character in `Night.SampleGame`
  - [X] Create a `Player` class within the `Night.SampleGame` project. (`src/Night.SampleGame/Player.cs`)
  - [X] **Loading:** In a `Player.Load()` method (or equivalent called from `Game.Load()`), if using a sprite, load it using `Night.Graphics.NewImage()`. Initialize player position, size, and movement properties (e.g., speed, jump height, gravity). (Assumes `assets/images/player_sprite_blue_32x64.png` exists)
  - [X] **Updating:** In a `Player.Update(double deltaTime)` method:
    - [X] Handle horizontal movement input using `Night.Keyboard.IsDown(Night.KeyCode.Left)` and `Night.Keyboard.IsDown(Night.KeyCode.Right)`.
    - [X] Implement jump logic (e.g., on `Night.Keyboard.IsDown(Night.KeyCode.Space)`), applying an upward velocity.
    - [X] Apply basic gravity to the player's vertical velocity.
    - [X] Update player position based on velocity and `deltaTime`. (Includes temporary floor collision)
  - [X] **Drawing:** In a `Player.Draw()` method, render the player (rectangle or sprite) at its current position using `Night.Graphics.Draw()`.
  - **Verification:** The player character is displayed on the screen. It responds to left/right arrow key presses by moving horizontally. Pressing the jump key makes the player move upwards and then fall due to gravity. (Requires `assets/images/player_sprite_blue_32x64.png` to be visible).
**Status: Review**
- [X] **Task 7.3:** Implement Basic Level (Platforms) in `Night.SampleGame`
  - [X] Define platform data (e.g., an array or list of `Night.Rectangle` structs for position and size).
  - [X] In `Game.Load()` or a `Level.Load()` method, initialize these platforms.
  - [X] In `Game.Update()` or `Player.Update()`, implement simple Axis-Aligned Bounding Box (AABB) collision detection between the player and the platforms.
    - [X] Resolve collisions by preventing the player from passing through platforms (e.g., stop downward movement when landing on top of a platform, block horizontal movement into the side of a platform).
    - [X] Stabilize player on platforms to prevent jittering.
  - [X] In `Game.Draw()` or a `Level.Draw()` method, render the platforms (e.g., as filled rectangles using a conceptual `Night.Graphics.DrawRectangle()` if added, or by drawing placeholder sprites for each). _Self-correction: The PRD doesn't specify `DrawRectangle`. For the prototype, platforms can be represented by loaded sprites or this might highlight a small graphics primitive need for the sample._
  - **Verification:** Platforms are rendered on the screen. The player character can land on top of platforms and is appropriately stopped by them without jitter. The player does not fall through platforms.

- [X] **Task 7.4:** Implement Main Game Logic in `Program.cs` (integrating `IGame`)
  - [X] Ensure `Night.SampleGame.Game` class properly implements the `Night.IGame` interface (from Epic 6). (Implemented within `Program.cs`)
  - [X] **`Game.Load()`:** Initialize the player object, platform data/level objects, and load any other necessary assets. (Includes window setup, player load, platform data, and platform sprite loading)
  - [X] **`Game.Update(double deltaTime)`:** Call the `Player.Update(deltaTime)` method. Update any other game state logic (e.g., checking simple win/lose conditions if designed). (Includes win condition check for reaching goal platform)
  - [X] **`Game.Draw()`:**
    - [X] Call `Night.Graphics.Clear(backgroundColor)` at the beginning.
    - [X] Call draw methods for platforms and the player, ensuring correct layering if relevant.
  - **Verification:** The `Night.SampleGame` runs via `Night.Framework.Run(new Game())`. All game elements (player, platforms) are initialized, updated, and drawn correctly each frame, demonstrating the integrated use of `Night.Window`, `Night.Input`, `Night.Graphics`, and the `Night.Engine` game loop. _Note: `Program.cs` uses `Night.Framework.Run` which aligns with PRD; epic mentions `Night.Engine.Run`._

**Status: Review**

**Log for Task 7.4 (2025-05-27):**
- Confirmed `Game` class (within `Program.cs`) implements `IGame`.
- `Game.Load()` now initializes player, platforms (including goal platform), loads platform sprite, and sets up window title/size.
- `Game.Update()` calls `player.Update()` and includes a win condition check (console message on reaching goal platform).
- `Game.Draw()` clears screen, draws platforms (using scaled sprite), and draws player.
- `Game.KeyPressed()` handles Escape key for closing.
- The `Game` class remains within `Program.cs` as per user clarification.

- [ ] **Task 7.5:** End-to-End Feature Verification & Bug Fixing
  - [ ] Play through the `Night.SampleGame` platformer, systematically testing all implemented `Night` engine features:
    - Window creation and title (`Night.Window`).
    - Keyboard input for player control (`Night.Keyboard`).
    - Mouse input for position checking, if used for any debug (`Night.Mouse`).
    - Sprite loading and rendering for player/platforms (`Night.Graphics`).
    - Screen clearing (`Night.Graphics`).
    - Game loop operation, delta time, and event handling (`Night.Engine`).
  - [ ] Compare observed behavior against the feature descriptions in the PRD.
  - [ ] Document any bugs, unexpected behaviors, or deviations from the PRD.
  - [ ] Iterate on bug fixes within the `Night.Engine` or `Night.SampleGame` code until the prototype functions as intended for the defined features.
  - **Verification:** The sample platformer game is playable and all core `Night` engine features (PRD Features 1-4) are demonstrably working as expected. Any significant bugs identified during testing have been addressed.



================================================
File: docs/epics/archive/epic8.md
================================================
**Epic 8: Migrate SDL C# Bindings to SDL3# NuGet Package**

**Goal:** Successfully integrate the `edwardgushchin/SDL3-CS` (SDL3#) NuGet package into `Night.Engine` to replace the previously removed SDL3 bindings. This includes updating all engine code that interacts with SDL3, revising the native library management strategy, and ensuring the `Night.SampleGame` is fully functional with the new bindings.

- [x] **Task 8.1:** Research and Plan SDL3# Integration Strategy
  **Status: Completed**
    - [x] Thoroughly review the API of the `edwardgushchin/SDL3-CS` (SDL3#) NuGet package. Compare its namespaces (e.g., `SDL3`), static class names (e.g., `SDL`), enums (e.g., for InitFlags, EventType, KeyCode/Scancode, WindowFlags, MouseButton), structs (e.g., `SDL_Event` or its equivalent), and function signatures/return types with what was previously used or expected.
    - [x] Document key differences that will impact existing `Night.Engine` code in files like `FrameworkLoop.cs`, `Modules/Window.cs`, `Modules/Keyboard.cs`, `Modules/Mouse.cs`, `Modules/Graphics.cs`, `Modules/SDL.cs`, and `Types.cs`.
    - [x] **Decision Point:** Determine the strategy for managing native SDL3 libraries with SDL3#:
        - **Option A (Recommended):** Utilize the `SDL3-CS.Native` NuGet package alongside `SDL3-CS`. This would likely replace the current `scripts/update_sdl3.py` and `lib/SDL3-Prebuilt/` system for managing native binaries.
        - **Option B:** Continue managing native binaries manually (e.g., keep `scripts/update_sdl3.py` and `lib/SDL3-Prebuilt/`) if the `SDL3-CS.Native` package is unsuitable or if the existing pre-built binaries from `nightconcept/build-sdl3` (mentioned in `scripts/update_sdl3.py` ) are preferred or customized.
### Migration Plan & API Research (Task 8.1)

**Problem Description:**
The `Night.Engine` currently lacks SDL3 bindings after the removal of the previous `flibitijibibo-sdl3-cs` submodule. The task is to integrate the `edwardgushchin/SDL3-CS` (SDL3#) NuGet package, update all engine code, and decide on a native library management strategy.

**Solution Overview:**
The `edwardgushchin/SDL3-CS` (SDL3#) library, built locally from the submodule in `lib/SDL3-CS`, will be adopted as the new C# binding for SDL3. Native SDL3 libraries will be managed manually (Option B), likely by ensuring `scripts/update_sdl3.py` provides compatible .NET 9 binaries or by updating that script and `lib/SDL3-Prebuilt/`. Engine code will be updated to use the new SDL3# API, focusing on changes in namespaces, static class access, function signatures (especially return types like `bool` for `SDL.Init`), and enum/struct mappings.

**Implementation Steps (Derived from Task 8.1 research):**

1.  **Native Library Management Strategy:**
    *   **Decision:** Adopt **Option B (Modified)**. The `SDL3-CS` C# bindings will be built locally from the submodule (`lib/SDL3-CS`) and referenced as a DLL. Native SDL3 binaries (e.g., `SDL3.dll`, `libSDL3.so`) will be managed manually, likely by updating/using `scripts/update_sdl3.py` and the `lib/SDL3-Prebuilt/` directory to ensure .NET 9 compatible binaries are available. The `SDL3-CS.Native` NuGet package will **not** be used.
    *   **Rationale:** Per user feedback, to use locally built .NET 9 DLLs. This requires manual management of both the C# binding DLL and the underlying native SDL3 binaries.

2.  **Key API Differences and Impact on `Night.Engine`:**

    *   **General:**
        *   **Namespace:** Old bindings might have used a different namespace or none for static P/Invoke style. SDL3# uses the `SDL3` namespace. All relevant files will need `using SDL3;`.
        *   **Static Class:** SDL functions are called via the static `SDL` class (e.g., `SDL.Init()`, `SDL.GetError()`). Previous direct P/Invokes or wrapper classes will need to be updated.
        *   **Return Types:**
            *   `SDL.Init()` now returns `bool` directly, instead of an `int` that `Night.SDL.Init` previously converted from `SDLBool`. [`src/Night.Engine/Modules/SDL.cs`](src/Night.Engine/Modules/SDL.cs:1) will need significant changes here.
            *   Many other functions likely return `bool` for success/failure instead of integer codes. This needs to be checked for each function call being replaced.
        *   **Error Handling:** `SDL.GetError()` remains the standard way to get error messages.

    *   **`FrameworkLoop.cs`:**
        *   Event polling loop: `while (SDL.PollEvent(out var e))` is the new pattern. The `SDL.Event` struct (`e`) is a C# union-like struct.
        *   Event type checking: `(SDL.EventType)e.Type == SDL.EventType.Quit`.

    *   **`Modules/Window.cs`:**
        *   Window creation: Functions like `SDL.CreateWindow()` or `SDL.CreateWindowAndRenderer()` will be used. Parameter types and order, and especially `WindowFlags`, need to be mapped.
        *   `SDL.WindowFlags` (e.g., `SDL.WindowFlags.Fullscreen`, `SDL.WindowFlags.Resizable`) will replace any previous window flag enums. `Night.WindowFlags` in [`src/Night.Engine/Types.cs`](src/Night.Engine/Types.cs:1) will need to be updated or removed if directly using `SDL.WindowFlags`.

    *   **`Modules/Keyboard.cs`:**
        *   Event handling: `SDL.KeyboardEvent` (from `SDL.Event.Key`) will provide key press/release info.
        *   Key codes:
            *   `SDL.Scancode` enum (physical keys, e.g., `SDL.Scancode.A`). This is the likely equivalent if `Night.KeyCode` was based on scancodes.
            *   `SDL.Keycode` enum (virtual keys, layout-dependent, e.g., `SDL.Keycode.A`).
            *   The existing `Night.KeyCode` in [`src/Night.Engine/Types.cs`](src/Night.Engine/Types.cs:1) (which maps to `SDL_Scancode` values) needs to be carefully compared and mapped to `SDL.Scancode`.
        *   Modifier keys: `SDL.Keymod` enum will be used for checking Ctrl, Shift, Alt states, likely part of `SDL.KeyboardEvent`.

    *   **`Modules/Mouse.cs`:**
        *   Event handling: `SDL.MouseButtonEvent` (from `SDL.Event.Button`) for clicks, `SDL.MouseMotionEvent` (from `SDL.Event.Motion`) for movement, `SDL.MouseWheelEvent` (from `SDL.Event.Wheel`) for scroll.
        *   Mouse button identification:
            *   `SDL.MouseButtonEvent.button` will contain raw indices (1 for Left, 2 for Middle, etc., from `SDL.ButtonLeft`, `SDL.ButtonMiddle` constants).
            *   `SDL.GetMouseState()` will return a bitmask of `SDL.MouseButtonFlags` (e.g., `SDL.MouseButtonFlags.Left`).
            *   `Night.MouseButton` in [`src/Night.Engine/Types.cs`](src/Night.Engine/Types.cs:1) will need to be mapped.
        *   Mouse position: Likely available in `SDL.MouseMotionEvent` and via functions like `SDL.GetMouseState()`.

    *   **`Modules/Graphics.cs`:**
        *   Renderer and Window handles: Obtained from `SDL.CreateWindowAndRenderer()` or similar.
        *   Drawing functions: `SDL.RenderClear()`, `SDL.RenderPresent()`, `SDL.SetRenderDrawColor()`, etc., will be used. Signatures need checking.

    *   **`Modules/SDL.cs`:**
        *   This file, which currently wraps/passes through calls, will need substantial updates.
        *   `Init` method needs a complete rewrite due to the `bool` return type.
        *   Other wrapped SDL functions will need to be updated to call `SDL.Function()` from the new bindings.

    *   **`Types.cs`:**
        *   `Night.KeyCode`: Verify and map to `SDL.Scancode` (as per epic note) or `SDL.Keycode` if the intent was virtual keys.
        *   `Night.WindowFlags`: Update to map to/utilize `SDL.WindowFlags` or be replaced by it.
        *   `Night.MouseButton`: Update to map to raw button indices (1,2,3...) or `SDL.MouseButtonFlags` depending on usage context.
        *   Any other SDL-dependent types (e.g., event structs if they were previously exposed differently) will need review.

3.  **Detailed Checklist of Code Sections for Modification (Initial List):**
    *   **Project Files:**
        *   `src/Night.Engine/Night.Engine.csproj`: Remove old binding reference (if any remains). Add a `<ProjectReference>` to the local `SDL3-CS.csproj` (e.g., `../../lib/SDL3-CS/SDL3-CS/SDL3-CS.csproj`). Ensure the `SDL3-CS` submodule is built (e.g., via `dotnet build -c Release` in `lib/SDL3-CS`).
        *   `src/Night.SampleGame/Night.SampleGame.csproj`: Retain or update native library copy steps from `lib/SDL3-Prebuilt/` to ensure the correct native SDL3 binaries are copied to the output directory.
    *   **`src/Night.Engine/FrameworkLoop.cs`:**
        *   Event polling loop (`SDL.PollEvent`, `SDL.Event`, `SDL.EventType`).
        *   Quit event handling.
    *   **`src/Night.Engine/Modules/SDL.cs`:**
        *   `Init()` method.
        *   `Quit()` method.
        *   `GetError()` wrapping.
        *   All other SDL function wrappers.
    *   **`src/Night.Engine/Modules/Window.cs`:**
        *   Window creation functions (e.g., `CreateWindow`).
        *   Window property functions (title, size, position, flags).
        *   Usage of `WindowFlags`.
    *   **`src/Night.Engine/Modules/Keyboard.cs`:**
        *   Key press/release detection.
        *   Mapping/usage of `Night.KeyCode` with `SDL.Scancode` / `SDL.Keycode`.
        *   Modifier key state.
    *   **`src/Night.Engine/Modules/Mouse.cs`:**
        *   Mouse button press/release detection.
        *   Mapping/usage of `Night.MouseButton`.
        *   Mouse motion/position retrieval.
        *   Mouse wheel event handling.
    *   **`src/Night.Engine/Modules/Graphics.cs`:** (Primarily SDL function call updates)
        *   `Clear`
        *   `Present`
        *   `SetDrawColor`
        *   Any other rendering calls.
    *   **`src/Night.Engine/Types.cs`:**
        *   `Night.KeyCode` enum definition and mapping.
        *   `Night.WindowFlags` enum definition and mapping.
        *   `Night.MouseButton` enum definition and mapping.
        *   Any other internal structs/enums that wrap or mirror SDL types.
    *   **All files using SDL functionality:**
        *   Update `using` statements to `using SDL3;`.
        *   Change direct P/Invokes or old wrapper calls to `SDL.FunctionName()`.
        *   Adapt to new struct/enum names and function signatures.

**Risks/Challenges:**
*   **API Completeness:** Ensuring SDL3# provides all necessary functions that were used from the previous bindings. The "Readiness" table in SDL3# README is promising.
*   **Subtle Behavioral Changes:** Differences in how SDL3 itself or the new bindings handle certain edge cases or return values compared to the old setup.
*   **Enum/Struct Mapping:** Correctly mapping existing `Night.*` enums/structs to their new SDL3# counterparts (e.g., `KeyCode` to `Scancode` vs. `Keycode`, `MouseButton` values). This requires careful attention to the previous intent.
*   **Build/Runtime Issues with Native Libraries:** Manual management of native SDL3 binaries requires ensuring the correct versions (compatible with .NET 9 and the locally built SDL3-CS) are obtained (e.g., via `scripts/update_sdl3.py`) and correctly placed/copied for both `Night.Engine` and `Night.SampleGame` to run. This includes potential cross-platform considerations if testing on multiple OS.
*   **SDL3-CS Submodule Build:** The `lib/SDL3-CS` submodule must be successfully built before `Night.Engine` can reference its output.
- - [x] Create a detailed checklist of specific code sections in `Night.Engine` that will require modification.
    - [x] **Verification:** A clear migration plan is documented, including the chosen native library strategy (Option A or B) and a comprehensive list of anticipated code changes and potential challenges.
- [x] **Task 8.2:** Branch for Migration (If not already on a dedicated branch)
    
    - [x] Ensure work is being done on a new feature branch in Git (e.g., `dev`).
    - [x] Confirm the current project state (with old bindings removed) is committed.
    - **Verification:** Work is being done on a dedicated Git branch.
[x] **Task 8.3:** Integrate Locally Built `SDL3-CS` (SDL3#) Library
    **Status: Completed**

- [x] Confirm that any `<ProjectReference>` to the old `flibitijibibo-sdl3-cs` submodule has been removed from `src/Night.Engine/Night.Engine.csproj`.
- [x] Ensure the `lib/SDL3-CS` submodule is updated and buildable (e.g., `git submodule update --init --recursive`, then `dotnet build -c Release` within `lib/SDL3-CS`).
- [x] Add a `<ProjectReference>` to the local `SDL3-CS.csproj` (e.g., `../../lib/SDL3-CS/SDL3-CS/SDL3-CS.csproj`) in `src/Night.Engine/Night.Engine.csproj`.
- [x] Verify that native SDL3 binaries (e.g., `SDL3.dll` for Windows) are correctly managed (e.g., via `scripts/update_sdl3.py` and `lib/SDL3-Prebuilt/`) and accessible by `Night.Engine` and `Night.SampleGame`. (User to ensure native binaries are in place and copied to output).
- - **Verification:** `Night.Engine` and `Night.SampleGame` projects restore and build successfully, referencing the locally built `SDL3-CS.dll`. The application can locate and load the native SDL3 binaries at runtime. (Builds referencing `SDL3-CS.dll` are now possible; native loading depends on user's manual management of binaries).
- [x] **Task 8.4:** Update `Night.Engine` Code to Utilize SDL3# Bindings
    **Status: Completed**
    - [x] Referencing the checklist from Task 8.1, systematically update all C# files within `Night.Engine` that previously interacted with SDL3.
    - [x] Modify `using` statements if the namespace structure or static class access of SDL3# differs. The target seems to be `using SDL3;` and then `SDL.FunctionName()`.
    - [x] Update all calls to SDL functions, enums, structs, and constants to match the API provided by the new `SDL3-CS` (SDL3#) package. This will involve careful comparison of function signatures, parameter types, return types (e.g., `SDL_GetError()` vs. `SDL.GetError()`), and naming conventions (e.g., `SDL_INIT_VIDEO` from `flibitijibibo-sdl3-cs` vs. `SDL.InitFlags.Video` in the SDL3# example).
    - [x] Pay special attention to `Night.Types.cs`; ensure `Night.KeyCode`, `Night.WindowFlags`, etc., correctly map to or utilize the new SDL3# enum values. The existing `KeyCode` enum, for example, maps directly to `SDL_Scancode` values, which will need verification against the new bindings.
    - [x] Refactor or rewrite `src/Night.Engine/Modules/SDL.cs` to correctly wrap or pass through calls to the new SDL3# API. For instance, the existing `Night.SDL.Init` converts `SDLBool` to `int`; this will need to adapt to SDL3#'s `SDL.Init` which directly returns a `bool`.
- - **Verification:** `Night.Engine` compiles successfully against the new SDL3# bindings without any errors.
- [ ] **Task 8.5:** Test `Night.SampleGame` and Refactor for Compatibility
    
    - [ ] Build and run the `Night.SampleGame` project.
    - [ ] Address any compilation errors or runtime issues that arise due to changes in the SDL3 bindings or the `Night.Engine` API.
    - [ ] Thoroughly test all existing functionalities of the sample game (window creation, input handling, graphics rendering (currently stubbed), game loop operation ) to ensure they perform as expected with the new bindings.
	- [ ] **Verification:** `Night.SampleGame` builds, runs, and all features previously demonstrated (or stubbed out and called) function correctly with the migrated SDL3# bindings.
- [ ] **Task 8.6:** Update Project Documentation (PRD)

- [ ] In `docs/PRD.md`, update Section 3 ("Technical Specifications") to list `edwardgushchin/SDL3-CS` (SDL3#) NuGet package as the C# binding for SDL3, removing mention of `flibitijibibo-sdl3-cs`.
[ ] If the native library management strategy changed (e.g., by adopting `SDL3-CS.Native`):

- Update PRD Section 4 ("Project Structure") to reflect the removal of `lib/SDL3-CS` (already done by user) and potentially `lib/SDL3-Prebuilt/` and `scripts/update_sdl3.py`.
- - - Update PRD Section 5 ("File Descriptions") accordingly.
    - **Verification:** The `docs/PRD.md` accurately reflects the new SDL3 binding dependency and the chosen native library management strategy.
- [ ] **Task 8.7:** Clean Up or Update Native Library Management System
    
    - [ ] If `SDL3-CS.Native` (or an equivalent mechanism from the new SDL3# package) is adopted and successfully manages native SDL3 binaries (Option A from Task 8.1):
        - [ ] Delete the `scripts/update_sdl3.py` script.
        - [ ] Delete the `lib/SDL3-Prebuilt/` directory and its contents (including `version.txt` ).
[ ] Remove the `<Content Include...>` items from `src/Night.SampleGame/Night.SampleGame.csproj` that copied native libraries from `lib/SDL3-Prebuilt/`.
- [ ] If manual management of native libraries is retained (Option B from Task 8.1), ensure the `scripts/update_sdl3.py` script is still functional or update it as necessary to provide compatible binaries for the new SDL3# bindings.
- **Verification:** The project's method for handling native SDL3 libraries is clean, consistent with the chosen strategy, and functional. All obsolete files, scripts, and project configurations related to the old system are removed or appropriately updated.


================================================
File: docs/epics/archive/epic9.md
================================================
# Epic 9: Simplify macOS Platform Message

**User Story:** When starting the night engine, on MacOS, I want the platform message to be more simple including the MacOS version and just the darwin version, not all this extra stuff.

**Current Message Example:**
`Platform: Darwin 24.4.0 Darwin Kernel Version 24.4.0: Fri Apr 11 18:32:43 PDT 2025; root:xnu-11417.101.15~117/RELEASE_ARM64_T8103 (Arm64)`

**Desired Message Format Example:**
`Platform: macOS <version> (Darwin <kernel_version>)`

**Status:** Review

**Tasks:**

-   [x] **1. Review Project Documentation:**
    -   [x] Read `docs/PRD.md`
    -   [x] Read `docs/operational-guidelines.md`
-   [x] **2. Plan Implementation:**
    -   [x] Define Problem
    -   [x] Outline Solution
    -   [x] List Implementation Steps
    -   [x] Identify Risks/Challenges
-   [x] **3. Locate Code:**
    -   [x] Searched for the existing platform message generation logic. Found in `src/Night.Engine/FrameworkLoop.cs`.
-   [x] **4. Implement Changes:**
    -   [x] Modified C# code in `src/Night.Engine/FrameworkLoop.cs` to detect macOS.
    -   [x] Added logic to retrieve macOS version using `sw_vers -productVersion`.
    -   [x] Added logic to retrieve Darwin kernel version using `uname -r`.
    -   [x] Formatted the new platform string: `$"Platform: macOS {macOSVersion} (Darwin {darwinVersion})"`
    -   [x] Implemented error handling for version retrieval, falling back to `RuntimeInformation.OSDescription`.
-   [ ] **5. Test (Manual):**
    -   [ ] Build and run `Night.SampleGame` on macOS.
    -   [ ] Verify the console output shows the simplified platform string: `Platform: macOS <version> (Darwin <kernel_version>)`.
    -   [ ] Test error handling if possible (e.g., by temporarily making `sw_vers` inaccessible if feasible in a test environment, or by simulating an error in code to ensure fallback works).
-   [x] **6. Update Story File:**
    -   [x] Logged all significant actions, decisions, and outputs.
    -   [x] Updated task statuses.
-   [x] **7. Handoff for Review:**
    -   [x] Set status to `Review`.
    -   [x] Provided modified code and instructions for verification.

**Notes:**
Plan presented to user on 2025-05-28.
The plan involves:
- Problem: macOS platform string is too verbose.
- Solution: Retrieve macOS version (`sw_vers -productVersion`) and Darwin kernel version (`uname -r` or parse `SDL.GetPlatform()`) and format a simpler string.
- Steps: Locate code, detect macOS, retrieve versions, format string, update logic.
- Risks: Command availability, SDL string format changes, error handling.

Code changes implemented in `src/Night.Engine/FrameworkLoop.cs` to use `sw_vers` and `uname` on macOS for a simplified platform string. Fallback to `RuntimeInformation.OSDescription` is in place.


================================================
File: docs/love2d-api/roadmap.md
================================================
# Roadmap

Most functions list the Love2D equivalent module/function/callback implementation.

## Version 0.1.0

### Project

- [ ] `docfx` generation onto GitHub pages
- [ ] Tests
- [ ] Logo and icon
- [ ] CI

### Modules

- [ ] `love.filesystem`: Provides an interface to the user's filesystem.
- [ ] `love.graphics`: Drawing of shapes and images, management of screen geometry.
- [ ] `love.image`: Provides an interface to decode encoded image data.
- [ ] `love.keyboard`: Provides an interface to the user's keyboard.
- [ ] `love.mouse`: Provides an interface to the user's mouse.
- [ ] `love.timer`: Provides high-resolution timing functionality.
- [ ] `love.window`: Provides an interface for the program's window.

### Callbacks - General

- [ ] `love.draw`: Callback function used to draw on the screen every frame.
- [ ] `love.load`: This function is called exactly once at the beginning of the game.
- [ ] `love.run`: The main callback function, containing the main loop. A sensible default is used when left out.
- [ ] `love.update`: Callback function used to update the state of the game every frame.

### Callbacks - Keyboard

- [ ] `love.keypressed`: Callback function triggered when a key is pressed.
- [ ] `love.keyreleased`: Callback function triggered when a keyboard key is released.

### Callbacks - Mouse

- [ ] `love.mousepressed`: Callback function triggered when a mouse button is pressed.
- [ ] `love.mousereleased`: Callback function triggered when a mouse button is released.

### Callbacks - General

- [ ] `love.errhand`: The error handler, used to display error messages. (Note: `love.errorhandler` is also listed for 11.0, likely an alias or the preferred name)
- [ ] `love.errorhandler`: The error handler, used to display error messages.

### Types

- [ ] `Data`: The superclass of all data.
- [ ] `Object`: The superclass of all LÖVE types.
- [ ] `Variant`: The types supported by love.thread and love.event.

### General

- [ ] Config Files: Game configuration settings.

## Version 0.2.0

### Modules

- [ ] `love.joystick`: Provides an interface to connected joysticks.

### Callbacks - Joystick

- [ ] `love.joystickpressed`: Callback function triggered when a joystick button is pressed.
- [ ] `love.joystickreleased`: Callback function triggered when a joystick button is released.
- [ ] `love.gamepadaxis`: Called when a Joystick's virtual gamepad axis is moved.
- [ ] `love.gamepadpressed`: Called when a Joystick's virtual gamepad button is pressed.
- [ ] `love.gamepadreleased`: Called when a Joystick's virtual gamepad button is released.
- [ ] `love.joystickadded`: Called when a Joystick is connected.
- [ ] `love.joystickaxis`: Called when a joystick axis moves.
- [ ] `love.joystickhat`: Called when a joystick hat direction changes.
- [ ] `love.joystickremoved`: Called when a Joystick is disconnected.

## Version 0.3.0

### Modules

- [ ] `love.audio`: Provides an audio interface for playback/recording sound.
- [ ] `love.event`: Manages events, like keypresses.
- [ ] `love.sound`: This module is responsible for decoding sound files.
- [ ] `love.system`: Provides access to information about the user's system.

## Version 0.4.0

### Project

- [ ] Aseprite support

### Modules

- [ ] `love.font`: Allows you to work with fonts.

### Callbacks - General

- [ ] `love.quit`: Callback function triggered when the game is closed.

### Callbacks - Window

- [ ] `love.focus`: Callback function triggered when window receives or loses focus.

## Version 0.5.0

### Modules

- [ ] `love.math`: Provides system-independent mathematical functions.
- [ ] Tiled support

### Callbacks - General

- [ ] `love.thread`: Allows you to work with threads.
- [ ] `love.threaderror`: Callback function triggered when a Thread encounters an error.

### Callbacks - Window

- [ ] `love.mousefocus`: Callback function triggered when window receives or loses mouse focus.
- [ ] `love.resize`: Called when the window is resized.
- [ ] `love.visible`: Callback function triggered when window is shown or hidden.

### Callbacks - Keyboard

- [ ] `love.textinput`: Called when text has been entered by the user.

## Version 0.6.0

### Functions

- [ ] `love.getVersion`: Gets the current running version of LÖVE.

### Third-party modules

- [ ] `utf8`: Provides basic support for manipulating UTF-8 strings.

### Callbacks - Mouse

- [ ] `love.mousemoved`: Callback function triggered when the mouse is moved.

## Version 0.7.0

### Modules

- [ ] `love.video`: This module is responsible for decoding and streaming video files.

### Functions

- [ ] `love.isVersionCompatible`: Gets whether the given version is compatible with the current running version of LÖVE.

### Callbacks - General

- [ ] `love.lowmemory`: Callback function triggered when the system is running out of memory on mobile devices.

### Callbacks - Window

- [ ] `love.directorydropped`: Callback function triggered when a directory is dragged and dropped onto the window.

- [ ] `love.filedropped`: Callback function triggered when a file is dragged and dropped onto the window.

### Callbacks - Keyboard

- [ ] `love.textedited`: Called when the candidate text for an IME has changed.

### Callbacks - Mouse

- [ ] `love.wheelmoved`: Callback function triggered when the mouse wheel is moved.

## Version 0.8

### Modules

- [ ] `love.data`: Provides functionality for creating and transforming data.

### Functions

- [ ] `love.hasDeprecationOutput`: Gets whether LÖVE displays warnings when using deprecated functionality.
- [ ] `love.setDeprecationOutput`: Sets whether LÖVE displays warnings when using deprecated functionality.

## Version Horizon (Future)
Mostly related to mobile and touchscreen.

### Modules

- [ ] `love.touch`: Provides an interface to touch-screen presses.

### Callbacks - Window

- [ ] `love.displayrotated`: Called when the device display orientation changed.

### Callbacks - Touch

- [ ] `love.touchmoved`: Callback function triggered when a touch press moves inside the touch screen.
- [ ] `love.touchpressed`: Callback function triggered when the touch screen is touched.
- [ ] `love.touchreleased`: Callback function triggered when the touch screen stops being touched.

## Version Horizon (Far Future)
Networking implementation including rollback.



================================================
File: docs/love2d-api/modules/audio.md
================================================
# `love.audio` Module API Mapping

This document maps the functions available in the `love.audio` module of Love2D to their proposed equivalents in the Night Engine. This entire module is **Out of Scope** for the initial prototype.

| Love2D Function (`love.audio.`) | Night Engine API (`Night.Audio.`) | Notes / C# Signature Idea | Status (Prototype Scope) | Done |
|---------------------------------|-----------------------------------|---------------------------|--------------------------|------|
| `love.audio.getActiveSourceCount()` | `Night.Audio.GetActiveSourceCount()` | `public static int GetActiveSourceCount()` | Out of Scope | [ ] |
| `love.audio.getDistanceModel()` | `Night.Audio.GetDistanceModel()`  | `public static Night.DistanceModel GetDistanceModel()` <br> `DistanceModel` enum. | Out of Scope | [ ] |
| `love.audio.getDopplerScale()`  | `Night.Audio.GetDopplerScale()`   | `public static double GetDopplerScale()` | Out of Scope | [ ] |
| `love.audio.getEffect(name)`    | `Night.Audio.GetEffect(string name)` | `public static Night.AudioEffect? GetEffect(string name)` <br> `AudioEffect` would be a base class for effects. | Out of Scope | [ ] |
| `love.audio.getOrientation()`   | `Night.Audio.GetListenerOrientation()` | `public static (float fx, float fy, float fz, float ux, float uy, float uz) GetListenerOrientation()` | Out of Scope | [ ] |
| `love.audio.getPosition()`      | `Night.Audio.GetListenerPosition()` | `public static (float x, float y, float z) GetListenerPosition()` | Out of Scope | [ ] |
| `love.audio.getRecordingDevices()` | `Night.Audio.GetRecordingDevices()` | `public static Night.RecordingDevice[] GetRecordingDevices()` | Out of Scope | [ ] |
| `love.audio.getSourceCount()`   | `Night.Audio.GetTotalSourceCount()` | `public static int GetTotalSourceCount()` | Out of Scope | [ ] |
| `love.audio.getVelocity()`      | `Night.Audio.GetListenerVelocity()` | `public static (float x, float y, float z) GetListenerVelocity()` | Out of Scope | [ ] |
| `love.audio.getVolume()`        | `Night.Audio.GetMasterVolume()`   | `public static float GetMasterVolume()` | Out of Scope | [ ] |
| `love.audio.isEffectsSupported()` | `Night.Audio.IsEffectsSupported()` | `public static bool IsEffectsSupported()` | Out of Scope | [ ] |
| `love.audio.newSource(filename, type)` or `love.audio.newSource(decoder, type)` | `Night.Audio.NewSource(string filePath, Night.SourceType type = Static)` or `Night.Audio.NewSource(Night.Decoder decoder, Night.SourceType type = Stream)` | `public static Night.Source NewSource(...)` <br> `SourceType` enum: `Static`, `Stream`. `Decoder` for custom audio formats. | Out of Scope | [ ] |
| `love.audio.pause(source)` or `love.audio.pause()` | `Night.Audio.Pause(Night.Source? source = null)` | `public static void Pause(Night.Source? source = null)` <br> Pauses specific source or all. | Out of Scope | [ ] |
| `love.audio.play(source)`       | `Night.Audio.Play(Night.Source source)` | `public static void Play(Night.Source source)` | Out of Scope | [ ] |
| `love.audio.resume(source)` or `love.audio.resume()` | `Night.Audio.Resume(Night.Source? source = null)` | `public static void Resume(Night.Source? source = null)` | Out of Scope | [ ] |
| `love.audio.setDistanceModel(model)` | `Night.Audio.SetDistanceModel(Night.DistanceModel model)` | `public static void SetDistanceModel(Night.DistanceModel model)` | Out of Scope | [ ] |
| `love.audio.setDopplerScale(scale)` | `Night.Audio.SetDopplerScale(double scale)` | `public static void SetDopplerScale(double scale)` | Out of Scope | [ ] |
| `love.audio.setEffect(name, settings)` | `Night.Audio.SetEffect(string name, Night.AudioEffectSettings settings)` | `public static bool SetEffect(string name, Night.AudioEffectSettings settings)` | Out of Scope | [ ] |
| `love.audio.setMixWithSystem(mix)` | `Night.Audio.SetMixWithSystem(bool mix)` | `public static void SetMixWithSystem(bool mix)` | Out of Scope | [ ] |
| `love.audio.setOrientation(fx, fy, fz, ux, uy, uz)` | `Night.Audio.SetListenerOrientation(...)` | `public static void SetListenerOrientation(float forwardX, ...)` | Out of Scope | [ ] |
| `love.audio.setPosition(x, y, z)` | `Night.Audio.SetListenerPosition(float x, float y, float z)` | `public static void SetListenerPosition(float x, float y, float z)` | Out of Scope | [ ] |
| `love.audio.setRecordingDevice(name)` | `Night.Audio.SetRecordingDevice(string name)` | `public static void SetRecordingDevice(string name)` | Out of Scope | [ ] |
| `love.audio.setVelocity(x, y, z)` | `Night.Audio.SetListenerVelocity(float x, float y, float z)` | `public static void SetListenerVelocity(float x, float y, float z)` | Out of Scope | [ ] |
| `love.audio.setVolume(volume)`  | `Night.Audio.SetMasterVolume(float volume)` | `public static void SetMasterVolume(float volume)` | Out of Scope | [ ] |
| `love.audio.stop(source)` or `love.audio.stop()` | `Night.Audio.Stop(Night.Source? source = null)` | `public static void Stop(Night.Source? source = null)` | Out of Scope | [ ] |

**Night Engine Specific Types:**
*   `Night.Source`: Represents an audio source (sound effect or music). Would have methods like `Play()`, `Pause()`, `Stop()`, `SetVolume()`, `Seek()`, `IsPlaying()`, etc.
*   `Night.SourceType`: Enum (`Static`, `Stream`).
*   `Night.Decoder`: Represents a custom audio decoder.
*   `Night.DistanceModel`: Enum for 3D audio distance attenuation (e.g., `None`, `Inverse`, `Linear`).
*   `Night.AudioEffect`: Base class for audio effects (e.g., reverb, echo).
*   `Night.AudioEffectSettings`: Base class for effect-specific settings.
*   `Night.RecordingDevice`: Represents an audio recording device.



================================================
File: docs/love2d-api/modules/data.md
================================================
# `love.data` Module API Mapping

This document maps the functions available in the `love.data` module of Love2D to their proposed equivalents in the Night Engine. This entire module is **Out of Scope** for the initial prototype. .NET provides extensive built-in support for these operations in namespaces like `System.IO.Compression`, `System.Security.Cryptography`, and `System.Text`.

| Love2D Function (`love.data.`) | Night Engine API (`Night.Data` or `System` namespaces) | Notes / C# Signature Idea | Status (Prototype Scope) | Done |
|--------------------------------|--------------------------------------------------------|---------------------------|--------------------------|------|
| `love.data.compress(container, format, rawstring, level)` | `Night.Data.Compress(Night.DataContainerType container, Night.CompressionFormat format, byte[] data, int? level = null)` | `public static byte[] Compress(...)` <br> Uses `System.IO.Compression`. | Out of Scope | [ ] |
| `love.data.decompress(container, format, compressedstring)` | `Night.Data.Decompress(Night.DataContainerType container, Night.CompressionFormat format, byte[] compressedData)` | `public static byte[] Decompress(...)` | Out of Scope | [ ] |
| `love.data.decode(container, format, encodedstring)` | `Night.Data.Decode(Night.DataContainerType container, Night.EncodingFormat format, string encodedString)` | `public static byte[] Decode(...)` <br> e.g., Base64, Hex. Uses `System.Convert`. | Out of Scope | [ ] |
| `love.data.encode(container, format, rawstring, linelength)` | `Night.Data.Encode(Night.DataContainerType container, Night.EncodingFormat format, byte[] data, int? lineLength = null)` | `public static string Encode(...)` | Out of Scope | [ ] |
| `love.data.getPackedSize(format)` | `Night.Data.GetPackedSize(string packFormat)` | `public static int GetPackedSize(string packFormat)` <br> For binary packing. | Out of Scope | [ ] |
| `love.data.hash(hashfunction, string_or_Data)` | `Night.Data.Hash(Night.HashFunction function, byte[] data)` or `Night.Data.Hash(Night.HashFunction function, string data)` | `public static string Hash(...)` <br> Uses `System.Security.Cryptography`. | Out of Scope | [ ] |
| `love.data.newDataView(data, offset, size)` | `Night.Data.NewDataView(byte[] data, int offset = 0, int? size = null)` | `public static Night.DataView NewDataView(...)` <br> Similar to `System.Memory<byte>` or `ArraySegment<byte>`. | Out of Scope | [ ] |
| `love.data.pack(format, values...)` | `Night.Data.Pack(string packFormat, params object[] values)` | `public static byte[] Pack(...)` <br> Binary packing. | Out of Scope | [ ] |
| `love.data.unpack(format, datastring)` | `Night.Data.Unpack(string packFormat, byte[] packedData)` | `public static object[] Unpack(...)` | Out of Scope | [ ] |

**Night Engine Specific Types (if module were implemented):**
*   `Night.DataContainerType`: Enum (e.g., `String`, `Data`). (Love2D distinction, less relevant for C# byte arrays).
*   `Night.CompressionFormat`: Enum (e.g., `Gzip`, `Zlib`, `Lz4`).
*   `Night.EncodingFormat`: Enum (e.g., `Base64`, `Hex`).
*   `Night.HashFunction`: Enum (e.g., `Md5`, `Sha1`, `Sha256`).
*   `Night.DataView`: Wrapper for a segment of byte array, similar to `System.Memory<byte>`.



================================================
File: docs/love2d-api/modules/event.md
================================================
# `love.event` Module API Mapping

This document maps the functions available in the `love.event` module of Love2D to their proposed equivalents in the Night Engine. In Night Engine, event handling is primarily managed by the engine invoking specific callback methods on the user's game class (e.g., `MyGame.KeyPressed`). Direct manipulation of an event queue by the user is **Out of Scope** for the initial prototype.

| Love2D Function (`love.event.`) | Night Engine API (`Night.Event` or Engine Internals) | Notes / C# Signature Idea | Status (Prototype Scope) | Done |
|---------------------------------|------------------------------------------------------|---------------------------|--------------------------|------|
| `love.event.clear()`            | `Night.Event.ClearQueue()` (Engine internal or not exposed) | `internal static void ClearQueue()` <br> Clears pending events. Engine might do this per frame. | Out of Scope | [ ] |
| `love.event.poll()`             | `Night.Event.Poll()` (Engine internal) | `internal static Night.EventData? Poll()` <br> Returns next event if any. Engine uses this in its loop. | Out of Scope | [ ] |
| `love.event.pump()`             | `Night.Event.PumpEvents()` (Engine internal) | `internal static void PumpEvents()` <br> Processes OS events into LÖVE events. Engine does this. | Out of Scope | [ ] |
| `love.event.push(e, ...)`       | `Night.Event.PushCustomEvent(string eventName, params object[] args)` | `public static void PushCustomEvent(string eventName, params object[] args)` <br> Allows user to push custom events. Would require a `MyGame.CustomEvent(name, args)` callback. | Out of Scope | [ ] |
| `love.event.quit(exitstatus)`   | `Night.Engine.RequestQuit(int exitStatus = 0)` | `public static void RequestQuit(int exitStatus = 0)` <br> Pushes a quit event. | In Scope (as `Night.Engine.RequestQuit`) | [ ] |
| `love.event.wait()`             | `Night.Event.Wait()` (Engine internal or not exposed) | `internal static Night.EventData Wait()` <br> Waits for next event. Not typical for game loops. | Out of Scope | [ ] |

**Night Engine Specific Types (if module were implemented for custom events):**
*   `Night.EventData`: A base class or struct for event information, potentially with derived types for specific events if not handled by direct callbacks.
*   Custom event callbacks in `MyGame` like `MyGame.OnCustomEvent(string name, object[] args)`.



================================================
File: docs/love2d-api/modules/filesystem.md
================================================
# `love.filesystem` Module API Mapping

This document maps the functions available in the `love.filesystem` module of Love2D to their proposed equivalents in the Night Engine. Most functions in this module are **Out of Scope** for the initial prototype.

| Love2D Function (`love.filesystem.`) | Night Engine API (`Night.Filesystem.`) | Notes / C# Signature Idea | Status (Prototype Scope) | Done |
|--------------------------------------|----------------------------------------|---------------------------|--------------------------|------|
| `love.filesystem.append(name, data, size)` | `Night.Filesystem.Append(string path, byte[] data, int? size = null)` or `Night.Filesystem.AppendText(string path, string content)` | `public static bool Append(string path, byte[] data, int? size = null)` <br> `public static bool AppendText(string path, string content)` | Out of Scope | [ ] |
| `love.filesystem.areSymlinksEnabled()` | `Night.Filesystem.AreSymlinksEnabled()` | `public static bool AreSymlinksEnabled()` | Out of Scope | [ ] |
| `love.filesystem.createDirectory(name)` | `Night.Filesystem.CreateDirectory(string path)` | `public static bool CreateDirectory(string path)` | Out of Scope | [ ] |
| `love.filesystem.getAppdataDirectory()` | `Night.Filesystem.GetAppDataDirectory()` | `public static string GetAppDataDirectory()` | Out of Scope | [ ] |
| `love.filesystem.getDirectoryItems(name)` | `Night.Filesystem.GetDirectoryItems(string path)` | `public static string[] GetDirectoryItems(string path)` | Out of Scope | [ ] |
| `love.filesystem.getExecutablePath()` | `Night.Filesystem.GetExecutablePath()` | `public static string GetExecutablePath()` | Out of Scope | [ ] |
| `love.filesystem.getIdentity()`     | `Night.Filesystem.GetIdentity()`   | `public static string GetIdentity()` <br> Gets the save directory identity. | Out of Scope | [ ] |
| `love.filesystem.getLastModified(name)` | `Night.Filesystem.GetInfo(string path).ModTime` | `public static DateTime GetLastModifiedTime(string path)` (or long timestamp) | Superseded by GetInfo | [x] |
| `love.filesystem.getRealDirectory(name)` | `Night.Filesystem.GetRealDirectory(string path)` | `public static string GetRealDirectory(string path)` <br> Resolves symlinks. | Out of Scope | [ ] |
| `love.filesystem.getSaveDirectory()` | `Night.Filesystem.GetSaveDirectory()` | `public static string GetSaveDirectory()` | Out of Scope | [ ] |
| `love.filesystem.getSize(name)`     | `Night.Filesystem.GetInfo(string path).Size` | `public static long GetFileSize(string path)` | Superseded by GetInfo | [x] |
| `love.filesystem.getSource()`       | `Night.Filesystem.GetSourcePath()` | `public static string GetSourcePath()` <br> Path to the game's source (.love file or directory). | Out of Scope | [ ] |
| `love.filesystem.getSourceBaseDirectory()` | `Night.Filesystem.GetSourceBaseDirectory()` | `public static string GetSourceBaseDirectory()` | Out of Scope | [ ] |
| `love.filesystem.getUserDirectory()` | `Night.Filesystem.GetUserDirectory()` | `public static string GetUserDirectory()` | Out of Scope | [ ] |
| `love.filesystem.getWorkingDirectory()` | `Night.Filesystem.GetWorkingDirectory()` | `public static string GetWorkingDirectory()` | Out of Scope | [ ] |
| `love.filesystem.isFused()`         | `Night.Filesystem.IsFused()`       | `public static bool IsFused()` <br> True if game is a .love file and merged with interpreter. | Out of Scope | [ ] |
| `love.filesystem.isDirectory(name)` | `Night.Filesystem.GetInfo(string path).Type == Night.FileType.Directory` | `public static bool IsDirectory(string path)` | Superseded by GetInfo | [x] |
| `love.filesystem.isFile(name)`      | `Night.Filesystem.GetInfo(string path).Type == Night.FileType.File` | `public static bool IsFile(string path)` | Superseded by GetInfo | [x] |
| `love.filesystem.isSymlink(name)`   | `Night.Filesystem.GetInfo(string path).Type == Night.FileType.Symlink` | `public static bool IsSymlink(string path)` | Superseded by GetInfo | [x] |
| `love.filesystem.lines(name)`       | `Night.Filesystem.ReadLines(string path)` | `public static IEnumerable<string> ReadLines(string path)` | Out of Scope | [ ] |
| `love.filesystem.load(name)`        | `Night.Filesystem.LoadLuaScript(string path)` | `public static Action LoadLuaScript(string path)` <br> Loads and runs a Lua file. Night Engine might not support this directly. | Out of Scope | [ ] |
| `love.filesystem.mount(archive, mountpoint, appendToPath)` | `Night.Filesystem.Mount(string archivePath, string mountPoint, bool appendToSearchPath = false)` | `public static bool Mount(...)` | Out of Scope | [ ] |
| `love.filesystem.newFile(filename, mode)` | `Night.Filesystem.NewFileStream(string path, Night.FileMode mode = Read)` | `public static Night.FileStream NewFileStream(...)` <br> `FileMode` enum: `Read`, `Write`, `Append`. `FileStream` would be a custom stream wrapper. | Out of Scope | [ ] |
| `love.filesystem.newFileData(contents, name, decoder)` | `Night.Filesystem.NewFileData(byte[] content, string name, Night.FileDecoder decoder = Raw)` | `public static Night.FileData NewFileData(...)` <br> `FileDecoder` enum: `Raw`, `Base64`. `FileData` is an in-memory file. | Out of Scope | [ ] |
| `love.filesystem.read(name, size)`  | `Night.Filesystem.ReadBytes(string path, int? count = null)` or `Night.Filesystem.ReadText(string path)` | `public static byte[]? ReadBytes(string path, int? count = null)` <br> `public static string? ReadText(string path)` | Out of Scope | [ ] |
| `love.filesystem.remove(name)`      | `Night.Filesystem.Remove(string path)` | `public static bool Remove(string path)` <br> Removes file or empty directory. | Out of Scope | [ ] |
| `love.filesystem.setIdentity(name, appendToPath)` | `Night.Filesystem.SetIdentity(string identity, bool appendToPath = false)` | `public static void SetIdentity(...)` | Out of Scope | [ ] |
| `love.filesystem.setSymlinksEnabled(enable)` | `Night.Filesystem.SetSymlinksEnabled(bool enable)` | `public static void SetSymlinksEnabled(bool enable)` | Out of Scope | [ ] |
| `love.filesystem.setSource(path)`   | `Night.Filesystem.SetSource(string path)` | `public static void SetSource(string path)` | Out of Scope | [ ] |
| `love.filesystem.unmount(archive)`  | `Night.Filesystem.Unmount(string archivePath)` | `public static bool Unmount(string archivePath)` | Out of Scope | [ ] |
| `love.filesystem.write(name, data, size)` | `Night.Filesystem.WriteBytes(string path, byte[] data, int? size = null)` or `Night.Filesystem.WriteText(string path, string content)` | `public static bool WriteBytes(...)` <br> `public static bool WriteText(...)` | Out of Scope | [ ] |

| `love.filesystem.getInfo(path, filtertype, info)` | `Night.Filesystem.GetInfo(string path, Night.FileType? filterType = null, Night.FileSystemInfo? existingInfo = null)` | `public static Night.FileSystemInfo? GetInfo(string path, Night.FileType? filterType = null)` <br> `public static Night.FileSystemInfo? GetInfo(string path, Night.FileSystemInfo info)` <br> `public static Night.FileSystemInfo? GetInfo(string path, Night.FileType filterType, Night.FileSystemInfo info)` | In Scope | [x] |

**Night Engine Specific Types:**
*   `Night.FileMode`: Enum (`Read`, `Write`, `Append`).
*   `Night.FileStream`: Custom stream wrapper for file operations.
*   `Night.FileData`: Represents an in-memory file.
*   `Night.FileDecoder`: Enum (`Raw`, `Base64`).
*   `Night.FileType`: Enum (`File`, `Directory`, `Symlink`, `Other`, `None`).
*   `Night.FileSystemInfo`: Class (Properties: `Type`, `Size`, `ModTime`).



================================================
File: docs/love2d-api/modules/font.md
================================================
# `love.font` Module API Mapping

This document maps the functions available in the `love.font` module of Love2D to their proposed equivalents in the Night Engine. This entire module is **Out of Scope** for the initial prototype. The primary way to get a font object in Night Engine would be `Night.Graphics.NewFont()`.

| Love2D Function (`love.font.`) | Night Engine API (`Night.Font` methods or `Night.Graphics`) | Notes / C# Signature Idea | Status (Prototype Scope) | Done |
|--------------------------------|-------------------------------------------------------------|---------------------------|--------------------------|------|
| `love.font.newRasterizer(filename, size)` or `love.font.newRasterizer(filedata, size)` or `love.font.newRasterizer(size)` | `Night.Graphics.NewFontRasterizer(string filePath, int size)` etc. | `public static Night.FontRasterizer NewFontRasterizer(...)` <br> Creates a font rasterizer. `Night.Font` would likely encapsulate this. | Out of Scope | [ ] |
| `love.font.newGlyphData(rasterizer, glyph)` | `(Night.FontRasterizer).NewGlyphData(char glyph)` or `(Night.FontRasterizer).NewGlyphData(uint glyph)` | `public Night.GlyphData NewGlyphData(char glyph)` (method on `FontRasterizer` or `Font`) | Out of Scope | [ ] |

**Related functionality in Night Engine (on `Night.Font` objects):**
*   Getting font height: `myFont.GetHeight()`
*   Getting ascent/descent: `myFont.GetAscent()`, `myFont.GetDescent()`
*   Getting baseline: `myFont.GetBaseline()`
*   Getting line height: `myFont.GetLineHeight()`
*   Getting text width: `myFont.GetWidth(string text)`
*   Wrapping text: `myFont.Wrap(string text, float wrapLimit)`
*   Setting fallback fonts: `myFont.SetFallback(Night.Font fallback1, ...)`

**Night Engine Specific Types:**
*   `Night.Font`: Represents a loaded font. Created via `Night.Graphics.NewFont()`. Would have methods for metrics and properties.
*   `Night.FontRasterizer`: Internal or advanced type for rasterizing glyphs.
*   `Night.GlyphData`: Represents rasterized data for a single glyph.



================================================
File: docs/love2d-api/modules/graphics.md
================================================
# `love.graphics` Module API Mapping

This document maps the functions available in the `love.graphics` module of Love2D to their proposed equivalents in the Night Engine.

| Love2D Function (`love.graphics.`) | Night Engine API (`Night.Graphics.`) | Notes / C# Signature Idea | Status (Prototype Scope) | Done |
|------------------------------------|--------------------------------------|---------------------------|--------------------------|------|
| `love.graphics.arc(mode, arcType, x, y, radius, angle1, angle2, segments)` | `Night.Graphics.DrawArc(Night.DrawMode mode, Night.ArcType arcType, float x, float y, float radius, float angle1, float angle2, int? segments = null)` | `public static void DrawArc(Night.DrawMode mode, Night.ArcType arcType, float x, float y, float radius, float angle1, float angle2, int? segments = null)` <br> `DrawMode` enum: `Fill`, `Line`. `ArcType` enum: `Open`, `Closed`, `Pie`. Segments auto-calculated if null. | Out of Scope | [ ] |
| `love.graphics.circle(mode, x, y, radius, segments)` | `Night.Graphics.DrawCircle(Night.DrawMode mode, float x, float y, float radius, int? segments = null)` | `public static void DrawCircle(Night.DrawMode mode, float x, float y, float radius, int? segments = null)` | Out of Scope | [ ] |
| `love.graphics.clear(r, g, b, a)` or `love.graphics.clear(color)` | `Night.Graphics.Clear(Night.Color color)` or `Night.Graphics.Clear(byte r, byte g, byte b, byte a = 255)` | `public static void Clear(Night.Color color)` <br> `public static void Clear(byte r, byte g, byte b, byte a = 255)` | In Scope | [ ] |
| `love.graphics.discard(discardColor, discardStencil)` | `Night.Graphics.Discard(bool discardColor = true, bool discardStencil = true)` | `public static void Discard(bool discardColor = true, bool discardStencil = true)` <br> Discards render target contents. | Out of Scope | [ ] |
| `love.graphics.draw(drawable, x, y, r, sx, sy, ox, oy, kx, ky)` | `Night.Graphics.Draw(Night.IDrawable drawable, float x, float y, float rotation = 0, float scaleX = 1, float scaleY = 1, float offsetX = 0, float offsetY = 0, float shearX = 0, float shearY = 0)` | `public static void Draw(Night.IDrawable drawable, float x, float y, float rotation = 0, float scaleX = 1, float scaleY = 1, float offsetX = 0, float offsetY = 0, float shearX = 0, float shearY = 0)` <br> `IDrawable` could be `Sprite`, `Text`, `Shape`, etc. | In Scope (for Sprites) | [ ] |
| `love.graphics.draw(texture, quad, x, y, r, sx, sy, ox, oy, kx, ky)` | `Night.Graphics.Draw(Night.Texture texture, Night.Quad quad, float x, float y, float rotation = 0, float scaleX = 1, float scaleY = 1, float offsetX = 0, float offsetY = 0, float shearX = 0, float shearY = 0)` | `public static void Draw(Night.Texture texture, Night.Quad quad, ...)` <br> For drawing parts of a texture. | In Scope (for Sprites with Quads) | [ ] |
| `love.graphics.ellipse(mode, x, y, radiusx, radiusy, segments)` | `Night.Graphics.DrawEllipse(Night.DrawMode mode, float x, float y, float radiusX, float radiusY, int? segments = null)` | `public static void DrawEllipse(Night.DrawMode mode, float x, float y, float radiusX, float radiusY, int? segments = null)` | Out of Scope | [ ] |
| `love.graphics.getBackgroundColor()` | `Night.Graphics.GetBackgroundColor()` | `public static Night.Color GetBackgroundColor()` | In Scope | [ ] |
| `love.graphics.getBlendMode()`     | `Night.Graphics.GetBlendMode()`    | `public static (Night.BlendMode mode, Night.BlendAlphaMode alphaMode) GetBlendMode()` | Out of Scope | [ ] |
| `love.graphics.getCanvas()`        | `Night.Graphics.GetRenderTarget()` | `public static Night.IRenderTarget GetRenderTarget()` <br> Returns current render target (Canvas or screen). | Out of Scope | [ ] |
| `love.graphics.getCanvasFormats()` | `Night.Graphics.GetSupportedRenderTargetFormats()` | `public static Night.RenderTargetFormat[] GetSupportedRenderTargetFormats()` | Out of Scope | [ ] |
| `love.graphics.getColor()`         | `Night.Graphics.GetColor()`        | `public static Night.Color GetColor()` | In Scope | [ ] |
| `love.graphics.getColorMask()`     | `Night.Graphics.GetColorMask()`    | `public static (bool r, bool g, bool b, bool a) GetColorMask()` | Out of Scope | [ ] |
| `love.graphics.getDefaultFilter()` | `Night.Graphics.GetDefaultFilter()` | `public static Night.FilterMode GetDefaultFilter()` <br> `FilterMode` enum: `Linear`, `Nearest`. | In Scope | [ ] |
| `love.graphics.getDepthMode()`     | `Night.Graphics.GetDepthMode()`    | `public static (Night.CompareMode? mode, bool write) GetDepthMode()` | Out of Scope | [ ] |
| `love.graphics.getDimensions()`    | `Night.Graphics.GetDimensions()`   | `public static (int width, int height) GetDimensions()` <br> Gets dimensions of current render target (screen or canvas). | In Scope | [ ] |
| `love.graphics.getFont()`          | `Night.Graphics.GetFont()`         | `public static Night.Font GetFont()` | Out of Scope | [ ] |
| `love.graphics.getHeight()`        | `Night.Graphics.GetHeight()`       | `public static int GetHeight()` <br> Height of current render target. | In Scope | [ ] |
| `love.graphics.getLineWidth()`     | `Night.Graphics.GetLineWidth()`    | `public static float GetLineWidth()` | Out of Scope | [ ] |
| `love.graphics.getLineStyle()`     | `Night.Graphics.GetLineStyle()`    | `public static Night.LineStyle GetLineStyle()` <br> `LineStyle` enum: `Smooth`, `Rough`. | Out of Scope | [ ] |
| `love.graphics.getLineJoin()`      | `Night.Graphics.GetLineJoin()`     | `public static Night.LineJoin GetLineJoin()` <br> `LineJoin` enum: `None`, `Miter`, `Bevel`. | Out of Scope | [ ] |
| `love.graphics.getPointSize()`     | `Night.Graphics.GetPointSize()`    | `public static float GetPointSize()` | Out of Scope | [ ] |
| `love.graphics.getRendererInfo()`  | `Night.Graphics.GetRendererInfo()` | `public static Night.RendererInfo GetRendererInfo()` <br> `RendererInfo` class: `Name`, `Version`, `Vendor`, `Device`. | In Scope | [ ] |
| `love.graphics.getScissor()`       | `Night.Graphics.GetScissor()`      | `public static Night.Rectangle? GetScissor()` | Out of Scope | [ ] |
| `love.graphics.getShader()`        | `Night.Graphics.GetShader()`       | `public static Night.Shader GetShader()` | Out of Scope | [ ] |
| `love.graphics.getStats()`         | `Night.Graphics.GetStats()`        | `public static Night.GraphicsStats GetStats()` <br> `GraphicsStats` class: `DrawCalls`, `CanvasSwitches`, `ShaderSwitches`, etc. | In Scope (Basic stats) | [ ] |
| `love.graphics.getStencilTest()`   | `Night.Graphics.GetStencilTest()`  | `public static (Night.CompareMode? mode, int value) GetStencilTest()` | Out of Scope | [ ] |
| `love.graphics.getWidth()`         | `Night.Graphics.GetWidth()`        | `public static int GetWidth()` <br> Width of current render target. | In Scope | [ ] |
| `love.graphics.intersectScissor(x, y, width, height)` | `Night.Graphics.IntersectScissor(int x, int y, int width, int height)` | `public static void IntersectScissor(int x, int y, int width, int height)` | Out of Scope | [ ] |
| `love.graphics.isWireframe()`      | `Night.Graphics.IsWireframe()`     | `public static bool IsWireframe()` | Out of Scope | [ ] |
| `love.graphics.line(x1, y1, x2, y2, ...)` or `love.graphics.line(points)` | `Night.Graphics.DrawLine(params float[] points)` or `Night.Graphics.DrawLine(Night.PointF[] points)` | `public static void DrawLine(params float[] points)` <br> `public static void DrawLine(Night.PointF[] points)` | Out of Scope | [ ] |
| `love.graphics.newCanvas(width, height, format, msaa)` | `Night.Graphics.NewRenderTarget(int width, int height, Night.RenderTargetFormat format = Default, int msaa = 0)` | `public static Night.IRenderTarget NewRenderTarget(...)` | Out of Scope | [ ] |
| `love.graphics.newFont(filename, size)` or `love.graphics.newFont(size)` | `Night.Graphics.NewFont(string filePath, int size)` or `Night.Graphics.NewFont(int size)` | `public static Night.Font NewFont(...)` <br> Uses default font if no path. | Out of Scope | [ ] |
| `love.graphics.newImage(filename)` | `Night.Graphics.NewImage(string filePath)` | `public static Night.Sprite NewImage(string filePath)` <br> PRD refers to `Sprite` as return type. | In Scope | [ ] |
| `love.graphics.newImageFont(filename, glyphs, extraspacing)` | `Night.Graphics.NewImageFont(string filePath, string glyphs, int extraSpacing = 0)` | `public static Night.Font NewImageFont(...)` | Out of Scope | [ ] |
| `love.graphics.newQuad(x, y, width, height, sw, sh)` | `Night.Graphics.NewQuad(float x, float y, float width, float height, float sourceWidth, float sourceHeight)` | `public static Night.Quad NewQuad(...)` | In Scope | [ ] |
| `love.graphics.newShader(pixelcode, vertexcode)` | `Night.Graphics.NewShader(string pixelShaderCode, string vertexShaderCode = null)` | `public static Night.Shader NewShader(...)` | Out of Scope | [ ] |
| `love.graphics.newSpriteBatch(texture, size, usagehint)` | `Night.Graphics.NewSpriteBatch(Night.Texture texture, int size, Night.UsageHint hint = Dynamic)` | `public static Night.SpriteBatch NewSpriteBatch(...)` | Out of Scope | [ ] |
| `love.graphics.newText(font, textparts)` | `Night.Graphics.NewText(Night.Font font, params (string text, Night.Color? color)[] textParts)` | `public static Night.Text NewText(...)` | Out of Scope | [ ] |
| `love.graphics.newVideo(filename, options)` | `Night.Graphics.NewVideo(string filePath, Night.VideoOptions? options = null)` | `public static Night.Video NewVideo(...)` | Out of Scope | [ ] |
| `love.graphics.origin()`           | `Night.Graphics.ResetTransform()`  | `public static void ResetTransform()` <br> Resets current transformation to identity. | In Scope | [ ] |
| `love.graphics.points(coords, colors)` | `Night.Graphics.DrawPoints(Night.PointF[] positions, Night.Color[]? colors = null)` | `public static void DrawPoints(...)` | Out of Scope | [ ] |
| `love.graphics.polygon(mode, vertices)` | `Night.Graphics.DrawPolygon(Night.DrawMode mode, params Night.PointF[] vertices)` | `public static void DrawPolygon(...)` | Out of Scope | [ ] |
| `love.graphics.pop()`              | `Night.Graphics.PopTransform()`    | `public static void PopTransform()` | In Scope | [ ] |
| `love.graphics.present()`          | `Night.Graphics.Present()`         | `public static void Present()` <br> Called by engine after `MyGame.Draw()`. | In Scope | [ ] |
| `love.graphics.print(text, x, y, r, sx, sy, ox, oy, kx, ky)` | `Night.Graphics.Print(string text, float x, float y, float rotation = 0, ...)` | `public static void Print(string text, float x, float y, ...)` <br> Uses current font. | Out of Scope | [ ] |
| `love.graphics.printf(text, x, y, limit, align, r, sx, sy, ox, oy, kx, ky)` | `Night.Graphics.PrintF(string text, float x, float y, float wrapLimit, Night.TextAlign align = Left, ...)` | `public static void PrintF(...)` | Out of Scope | [ ] |
| `love.graphics.push(stacktype)`    | `Night.Graphics.PushTransform(Night.StackType type = All)` | `public static void PushTransform(Night.StackType type = Night.StackType.All)` <br> `StackType` enum: `All`, `Transform`. | In Scope | [ ] |
| `love.graphics.rectangle(mode, x, y, width, height, rx, ry, segments)` | `Night.Graphics.DrawRectangle(Night.DrawMode mode, float x, float y, float width, float height, float cornerRadiusX = 0, float cornerRadiusY = 0, int? segments = null)` | `public static void DrawRectangle(...)` | Out of Scope | [ ] |
| `love.graphics.reset()`            | `Night.Graphics.ResetState()`      | `public static void ResetState()` <br> Resets all graphics state (color, blend mode, etc.) | In Scope | [ ] |
| `love.graphics.rotate(angle)`      | `Night.Graphics.Rotate(float angleInRadians)` | `public static void Rotate(float angleInRadians)` | In Scope | [ ] |
| `love.graphics.scale(sx, sy)`      | `Night.Graphics.Scale(float scaleX, float scaleY)` | `public static void Scale(float scaleX, float scaleY)` | In Scope | [ ] |
| `love.graphics.shear(kx, ky)`      | `Night.Graphics.Shear(float shearX, float shearY)` | `public static void Shear(float shearX, float shearY)` | In Scope | [ ] |
| `love.graphics.setBackgroundColor(r, g, b, a)` or `love.graphics.setBackgroundColor(color)` | `Night.Graphics.SetBackgroundColor(Night.Color color)` or `Night.Graphics.SetBackgroundColor(byte r, byte g, byte b, byte a = 255)` | `public static void SetBackgroundColor(...)` | In Scope | [ ] |
| `love.graphics.setBlendMode(mode, alphamode)` | `Night.Graphics.SetBlendMode(Night.BlendMode mode, Night.BlendAlphaMode alphaMode = Multiply)` | `public static void SetBlendMode(...)` | Out of Scope | [ ] |
| `love.graphics.setCanvas(canvas)` or `love.graphics.setCanvas()` | `Night.Graphics.SetRenderTarget(Night.IRenderTarget? target = null)` | `public static void SetRenderTarget(Night.IRenderTarget? target = null)` <br> `null` sets to screen. | Out of Scope | [ ] |
| `love.graphics.setColor(r, g, b, a)` or `love.graphics.setColor(color)` | `Night.Graphics.SetColor(Night.Color color)` or `Night.Graphics.SetColor(byte r, byte g, byte b, byte a = 255)` | `public static void SetColor(...)` | In Scope | [ ] |
| `love.graphics.setColorMask(r, g, b, a)` | `Night.Graphics.SetColorMask(bool r, bool g, bool b, bool a)` | `public static void SetColorMask(bool r, bool g, bool b, bool a)` | Out of Scope | [ ] |
| `love.graphics.setDefaultFilter(min, mag, anisotropy)` | `Night.Graphics.SetDefaultFilter(Night.FilterMode min, Night.FilterMode? mag = null, float anisotropy = 1.0f)` | `public static void SetDefaultFilter(...)` <br> `mag` defaults to `min` if null. | In Scope | [ ] |
| `love.graphics.setDepthMode(mode, write)` | `Night.Graphics.SetDepthMode(Night.CompareMode? mode, bool write)` | `public static void SetDepthMode(Night.CompareMode? mode, bool write)` | Out of Scope | [ ] |
| `love.graphics.setFont(font)`      | `Night.Graphics.SetFont(Night.Font font)` | `public static void SetFont(Night.Font font)` | Out of Scope | [ ] |
| `love.graphics.setLineWidth(width)` | `Night.Graphics.SetLineWidth(float width)` | `public static void SetLineWidth(float width)` | Out of Scope | [ ] |
| `love.graphics.setLineStyle(style)` | `Night.Graphics.SetLineStyle(Night.LineStyle style)` | `public static void SetLineStyle(Night.LineStyle style)` | Out of Scope | [ ] |
| `love.graphics.setLineJoin(join)`  | `Night.Graphics.SetLineJoin(Night.LineJoin join)` | `public static void SetLineJoin(Night.LineJoin join)` | Out of Scope | [ ] |
| `love.graphics.setPointSize(size)` | `Night.Graphics.SetPointSize(float size)` | `public static void SetPointSize(float size)` | Out of Scope | [ ] |
| `love.graphics.setScissor(x, y, width, height)` or `love.graphics.setScissor()` | `Night.Graphics.SetScissor(int? x, int? y, int? width, int? height)` or `Night.Graphics.SetScissor(Night.Rectangle? rect)` | `public static void SetScissor(Night.Rectangle? rect)` <br> `null` disables scissor. | Out of Scope | [ ] |
| `love.graphics.setShader(shader)` or `love.graphics.setShader()` | `Night.Graphics.SetShader(Night.Shader? shader = null)` | `public static void SetShader(Night.Shader? shader = null)` | Out of Scope | [ ] |
| `love.graphics.setStencilTest(comparemode, comparevalue)` or `love.graphics.setStencilTest()` | `Night.Graphics.SetStencilTest(Night.CompareMode? mode = null, int value = 0)` | `public static void SetStencilTest(Night.CompareMode? mode = null, int value = 0)` | Out of Scope | [ ] |
| `love.graphics.setWireframe(enable)` | `Night.Graphics.SetWireframe(bool enable)` | `public static void SetWireframe(bool enable)` | Out of Scope | [ ] |
| `love.graphics.stencil(stencilfunction, action, value, keepvalues)` | `Night.Graphics.Stencil(Action stencilFunction, Night.StencilAction action = Replace, int value = 1, bool keepValues = false)` | `public static void Stencil(...)` <br> Complex. | Out of Scope | [ ] |
| `love.graphics.translate(dx, dy)`  | `Night.Graphics.Translate(float deltaX, float deltaY)` | `public static void Translate(float deltaX, float deltaY)` | In Scope | [ ] |
| `love.graphics.transformPoint(worldX, worldY)` | `Night.Graphics.TransformPoint(float worldX, float worldY)` | `public static (float screenX, float screenY) TransformPoint(float worldX, float worldY)` | In Scope | [ ] |
| `love.graphics.inverseTransformPoint(screenX, screenY)` | `Night.Graphics.InverseTransformPoint(float screenX, float screenY)` | `public static (float worldX, float worldY) InverseTransformPoint(float screenX, float screenY)` | In Scope | [ ] |

**Night Engine Specific Types:**
*   `Night.DrawMode`: Enum (`Fill`, `Line`).
*   `Night.ArcType`: Enum (`Open`, `Closed`, `Pie`).
*   `Night.IDrawable`: Interface for drawable objects (Sprite, Text, etc.).
*   `Night.Texture`: Represents a texture (likely part of `Night.Image` or `Night.Sprite`).
*   `Night.Quad`: Represents a portion of a texture.
*   `Night.Color`: Struct/class for color (RGBA).
*   `Night.BlendMode`: Enum for blending (e.g., `Alpha`, `Add`, `Subtract`, `Multiply`).
*   `Night.BlendAlphaMode`: Enum for alpha blending (e.g., `Multiply`, `PreMultiplied`).
*   `Night.IRenderTarget`: Interface for render targets (Canvas or screen).
*   `Night.RenderTargetFormat`: Enum for pixel formats of render targets.
*   `Night.FilterMode`: Enum (`Linear`, `Nearest`).
*   `Night.CompareMode`: Enum for depth/stencil tests (e.g., `Less`, `Equal`, `Greater`, `Always`).
*   `Night.Font`: Represents a font.
*   `Night.LineStyle`: Enum (`Smooth`, `Rough`).
*   `Night.LineJoin`: Enum (`None`, `Miter`, `Bevel`).
*   `Night.RendererInfo`: Class with properties like `Name`, `Version`, `Vendor`, `Device`.
*   `Night.Rectangle`: Struct/class for a rectangle (X, Y, Width, Height).
*   `Night.Shader`: Represents a shader program.
*   `Night.GraphicsStats`: Class for graphics statistics.
*   `Night.PointF`: Struct for a 2D point with float coordinates.
*   `Night.Sprite`: Represents an image that can be drawn. (Corresponds to Love2D Image)
*   `Night.SpriteBatch`: For optimized drawing of many sprites from the same texture.
*   `Night.Text`: Represents renderable text.
*   `Night.Video`: Represents a video that can be drawn.
*   `Night.VideoOptions`: Options for video loading.
*   `Night.StackType`: Enum (`All`, `Transform`).
*   `Night.TextAlign`: Enum (`Left`, `Center`, `Right`, `Justify`).
*   `Night.StencilAction`: Enum for stencil operations (e.g., `Keep`, `Replace`, `Increment`).
*   `Night.UsageHint`: Enum for SpriteBatch (`Static`, `Dynamic`, `Stream`).



================================================
File: docs/love2d-api/modules/image.md
================================================
# `love.image` Module API Mapping

This document maps the functions available in the `love.image` module of Love2D to their proposed equivalents in the Night Engine. The functionality of this module is often integrated into `Night.Sprite` or `Night.Texture` objects, or handled during image loading. Most direct `love.image` functions are **Out of Scope** for the initial prototype as standalone static methods.

| Love2D Function (`love.image.`) | Night Engine API (`Night.Image` or `Texture`/`Sprite` methods) | Notes / C# Signature Idea | Status (Prototype Scope) | Done |
|---------------------------------|----------------------------------------------------------------|---------------------------|--------------------------|------|
| `love.image.newImageData(width, height, format, data)` | `Night.Image.NewImageData(int width, int height, Night.PixelFormat format = RGBA8, byte[]? data = null)` | `public static Night.ImageData NewImageData(...)` <br> Creates raw image data. `Night.ImageData` would be a class/struct. | Out of Scope | [ ] |
| `love.image.isCompressed(filename)` or `love.image.isCompressed(filedata)` | `Night.Image.IsCompressed(string filePath)` or `Night.Image.IsCompressed(Night.FileData fileData)` | `public static bool IsCompressed(...)` <br> Checks if an image file is a compressed format LÖVE can load. | Out of Scope | [ ] |
| `love.image.newCompressedData(filename)` | `Night.Image.NewCompressedData(string filePath)` | `public static Night.CompressedImageData NewCompressedData(string filePath)` <br> Loads a compressed image file (e.g. DDS, KTX) into a special data object. | Out of Scope | [ ] |

**Related functionality in Night Engine (on `Sprite` or `Texture` or `ImageData` objects):**
*   Getting dimensions: `mySprite.GetWidth()`, `mySprite.GetHeight()`
*   Getting format: `myImageData.GetFormat()`
*   Manipulating pixel data: `myImageData.GetPixel(x,y)`, `myImageData.SetPixel(x,y,color)` (Likely Out of Scope for prototype)
*   Encoding/Decoding: Functionality to save an `ImageData` to a file (e.g., `myImageData.Encode("png", "filename.png")`) is Out of Scope.

**Night Engine Specific Types:**
*   `Night.ImageData`: Represents raw, uncompressed image data. Could have methods like `GetWidth()`, `GetHeight()`, `GetPixel()`, `SetPixel()`.
*   `Night.PixelFormat`: Enum for pixel formats (e.g., `RGBA8`, `RGB8`, `Luminance8`).
*   `Night.FileData`: Represents file data in memory (from `Night.Filesystem`).
*   `Night.CompressedImageData`: Represents compressed image data.
*   `Night.Sprite`: The primary object for loaded images, returned by `Night.Graphics.NewImage()`. It would internally manage texture data.



================================================
File: docs/love2d-api/modules/joystick.md
================================================
# `love.joystick` Module API Mapping

This document maps the functions available in the `love.joystick` module of Love2D to their proposed equivalents in the Night Engine. This entire module is **Out of Scope** for the initial prototype. Joystick event callbacks are noted in the `love` module mapping.

| Love2D Function (`love.joystick.`) | Night Engine API (`Night.Joystick` or `Joystick` instance methods) | Notes / C# Signature Idea | Status (Prototype Scope) | Done |
|------------------------------------|--------------------------------------------------------------------|---------------------------|--------------------------|------|
| `love.joystick.getJoysticks()`     | `Night.Joystick.GetJoysticks()`    | `public static Night.Joystick[] GetJoysticks()` <br> Returns all connected joysticks. | Out of Scope | [ ] |
| `love.joystick.getJoystickCount()` | `Night.Joystick.GetJoystickCount()` | `public static int GetJoystickCount()` | Out of Scope | [ ] |
| `love.joystick.loadGamepadMappings(filename)` or `love.joystick.loadGamepadMappings(string)` | `Night.Joystick.LoadGamepadMappings(string pathOrString)` | `public static bool LoadGamepadMappings(string pathOrString)` | Out of Scope | [ ] |
| `love.joystick.saveGamepadMappings(joystick)` | `(Night.Joystick).SaveGamepadMappings()` | `public string SaveGamepadMappings()` (Method on `Joystick` instance) | Out of Scope | [ ] |
| `love.joystick.setGamepadMapping(guid, buttonOrAxis, inputtype, inputindex, hatdirection)` | `Night.Joystick.SetGamepadMapping(string guid, ...)` | Complex mapping function. | Out of Scope | [ ] |

**Functionality on `Night.Joystick` instances (if implemented):**
*   `joystick.isConnected()`
*   `joystick.getName()`
*   `joystick.getID()` (instance ID)
*   `joystick.getGUID()`
*   `joystick.getAxisCount()`
*   `joystick.getButtonCount()`
*   `joystick.getHatCount()`
*   `joystick.getAxis(axisindex)`
*   `joystick.getAxes()`
*   `joystick.isDown(buttonindex, ...)`
*   `joystick.getHat(hatindex)`
*   `joystick.isGamepad()`
*   `joystick.getGamepadAxis(axis)`
*   `joystick.isGamepadDown(button)`
*   `joystick.setVibration(left, right, duration)`
*   `joystick.hasVibration()`

**Night Engine Specific Types:**
*   `Night.Joystick`: Represents a joystick/gamepad device.
*   `Night.GamepadAxis`: Enum for standard gamepad axes (e.g., `LeftX`, `LeftY`, `RightX`, `RightY`, `TriggerLeft`, `TriggerRight`).
*   `Night.GamepadButton`: Enum for standard gamepad buttons (e.g., `A`, `B`, `X`, `Y`, `Start`, `Select`, `DPadUp`).
*   `Night.HatDirection`: Enum for hat switch directions (e.g., `Centered`, `Up`, `Down`, `Left`, `Right`, `UpLeft`).



================================================
File: docs/love2d-api/modules/keyboard.md
================================================
# `love.keyboard` Module API Mapping

This document maps the functions available in the `love.keyboard` module of Love2D to their proposed equivalents in the Night Engine.

| Love2D Function (`love.keyboard.`) | Night Engine API (`Night.Keyboard.`) | Notes / C# Signature Idea | Status (Prototype Scope) | Done |
|------------------------------------|--------------------------------------|---------------------------|--------------------------|------|
| `love.keyboard.isDown(key)`        | `Night.Keyboard.IsDown(Night.KeyCode key)` | `public static bool IsDown(Night.KeyCode key)` <br> Checks if specific keys are held down. `Night.KeyCode` enum will map to SDL scancodes. | In Scope | [ ] |
| `love.keyboard.isScancodeDown(scancode)` | `Night.Keyboard.IsScancodeDown(Night.Scancode scancode)` | `public static bool IsScancodeDown(Night.Scancode scancode)` <br> `Night.Scancode` would be an enum closely matching SDL scancodes. May be internal or less used if `KeyCode` is preferred. | In Scope (Lower priority than `IsDown`) | [ ] |
| `love.keyboard.getKeyFromScancode(scancode)` | `Night.Keyboard.GetKeyFromScancode(Night.Scancode scancode)` | `public static Night.KeyCode GetKeyFromScancode(Night.Scancode scancode)` | In Scope (Helper for input mapping) | [ ] |
| `love.keyboard.getScancodeFromKey(key)` | `Night.Keyboard.GetScancodeFromKey(Night.KeyCode key)` | `public static Night.Scancode GetScancodeFromKey(Night.KeyCode key)` | In Scope (Helper for input mapping) | [ ] |
| `love.keyboard.setKeyRepeat(enable)` | `Night.Keyboard.SetKeyRepeatEnabled(bool enabled)` | `public static void SetKeyRepeatEnabled(bool enabled)` <br> Enables or disables key repeat for `love.keypressed`. SDL handles this by default; this might control if `isRepeat` is true in `MyGame.KeyPressed`. | In Scope (Verify SDL behavior) | [ ] |
| `love.keyboard.hasKeyRepeat()`     | `Night.Keyboard.HasKeyRepeat()`    | `public static bool HasKeyRepeat()` <br> Checks if key repeat is enabled. | In Scope (Verify SDL behavior) | [ ] |
| `love.keyboard.setTextInput(enable, x, y, w, h)` | `Night.Keyboard.SetTextInputRect(bool enable, Night.Rectangle? rect = null)` | `public static void SetTextInputRect(bool enable, Night.Rectangle? rect = null)` <br> For on-screen keyboards on touch devices. `rect` defines text input area. | Out of Scope | [ ] |
| `love.keyboard.hasScreenKeyboard()` | `Night.Keyboard.HasScreenKeyboard()` | `public static bool HasScreenKeyboard()` | Out of Scope | [ ] |

**Night Engine Specific Types:**
*   `Night.KeyCode`: Enum representing keyboard keys (e.g., `A`, `Space`, `Return`). This will be mapped to SDL scancodes.
*   `Night.Scancode`: Enum representing platform-independent physical key codes (e.g., `SDL_SCANCODE_A`).
*   `Night.Rectangle`: Struct/class for a rectangle (X, Y, Width, Height).



================================================
File: docs/love2d-api/modules/love.md
================================================
# `love` Module API Mapping

This document maps the functions available in the base `love` module of Love2D to their proposed equivalents in the Night Engine.

| Love2D Function (`love.`) | Night Engine API (`Night.`) | Notes / C# Signature Idea | Status (Prototype Scope) | Done |
|---------------------------|-----------------------------|---------------------------|--------------------------|------|
| `love.getVersion()`       | `Night.Engine.GetVersion()` | `public static string GetVersion()` <br> Returns a string like "Major.Minor.Revision Codename". | In Scope | [ ] |
| `love.setDeprecationOutput(boolean enabled)` | `Night.Engine.SetDeprecationOutput(bool enabled)` | `public static void SetDeprecationOutput(bool enabled)` <br> Controls whether Love2D's deprecation warnings are output. May or may not be relevant for Night. | Out of Scope (Low Priority) | [ ] |
| `love.run()`              | `Night.Engine.Run<T>()` or `Night.Engine.Run(IGame gameInstance)` | `public static void Run<T>() where T : IGame, new()` <br> `public static void Run(IGame gameInstance)` <br> This is the main entry point that starts the game loop. The user provides a game class/instance. | In Scope | [x] |
| `love.load(arg)`          | `MyGame.Load(string[] args)` | Implemented by the user in their game class: `void Load(string[] args);` <br> Called once at the beginning. `arg` in Love2D contains command-line arguments. | In Scope | [x] |
| `love.update(dt)`         | `MyGame.Update(double deltaTime)` | Implemented by the user: `void Update(double deltaTime);` <br> Called every frame. | In Scope | [x] |
| `love.draw()`             | `MyGame.Draw()`             | Implemented by the user: `void Draw();` <br> Called every frame after update. | In Scope | [x] |
| `love.quit()`             | `MyGame.Quit()` or `Night.Engine.Quit()` | User implementation: `bool Quit();` (return true to allow quit) <br> Engine initiated: `Night.Engine.RequestQuit()` or similar. Love2D `love.quit` can also be an event. | In Scope (Basic window close event handling) | [ ] |
| `love.focus(f)`           | `MyGame.FocusChanged(bool hasFocus)` | User implementation: `void FocusChanged(bool hasFocus);` | In Scope | [ ] |
| `love.mousefocus(f)`      | `MyGame.MouseFocusChanged(bool hasFocus)` | User implementation: `void MouseFocusChanged(bool hasFocus);` | Out of Scope (Covered by general focus) | [ ] |
| `love.visible(v)`         | `MyGame.VisibilityChanged(bool isVisible)` | User implementation: `void VisibilityChanged(bool isVisible);` | In Scope | [ ] |
| `love.keypressed(key, scancode, isrepeat)` | `MyGame.KeyPressed(Night.KeyCode key, string scancode, bool isRepeat)` | User implementation: `void KeyPressed(Night.KeyCode key, /* SDL_Scancode scancode, */ bool isRepeat);` <br> `scancode` might be abstracted away or be an internal SDL detail. | In Scope | [ ] |
| `love.keyreleased(key, scancode)` | `MyGame.KeyReleased(Night.KeyCode key, string scancode)` | User implementation: `void KeyReleased(Night.KeyCode key /*, SDL_Scancode scancode */);` | In Scope | [ ] |
| `love.textinput(text)`    | `MyGame.TextInput(string text)` | User implementation: `void TextInput(string text);` | In Scope (but low priority for prototype) | [ ] |
| `love.mousepressed(x, y, button, istouch, presses)` | `MyGame.MousePressed(int x, int y, Night.MouseButton button, bool isTouch, int presses)` | User implementation: `void MousePressed(int x, int y, Night.MouseButton button, int presses);` <br> `isTouch` might be handled separately if touch events are distinct. | In Scope | [ ] |
| `love.mousereleased(x, y, button, istouch)` | `MyGame.MouseReleased(int x, int y, Night.MouseButton button, bool isTouch)` | User implementation: `void MouseReleased(int x, int y, Night.MouseButton button);` | In Scope | [ ] |
| `love.mousemoved(x, y, dx, dy, istouch)` | `MyGame.MouseMoved(int x, int y, int deltaX, int deltaY, bool isTouch)` | User implementation: `void MouseMoved(int x, int y, int deltaX, int deltaY);` | In Scope | [ ] |
| `love.wheelmoved(x, y)`   | `MyGame.MouseWheelMoved(int deltaX, int deltaY)` | User implementation: `void MouseWheelMoved(int deltaX, int deltaY);` | In Scope (Basic support) | [ ] |
| `love.joystickpressed(joystick, button)` | `MyGame.JoystickPressed(Night.Joystick joystick, int button)` | User implementation: `void JoystickPressed(Night.Joystick joystick, int button);` | Out of Scope | [ ] |
| `love.joystickreleased(joystick, button)` | `MyGame.JoystickReleased(Night.Joystick joystick, int button)` | User implementation: `void JoystickReleased(Night.Joystick joystick, int button);` | Out of Scope | [ ] |
| `love.joystickaxis(joystick, axis, value)` | `MyGame.JoystickAxisMoved(Night.Joystick joystick, int axis, float value)` | User implementation: `void JoystickAxisMoved(Night.Joystick joystick, int axis, float value);` | Out of Scope | [ ] |
| `love.joystickhat(joystick, hat, direction)` | `MyGame.JoystickHatMoved(Night.Joystick joystick, int hat, Night.HatDirection direction)` | User implementation: `void JoystickHatMoved(Night.Joystick joystick, int hat, Night.HatDirection direction);` | Out of Scope | [ ] |
| `love.joystickadded(joystick)` | `MyGame.JoystickAdded(Night.Joystick joystick)` | User implementation: `void JoystickAdded(Night.Joystick joystick);` | Out of Scope | [ ] |
| `love.joystickremoved(joystick)` | `MyGame.JoystickRemoved(Night.Joystick joystick)` | User implementation: `void JoystickRemoved(Night.Joystick joystick);` | Out of Scope | [ ] |
| `love.touchpressed(id, x, y, dx, dy, pressure)` | `MyGame.TouchPressed(long id, float x, float y, float deltaX, float deltaY, float pressure)` | User implementation: `void TouchPressed(long id, float x, float y, float deltaX, float deltaY, float pressure);` | Out of Scope | [ ] |
| `love.touchreleased(id, x, y, dx, dy, pressure)` | `MyGame.TouchReleased(long id, float x, float y, float deltaX, float deltaY, float pressure)` | User implementation: `void TouchReleased(long id, float x, float y, float deltaX, float deltaY, float pressure);` | Out of Scope | [ ] |
| `love.touchmoved(id, x, y, dx, dy, pressure)` | `MyGame.TouchMoved(long id, float x, float y, float deltaX, float deltaY, float pressure)` | User implementation: `void TouchMoved(long id, float x, float y, float deltaX, float deltaY, float pressure);` | Out of Scope | [ ] |
| `love.lowmemory()`        | `MyGame.LowMemory()`        | User implementation: `void LowMemory();` | Out of Scope | [ ] |
| `love.threaderror(thread, errorstr)` | `MyGame.ThreadError(Night.Thread thread, string error)` | User implementation: `void ThreadError(Night.Thread thread, string error);` | Out of Scope | [ ] |
| `love.directorydropped(path)` | `MyGame.DirectoryDropped(string path)` | User implementation: `void DirectoryDropped(string path);` | Out of Scope | [ ] |
| `love.filedropped(file)`  | `MyGame.FileDropped(Night.File file)` | User implementation: `void FileDropped(Night.File file);` <br> `Night.File` would be a wrapper for file data. | Out of Scope | [ ] |
| `love.resize(w, h)`       | `MyGame.WindowResized(int width, int height)` | User implementation: `void WindowResized(int width, int height);` | In Scope | [ ] |

*Note: Many `love` module functions are event callbacks. In Night Engine, these will be methods the user implements in their game class, which are then called by `Night.Engine`.*



================================================
File: docs/love2d-api/modules/math.md
================================================
# `love.math` Module API Mapping

This document maps the functions available in the `love.math` module of Love2D to their proposed equivalents in the Night Engine. Most of this functionality can be achieved using `System.Math` and `System.Random` in C#. A dedicated `Night.Math` module is **Out of Scope** for the initial prototype, but specific advanced functions might be added later.

| Love2D Function (`love.math.`) | Night Engine API (`Night.Math` or `System`) | Notes / C# Signature Idea | Status (Prototype Scope) | Done |
|--------------------------------|---------------------------------------------|---------------------------|--------------------------|------|
| `love.math.triangulate(polygon)` | `Night.Math.Triangulate(Night.PointF[] polygon)` | `public static int[] Triangulate(Night.PointF[] polygon)` <br> Returns indices for triangles. | Out of Scope | [ ] |
| `love.math.isConvex(polygon)`  | `Night.Math.IsConvex(Night.PointF[] polygon)` | `public static bool IsConvex(Night.PointF[] polygon)` | Out of Scope | [ ] |
| `love.math.getAngle(x1, y1, x2, y2)` | `Night.Math.GetAngle(float x1, float y1, float x2, float y2)` | `public static double GetAngle(float x1, float y1, float x2, float y2)` <br> Similar to `Math.Atan2(y2 - y1, x2 - x1)`. | Out of Scope (Use `System.Math`) | [ ] |
| `love.math.noise(x, y, z, w)`  | `Night.Math.Noise(double x, double? y = null, double? z = null, double? w = null)` | `public static double Noise(...)` <br> Simplex noise. | Out of Scope | [ ] |
| `love.math.random()`             | `(new System.Random()).NextDouble()` or `Night.Math.Random()` | `public static double Random()` <br> Returns [0, 1). | Out of Scope (Use `System.Random`) | [ ] |
| `love.math.random(max)`          | `(new System.Random()).Next(max + 1)` or `Night.Math.Random(int max)` | `public static int Random(int max)` <br> Returns [0, max]. Or `Next(1, max + 1)` for [1, max]. Love2D is [1,max] for integer. | Out of Scope (Use `System.Random`) | [ ] |
| `love.math.random(min, max)`     | `(new System.Random()).Next(min, max + 1)` or `Night.Math.Random(int min, int max)` | `public static int Random(int min, int max)` <br> Returns [min, max]. | Out of Scope (Use `System.Random`) | [ ] |
| `love.math.randomNormal(stddev, mean)` | `Night.Math.RandomNormal(double stdDev = 1.0, double mean = 0.0)` | `public static double RandomNormal(...)` <br> Normally distributed random number. | Out of Scope | [ ] |
| `love.math.setRandomSeed(seed)`  | `Night.Math.SetRandomSeed(int seed)` or `new System.Random(seed)` | `public static void SetRandomSeed(int seed)` <br> For a global `Night.Math` random generator. | Out of Scope (Use `System.Random` instance) | [ ] |
| `love.math.getRandomSeed()`      | `Night.Math.GetRandomSeed()`      | `public static (int seed, int? highSeed) GetRandomSeed()` | Out of Scope | [ ] |
| `love.math.getRandomState()`     | `Night.Math.GetRandomState()`     | `public static string GetRandomState()` | Out of Scope | [ ] |
| `love.math.setRandomState(state)`| `Night.Math.SetRandomState(string state)` | `public static void SetRandomState(string state)` | Out of Scope | [ ] |
| `love.math.newBezierCurve(points)` | `Night.Math.NewBezierCurve(Night.PointF[] controlPoints)` | `public static Night.BezierCurve NewBezierCurve(...)` | Out of Scope | [ ] |
| `love.math.newRandomGenerator()` | `Night.Math.NewRandomGenerator()` | `public static System.Random NewRandomGenerator()` or a custom `Night.RandomGenerator` class. | Out of Scope | [ ] |
| `love.math.gammaToLinear(c)`     | `Night.Math.GammaToLinear(double colorComponent)` | `public static double GammaToLinear(double colorComponent)` | Out of Scope | [ ] |
| `love.math.linearToGamma(c)`     | `Night.Math.LinearToGamma(double colorComponent)` | `public static double LinearToGamma(double colorComponent)` | Out of Scope | [ ] |

**Night Engine Specific Types (if module were implemented):**
*   `Night.PointF`: Struct for a 2D point with float coordinates.
*   `Night.BezierCurve`: Class representing a Bezier curve, with methods like `Evaluate(t)`, `GetDerivative(t)`.
*   `Night.RandomGenerator`: A class that might encapsulate `System.Random` or a custom PRNG, potentially with Love2D-compatible state management.



================================================
File: docs/love2d-api/modules/mouse.md
================================================
# `love.mouse` Module API Mapping

This document maps the functions available in the `love.mouse` module of Love2D to their proposed equivalents in the Night Engine.

| Love2D Function (`love.mouse.`) | Night Engine API (`Night.Mouse.`) | Notes / C# Signature Idea | Status (Prototype Scope) | Done |
|---------------------------------|-----------------------------------|---------------------------|--------------------------|------|
| `love.mouse.getX()`             | `Night.Mouse.GetX()`              | `public static int GetX()` | In Scope | [ ] |
| `love.mouse.getY()`             | `Night.Mouse.GetY()`              | `public static int GetY()` | In Scope | [ ] |
| `love.mouse.getPosition()`      | `Night.Mouse.GetPosition()`       | `public static (int x, int y) GetPosition()` | In Scope | [ ] |
| `love.mouse.isDown(button)`     | `Night.Mouse.IsDown(Night.MouseButton button)` | `public static bool IsDown(Night.MouseButton button)` <br> `Night.MouseButton` enum: `Left`, `Right`, `Middle`, `X1`, `X2`, etc. | In Scope | [ ] |
| `love.mouse.isVisible()`        | `Night.Mouse.IsVisible()`         | `public static bool IsVisible()` | In Scope | [ ] |
| `love.mouse.setX(x)`            | `Night.Mouse.SetX(int x)`         | `public static void SetX(int x)` <br> Warps mouse cursor. | In Scope (Low priority) | [ ] |
| `love.mouse.setY(y)`            | `Night.Mouse.SetY(int y)`         | `public static void SetY(int y)` <br> Warps mouse cursor. | In Scope (Low priority) | [ ] |
| `love.mouse.setPosition(x,y)`   | `Night.Mouse.SetPosition(int x, int y)` | `public static void SetPosition(int x, int y)` <br> Warps mouse cursor. | In Scope (Low priority) | [ ] |
| `love.mouse.setVisible(visible)`| `Night.Mouse.SetVisible(bool visible)` | `public static void SetVisible(bool visible)` | In Scope | [ ] |
| `love.mouse.setGrabbed(grab)`   | `Night.Mouse.SetGrabbed(bool grabbed)` | `public static void SetGrabbed(bool grabbed)` <br> Confines cursor to window. | In Scope (Low priority) | [ ] |
| `love.mouse.isGrabbed()`        | `Night.Mouse.IsGrabbed()`         | `public static bool IsGrabbed()` | In Scope (Low priority) | [ ] |
| `love.mouse.getRelativeMode()`  | `Night.Mouse.GetRelativeMode()`   | `public static bool GetRelativeMode()` | In Scope (Low priority, for FPS-style input) | [ ] |
| `love.mouse.setRelativeMode(enable)` | `Night.Mouse.SetRelativeMode(bool enable)` | `public static void SetRelativeMode(bool enable)` | In Scope (Low priority) | [ ] |
| `love.mouse.getCursor()`        | `Night.Mouse.GetCursor()`         | `public static Night.Cursor GetCursor()` <br> `Night.Cursor` would be a custom cursor object. | Out of Scope | [ ] |
| `love.mouse.setCursor(cursor)`  | `Night.Mouse.SetCursor(Night.Cursor? cursor = null)` | `public static void SetCursor(Night.Cursor? cursor = null)` <br> `null` for default system cursor. | Out of Scope | [ ] |
| `love.mouse.newCursor(imagedata, hotx, hoty)` | `Night.Mouse.NewCursor(Night.ImageData imageData, int hotSpotX, int hotSpotY)` | `public static Night.Cursor NewCursor(...)` | Out of Scope | [ ] |
| `love.mouse.getSystemCursor(ctype)` | `Night.Mouse.GetSystemCursor(Night.SystemCursorType type)` | `public static Night.Cursor GetSystemCursor(Night.SystemCursorType type)` <br> `SystemCursorType` enum: `Arrow`, `IBeam`, `Crosshair`, etc. | Out of Scope | [ ] |

**Night Engine Specific Types:**
*   `Night.MouseButton`: Enum representing mouse buttons (e.g., `Left`, `Right`, `Middle`, `X1`, `X2`).
*   `Night.Cursor`: Represents a mouse cursor (custom or system).
*   `Night.ImageData`: Wrapper for image data, likely from `Night.Image` module.
*   `Night.SystemCursorType`: Enum for standard system cursors.



================================================
File: docs/love2d-api/modules/sound.md
================================================
# `love.sound` Module API Mapping

This document maps the functions available in the `love.sound` module of Love2D to their proposed equivalents in the Night Engine. This module is primarily for decoding sound data, which would be handled internally by `Night.Audio.NewSource` or `Night.Source` objects if the audio module were implemented. This entire module is **Out of Scope** for the initial prototype.

| Love2D Function (`love.sound.`) | Night Engine API (`Night.Sound` or `Night.Audio` internals) | Notes / C# Signature Idea | Status (Prototype Scope) | Done |
|---------------------------------|-------------------------------------------------------------|---------------------------|--------------------------|------|
| `love.sound.newDecoder(filedata, bufferSize)` | `Night.Audio.NewDecoder(Night.FileData fileData, int bufferSize = 4096)` | `public static Night.Decoder NewDecoder(...)` <br> Creates a sound decoder. | Out of Scope | [ ] |
| `love.sound.newSoundData(samples, sampleRate, bitDepth, channels)` | `Night.Audio.NewSoundData(int samples, int sampleRate, int bitDepth, int channels)` or `Night.Audio.NewSoundData(byte[] rawPcmData, ...)` | `public static Night.SoundData NewSoundData(...)` <br> Creates raw sound data. | Out of Scope | [ ] |

**Functionality on `Night.Decoder` instances (if implemented):**
*   `decoder.GetBitDepth()`
*   `decoder.GetChannelCount()`
*   `decoder.GetDuration()`
*   `decoder.GetSampleRate()`
*   `decoder.Decode()` (returns a chunk of SoundData)
*   `decoder.Seek(offset)`

**Functionality on `Night.SoundData` instances (if implemented):**
*   `soundData.GetBitDepth()`
*   `soundData.GetChannelCount()`
*   `soundData.GetDuration()`
*   `soundData.GetSampleCount()`
*   `soundData.GetSampleRate()`
*   `soundData.GetSample(index)`
*   `soundData.SetSample(index, value)`
*   `soundData.Clone()`

**Night Engine Specific Types (if module were implemented):**
*   `Night.Decoder`: Represents an object that can decode audio from a stream or file data.
*   `Night.SoundData`: Represents raw PCM audio data in memory.
*   `Night.FileData`: Represents file data in memory (from `Night.Filesystem`).



================================================
File: docs/love2d-api/modules/system.md
================================================
# `love.system` Module API Mapping

This document maps the functions available in the `love.system` module of Love2D to their proposed equivalents in the Night Engine. Most functions in this module are **Out of Scope** for the initial prototype. Standard .NET `System.Environment` or `System.Runtime.InteropServices.RuntimeInformation` can provide some of this.

| Love2D Function (`love.system.`) | Night Engine API (`Night.System` or `System` namespace) | Notes / C# Signature Idea | Status (Prototype Scope) | Done |
|----------------------------------|---------------------------------------------------------|---------------------------|--------------------------|------|
| `love.system.getOS()`            | `Night.System.GetOSName()` or `System.Runtime.InteropServices.RuntimeInformation.OSDescription` | `public static string GetOSName()` | Out of Scope | [ ] |
| `love.system.getProcessorCount()`| `System.Environment.ProcessorCount` | `public static int GetProcessorCount()` (via `System.Environment`) | Out of Scope | [ ] |
| `love.system.getPowerInfo()`     | `Night.System.GetPowerInfo()`     | `public static Night.PowerInfo GetPowerInfo()` <br> `PowerInfo` class: `State` (enum), `SecondsLeft` (nullable int), `Percent` (nullable int). | Out of Scope | [ ] |
| `love.system.getClipboardText()` | `Night.System.GetClipboardText()` | `public static string GetClipboardText()` <br> Would need platform-specific implementation or a library. | Out of Scope | [ ] |
| `love.system.setClipboardText(text)` | `Night.System.SetClipboardText(string text)` | `public static void SetClipboardText(string text)` | Out of Scope | [ ] |
| `love.system.openURL(url)`       | `Night.System.OpenURL(string url)` or `System.Diagnostics.Process.Start()` | `public static bool OpenURL(string url)` <br> `Process.Start(new ProcessStartInfo(url) { UseShellExecute = true });` | Out of Scope | [ ] |
| `love.system.vibrate(seconds)`   | `Night.System.Vibrate(double seconds)` | `public static void Vibrate(double seconds)` <br> For mobile devices. | Out of Scope | [ ] |
| `love.system.getPreferredLocales()` | `Night.System.GetPreferredLocales()` | `public static string[] GetPreferredLocales()` <br> From `System.Globalization.CultureInfo.CurrentUICulture` etc. | Out of Scope | [ ] |

**Night Engine Specific Types (if module were implemented):**
*   `Night.PowerInfo`: Class/Struct with properties `State` (enum: `NoBattery`, `Charging`, `Charged`, `Draining`), `SecondsLeft` (nullable int), `Percent` (nullable int).



================================================
File: docs/love2d-api/modules/thread.md
================================================
# `love.thread` Module API Mapping

This document maps the functions available in the `love.thread` module of Love2D to their proposed equivalents in the Night Engine. This entire module is **Out of Scope** for the initial prototype, as .NET provides comprehensive threading capabilities via `System.Threading`.

| Love2D Function (`love.thread.`) | Night Engine API (`Night.Thread` or `System.Threading`) | Notes / C# Signature Idea | Status (Prototype Scope) | Done |
|----------------------------------|---------------------------------------------------------|---------------------------|--------------------------|------|
| `love.thread.newThread(filename)` or `love.thread.newThread(codestring)` | `Night.Thread.NewThread(string luaScriptPathOrCode)` or `new System.Threading.Thread(...)` | `public static Night.Thread NewThread(string luaScriptPathOrCode)` <br> Love2D threads run Lua code. Night Engine would use C# delegates/lambdas with `System.Threading.Thread` or `Task`. | Out of Scope | [ ] |
| `love.thread.getChannel(name)`   | `Night.Thread.GetChannel<T>(string name)` | `public static Night.Channel<T> GetChannel<T>(string name)` <br> Channels are for inter-thread communication. | Out of Scope | [ ] |
| `love.thread.newChannel()`       | `Night.Thread.NewChannel<T>()`    | `public static Night.Channel<T> NewChannel<T>()` | Out of Scope | [ ] |

**Functionality on `Night.Thread` instances (if implemented, wrapping `System.Threading.Thread`):**
*   `thread.Start()`
*   `thread.Wait()`
*   `thread.IsRunning()`
*   `thread.GetError()`

**Functionality on `Night.Channel<T>` instances (if implemented, similar to `System.Threading.Channels.Channel<T>`):**
*   `channel.Push(T value)`
*   `channel.Pop()` (non-blocking, returns nullable T)
*   `channel.Demand()` (blocking, returns T)
*   `channel.Peek()`
*   `channel.GetCount()`
*   `channel.HasRead(id)`
*   `channel.Clear()`
*   `channel.PerformAtomic(Func<bool> operation)`

**Night Engine Specific Types (if module were implemented):**
*   `Night.Thread`: A wrapper around `System.Threading.Thread` or `Task`, potentially with easier error handling or specific Love2D-like behaviors if Lua interop were a goal.
*   `Night.Channel<T>`: A thread-safe communication channel, similar to `System.Threading.Channels.Channel<T>`.



================================================
File: docs/love2d-api/modules/timer.md
================================================
# `love.timer` Module API Mapping

This document maps the functions available in the `love.timer` module of Love2D to their proposed equivalents in the Night Engine. Most functions in this module are **Out of Scope** for the initial prototype.

| Love2D Function (`love.timer.`) | Night Engine API (`Night.Timer.`) | Notes / C# Signature Idea | Status (Prototype Scope) | Done |
|---------------------------------|-----------------------------------|---------------------------|--------------------------|------|
| `love.timer.getDelta()`         | `Night.Timer.GetDelta()`      | `public static double GetDelta()` <br> Time since last frame. This is already provided to `MyGame.Update(deltaTime)`. This function would provide it on demand. | Out of Scope (Covered by `Update`'s `deltaTime`) | [ ] |
| `love.timer.getFPS()`           | `Night.Timer.GetFPS()`            | `public static int GetFPS()` <br> Current frames per second. | In Scope (Useful for debugging/display) | [ ] |
| `love.timer.getAverageDelta()`  | `Night.Timer.GetAverageDelta()` | `public static double GetAverageDeltaTime()` <br> Average delta time over the last second. | Out of Scope | [ ] |
| `love.timer.getTime()`          | `Night.Timer.GetTime()`           | `public static double GetTime()` <br> Time since the game started, in seconds. | In Scope (Useful utility) | [ ] |
| `love.timer.sleep(s)`           | `Night.Timer.Sleep(double seconds)` | `public static void Sleep(double seconds)` <br> Pauses execution. | Out of Scope (Generally not recommended in game loops) | [ ] |
| `love.timer.step()`             | `Night.Timer.Step()`              | `public static double Step()` <br> Measures time between calls. Used internally by Love2D's default `love.run`. Night Engine will have its own internal timing. | Out of Scope (Engine internal) | [ ] |



================================================
File: docs/love2d-api/modules/touch.md
================================================
# `love.touch` Module API Mapping

This document maps the functions available in the `love.touch` module of Love2D to their proposed equivalents in the Night Engine. This entire module is **Out of Scope** for the initial prototype. Touch event callbacks are noted in the `love` module mapping.

| Love2D Function (`love.touch.`) | Night Engine API (`Night.Touch.`) | Notes / C# Signature Idea | Status (Prototype Scope) | Done |
|---------------------------------|-----------------------------------|---------------------------|--------------------------|------|
| `love.touch.getPosition(id)`    | `Night.Touch.GetPosition(long touchId)` | `public static (float x, float y) GetPosition(long touchId)` | Out of Scope | [ ] |
| `love.touch.getPressure(id)`    | `Night.Touch.GetPressure(long touchId)` | `public static float GetPressure(long touchId)` | Out of Scope | [ ] |
| `love.touch.getTouches()`       | `Night.Touch.GetActiveTouches()`  | `public static long[] GetActiveTouches()` <br> Returns IDs of currently active touches. | Out of Scope | [ ] |

**Night Engine Specific Types (if module were implemented):**
*   Touch events in `MyGame` would pass a `Night.TouchEventArgs` object containing `Id`, `X`, `Y`, `DeltaX`, `DeltaY`, `Pressure`.



================================================
File: docs/love2d-api/modules/video.md
================================================
# `love.video` Module API Mapping

This document maps the functions available in the `love.video` module of Love2D to their proposed equivalents in the Night Engine. This entire module is **Out of Scope** for the initial prototype. The primary way to get a video object in Night Engine would be `Night.Graphics.NewVideo()`.

| Love2D Function (`love.video.`) | Night Engine API (`Night.Video` methods or `Night.Graphics`) | Notes / C# Signature Idea | Status (Prototype Scope) | Done |
|---------------------------------|--------------------------------------------------------------|---------------------------|--------------------------|------|
| `love.video.newVideoStream(filename)` | `Night.Graphics.NewVideo(string filePath, Night.VideoOptions? options = null)` | `public static Night.Video NewVideo(...)` <br> This is the main entry point. `VideoStream` in Love2D is just `Video`. | Out of Scope | [ ] |

**Functionality on `Night.Video` instances (if implemented):**
*   `video.Play()`
*   `video.Pause()`
*   `video.Seek(offset)`
*   `video.Tell()` (get current playback time)
*   `video.GetSource()` (audio source associated with video)
*   `video.IsPlaying()`
*   `video.SetSync(audioSource)`
*   `video.GetWidth()`, `video.GetHeight()` (as an `IDrawable`)
*   `video.GetFilename()`
*   `video.GetFilter()`
*   `video.SetFilter(min, mag)`

**Night Engine Specific Types (if module were implemented):**
*   `Night.Video`: Represents a video object. It would be an `IDrawable` and might internally manage a `Night.Source` for audio. Created via `Night.Graphics.NewVideo()`.
*   `Night.VideoOptions`: Class for video loading options (e.g., `EnableAudio`).
*   `Night.Source`: Audio source from `Night.Audio` module.
*   `Night.FilterMode`: Enum (`Linear`, `Nearest`).



================================================
File: docs/love2d-api/modules/window.md
================================================
# `love.window` Module API Mapping

This document maps the functions available in the `love.window` module of Love2D to their proposed equivalents in the Night Engine.

| Love2D Function (`love.window.`) | Night Engine API (`Night.Window.`) | Notes / C# Signature Idea | Status (Prototype Scope) | Done |
|----------------------------------|------------------------------------|---------------------------|--------------------------|------|
| `love.window.close()`            | `Night.Window.Close()`             | `public static void Close()` <br> Requests to close the window. The `MyGame.Quit()` callback will be invoked. | In Scope | [x] |
| `love.window.displaySleepEnabled()` | `Night.Window.IsDisplaySleepEnabled()` | `public static bool IsDisplaySleepEnabled()` | Out of Scope | [ ] |
| `love.window.fromPixels(px_x, px_y)` | `Night.Window.FromPixels(double pixelX, double pixelY)` | `public static (double x, double y) FromPixels(double pixelX, double pixelY)` <br> Converts pixel coordinates to density-independent units. | In Scope (if high DPI is handled) | [ ] |
| `love.window.getDesktopDimensions(displayindex)` | `Night.Window.GetDesktopDimensions(int displayIndex = 0)` | `public static (int width, int height) GetDesktopDimensions(int displayIndex = 0)` | In Scope (for default display) | [ ] |
| `love.window.getDimensions()`      | `Night.Window.GetDimensions()`     | `public static (int width, int height) GetDimensions()` | In Scope | [ ] |
| `love.window.getDisplayCount()`    | `Night.Window.GetDisplayCount()`   | `public static int GetDisplayCount()` | In Scope (for default display awareness) | [ ] |
| `love.window.getDisplayName(displayindex)` | `Night.Window.GetDisplayName(int displayIndex = 0)` | `public static string GetDisplayName(int displayIndex = 0)` | Out of Scope | [ ] |
| `love.window.getFullscreen()`      | `Night.Window.IsFullscreen()`      | `public static bool IsFullscreen()` <br> Returns true if fullscreen. Also need `Night.Window.GetFullscreenMode()` for type. | In Scope | [ ] |
| `love.window.getFullscreenModes(displayindex)` | `Night.Window.GetFullscreenModes(int displayIndex = 0)` | `public static Night.FullscreenMode[] GetFullscreenModes(int displayIndex = 0)` <br> `FullscreenMode` struct/class: `int Width, int Height, int RefreshRate`. | In Scope (for setting fullscreen) | [ ] |
| `love.window.getIcon()`            | `Night.Window.GetIcon()`           | `public static Night.ImageData? GetIcon()` | In Scope | [x] |
| `love.window.getMode()`            | `Night.Window.GetMode()`           | `public static (int width, int height, Night.WindowFlags flags) GetMode()` <br> `WindowFlags` would be a struct/class. | In Scope | [ ] |
| `love.window.getPixelDimensions()` | `Night.Window.GetPixelDimensions()` | `public static (int pixelWidth, int pixelHeight) GetPixelDimensions()` | In Scope (if high DPI is handled) | [ ] |
| `love.window.getPixelScale()`      | `Night.Window.GetPixelScale()`     | `public static double GetPixelScale()` | In Scope (if high DPI is handled) | [ ] |
| `love.window.getPosition()`        | `Night.Window.GetPosition()`       | `public static (int x, int y, int displayIndex) GetPosition()` | In Scope | [ ] |
| `love.window.getTitle()`           | `Night.Window.GetTitle()`          | `public static string GetTitle()` | In Scope | [ ] |
| `love.window.hasFocus()`           | `Night.Window.HasFocus()`          | `public static bool HasFocus()` | In Scope | [ ] |
| `love.window.hasMouseFocus()`      | `Night.Window.HasMouseFocus()`     | `public static bool HasMouseFocus()` | In Scope | [ ] |
| `love.window.isMaximized()`        | `Night.Window.IsMaximized()`       | `public static bool IsMaximized()` | In Scope | [ ] |
| `love.window.isMinimized()`        | `Night.Window.IsMinimized()`       | `public static bool IsMinimized()` | In Scope | [ ] |
| `love.window.isOpen()`             | `Night.Window.IsOpen()`            | `public static bool IsOpen()` <br> Checks if the window is open and the game should continue running. | In Scope | [x] |
| `love.window.isVisible()`          | `Night.Window.IsVisible()`         | `public static bool IsVisible()` | In Scope | [ ] |
| `love.window.maximize()`           | `Night.Window.Maximize()`          | `public static void Maximize()` | In Scope | [ ] |
| `love.window.minimize()`           | `Night.Window.Minimize()`          | `public static void Minimize()` | In Scope | [ ] |
| `love.window.requestAttention(continuous)` | `Night.Window.RequestAttention(bool continuous = false)` | `public static void RequestAttention(bool continuous = false)` | Out of Scope | [ ] |
| `love.window.restore()`            | `Night.Window.Restore()`           | `public static void Restore()` <br> Restores after minimize/maximize. | In Scope | [ ] |
| `love.window.setDisplaySleepEnabled(enable)` | `Night.Window.SetDisplaySleepEnabled(bool enable)` | `public static void SetDisplaySleepEnabled(bool enable)` | Out of Scope | [ ] |
| `love.window.setFullscreen(fullscreen, fstype)` | `Night.Window.SetFullscreen(bool fullscreen, Night.FullscreenType type = Night.FullscreenType.Desktop)` | `public static bool SetFullscreen(bool fullscreen, Night.FullscreenType type = Night.FullscreenType.Desktop)` <br> `FullscreenType` enum: `Desktop`, `Exclusive`. Returns success. | In Scope | [ ] |
| `love.window.setIcon(imagedata)`   | `Night.Window.SetIcon(string imagePath)` | `public static bool SetIcon(string imagePath)` | In Scope | [x] |
| `love.window.setMode(width, height, flags)` | `Night.Window.SetMode(int width, int height, Night.WindowFlags? flags = null)` | `public static bool SetMode(int width, int height, Night.WindowFlags? flags = null)` <br> `flags` could include: `Fullscreen`, `Resizable`, `Borderless`, `VSync`, `MinMSAA`, `DepthBits`, `StencilBits`. Returns success. | In Scope | [x] |
| `love.window.setPosition(x, y, displayindex)` | `Night.Window.SetPosition(int x, int y, int displayIndex = -1)` | `public static void SetPosition(int x, int y, int displayIndex = -1)` <br> `displayIndex = -1` could mean current or primary. | In Scope | [ ] |
| `love.window.setTitle(title)`      | `Night.Window.SetTitle(string title)` | `public static void SetTitle(string title)` | In Scope | [x] |
| `love.window.toPixels(x, y)`       | `Night.Window.ToPixels(double x, double y)` | `public static (double pixelX, double pixelY) ToPixels(double x, double y)` <br> Converts density-independent units to pixel coordinates. | In Scope (if high DPI is handled) | [ ] |
| `love.window.updateMode(width, height, flags)` | `Night.Window.UpdateMode(int width, int height, Night.WindowFlags? flags = null)` | `public static bool UpdateMode(int width, int height, Night.WindowFlags? flags = null)` <br> Similar to `SetMode` but for an existing window. | In Scope | [ ] |
| `love.window.showMessageBox(title, message, type, attachtowindow)` | `Night.Window.ShowMessageBox(string title, string message, Night.MessageBoxType type = Night.MessageBoxType.Info, bool attachToWindow = true)` | `public static void ShowMessageBox(string title, string message, Night.MessageBoxType type = Night.MessageBoxType.Info, bool attachToWindow = true)` <br> `MessageBoxType` enum: `Info`, `Warning`, `Error`. | Out of Scope (Low priority) | [ ] |

**Night Engine Specific Types:**
*   `Night.WindowFlags`: A struct or class that might contain boolean properties like `Fullscreen`, `Resizable`, `Borderless`, `VSync`, and potentially integer values for `MinMSAA`, `DepthBits`, `StencilBits`.
*   `Night.FullscreenType`: Enum (`Desktop`, `Exclusive`).
*   `Night.FullscreenMode`: Struct/class (`int Width, int Height, int RefreshRate`).
*   `Night.ImageData`: Wrapper for image data, likely from `Night.Image` module.
*   `Night.MessageBoxType`: Enum (`Info`, `Warning`, `Error`).




================================================
File: scripts/sync_sdl3.py
================================================
import requests
import zipfile
import os
import shutil
import tempfile
import xml.etree.ElementTree as ET

OWNER = "nightconcept"
REPO = "build-sdl"
PREBUILT_DIR = os.path.join(os.path.dirname(__file__), "..", "lib", "SDL3-Prebuilt")
VERSION_FILE = os.path.join(PREBUILT_DIR, "version.txt")

LIBRARIES_CONFIG = {
    "sdl3-core": {
        "tag_prefix": "sdl3-core-release-",
        "asset_lib_name": "SDL3",
        "lib_files": {
            "windows": "SDL3.dll",
            "macos": "libSDL3.0.dylib",
            "linux": "libSDL3.so.0",
        },
        "extract_subfolder": None,
        "csproj_path": os.path.join(os.path.dirname(__file__), "..", "lib", "SDL3-CS", "SDL3-CS.Native", "SDL3-CS.Native.csproj")
    },
    "sdl2_mixer": {
        "tag_prefix": "sdl3_mixer-release-",
        "asset_lib_name": {
            "windows": "SDL2_mixer",        # Windows asset zip uses SDL2_mixer
            "macos": "SDL3_mixer",
            "linux": "SDL3_mixer"
        },
        "lib_files": {
            "windows": "SDL2_mixer.dll",
            "macos": "libSDL3_mixer.0.dylib",
            "linux": "libSDL3_mixer.so.0",
        },
        "extract_subfolder": None,
        "csproj_path": os.path.join(os.path.dirname(__file__), "..", "lib", "SDL3-CS", "SDL3-CS.Native.Mixer", "SDL3-CS.Native.Mixer.csproj")
    },
    "sdl3_ttf": {
        "tag_prefix": "sdl3_ttf-release-",
        "asset_lib_name": "SDL3_ttf",
        "lib_files": {
            "windows": "SDL3_ttf.dll",
            "macos": "libSDL3_ttf.0.dylib",
            "linux": "libSDL3_ttf.so.0",
        },
        "extract_subfolder": None,
        "csproj_path": os.path.join(os.path.dirname(__file__), "..", "lib", "SDL3-CS", "SDL3-CS.Native.TTF", "SDL3-CS.Native.TTF.csproj")
    },
    "sdl3_image": {
        "tag_prefix": "sdl3_image-release-",
        "asset_lib_name": "SDL3_image",
        "lib_files": {
            "windows": "SDL3_image.dll",
            "macos": "libSDL3_image.0.dylib",
            "linux": "libSDL3_image.so.0",
        },
        "extract_subfolder": None,
        "csproj_path": os.path.join(os.path.dirname(__file__), "..", "lib", "SDL3-CS", "SDL3-CS.Native.Image", "SDL3-CS.Native.Image.csproj")
    },
}

PLATFORM_TAGS = {
    "windows": "win32-x64",
    "macos": "macos-universal", # Default for macOS, overridden for SDL_image arm64
    "linux": "linux-x86_64",
}

# Ensure PREBUILT_DIR subdirectories exist
for platform in PLATFORM_TAGS.keys():
    os.makedirs(os.path.join(PREBUILT_DIR, platform), exist_ok=True)

def get_all_releases():
    """Fetches all release information from GitHub."""
    api_url = f"https://api.github.com/repos/{OWNER}/{REPO}/releases"
    print(f"Fetching all releases from {api_url}...")
    response = requests.get(api_url)
    response.raise_for_status()
    return response.json()

def get_version_from_csproj(csproj_path):
    """Extracts and formats the version from a .csproj file."""
    try:
        tree = ET.parse(csproj_path)
        root = tree.getroot()
        nugetPropertyGroup = root.find("./PropertyGroup[@Label='NuGet']")
        if nugetPropertyGroup is not None:
            version_element = nugetPropertyGroup.find("Version")
            if version_element is not None and version_element.text:
                full_version = version_element.text.strip()
                # Convert "X.Y.Z.W" to "X.Y.Z"
                parts = full_version.split('.')
                if len(parts) >= 3:
                    return ".".join(parts[:3])
                else:
                    print(f"Warning: Version '{full_version}' in {csproj_path} is not in expected X.Y.Z.W format.")
                    return None
        print(f"Warning: Could not find <Version> tag under <PropertyGroup Label='NuGet'> in {csproj_path}.")
        return None
    except ET.ParseError:
        print(f"Error: Could not parse XML from {csproj_path}.")
        return None
    except FileNotFoundError:
        print(f"Error: .csproj file not found at {csproj_path}.")
        return None

def get_specific_release_by_version_tag(releases, tag_prefix, target_version_str):
    """Finds a specific release matching a given tag prefix and version string."""
    expected_tag_name = tag_prefix + target_version_str
    print(f"Searching for release with exact tag: {expected_tag_name}")
    for release in releases:
        if release.get("tag_name", "") == expected_tag_name:
            release["parsed_version"] = target_version_str  # Store the clean version string
            print(f"Found specific release: {release['tag_name']}")
            return release
    print(f"Release with tag '{expected_tag_name}' not found.")
    return None

def find_asset_url(release_data, expected_asset_name):
    """Finds the download URL for a specific asset in the release data."""
    for asset in release_data.get("assets", []):
        if asset["name"] == expected_asset_name:
            # Reduced verbosity: print(f"Found asset: {asset['browser_download_url']}")
            return asset["browser_download_url"]
    print(f"Warning: Asset '{expected_asset_name}' not found in release {release_data.get('tag_name')}")
    return None

def download_file(url, dest_path):
    """Downloads a file from a URL to a destination path."""
    print(f"Downloading {os.path.basename(dest_path)}...")
    response = requests.get(url, stream=True)
    response.raise_for_status()
    with open(dest_path, "wb") as f:
        for chunk in response.iter_content(chunk_size=8192):
            f.write(chunk)
    # Reduced verbosity: print("Download complete.")

def extract_zip(zip_path, extract_to_path):
    """Extracts a zip file to a specified directory."""
    # Reduced verbosity: print(f"Extracting {zip_path} to {extract_to_path}...")
    with zipfile.ZipFile(zip_path, "r") as zip_ref:
        zip_ref.extractall(extract_to_path)
    # Reduced verbosity: print("Extraction complete.")

def copy_library_file(extract_path, lib_name, platform, lib_config):
    """Copies the specific library file from the extracted path to the prebuilt directory."""
    lib_filename = lib_config["lib_files"][platform]

    # Determine source path, considering a potential subfolder in the zip
    src_file_path = extract_path # Default if logic below doesn't find a better path
    if lib_config.get("extract_subfolder"):
        # This logic might need adjustment if the subfolder name is dynamic (e.g., versioned)
        # For now, assumes a fixed subfolder name if provided.
        # Example: if zip extracts to "sdl3-core-3.0.0/", then extract_subfolder could be "sdl3-core-3.0.0"
        # However, the current LIBRARIES_CONFIG has it as None.

        # Simplified: try root, then try common patterns like 'lib', 'bin'
        possible_src_paths = [
            os.path.join(extract_path, lib_config["extract_subfolder"], lib_filename),
            os.path.join(extract_path, lib_config["extract_subfolder"], "lib", lib_filename),
            os.path.join(extract_path, lib_config["extract_subfolder"], "bin", lib_filename),
        ]
        # Also check if the subfolder itself is the direct parent of the lib_filename
        possible_src_paths.insert(0, os.path.join(extract_path, lib_filename)) # Check root of extract_path first

        found_src_file = None
        for p_path in possible_src_paths:
            if os.path.exists(p_path):
                found_src_file = p_path
                break

        if not found_src_file:
            print(f"Warning: Library file {lib_filename} not found in standard subfolder paths for {lib_name} on {platform} with extract_subfolder '{lib_config.get('extract_subfolder')}'. Searching recursively in {extract_path}...")
            for root, _, files in os.walk(extract_path):
                if lib_filename in files:
                    found_src_file = os.path.join(root, lib_filename)
                    print(f"Found {lib_filename} at {found_src_file}")
                    break
            if not found_src_file:
                print(f"Error: Library file {lib_filename} not found in {extract_path} for {lib_name} on {platform}.")
                return False
        src_file_path = found_src_file

    else: # No extract_subfolder specified, assume lib is at root of extracted files or in a single dir.
        src_file_path_direct = os.path.join(extract_path, lib_filename)
        if os.path.exists(src_file_path_direct):
            src_file_path = src_file_path_direct
        else:
            extracted_items = os.listdir(extract_path)
            if len(extracted_items) == 1 and os.path.isdir(os.path.join(extract_path, extracted_items[0])):
                # Zip extracted into a single top-level directory
                base_extracted_dir = os.path.join(extract_path, extracted_items[0])

                # Check for lib directly in this subdir
                src_file_path_subdir_direct = os.path.join(base_extracted_dir, lib_filename)
                if os.path.exists(src_file_path_subdir_direct):
                    src_file_path = src_file_path_subdir_direct
                else:
                    # Try common subdirs like lib/ or bin/ within that single extracted directory
                    common_subdirs_to_check = ["lib", "bin"]
                    found_in_common_subdir = False
                    for common_s_dir in common_subdirs_to_check:
                        path_in_common_subdir = os.path.join(base_extracted_dir, common_s_dir, lib_filename)
                        if os.path.exists(path_in_common_subdir):
                            src_file_path = path_in_common_subdir
                            found_in_common_subdir = True
                            break
                    if not found_in_common_subdir:
                        # Fallback: search recursively within the single extracted directory
                        print(f"Warning: Library file {lib_filename} not found in standard paths within {base_extracted_dir}. Searching recursively...")
                        found_recursively = False
                        for root, _, files in os.walk(base_extracted_dir):
                            if lib_filename in files:
                                src_file_path = os.path.join(root, lib_filename)
                                print(f"Found {lib_filename} at {src_file_path}")
                                found_recursively = True
                                break
                        if not found_recursively:
                            print(f"Error: Library file {lib_filename} not found in {extract_path} or its single subdirectory '{base_extracted_dir}' for {lib_name} on {platform}.")
                            return False
            else: # Multiple items at root of extraction, or not a directory
                # Fallback: search recursively from the root of extract_path
                print(f"Warning: Library file {lib_filename} not found directly in {extract_path} and not a single subdirectory structure. Searching recursively in {extract_path}...")
                found_recursively_at_root = False
                for root, _, files in os.walk(extract_path):
                    if lib_filename in files:
                        src_file_path = os.path.join(root, lib_filename)
                        print(f"Found {lib_filename} at {src_file_path}")
                        found_recursively_at_root = True
                        break
                if not found_recursively_at_root:
                    print(f"Error: Library file {lib_filename} not found directly in {extract_path} for {lib_name} on {platform}.")
                    return False


    dest_dir = os.path.join(PREBUILT_DIR, platform)
    dest_file_path = os.path.join(dest_dir, lib_filename)

    os.makedirs(dest_dir, exist_ok=True)
    shutil.copy2(src_file_path, dest_file_path)
    print(f"  Successfully copied {lib_filename} for {lib_name} ({platform})")
    return True

def update_version_file(library_versions):
    """Updates the version.txt file with all successfully fetched library versions."""
    if library_versions:
        print(f"\nUpdating {VERSION_FILE} with library versions...")
        with open(VERSION_FILE, "w") as f:
            for lib_key, version_str in sorted(library_versions.items()):
                f.write(f"{lib_key}={version_str}\n")
        print("Version file updated.")
    else:
        print("\nSkipping version file update as no library versions were determined.")

def main():
    library_versions = {} # To store successfully fetched versions
    total_expected_files = 0
    successfully_copied_files = 0
    failed_downloads_or_copies = [] # Stores tuples of (lib_key, platform_key, reason)

    try:
        all_releases = get_all_releases()
        if not all_releases:
            print("No releases found. Exiting.")
            return

        for lib_key, lib_config in LIBRARIES_CONFIG.items():
            print(f"\nProcessing library: {lib_key}...")

            csproj_path = lib_config.get("csproj_path")
            if not csproj_path:
                print(f"  Error: csproj_path not defined for {lib_key}. Skipping.")
                for platform_key in PLATFORM_TAGS.keys():
                    total_expected_files += 1
                    failed_downloads_or_copies.append((lib_key, platform_key, "csproj_path not defined"))
                continue

            target_version_str = get_version_from_csproj(csproj_path)
            if not target_version_str:
                print(f"  Could not determine version for {lib_key} from {csproj_path}. Skipping all platforms for this library.")
                for platform_key in PLATFORM_TAGS.keys():
                    total_expected_files += 1
                    failed_downloads_or_copies.append((lib_key, platform_key, f"Version not found in {os.path.basename(csproj_path)}"))
                continue

            print(f"  Target version from {os.path.basename(csproj_path)}: {target_version_str}")
            specific_lib_release = get_specific_release_by_version_tag(all_releases, lib_config["tag_prefix"], target_version_str)

            if not specific_lib_release:
                print(f"  Could not find release for {lib_key} version {target_version_str}. Skipping all platforms for this library.")
                for platform_key in PLATFORM_TAGS.keys():
                    total_expected_files += 1
                    failed_downloads_or_copies.append((lib_key, platform_key, f"Release for version {target_version_str} not found"))
                continue

            lib_version = specific_lib_release["parsed_version"] # Should be target_version_str
            # Store version if release was found, even if some assets fail later
            library_versions[lib_key] = lib_version

            for platform_key, platform_tag_value in PLATFORM_TAGS.items():
                total_expected_files += 1
                asset_to_log_base = f"{lib_key} v{lib_version} ({platform_key})"

                current_platform_tag = platform_tag_value

                # Determine asset_lib_name for constructing the filename
                asset_lib_name_config_value = lib_config["asset_lib_name"]
                actual_asset_lib_name_for_file = ""

                if isinstance(asset_lib_name_config_value, dict):
                    actual_asset_lib_name_for_file = asset_lib_name_config_value.get(platform_key)
                    if not actual_asset_lib_name_for_file:
                        print(f"    Error: Platform-specific asset_lib_name for '{platform_key}' not found in config for '{lib_key}'. Skipping.")
                        failed_downloads_or_copies.append((lib_key, platform_key, f"asset_lib_name for {platform_key} missing"))
                        continue
                else:
                    actual_asset_lib_name_for_file = asset_lib_name_config_value

                if lib_key == "sdl3_image" and platform_key == "macos":
                    # SDL3_image on macOS has a special asset name for arm64
                    expected_asset_name = f"SDL3_image-{lib_version}-macos-arm64.zip"
                else:
                    expected_asset_name = f"{actual_asset_lib_name_for_file}-{lib_version}-{current_platform_tag}.zip"

                print(f"  Looking for asset: {expected_asset_name}")
                asset_url = find_asset_url(specific_lib_release, expected_asset_name)

                if not asset_url:
                    print(f"    Asset not found. Skipping.")
                    failed_downloads_or_copies.append((lib_key, platform_key, "Asset not found in release"))
                    continue

                try:
                    with tempfile.TemporaryDirectory() as tmpdir:
                        zip_filename = expected_asset_name
                        zip_path = os.path.join(tmpdir, zip_filename)

                        download_file(asset_url, zip_path)

                        extract_target_path = os.path.join(tmpdir, f"extracted_{lib_key}_{platform_key}_{lib_version}")
                        os.makedirs(extract_target_path, exist_ok=True)
                        extract_zip(zip_path, extract_target_path)

                        if copy_library_file(extract_target_path, lib_key, platform_key, lib_config):
                            successfully_copied_files +=1
                        else:
                            # Error already printed in copy_library_file
                            failed_downloads_or_copies.append((lib_key, platform_key, "Copy failed"))
                except Exception as e_inner:
                    print(f"    Error processing {asset_to_log_base}: {e_inner}")
                    failed_downloads_or_copies.append((lib_key, platform_key, f"Exception: {e_inner}"))

        update_version_file(library_versions)

    except requests.exceptions.RequestException as e:
        print(f"\nNetwork error: {e}")
    except zipfile.BadZipFile as e:
        print(f"\nError: Downloaded file is not a valid zip file or is corrupted: {e}")
    except Exception as e:
        print(f"\nAn unexpected error occurred: {e}")
        import traceback
        traceback.print_exc()
    finally:
        print("\n--- Update Summary ---")
        print(f"Total library files expected: {total_expected_files}")
        print(f"Successfully copied:        {successfully_copied_files}")
        failures = total_expected_files - successfully_copied_files
        print(f"Failed to retrieve/copy:  {failures}")
        if failed_downloads_or_copies:
            print("\nDetails of failures/skipped files:")
            for lib, plat, reason in failed_downloads_or_copies:
                print(f"  - {lib} ({plat}): {reason}")
        print("----------------------")

if __name__ == "__main__":
    main()



================================================
File: scripts/update_api_doc.py
================================================
import os
import re
from collections import defaultdict

def derive_love2d_api(class_name, method_name):
    """
    Attempts to derive a Love2D-style API call.
    Example: Filesystem, GetInfo -> love.filesystem.getInfo
    """
    if not class_name or not method_name:
        return ""

    module_name = class_name.lower()

    # Convert PascalCase or camelCase method_name to camelCase (starting lowercase)
    # If it's already camelCase (like 'getInfo'), it should remain as is.
    # If it's PascalCase (like 'GetInfo'), it becomes 'getInfo'.
    love_method_name = method_name[0].lower() + method_name[1:]

    return f"love.{module_name}.{love_method_name}"

def parse_cs_file(filepath):
    """
    Parses a C# file to extract public static classes and their public static methods.
    """
    try:
        with open(filepath, 'r', encoding='utf-8') as f:
            content = f.read()
    except Exception as e:
        print(f"Error reading file {filepath}: {e}")
        return None

    class_data = {}

    # Regex to find public static classes
    class_match = re.search(r"public\s+static\s+class\s+(\w+)", content)

    if class_match:
        class_name = class_match.group(1)
        class_content_start = class_match.end()

        # Rough way to get class content, assuming reasonably formatted code
        # This might fail with complex nested structures or preprocessor directives
        open_braces = 0
        class_body_end = class_content_start
        found_first_brace = False

        for i in range(class_content_start, len(content)):
            if content[i] == '{':
                if not found_first_brace:
                    found_first_brace = True
                open_braces += 1
            elif content[i] == '}':
                open_braces -= 1
                if found_first_brace and open_braces == 0:
                    class_body_end = i
                    break

        class_body = content[class_match.end():class_body_end]

        methods = defaultdict(list)
        # Regex to find public static methods, including parameters
        # This regex aims to capture [return_type] MethodName([params])
        # Group 1: return_type (non-greedy)
        # Group 2: method_name
        # Group 3: params_str
        method_pattern = re.compile(
            r"public\s+static\s+(?:async\s+)?(.*?)\s+(\w+)\s*\(([^)]*)\)"
        )

        for method_match in method_pattern.finditer(class_body):
            # Return type is group 1, method_name is group 2, params_str is group 3
            method_name = method_match.group(2)
            params_str = method_match.group(3).strip()

            # Clean up parameter string: remove default values, extra spaces
            params_list = []
            if params_str:
                raw_params = params_str.split(',')
                for p in raw_params:
                    p_cleaned = p.strip()
                    # Remove default initializers like "= null" or "= 12"
                    p_cleaned = re.sub(r"\s*=\s*.*", "", p_cleaned)
                    params_list.append(p_cleaned)

            full_signature = f"{method_name}({', '.join(params_list)})"
            methods[method_name].append(full_signature)

        if methods:
            class_data[class_name] = dict(methods)

    return class_data

def parse_enums_cs_file(filepath):
    """
    Parses a C# file to extract public enums.
    """
    try:
        with open(filepath, 'r', encoding='utf-8') as f:
            content = f.read()
    except FileNotFoundError:
        return [] # Silently return empty if file not found
    except Exception as e:
        print(f"Error reading enum file {filepath}: {e}")
        return []

    enums = []
    # Regex to find public enums
    enum_pattern = re.compile(r"public\s+enum\s+(\w+)")
    for match in enum_pattern.finditer(content):
        enums.append(match.group(1))
    return sorted(list(set(enums)))

def parse_types_cs_file(filepath):
    """
    Parses a C# file to extract public class names.
    """
    try:
        with open(filepath, 'r', encoding='utf-8') as f:
            content = f.read()
    except FileNotFoundError:
        return [] # Silently return empty if file not found
    except Exception as e:
        print(f"Error reading types file {filepath}: {e}")
        return []

    types = []
    # Regex to find public classes (can be extended for structs, interfaces if needed)
    # e.g., r"public\s+(?:class|struct|interface)\s+(\w+)"
    class_pattern = re.compile(r"public\s+(?:class|struct)\s+(\w+)")
    for match in class_pattern.finditer(content):
        types.append(match.group(1))
    return sorted(list(set(types)))

def generate_markdown(all_module_data, output_file):
    """
    Generates a markdown file from the parsed API data.
    """
    markdown_lines = []
    markdown_lines.append(f"# Night / Love2D API\n")

    sorted_module_names = sorted(all_module_data.keys())

    for module_name_key in sorted_module_names:
        module_data = all_module_data[module_name_key]
        markdown_lines.append(f"## {module_name_key}\n")

        module_had_content = False

        # --- Types ---
        if module_data.get("types"):
            if module_had_content: markdown_lines.append("") # Separator from previous section
            markdown_lines.append(f"### Types ({module_name_key})\n")
            module_had_content = True
            for type_name in module_data["types"]: # Already sorted from parsing function
                markdown_lines.append(f"- {type_name}")

        # --- Functions ---
        if module_data.get("functions"):
            if module_had_content: markdown_lines.append("") # Separator from previous section
            markdown_lines.append(f"### Functions ({module_name_key})\n")
            module_had_content = True
            # The "functions" key holds a dict like: {"ClassName": {"methodName": [signatures]}}
            for class_name, methods in module_data["functions"].items():
                sorted_method_names = sorted(methods.keys())
                for method_name in sorted_method_names:
                    signatures = methods[method_name]
                    love2d_call = derive_love2d_api(class_name, method_name)

                    if love2d_call:
                        markdown_lines.append(f"- {method_name}() - {love2d_call}")
                    else:
                        markdown_lines.append(f"- {method_name}()")

                    if len(signatures) > 1 or (len(signatures) == 1 and signatures[0] != f"{method_name}()"):
                        for sig in sorted(signatures):
                            markdown_lines.append(f"  - {sig}")

        # --- Enums ---
        if module_data.get("enums"):
            if module_had_content: markdown_lines.append("")
            markdown_lines.append(f"### Enums ({module_name_key})\n")
            module_had_content = True
            for enum_name in module_data["enums"]:
                markdown_lines.append(f"- {enum_name}")

        # If not the last module, add a separating blank line.
        if module_name_key != sorted_module_names[-1]:
            markdown_lines.append("")

    # At end of document, add ONE blank line
    markdown_lines.append("")

    try:
        with open(output_file, 'w', encoding='utf-8') as f:
            f.write("\n".join(markdown_lines))
        print(f"Markdown documentation generated at {output_file}")
    except Exception as e:
        print(f"Error writing markdown file {output_file}: {e}")

def main():
    framework_dir = os.path.join("src", "Night")
    output_md_file = os.path.join("docs", "API.md")

    all_module_data = defaultdict(lambda: {"functions": {}, "enums": [], "types": []})

    if not os.path.isdir(framework_dir):
        print(f"Error: Directory not found - {framework_dir}")
        return

    # Iterate through subdirectories in framework_dir (each is a module)
    for module_name in sorted(os.listdir(framework_dir)): # Sort for consistent processing order
        module_path = os.path.join(framework_dir, module_name)
        if os.path.isdir(module_path):
            if module_name.startswith('.'): # Skip hidden directories like .git
                continue

            print(f"Processing module: {module_name}...")

            current_module_enums = set()
            current_module_types = set()

            # Define the expected main module file for functions
            main_module_cs_file_identifier = f"{module_name}.cs"
            main_module_cs_file_path_expected = os.path.join(module_path, main_module_cs_file_identifier)

            # 1. Parse main module file for functions if it exists
            if os.path.exists(main_module_cs_file_path_expected):
                print(f"  Parsing functions from main module file: {main_module_cs_file_path_expected}...")
                parsed_functions_data = parse_cs_file(main_module_cs_file_path_expected)
                if parsed_functions_data:
                    for class_name_func, methods in parsed_functions_data.items():
                        # Ensure the functions dict for this class_name_func exists
                        if class_name_func not in all_module_data[module_name]["functions"]:
                            all_module_data[module_name]["functions"][class_name_func] = defaultdict(list)

                        for method_name, signatures in methods.items():
                            all_module_data[module_name]["functions"][class_name_func][method_name].extend(signatures)
                            all_module_data[module_name]["functions"][class_name_func][method_name] = \
                                sorted(list(set(all_module_data[module_name]["functions"][class_name_func][method_name])))
                else:
                    print(f"    No functions found or error parsing in {main_module_cs_file_identifier}.")
            else:
                print(f"  Skipping functions: Main module file {main_module_cs_file_path_expected} not found.")

            # 2. Iterate through ALL .cs files in the module directory for enums and types
            print(f"  Scanning all .cs files in {module_path} for enums and types/structs...")
            for item_name in sorted(os.listdir(module_path)):
                item_path = os.path.join(module_path, item_name)
                if os.path.isfile(item_path) and item_name.endswith(".cs"):
                    # Parse for enums
                    parsed_enums = parse_enums_cs_file(item_path)
                    if parsed_enums:
                        current_module_enums.update(parsed_enums)

                    # Parse for types (classes/structs)
                    parsed_types = parse_types_cs_file(item_path)
                    if parsed_types:
                        current_module_types.update(parsed_types)

            # Store aggregated enums and types
            if current_module_enums:
                all_module_data[module_name]["enums"] = sorted(list(current_module_enums))
                print(f"  Found {len(all_module_data[module_name]['enums'])} enums in module {module_name}.")
            else:
                print(f"  No enums found in module {module_name}.")

            if current_module_types:
                all_module_data[module_name]["types"] = sorted(list(current_module_types))
                print(f"  Found {len(all_module_data[module_name]['types'])} types/structs in module {module_name}.")
            else:
                print(f"  No types/structs found in module {module_name}.")

            print("") # Blank line after processing a module's files for readability in console

    if all_module_data:
        os.makedirs(os.path.dirname(output_md_file), exist_ok=True)
        generate_markdown(all_module_data, output_md_file)
    else:
        print("No API data parsed.")

if __name__ == "__main__":
    main()



================================================
File: scripts/update_tools.py
================================================
import os
import requests
import zipfile
import shutil
import json # Added for manifest handling

# Configuration
TOOL_NAME = "crunch"
GITHUB_OWNER = "nightconcept"
GITHUB_REPO = "crunch"
GITHUB_API_URL_LATEST_RELEASE = f"https://api.github.com/repos/{GITHUB_OWNER}/{GITHUB_REPO}/releases/latest"

BASE_TARGET_DIR = os.path.join("tools", TOOL_NAME)
MANIFEST_FILE_PATH = os.path.join("tools", "manifest.json")

PLATFORM_IDENTIFIERS = {
    "linux": "linux",
    "macos": "macos",
    "windows": "windows"
}

def ensure_dir_exists(path):
    """Ensures that a directory exists, creating it if necessary."""
    if not os.path.exists(path):
        os.makedirs(path, exist_ok=True)

def load_manifest():
    """Loads the manifest file."""
    ensure_dir_exists(os.path.dirname(MANIFEST_FILE_PATH))
    if not os.path.exists(MANIFEST_FILE_PATH):
        return {}
    try:
        with open(MANIFEST_FILE_PATH, 'r') as f:
            return json.load(f)
    except (json.JSONDecodeError, FileNotFoundError):
        return {}

def save_manifest(data):
    """Saves data to the manifest file."""
    ensure_dir_exists(os.path.dirname(MANIFEST_FILE_PATH))
    with open(MANIFEST_FILE_PATH, 'w') as f:
        json.dump(data, f, indent=4)

def get_latest_release_info():
    """Fetches the latest release information from GitHub."""
    print(f"Fetching latest release information for {GITHUB_OWNER}/{GITHUB_REPO}...")
    try:
        response = requests.get(GITHUB_API_URL_LATEST_RELEASE, timeout=30)
        response.raise_for_status()
        release_data = response.json()
        version = release_data.get("tag_name")
        assets = release_data.get("assets", [])
        if not version or not assets:
            print("Error: Could not find version or assets in GitHub API response.")
            return None

        print(f"Latest version found: {version}")
        return {"version": version, "assets": assets}
    except requests.exceptions.RequestException as e:
        print(f"Error fetching release info from GitHub: {e}")
        return None
    except json.JSONDecodeError:
        print("Error: Could not decode JSON response from GitHub API.")
        return None


def download_and_extract_asset(asset_name, asset_url, platform_subdir, base_download_path):
    """Downloads a single asset and extracts it into a platform-specific subdirectory."""

    # Temporary download location for the zip file (e.g., in BASE_TARGET_DIR)
    temp_zip_dir = base_download_path
    # Use a generic name for the downloaded zip to avoid issues if asset_name is complex
    # However, for clarity during download, asset_name is fine if it's just the filename.
    zip_file_path = os.path.join(temp_zip_dir, asset_name)

    ensure_dir_exists(temp_zip_dir) # Should already exist if base_download_path is BASE_TARGET_DIR

    extract_to_path = os.path.join(base_download_path, platform_subdir)
    ensure_dir_exists(extract_to_path)

    print(f"Processing {asset_name} for {platform_subdir}...")
    try:
        print(f"  Downloading from {asset_url}...")
        response = requests.get(asset_url, stream=True, timeout=60)
        response.raise_for_status()

        with open(zip_file_path, 'wb') as f:
            for chunk in response.iter_content(chunk_size=8192):
                f.write(chunk)

        print(f"  Extracting to {extract_to_path}...")
        with zipfile.ZipFile(zip_file_path, 'r') as zip_ref:
            zip_ref.extractall(extract_to_path)
        print(f"  Successfully processed {asset_name}")

    except requests.exceptions.RequestException as e:
        print(f"  Error downloading {asset_name}: {e}")
        return False
    except zipfile.BadZipFile:
        print(f"  Error: {asset_name} is not a valid zip file or is corrupted.")
        return False
    except Exception as e:
        print(f"  An unexpected error occurred with {asset_name}: {e}")
        return False
    finally:
        if os.path.exists(zip_file_path):
            os.remove(zip_file_path)
    return True

def main():
    """Main function to download and extract crunch tools."""
    print(f"Starting update process for {TOOL_NAME} tools into {BASE_TARGET_DIR}...")
    ensure_dir_exists(BASE_TARGET_DIR)

    manifest_data = load_manifest()
    current_tool_info = manifest_data.get(TOOL_NAME, {})
    current_version = current_tool_info.get("version")

    latest_release_info = get_latest_release_info()
    if not latest_release_info:
        print(f"Could not retrieve latest release information for {TOOL_NAME}. Exiting.")
        return

    latest_version = latest_release_info["version"]

    if current_version == latest_version:
        print(f"{TOOL_NAME} is already up to date (Version: {current_version}).")
        return

    print(f"New version of {TOOL_NAME} available: {latest_version}. (Current: {current_version or 'None'})")
    print("Attempting to download and extract new version...")

    all_successful_this_run = True
    assets_processed_count = 0

    for asset in latest_release_info["assets"]:
        asset_name = asset.get("name", "").lower()
        asset_url = asset.get("browser_download_url")

        if not asset_name or not asset_url or not asset_name.endswith(".zip"):
            continue # Skip if not a zip or missing essential info

        processed_for_platform = False
        for platform_key, id_string in PLATFORM_IDENTIFIERS.items():
            if id_string in asset_name:
                if not download_and_extract_asset(asset.get("name"), asset_url, platform_key, BASE_TARGET_DIR):
                    all_successful_this_run = False
                    print(f"Failed to process asset {asset.get('name')} for platform {platform_key}.")
                else:
                    assets_processed_count += 1
                processed_for_platform = True
                break # Asset matched a platform

    if all_successful_this_run and assets_processed_count > 0:
        manifest_data[TOOL_NAME] = {"version": latest_version}
        save_manifest(manifest_data)
        print(f"{TOOL_NAME} successfully updated to version {latest_version}.")
        print(f"{assets_processed_count} asset(s) processed.")
    elif assets_processed_count == 0:
        print(f"No suitable assets found for {TOOL_NAME} in version {latest_version}.")
    else:
        print(f"Some assets for {TOOL_NAME} version {latest_version} failed to download or extract. Manifest not updated.")

if __name__ == "__main__":
    main()



================================================
File: site/docfx.json
================================================
{
  "$schema": "https://raw.githubusercontent.com/dotnet/docfx/main/schemas/docfx.schema.json",
  "metadata": [
    {
      "src": [
        {
          "src": "../src",
          "files": [
            "**/*.csproj"
          ]
        }
      ],
      "dest": "api"
    }
  ],
  "build": {
    "content": [
      {
        "files": [
          "**/*.{md,yml}"
        ],
        "exclude": [
          "_site/**"
        ]
      }
    ],
    "resource": [
      {
        "files": [
          "images/**"
        ]
      }
    ],
    "output": "_site",
    "template": [
      "default",
      "modern"
    ],
    "globalMetadata": {
      "_appName": "nightengine",
      "_appTitle": "nightengine",
      "_enableSearch": true,
      "pdf": false
    }
  }
}


================================================
File: site/index.md
================================================
---
_layout: landing
---

# This is the **HOMEPAGE**.

Refer to [Markdown](http://daringfireball.net/projects/markdown/) for how to write markdown files.

## Quick Start Notes:

1. Add images to the *images* folder if the file is referencing an image.


================================================
File: site/toc.yml
================================================
- name: Docs
  href: docs/
- name: API
  href: api/


================================================
File: site/_site/index.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>This is the HOMEPAGE. | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="This is the HOMEPAGE. | nightengine ">
      
      
      <link rel="icon" href="favicon.ico">
      <link rel="stylesheet" href="public/docfx.min.css">
      <link rel="stylesheet" href="public/main.css">
      <meta name="docfx:navrel" content="toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/blob/dev/site/index.md/#L1">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="landing" data-yaml-mime="">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="index.html">
            <img id="logo" class="svg" src="logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">

      <div class="content">
        <div class="actionbar">

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="">
<h1 id="this-is-the-homepage">This is the <strong>HOMEPAGE</strong>.</h1>

<p>Refer to <a href="http://daringfireball.net/projects/markdown/">Markdown</a> for how to write markdown files.</p>
<h2 id="quick-start-notes">Quick Start Notes:</h2>
<ol>
<li>Add images to the <em>images</em> folder if the file is referencing an image.</li>
</ol>

</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/site/index.md/#L1" class="edit-link">Edit this page</a>
        </div>

        <div class="next-article d-print-none border-top" id="nextArticle"></div>

      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/index.json
================================================
{
  "api/Night.AudioConfig.html": {
    "href": "api/Night.AudioConfig.html",
    "title": "Class AudioConfig | nightengine",
    "summary": "Class AudioConfig Namespace Night Assembly Night.dll Configuration settings for the audio module. public class AudioConfig Inheritance object AudioConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Mic Gets or sets a value indicating whether the microphone should be enabled. [JsonPropertyName(\"mic\")] public bool Mic { get; set; } Property Value bool MixWithSystem Gets or sets a value indicating whether the game's audio should mix with system audio. [JsonPropertyName(\"mixwithsystem\")] public bool MixWithSystem { get; set; } Property Value bool"
  },
  "api/Night.Color.html": {
    "href": "api/Night.Color.html",
    "title": "Struct Color | nightengine",
    "summary": "Struct Color Namespace Night Assembly Night.dll Represents a color with Red, Green, Blue, and Alpha components. Each component is a byte value ranging from 0 (no intensity) to 255 (full intensity). The Alpha component controls the transparency of the color, where 0 is fully transparent and 255 is fully opaque. public struct Color Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Color(byte, byte, byte, byte) Initializes a new instance of the Color struct. public Color(byte r, byte g, byte b, byte a = 255) Parameters r byte The red component (0-255). g byte The green component (0-255). b byte The blue component (0-255). a byte The alpha component (0-255). Defaults to 255 (fully opaque). Fields A The alpha (transparency) component of the color. public byte A Field Value byte B The blue component of the color. public byte B Field Value byte Black Represents the color black. public static readonly Color Black Field Value Color Blue Represents the color blue. public static readonly Color Blue Field Value Color Cyan Represents the color cyan. public static readonly Color Cyan Field Value Color G The green component of the color. public byte G Field Value byte Green Represents the color green. public static readonly Color Green Field Value Color Magenta Represents the color magenta. public static readonly Color Magenta Field Value Color R The red component of the color. public byte R Field Value byte Red Represents the color red. public static readonly Color Red Field Value Color Transparent Represents a fully transparent color. public static readonly Color Transparent Field Value Color White Represents the color white. public static readonly Color White Field Value Color Yellow Represents the color yellow. public static readonly Color Yellow Field Value Color"
  },
  "api/Night.ConfigurationManager.html": {
    "href": "api/Night.ConfigurationManager.html",
    "title": "Class ConfigurationManager | nightengine",
    "summary": "Class ConfigurationManager Namespace Night Assembly Night.dll Manages the loading and accessing of game configuration settings. public static class ConfigurationManager Inheritance object ConfigurationManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CurrentConfig Gets the currently loaded game configuration. If no configuration has been loaded, returns the default configuration. public static GameConfig CurrentConfig { get; } Property Value GameConfig IsLoaded Gets a value indicating whether the configuration has been loaded. public static bool IsLoaded { get; } Property Value bool Methods LoadConfig(string?) Loads the game configuration from a 'config.json' file. If the file is not found, or if an error occurs during loading or parsing, default settings are used. The configuration is loaded only once; subsequent calls will not reload the configuration. public static void LoadConfig(string? gameDirectory = null) Parameters gameDirectory string The directory to search for 'config.json'. If null, the application's base directory is used."
  },
  "api/Night.DrawMode.html": {
    "href": "api/Night.DrawMode.html",
    "title": "Enum DrawMode | nightengine",
    "summary": "Enum DrawMode Namespace Night Assembly Night.dll Specifies whether a shape should be drawn filled or as an outline. public enum DrawMode Fields Fill = 0 Draw the shape filled. Line = 1 Draw the shape as an outline."
  },
  "api/Night.Error.html": {
    "href": "api/Night.Error.html",
    "title": "Class Error | nightengine",
    "summary": "Class Error Namespace Night Assembly Night.dll Manages the user-defined error handler. public static class Error Inheritance object Error Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SetHandler(ErrorHandlerDelegate) Sets a custom function to be called when an unhandled error occurs in game code. public static void SetHandler(ErrorHandlerDelegate handler) Parameters handler ErrorHandlerDelegate The delegate to handle errors."
  },
  "api/Night.ErrorHandlerDelegate.html": {
    "href": "api/Night.ErrorHandlerDelegate.html",
    "title": "Delegate ErrorHandlerDelegate | nightengine",
    "summary": "Delegate ErrorHandlerDelegate Namespace Night Assembly Night.dll Defines the delegate for handling unhandled exceptions from game code. The error handler function will be called when an unhandled exception occurs within the game's Load, Update, Draw, or input callback methods. public delegate void ErrorHandlerDelegate(Exception e) Parameters e Exception The exception that occurred."
  },
  "api/Night.FileMode.html": {
    "href": "api/Night.FileMode.html",
    "title": "Enum FileMode | nightengine",
    "summary": "Enum FileMode Namespace Night Assembly Night.dll Represents the different modes you can open a File in. public enum FileMode Fields A = 2 Open a file for append. Append = 2 Open a file for append. C = 3 Do not open a file (represents a closed file.) Close = 3 Do not open a file (represents a closed file.) R = 0 Open a file for read. Read = 0 Open a file for read. W = 1 Open a file for write. Write = 1 Open a file for write."
  },
  "api/Night.FileSystemInfo.html": {
    "href": "api/Night.FileSystemInfo.html",
    "title": "Class FileSystemInfo | nightengine",
    "summary": "Class FileSystemInfo Namespace Night Assembly Night.dll Contains information about a file or directory. public class FileSystemInfo Inheritance object FileSystemInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FileSystemInfo() Initializes a new instance of the FileSystemInfo class. public FileSystemInfo() FileSystemInfo(FileType, long?, long?) Initializes a new instance of the FileSystemInfo class with specified values. public FileSystemInfo(FileType type, long? size, long? modTime) Parameters type FileType The type of the file system object. size long? The size of the file in bytes. modTime long? The last modification time in Unix epoch seconds. Properties ModTime Gets or sets the file's last modification time in seconds since the Unix epoch, or null if it can't be determined. public long? ModTime { get; set; } Property Value long? Size Gets or sets the size in bytes of the file, or null if it can't be determined or not applicable (e.g. for a directory). public long? Size { get; set; } Property Value long? Type Gets or sets the type of the object at the path (file, directory, symlink, etc.). Default is None. public FileType Type { get; set; } Property Value FileType"
  },
  "api/Night.FileType.html": {
    "href": "api/Night.FileType.html",
    "title": "Enum FileType | nightengine",
    "summary": "Enum FileType Namespace Night Assembly Night.dll Represents the type of a file system object. public enum FileType Fields Directory = 1 A directory. File = 0 A regular file. None = 4 The path does not exist or its type cannot be determined. Other = 3 Other type (e.g., device, pipe). Symlink = 2 A symbolic link."
  },
  "api/Night.Filesystem.html": {
    "href": "api/Night.Filesystem.html",
    "title": "Class Filesystem | nightengine",
    "summary": "Class Filesystem Namespace Night Assembly Night.dll Provides basic file system operations. Inspired by Love2D's love.filesystem module. public static class Filesystem Inheritance object Filesystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetInfo(string, FileSystemInfo) Gets information about the specified file or directory and populates an existing FileSystemInfo object. public static FileSystemInfo? GetInfo(string path, FileSystemInfo info) Parameters path string The file or directory path to check. info FileSystemInfo A FileSystemInfo object which will be filled in. Returns FileSystemInfo The FileSystemInfo object given as an argument, filled with information, or null if nothing exists at the path. GetInfo(string, FileType, FileSystemInfo) Gets information about the specified file or directory, filtered by type, and populates an existing FileSystemInfo object. public static FileSystemInfo? GetInfo(string path, FileType filterType, FileSystemInfo info) Parameters path string The file or directory path to check. filterType FileType Causes getInfo to only return the info table if the item at the given path matches the specified file type. info FileSystemInfo A FileSystemInfo object which will be filled in. Returns FileSystemInfo The FileSystemInfo object given as an argument, filled with information, or null if nothing exists at the path or if it doesn't match the filterType. GetInfo(string, FileType?) Gets information about the specified file or directory. public static FileSystemInfo? GetInfo(string path, FileType? filterType = null) Parameters path string The file or directory path to check. filterType FileType? If supplied, this parameter causes getInfo to only return the info table if the item at the given path matches the specified file type. Returns FileSystemInfo A FileSystemInfo object containing information about the specified path, or null if nothing exists at the path or if it doesn't match the filterType. ReadBytes(string) Reads the entire content of a file into a byte array. public static byte[] ReadBytes(string path) Parameters path string The path to the file to read. Returns byte[] A byte array containing the contents of the file. Exceptions FileNotFoundException Thrown if the file is not found. ReadText(string) Reads the entire content of a file into a string. public static string ReadText(string path) Parameters path string The path to the file to read. Returns string A string containing the contents of the file. Exceptions FileNotFoundException Thrown if the file is not found."
  },
  "api/Night.Framework.html": {
    "href": "api/Night.Framework.html",
    "title": "Class Framework | nightengine",
    "summary": "Class Framework Namespace Night Assembly Night.dll Manages the main game loop and coordination of game states. Provides the main entry point to run a game. public static class Framework Inheritance object Framework Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsInputInitialized Gets a value indicating whether a flag indicating whether the core SDL systems, particularly for input, have been successfully initialized by this Framework's Run method. public static bool IsInputInitialized { get; } Property Value bool Methods Run(IGame) Runs the game instance. The game loop will internally call Load, Update, and Draw methods on the provided game logic. This method will initialize and shut down required SDL subsystems. public static void Run(IGame game) Parameters game IGame The game interface to run. Must implement IGame."
  },
  "api/Night.FullscreenType.html": {
    "href": "api/Night.FullscreenType.html",
    "title": "Enum FullscreenType | nightengine",
    "summary": "Enum FullscreenType Namespace Night Assembly Night.dll Types of fullscreen modes. public enum FullscreenType Fields Desktop = 1 Borderless fullscreen windowed mode. A borderless screen-sized window is created which sits on top of all desktop UI elements. The window is automatically resized to match the dimensions of the desktop, and its size cannot be changed. Exclusive = 0 Standard exclusive-fullscreen mode. Changes the display mode (actual resolution) of the monitor."
  },
  "api/Night.GameConfig.html": {
    "href": "api/Night.GameConfig.html",
    "title": "Class GameConfig | nightengine",
    "summary": "Class GameConfig Namespace Night Assembly Night.dll Represents the overall game configuration settings, typically loaded from a config.json file. public class GameConfig Inheritance object GameConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AccelerometerJoystick Gets or sets a value indicating whether the accelerometer should be used as a joystick. [JsonPropertyName(\"accelerometerjoystick\")] public bool AccelerometerJoystick { get; set; } Property Value bool AppendIdentity Gets or sets a value indicating whether the game identity should be appended to the save directory path. [JsonPropertyName(\"appendidentity\")] public bool AppendIdentity { get; set; } Property Value bool Audio Gets or sets the audio module configuration. [JsonPropertyName(\"audio\")] public AudioConfig Audio { get; set; } Property Value AudioConfig Console Gets or sets a value indicating whether a console window should be attached (Windows only, currently placeholder). [JsonPropertyName(\"console\")] public bool Console { get; set; } Property Value bool ExternalStorage Gets or sets a value indicating whether to request external storage access (Android only, currently placeholder). [JsonPropertyName(\"externalstorage\")] public bool ExternalStorage { get; set; } Property Value bool GammaCorrect Gets or sets a value indicating whether gamma correction should be enabled. [JsonPropertyName(\"gammacorrect\")] public bool GammaCorrect { get; set; } Property Value bool Identity Gets or sets the identity of the game. This is used for the save directory. [JsonPropertyName(\"identity\")] public string? Identity { get; set; } Property Value string Modules Gets or sets the configuration for enabling/disabling engine modules. [JsonPropertyName(\"modules\")] public ModulesConfig Modules { get; set; } Property Value ModulesConfig Version Gets or sets the LÖVE version this game targets. Currently informational. [JsonPropertyName(\"version\")] public string Version { get; set; } Property Value string Window Gets or sets the window module configuration. [JsonPropertyName(\"window\")] public WindowConfig Window { get; set; } Property Value WindowConfig"
  },
  "api/Night.Graphics.html": {
    "href": "api/Night.Graphics.html",
    "title": "Class Graphics | nightengine",
    "summary": "Class Graphics Namespace Night Assembly Night.dll Provides functionality for drawing graphics. Mimics Love2D's love.graphics module. public static class Graphics Inheritance object Graphics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Circle(DrawMode, float, float, float, int) Draws a circle. public static void Circle(DrawMode mode, float x, float y, float radius, int segments = 12) Parameters mode DrawMode The drawing mode (Fill or Line). x float The x-coordinate of the circle's center. y float The y-coordinate of the circle's center. radius float The radius of the circle. segments int The number of segments used to draw the circle (more segments means a smoother circle). Clear(Color) Clears the screen to a specific color. public static void Clear(Color color) Parameters color Color The color to clear the screen with. Draw(Sprite, float, float, float, float, float, float, float) Draws a sprite to the screen. public static void Draw(Sprite sprite, float x, float y, float rotation = 0, float scaleX = 1, float scaleY = 1, float offsetX = 0, float offsetY = 0) Parameters sprite Sprite The sprite to draw. x float The x-coordinate to draw the sprite at. y float The y-coordinate to draw the sprite at. rotation float The rotation of the sprite (in radians). scaleX float The horizontal scale factor. scaleY float The vertical scale factor. offsetX float The x-offset for the sprite's origin. offsetY float The y-offset for the sprite's origin. Line(PointF[]) Draws a sequence of connected line segments. public static void Line(PointF[] points) Parameters points PointF[] An array of points to connect. Line(float, float, float, float) Draws a line segment between two points. public static void Line(float x1, float y1, float x2, float y2) Parameters x1 float The x-coordinate of the first point. y1 float The y-coordinate of the first point. x2 float The x-coordinate of the second point. y2 float The y-coordinate of the second point. NewImage(string) Creates a new image (Sprite) from a file. public static Sprite? NewImage(string filePath) Parameters filePath string The path to the image file. Returns Sprite A new Sprite object. Polygon(DrawMode, PointF[]) Draws a polygon. public static void Polygon(DrawMode mode, PointF[] vertices) Parameters mode DrawMode The drawing mode (Fill or Line). vertices PointF[] An array of points representing the polygon's vertices. Present() Presents the drawn graphics to the screen (swaps buffers). public static void Present() Rectangle(DrawMode, float, float, float, float) Draws a rectangle. public static void Rectangle(DrawMode mode, float x, float y, float width, float height) Parameters mode DrawMode The drawing mode (Fill or Line). x float The x-coordinate of the top-left corner. y float The y-coordinate of the top-left corner. width float The width of the rectangle. height float The height of the rectangle. SetColor(Color) Sets the active color for drawing operations. public static void SetColor(Color color) Parameters color Color The color to set. SetColor(byte, byte, byte, byte) Sets the active color for drawing operations using individual RGBA components. public static void SetColor(byte r, byte g, byte b, byte a = 255) Parameters r byte The red component (0-255). g byte The green component (0-255). b byte The blue component (0-255). a byte The alpha component (0-255), defaults to 255 (opaque)."
  },
  "api/Night.IGame.html": {
    "href": "api/Night.IGame.html",
    "title": "Interface IGame | nightengine",
    "summary": "Interface IGame Namespace Night Assembly Night.dll Interface for a game that can be run by the Night Engine. Game developers will implement this interface in their main game class. public interface IGame Methods Draw() Callback function used to draw on the screen every frame. void Draw() KeyPressed(KeySymbol, KeyCode, bool) Callback function triggered when a key is pressed. void KeyPressed(KeySymbol key, KeyCode scancode, bool isRepeat) Parameters key KeySymbol The logical key symbol that was pressed. scancode KeyCode The physical key (scancode) that was pressed. isRepeat bool True if this is a key repeat event, false otherwise. KeyReleased(KeySymbol, KeyCode) Callback function triggered when a key is released. void KeyReleased(KeySymbol key, KeyCode scancode) Parameters key KeySymbol The logical key symbol that was released. scancode KeyCode The physical key (scancode) that was released. Load() Called exactly once when the game starts for loading resources. void Load() MousePressed(int, int, MouseButton, bool, int) Callback function triggered when a mouse button is pressed. void MousePressed(int x, int y, MouseButton button, bool istouch, int presses) Parameters x int The x-coordinate of the mouse cursor relative to the window. y int The y-coordinate of the mouse cursor relative to the window. button MouseButton The mouse button that was pressed. istouch bool True if the event was generated by a touch input device, false otherwise. presses int The number of clicks (1 for single-click, 2 for double-click, etc.). MouseReleased(int, int, MouseButton, bool, int) Callback function triggered when a mouse button is released. void MouseReleased(int x, int y, MouseButton button, bool istouch, int presses) Parameters x int The x-coordinate of the mouse cursor relative to the window. y int The y-coordinate of the mouse cursor relative to the window. button MouseButton The mouse button that was released. istouch bool True if the event was generated by a touch input device, false otherwise. presses int The number of clicks (typically 1 for release, but may vary). Update(double) Callback function used to update the state of the game every frame. void Update(double deltaTime) Parameters deltaTime double The time elapsed since the last frame, in seconds."
  },
  "api/Night.KeyCode.html": {
    "href": "api/Night.KeyCode.html",
    "title": "Enum KeyCode | nightengine",
    "summary": "Enum KeyCode Namespace Night Assembly Night.dll Represents keyboard scancodes. Values correspond to SDL_Scancode. public enum KeyCode Fields A = 4 The 'A' key. Again = 121 The Again key. Alpha0 = 39 The '0' key. Alpha1 = 30 The '1' key. Alpha2 = 31 The '2' key. Alpha3 = 32 The '3' key. Alpha4 = 33 The '4' key. Alpha5 = 34 The '5' key. Alpha6 = 35 The '6' key. Alpha7 = 36 The '7' key. Alpha8 = 37 The '8' key. Alpha9 = 38 The '9' key. Apostrophe = 52 The Apostrophe ''' key. AppBack = 282 The Application Back key. AppBookmarks = 286 The Application Bookmarks key. AppForward = 283 The Application Forward key. AppHome = 281 The Application Home key. AppRefresh = 285 The Application Refresh key. AppSearch = 280 The Application Search key. AppStop = 284 The Application Stop key. Application = 101 The Application key (context menu). B = 5 The 'B' key. Backslash = 49 The Backslash '' key. Backspace = 42 The Backspace key. C = 6 The 'C' key. Capslock = 57 The Caps Lock key. Comma = 54 The Comma ',' key. Copy = 124 The Copy key. Cut = 123 The Cut key. D = 7 The 'D' key. Delete = 76 The Delete key. Down = 81 The Down Arrow key. E = 8 The 'E' key. End = 77 The End key. Equals = 46 The Equals '=' key. Escape = 41 The Escape key. Execute = 116 The Execute key. F = 9 The 'F' key. F1 = 58 The F1 key. F10 = 67 The F10 key. F11 = 68 The F11 key. F12 = 69 The F12 key. F13 = 104 The F13 key. F14 = 105 The F14 key. F15 = 106 The F15 key. F16 = 107 The F16 key. F17 = 108 The F17 key. F18 = 109 The F18 key. F19 = 110 The F19 key. F2 = 59 The F2 key. F20 = 111 The F20 key. F21 = 112 The F21 key. F22 = 113 The F22 key. F23 = 114 The F23 key. F24 = 115 The F24 key. F3 = 60 The F3 key. F4 = 61 The F4 key. F5 = 62 The F5 key. F6 = 63 The F6 key. F7 = 64 The F7 key. F8 = 65 The F8 key. F9 = 66 The F9 key. Find = 126 The Find key. G = 10 The 'G' key. Grave = 53 The Grave Accent (Backtick) '`' key. H = 11 The 'H' key. Help = 117 The Help key. Home = 74 The Home key. I = 12 The 'I' key. Insert = 73 The Insert key. J = 13 The 'J' key. K = 14 The 'K' key. Kp0 = 98 The Keypad '0' key. Kp1 = 89 The Keypad '1' key. Kp2 = 90 The Keypad '2' key. Kp3 = 91 The Keypad '3' key. Kp4 = 92 The Keypad '4' key. Kp5 = 93 The Keypad '5' key. Kp6 = 94 The Keypad '6' key. Kp7 = 95 The Keypad '7' key. Kp8 = 96 The Keypad '8' key. Kp9 = 97 The Keypad '9' key. KpComma = 133 The Keypad Comma ',' key. KpDivide = 84 The Keypad Divide '/' key. KpEnter = 88 The Keypad Enter key. KpEquals = 103 The Keypad Equals '=' key. KpMinus = 86 The Keypad Minus '-' key. KpMultiply = 85 The Keypad Multiply '*' key. KpPeriod = 99 The Keypad Period '.' key. KpPlus = 87 The Keypad Plus '+' key. L = 15 The 'L' key. LAlt = 226 The Left Alt key. LCtrl = 224 The Left Control key. LGUI = 227 The Left GUI key (Windows/Command/Meta key). LShift = 225 The Left Shift key. Left = 80 The Left Arrow key. Leftbracket = 47 The Left Bracket '[' key. M = 16 The 'M' key. MediaEject = 270 The Media Eject key. MediaFastForward = 265 The Media Fast Forward key. MediaNextTrack = 267 The Media Next Track key. MediaPause = 263 The Media Pause key. MediaPlay = 262 The Media Play key. MediaPlayPause = 271 The Media Play/Pause key. MediaPreviousTrack = 268 The Media Previous Track key. MediaRecord = 264 The Media Record key. MediaRewind = 266 The Media Rewind key. MediaSelect = 272 The Media Select key. MediaStop = 269 The Media Stop key. Menu = 118 The Menu key. Minus = 45 The Minus '-' key. Mode = 257 The Mode Switch key. Mute = 127 The Mute key. N = 17 The 'N' key. NonUsbackslash = 100 The Non-US Backslash key. NonUshash = 50 The Non-US Hash key (e.g., UK pound sign). NumlockClear = 83 The Num Lock or Clear key. O = 18 The 'O' key. P = 19 The 'P' key. Pagedown = 78 The Page Down key. Pageup = 75 The Page Up key. Paste = 125 The Paste key. Pause = 72 The Pause key. Period = 55 The Period '.' key. Power = 102 The Power key. Printscreen = 70 The Print Screen key. Q = 20 The 'Q' key. R = 21 The 'R' key. RAlt = 230 The Right Alt key. RCtrl = 228 The Right Control key. RGUI = 231 The Right GUI key (Windows/Command/Meta key). RShift = 229 The Right Shift key. Return = 40 The Return/Enter key. Right = 79 The Right Arrow key. Rightbracket = 48 The Right Bracket ']' key. S = 22 The 'S' key. Scrolllock = 71 The Scroll Lock key. Select = 119 The Select key. Semicolon = 51 The Semicolon ';' key. Slash = 56 The Slash '/' key. Space = 44 The Space bar. Stop = 120 The Stop key. T = 23 The 'T' key. Tab = 43 The Tab key. U = 24 The 'U' key. Undo = 122 The Undo key. Unknown = 0 An unknown scancode. Up = 82 The Up Arrow key. V = 25 The 'V' key. VolumeDown = 129 The Volume Down key. VolumeUp = 128 The Volume Up key. W = 26 The 'W' key. X = 27 The 'X' key. Y = 28 The 'Y' key. Z = 29 The 'Z' key. Remarks See SDL_scancode.h for the full list of SDL_Scancode values. This enum maps directly to SDL_Scancode values, representing the physical key on the keyboard."
  },
  "api/Night.KeySymbol.html": {
    "href": "api/Night.KeySymbol.html",
    "title": "Enum KeySymbol | nightengine",
    "summary": "Enum KeySymbol Namespace Night Assembly Night.dll Represents logical key symbols. Values correspond to SDL_Keycode. public enum KeySymbol : uint Fields A = 97 The 'A' symbol. Alpha0 = 48 The '0' symbol. Alpha1 = 49 The '1' symbol. Alpha2 = 50 The '2' symbol. Alpha3 = 51 The '3' symbol. Alpha4 = 52 The '4' symbol. Alpha5 = 53 The '5' symbol. Alpha6 = 54 The '6' symbol. Alpha7 = 55 The '7' symbol. Alpha8 = 56 The '8' symbol. Alpha9 = 57 The '9' symbol. Apostrophe = 39 The Apostrophe ''' symbol. B = 98 The 'B' symbol. Backslash = 92 The Backslash '' symbol. Backspace = 8 The Backspace symbol. C = 99 The 'C' symbol. Comma = 44 The Comma ',' symbol. D = 100 The 'D' symbol. Down = 1073741905 The Down Arrow symbol. E = 101 The 'E' symbol. Equals = 61 The Equals '=' symbol. Escape = 27 The Escape symbol. F = 102 The 'F' symbol. F1 = 1073741882 The F1 symbol. F10 = 1073741891 The F10 symbol. F11 = 1073741892 The F11 symbol. F12 = 1073741893 The F12 symbol. F2 = 1073741883 The F2 symbol. F3 = 1073741884 The F3 symbol. F4 = 1073741885 The F4 symbol. F5 = 1073741886 The F5 symbol. F6 = 1073741887 The F6 symbol. F7 = 1073741888 The F7 symbol. F8 = 1073741889 The F8 symbol. F9 = 1073741890 The F9 symbol. G = 103 The 'G' symbol. Grave = 96 The Grave Accent (Backtick) '`' symbol. H = 104 The 'H' symbol. I = 105 The 'I' symbol. J = 106 The 'J' symbol. K = 107 The 'K' symbol. L = 108 The 'L' symbol. LAlt = 1073742050 The Left Alt symbol. LCtrl = 1073742048 The Left Control symbol. LGUI = 1073742051 The Left GUI symbol (Windows/Command/Meta key). LShift = 1073742049 The Left Shift symbol. Left = 1073741904 The Left Arrow symbol. Leftbracket = 91 The Left Bracket '[' symbol. M = 109 The 'M' symbol. Minus = 45 The Minus '-' symbol. N = 110 The 'N' symbol. O = 111 The 'O' symbol. P = 112 The 'P' symbol. Period = 46 The Period '.' symbol. Q = 113 The 'Q' symbol. R = 114 The 'R' symbol. RAlt = 1073742054 The Right Alt symbol. RCtrl = 1073742052 The Right Control symbol. RGUI = 1073742055 The Right GUI symbol (Windows/Command/Meta key). RShift = 1073742053 The Right Shift symbol. Return = 13 The Return/Enter symbol. Right = 1073741903 The Right Arrow symbol. Rightbracket = 93 The Right Bracket ']' symbol. S = 115 The 'S' symbol. Semicolon = 59 The Semicolon ';' symbol. Slash = 47 The Slash '/' symbol. Space = 32 The Space symbol. T = 116 The 'T' symbol. Tab = 9 The Tab symbol. U = 117 The 'U' symbol. Unknown = 0 An unknown key symbol. Up = 1073741906 The Up Arrow symbol. V = 118 The 'V' symbol. W = 119 The 'W' symbol. X = 120 The 'X' symbol. Y = 121 The 'Y' symbol. Z = 122 The 'Z' symbol. Remarks This enum maps to SDL_Keycode values, representing the symbol produced by a key press under the current keyboard layout."
  },
  "api/Night.Keyboard.html": {
    "href": "api/Night.Keyboard.html",
    "title": "Class Keyboard | nightengine",
    "summary": "Class Keyboard Namespace Night Assembly Night.dll Provides an interface to the user's keyboard. public static class Keyboard Inheritance object Keyboard Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods IsDown(KeyCode) Checks whether a certain key is down. public static bool IsDown(KeyCode key) Parameters key KeyCode The key to check. Returns bool True if the key is down, false otherwise."
  },
  "api/Night.ModulesConfig.html": {
    "href": "api/Night.ModulesConfig.html",
    "title": "Class ModulesConfig | nightengine",
    "summary": "Class ModulesConfig Namespace Night Assembly Night.dll Configuration for enabling or disabling specific engine modules. Note: Currently, these are placeholders and do not disable module functionality. public class ModulesConfig Inheritance object ModulesConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Audio Gets or sets a value indicating whether the Audio module is enabled. [JsonPropertyName(\"audio\")] public bool Audio { get; set; } Property Value bool Data Gets or sets a value indicating whether the Data module is enabled (Mandatory in LÖVE). [JsonPropertyName(\"data\")] public bool Data { get; set; } Property Value bool Event Gets or sets a value indicating whether the Event module is enabled. [JsonPropertyName(\"event\")] public bool Event { get; set; } Property Value bool Font Gets or sets a value indicating whether the Font module is enabled. [JsonPropertyName(\"font\")] public bool Font { get; set; } Property Value bool Graphics Gets or sets a value indicating whether the Graphics module is enabled (Needs Window module). [JsonPropertyName(\"graphics\")] public bool Graphics { get; set; } Property Value bool Image Gets or sets a value indicating whether the Image module is enabled. [JsonPropertyName(\"image\")] public bool Image { get; set; } Property Value bool Joystick Gets or sets a value indicating whether the Joystick module is enabled. [JsonPropertyName(\"joystick\")] public bool Joystick { get; set; } Property Value bool Keyboard Gets or sets a value indicating whether the Keyboard module is enabled. [JsonPropertyName(\"keyboard\")] public bool Keyboard { get; set; } Property Value bool Math Gets or sets a value indicating whether the Math module is enabled. [JsonPropertyName(\"math\")] public bool Math { get; set; } Property Value bool Mouse Gets or sets a value indicating whether the Mouse module is enabled. [JsonPropertyName(\"mouse\")] public bool Mouse { get; set; } Property Value bool Physics Gets or sets a value indicating whether the Physics module is enabled. [JsonPropertyName(\"physics\")] public bool Physics { get; set; } Property Value bool Sound Gets or sets a value indicating whether the Sound module is enabled. [JsonPropertyName(\"sound\")] public bool Sound { get; set; } Property Value bool System Gets or sets a value indicating whether the System module is enabled. [JsonPropertyName(\"system\")] public bool System { get; set; } Property Value bool Thread Gets or sets a value indicating whether the Thread module is enabled. [JsonPropertyName(\"thread\")] public bool Thread { get; set; } Property Value bool Timer Gets or sets a value indicating whether the Timer module is enabled. [JsonPropertyName(\"timer\")] public bool Timer { get; set; } Property Value bool Touch Gets or sets a value indicating whether the Touch module is enabled. [JsonPropertyName(\"touch\")] public bool Touch { get; set; } Property Value bool Video Gets or sets a value indicating whether the Video module is enabled. [JsonPropertyName(\"video\")] public bool Video { get; set; } Property Value bool Window Gets or sets a value indicating whether the Window module is enabled (Mandatory for Graphics module). [JsonPropertyName(\"window\")] public bool Window { get; set; } Property Value bool"
  },
  "api/Night.Mouse.html": {
    "href": "api/Night.Mouse.html",
    "title": "Class Mouse | nightengine",
    "summary": "Class Mouse Namespace Night Assembly Night.dll Provides an interface to the user's mouse. public static class Mouse Inheritance object Mouse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetPosition() Gets the current position of the mouse cursor in the window. public static (int X, int Y) GetPosition() Returns (int X, int Y) A tuple (int X, int Y) representing the mouse cursor coordinates. IsDown(MouseButton) Checks whether a certain mouse button is down. This function does not detect mouse wheel scrolling. public static bool IsDown(MouseButton button) Parameters button MouseButton The index of a button to check. 1 is the primary mouse button, 2 is the secondary mouse button, 3 is the middle button, 4 is the X1 button (typically \"back\"), and 5 is the X2 button (typically \"forward\"). Returns bool True if the button is down, false otherwise. SetGrabbed(bool) Grabs the mouse, confining it to the window. public static void SetGrabbed(bool grabbed) Parameters grabbed bool True to grab the mouse, false to release it. SetRelativeMode(bool) Sets whether relative mouse mode is enabled for the current window. In relative mode, the cursor is hidden and mouse motion is reported as relative to the last position. public static void SetRelativeMode(bool enabled) Parameters enabled bool True to enable relative mode, false to disable it. SetVisible(bool) Sets the visibility of the mouse cursor. public static void SetVisible(bool visible) Parameters visible bool True to show the cursor, false to hide it."
  },
  "api/Night.MouseButton.html": {
    "href": "api/Night.MouseButton.html",
    "title": "Enum MouseButton | nightengine",
    "summary": "Enum MouseButton Namespace Night Assembly Night.dll Represents mouse buttons. Values correspond to SDL_MouseButtonFlags/ SDL3.SDL.Button* constants. (e.g., Left is 1, Middle is 2, etc.) public enum MouseButton Fields Left = 1 The left mouse button. Middle = 2 The middle mouse button. Right = 3 The right mouse button. Unknown = 0 An unknown or unspecified mouse button. X1 = 4 The first extra mouse button (often \"back\"). X2 = 5 The second extra mouse button (often \"forward\")."
  },
  "api/Night.NightSDL.html": {
    "href": "api/Night.NightSDL.html",
    "title": "Class NightSDL | nightengine",
    "summary": "Class NightSDL Namespace Night Assembly Night.dll Provides direct access to some SDL3 functions using SDL3-CS bindings. public static class NightSDL Inheritance object NightSDL Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetError() Retrieve a message about the last error that occurred on the current thread. Calls the SDL3-CS binding for SDL_GetError() and returns a string. https://wiki.libsdl.org/SDL3/SDL_GetError. public static string GetError() Returns string Returns a message with information about the specific error that occurred, or an empty string if there hasn't been an error message set since the last call to SDL_ClearError(). GetVersion() Get the version of SDL that is linked against the Night Engine. Calls the SDL3-CS binding for SDL_GetVersion() and returns a packed int. https://wiki.libsdl.org/SDL3/SDL_GetVersion. public static string GetVersion() Returns string A string representing the SDL version \"major.minor.patch\"."
  },
  "api/Night.PointF.html": {
    "href": "api/Night.PointF.html",
    "title": "Struct PointF | nightengine",
    "summary": "Struct PointF Namespace Night Assembly Night.dll Represents a 2D point with floating-point coordinates. public struct PointF Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors PointF(float, float) Initializes a new instance of the PointF struct. public PointF(float x, float y) Parameters x float The X-coordinate. y float The Y-coordinate. Fields X The X-coordinate of the point. public float X Field Value float Y The Y-coordinate of the point. public float Y Field Value float"
  },
  "api/Night.Rectangle.html": {
    "href": "api/Night.Rectangle.html",
    "title": "Struct Rectangle | nightengine",
    "summary": "Struct Rectangle Namespace Night Assembly Night.dll Represents a rectangle with position (X, Y) and dimensions (Width, Height). public struct Rectangle Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Rectangle(int, int, int, int) Initializes a new instance of the Rectangle struct. public Rectangle(int x, int y, int width, int height) Parameters x int The X-coordinate of the top-left corner. y int The Y-coordinate of the top-left corner. width int The width of the rectangle. height int The height of the rectangle. Fields Height The height of the rectangle. public int Height Field Value int Width The width of the rectangle. public int Width Field Value int X The X-coordinate of the top-left corner of the rectangle. public int X Field Value int Y The Y-coordinate of the top-left corner of the rectangle. public int Y Field Value int"
  },
  "api/Night.SampleGame.Game.html": {
    "href": "api/Night.SampleGame.Game.html",
    "title": "Class Game | nightengine",
    "summary": "Class Game Namespace Night.SampleGame Assembly Night.SampleGame.dll Main game class for the platformer sample. Implements the IGame interface for Night.Engine integration. public class Game : IGame Inheritance object Game Implements IGame Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Game() Initializes a new instance of the Game class. public Game() Methods Draw() Draws the game scene. Called every frame by the Night.Engine after Update. public void Draw() KeyPressed(KeySymbol, KeyCode, bool) Handles key press events. Called by Night.Engine when a key is pressed. public void KeyPressed(KeySymbol key, KeyCode scancode, bool isRepeat) Parameters key KeySymbol The KeySymbol of the pressed key. scancode KeyCode The KeyCode (physical key code) of the pressed key. isRepeat bool True if this is a repeat key event, false otherwise. Load() Loads game assets and initializes game state. Called once at the start of the game by the Night.Engine. public void Load() Update(double) Updates the game state. Called every frame by the Night.Engine. public void Update(double deltaTime) Parameters deltaTime double The time elapsed since the last frame, in seconds."
  },
  "api/Night.SampleGame.Platformer.html": {
    "href": "api/Night.SampleGame.Platformer.html",
    "title": "Class Platformer | nightengine",
    "summary": "Class Platformer Namespace Night.SampleGame Assembly Night.SampleGame.dll A sample platformer game implementation using the Night engine. Implements the IGame interface for Night.Engine integration. public class Platformer : IGame Inheritance object Platformer Implements IGame Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Platformer() Initializes a new instance of the Platformer class. public Platformer() Methods Draw() Draws the platformer game scene. Called every frame by the Night.Engine after Update. public void Draw() KeyPressed(KeySymbol, KeyCode, bool) Handles key press events for the platformer game. Called by Night.Engine when a key is pressed. public void KeyPressed(KeySymbol key, KeyCode scancode, bool isRepeat) Parameters key KeySymbol The KeySymbol of the pressed key. scancode KeyCode The KeyCode (physical key code) of the pressed key. isRepeat bool True if this is a repeat key event, false otherwise. Load() Loads game assets and initializes game state for the platformer. Called once at the start of the game by the Night.Engine. public void Load() Update(double) Updates the platformer game state. Called every frame by the Night.Engine. public void Update(double deltaTime) Parameters deltaTime double The time elapsed since the last frame, in seconds."
  },
  "api/Night.SampleGame.PlatformerGame.html": {
    "href": "api/Night.SampleGame.PlatformerGame.html",
    "title": "Class PlatformerGame | nightengine",
    "summary": "Class PlatformerGame Namespace Night.SampleGame Assembly Night.SampleGame.dll Provides an entry point to run the Platformer sample game. public class PlatformerGame Inheritance object PlatformerGame Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods PlatformerGameMain() Main method to initialize and run the Platformer game. public static void PlatformerGameMain()"
  },
  "api/Night.SampleGame.Player.html": {
    "href": "api/Night.SampleGame.Player.html",
    "title": "Class Player | nightengine",
    "summary": "Class Player Namespace Night.SampleGame Assembly Night.SampleGame.dll Represents the player character in the game. Handles player movement, physics, and rendering. public class Player Inheritance object Player Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Player() Initializes a new instance of the Player class. public Player() Properties Height Gets the height of the player. public int Height { get; } Property Value int Width Gets the width of the player. public int Width { get; } Property Value int X Gets the player's current X-coordinate (left edge). public float X { get; } Property Value float Y Gets the player's current Y-coordinate (top edge). public float Y { get; } Property Value float Methods Draw() Draws the player on the screen. public void Draw() Load() Loads player assets and initializes player state (position, size, sprite). public void Load() Update(double, List<Rectangle>) Updates the player's state, including handling input, physics, and collisions. public void Update(double deltaTime, List<Rectangle> platforms) Parameters deltaTime double The time elapsed since the last frame, in seconds. platforms List<Rectangle> A list of Rectangle objects representing solid platforms."
  },
  "api/Night.SampleGame.Program.html": {
    "href": "api/Night.SampleGame.Program.html",
    "title": "Class Program | nightengine",
    "summary": "Class Program Namespace Night.SampleGame Assembly Night.SampleGame.dll Main program class for the SampleGame. Contains the entry point of the application. public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Main() The main entry point for the application. Initializes and runs the game using the Night.Framework. public static void Main()"
  },
  "api/Night.SampleGame.html": {
    "href": "api/Night.SampleGame.html",
    "title": "Namespace Night.SampleGame | nightengine",
    "summary": "Namespace Night.SampleGame Classes Game Main game class for the platformer sample. Implements the IGame interface for Night.Engine integration. Platformer A sample platformer game implementation using the Night engine. Implements the IGame interface for Night.Engine integration. PlatformerGame Provides an entry point to run the Platformer sample game. Player Represents the player character in the game. Handles player movement, physics, and rendering. Program Main program class for the SampleGame. Contains the entry point of the application."
  },
  "api/Night.Sprite.html": {
    "href": "api/Night.Sprite.html",
    "title": "Class Sprite | nightengine",
    "summary": "Class Sprite Namespace Night Assembly Night.dll Represents a 2D sprite, typically an image loaded into a texture. public class Sprite Inheritance object Sprite Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Sprite(nint, int, int) Initializes a new instance of the Sprite class. public Sprite(nint texture, int width, int height) Parameters texture nint The SDL texture handle. width int The width of the texture. height int The height of the texture. Properties Height Gets the height of the sprite in pixels. public int Height { get; } Property Value int Texture Gets the SDL texture handle. public nint Texture { get; } Property Value nint Width Gets the width of the sprite in pixels. public int Width { get; } Property Value int"
  },
  "api/Night.System.html": {
    "href": "api/Night.System.html",
    "title": "Class System | nightengine",
    "summary": "Class System Namespace Night Assembly Night.dll Provides access to system-level information and functions. public static class System Inheritance object System Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SetClipboardText(string) Puts text in the system's clipboard. public static bool SetClipboardText(string text) Parameters text string The new text to hold in the system's clipboard. Returns bool True if the operation was successful, false otherwise."
  },
  "api/Night.Timer.html": {
    "href": "api/Night.Timer.html",
    "title": "Class Timer | nightengine",
    "summary": "Class Timer Namespace Night Assembly Night.dll Provides high-resolution timing functionality. public static class Timer Inheritance object Timer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetAverageDelta() Returns the average delta time (seconds per frame) over the last second. public static double GetAverageDelta() Returns double The average delta time over the last second. GetDelta() Gets the time elapsed since the last frame, in seconds. This is the same value passed to. IGame.Update(float deltaTime) . public static float GetDelta() Returns float The delta time in seconds. GetFPS() Gets the current frames per second (FPS). public static int GetFPS() Returns int The current FPS. GetTime() Gets the time elapsed since the Timer module was loaded, in seconds. public static double GetTime() Returns double The time in seconds. Given as a decimal, accurate to the microsecond. Sleep(double) Pauses the current thread for the specified amount of time. This function causes the entire thread to pause. Graphics will not draw, input events will not trigger, code will not run, and the window will be unresponsive if you use this in the main game thread. public static void Sleep(double seconds) Parameters seconds double Seconds to sleep for. Step() Measures the time between the last call to this function and the current one. Calling this function updates the value returned by GetDelta(). This is typically called once per frame by the game loop to determine the delta time for that frame. public static double Step() Returns double The time passed (in seconds) since the last call to Step()."
  },
  "api/Night.VersionInfo.html": {
    "href": "api/Night.VersionInfo.html",
    "title": "Class VersionInfo | nightengine",
    "summary": "Class VersionInfo Namespace Night Assembly Night.dll Provides information about the Night library, such as its version. public static class VersionInfo Inheritance object VersionInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CodeName Gets the developer-assigned codename for the current version. This value is manually updated by the developer. public const string CodeName = \"Initial Codename\" Field Value string Version Gets the full semantic version string (e.g., \"1.0.0\", \"1.2.3-beta.1\"). This value is updated by the GitHub release Action. public const string Version = \"0.0.0-dev\" Field Value string Methods GetVersion() Gets the Semantic Version of the Night library. This version is set during the release process. public static string GetVersion() Returns string The library's semantic version string."
  },
  "api/Night.Window.html": {
    "href": "api/Night.Window.html",
    "title": "Class Window | nightengine",
    "summary": "Class Window Namespace Night Assembly Night.dll Provides an interface for modifying and retrieving information about the program's window. public static class Window Inheritance object Window Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Close() Signals that the window should close. This is typically called by the engine when a quit event is received. TODO: Does this need to align with Love2D more? https://love2d.org/wiki/love.window.close. public static void Close() FromPixels(float) Converts a value from pixels to density-independent units, using the window's current DPI scale. public static float FromPixels(float value) Parameters value float The value in pixels. Returns float The equivalent value in density-independent units. GetDPIScale() Gets the DPI scale factor of the display containing the window. public static float GetDPIScale() Returns float The DPI scale factor, or 1.0f on error or if not applicable. GetDesktopDimensions(int) Gets the width and height of the desktop. public static (int Width, int Height) GetDesktopDimensions(int displayIndex = 0) Parameters displayIndex int The index of the display to query (0 for the primary display). Returns (int X, int Y) A tuple containing the width and height of the desktop, or (0,0) if an error occurs. GetDisplayCount() Gets the number of connected monitors. public static int GetDisplayCount() Returns int The number of currently connected displays. GetFullscreen() Gets whether the window is fullscreen. public static (bool IsFullscreen, FullscreenType FsType) GetFullscreen() Returns (bool IsFullscreen, FullscreenType FsType) A tuple: (bool IsFullscreen, FullscreenType FsType). IsFullscreen is true if the window is in any fullscreen mode, false otherwise. FsType indicates the type of fullscreen mode used. GetFullscreenModes(int) Gets a list of available fullscreen display modes for a given display. public static List<(int Width, int Height)> GetFullscreenModes(int displayIndex = 0) Parameters displayIndex int The index of the display (0 for primary). Returns List<(int Width, int Height)> A list of (Width, Height) tuples representing available modes, or an empty list on error. GetMode() Gets the current window mode (width, height, and flags). public static WindowMode GetMode() Returns WindowMode A WindowMode struct containing width, height, and current flags. IsOpen() Checks if the window is open. public static bool IsOpen() Returns bool True if the window is open, false otherwise. SetFullscreen(bool, FullscreenType) Enters or exits fullscreen. The display to use when entering fullscreen is chosen based on which display the window is currently in, if multiple monitors are connected. public static bool SetFullscreen(bool fullscreen, FullscreenType fsType = FullscreenType.Desktop) Parameters fullscreen bool Whether to enter or exit fullscreen mode. fsType FullscreenType The type of fullscreen mode to use (Desktop or Exclusive). Returns bool True if the operation was successful, false otherwise. SetMode(int, int, WindowFlags) Sets the display mode and properties of the window. public static bool SetMode(int width, int height, SDL.WindowFlags flags) Parameters width int The width of the window. height int The height of the window. flags SDL.WindowFlags SDL Window flags to apply. Returns bool True if the mode was set successfully, false otherwise. SetTitle(string) Sets the window title. public static void SetTitle(string title) Parameters title string The new window title. ToPixels(float) Converts a value from density-independent units to pixels, using the window's current DPI scale. public static float ToPixels(float value) Parameters value float The value in density-independent units. Returns float The equivalent value in pixels."
  },
  "api/Night.WindowConfig.html": {
    "href": "api/Night.WindowConfig.html",
    "title": "Class WindowConfig | nightengine",
    "summary": "Class WindowConfig Namespace Night Assembly Night.dll Configuration settings for the game window. public class WindowConfig Inheritance object WindowConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Borderless Gets or sets a value indicating whether the window should be borderless. [JsonPropertyName(\"borderless\")] public bool Borderless { get; set; } Property Value bool Depth Gets or sets the depth buffer bits. Null for system default. [JsonPropertyName(\"depth\")] public int? Depth { get; set; } Property Value int? Display Gets or sets the 1-indexed display number to use for the window. [JsonPropertyName(\"display\")] public int Display { get; set; } Property Value int Fullscreen Gets or sets a value indicating whether the window should start in fullscreen mode. [JsonPropertyName(\"fullscreen\")] public bool Fullscreen { get; set; } Property Value bool FullscreenType Gets or sets the type of fullscreen mode (\"desktop\" or \"exclusive\"). [JsonPropertyName(\"fullscreentype\")] public string FullscreenType { get; set; } Property Value string Height Gets or sets the initial height of the window in pixels. [JsonPropertyName(\"height\")] public int Height { get; set; } Property Value int HighDPI Gets or sets a value indicating whether to enable High DPI mode if available. [JsonPropertyName(\"highdpi\")] public bool HighDPI { get; set; } Property Value bool Icon Gets or sets the path to the window icon image file. Null for no icon. [JsonPropertyName(\"icon\")] public string? Icon { get; set; } Property Value string MSAA Gets or sets the multisample anti-aliasing (MSAA) level. [JsonPropertyName(\"msaa\")] public int MSAA { get; set; } Property Value int MinHeight Gets or sets the minimum height of the window if resizable. [JsonPropertyName(\"minheight\")] public int MinHeight { get; set; } Property Value int MinWidth Gets or sets the minimum width of the window if resizable. [JsonPropertyName(\"minwidth\")] public int MinWidth { get; set; } Property Value int Resizable Gets or sets a value indicating whether the window should be resizable. [JsonPropertyName(\"resizable\")] public bool Resizable { get; set; } Property Value bool Stencil Gets or sets the stencil buffer bits. Null for system default. [JsonPropertyName(\"stencil\")] public int? Stencil { get; set; } Property Value int? Title Gets or sets the title of the window. [JsonPropertyName(\"title\")] public string Title { get; set; } Property Value string UseDPIScale Gets or sets a value indicating whether to use DPI scaling. [JsonPropertyName(\"usedpiscale\")] public bool UseDPIScale { get; set; } Property Value bool VSync Gets or sets the VSync mode. -1 for adaptive, 0 for disabled, 1 for enabled. [JsonPropertyName(\"vsync\")] public int VSync { get; set; } Property Value int Width Gets or sets the initial width of the window in pixels. [JsonPropertyName(\"width\")] public int Width { get; set; } Property Value int X Gets or sets the initial X position of the window. Null for centered. [JsonPropertyName(\"x\")] public int? X { get; set; } Property Value int? Y Gets or sets the initial Y position of the window. Null for centered. [JsonPropertyName(\"y\")] public int? Y { get; set; } Property Value int?"
  },
  "api/Night.WindowMode.html": {
    "href": "api/Night.WindowMode.html",
    "title": "Struct WindowMode | nightengine",
    "summary": "Struct WindowMode Namespace Night Assembly Night.dll Represents the display mode of a window, including width, height, and other properties. public struct WindowMode Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Borderless Gets or sets a value indicating whether the window is borderless. public bool Borderless Field Value bool Centered Gets or sets a value indicating whether the window is centered in windowed mode. public bool Centered Field Value bool Display Gets or sets the 1-based index of the display the window is currently in. public int Display Field Value int Fullscreen Gets or sets a value indicating whether the window is in fullscreen mode. public bool Fullscreen Field Value bool FullscreenType Gets or sets the type of fullscreen mode used. public FullscreenType FullscreenType Field Value FullscreenType Height Gets or sets the window height in pixels. public int Height Field Value int HighDpi Gets or sets a value indicating whether high-dpi mode is allowed on Retina displays (macOS). public bool HighDpi Field Value bool MinHeight Gets or sets the minimum height of the window, if resizable. public int MinHeight Field Value int MinWidth Gets or sets the minimum width of the window, if resizable. public int MinWidth Field Value int Msaa Gets or sets the number of antialiasing samples used (0 if MSAA is disabled). public int Msaa Field Value int RefreshRate Gets or sets the refresh rate of the screen's current display mode in Hz (0 if undetermined). public int RefreshRate Field Value int Resizable Gets or sets a value indicating whether the window is resizable in windowed mode. public bool Resizable Field Value bool Vsync Gets or sets the VSync mode. 1 if the graphics framerate is synchronized with the monitor's refresh rate, 0 otherwise. public int Vsync Field Value int Width Gets or sets the window width in pixels. public int Width Field Value int X Gets or sets the x-coordinate of the window's position. public int X Field Value int Y Gets or sets the y-coordinate of the window's position. public int Y Field Value int"
  },
  "api/Night.html": {
    "href": "api/Night.html",
    "title": "Namespace Night | nightengine",
    "summary": "Namespace Night Classes AudioConfig Configuration settings for the audio module. ConfigurationManager Manages the loading and accessing of game configuration settings. Error Manages the user-defined error handler. FileSystemInfo Contains information about a file or directory. Filesystem Provides basic file system operations. Inspired by Love2D's love.filesystem module. Framework Manages the main game loop and coordination of game states. Provides the main entry point to run a game. GameConfig Represents the overall game configuration settings, typically loaded from a config.json file. Graphics Provides functionality for drawing graphics. Mimics Love2D's love.graphics module. Keyboard Provides an interface to the user's keyboard. ModulesConfig Configuration for enabling or disabling specific engine modules. Note: Currently, these are placeholders and do not disable module functionality. Mouse Provides an interface to the user's mouse. NightSDL Provides direct access to some SDL3 functions using SDL3-CS bindings. Sprite Represents a 2D sprite, typically an image loaded into a texture. System Provides access to system-level information and functions. Timer Provides high-resolution timing functionality. VersionInfo Provides information about the Night library, such as its version. Window Provides an interface for modifying and retrieving information about the program's window. WindowConfig Configuration settings for the game window. Structs Color Represents a color with Red, Green, Blue, and Alpha components. Each component is a byte value ranging from 0 (no intensity) to 255 (full intensity). The Alpha component controls the transparency of the color, where 0 is fully transparent and 255 is fully opaque. PointF Represents a 2D point with floating-point coordinates. Rectangle Represents a rectangle with position (X, Y) and dimensions (Width, Height). WindowMode Represents the display mode of a window, including width, height, and other properties. Interfaces IGame Interface for a game that can be run by the Night Engine. Game developers will implement this interface in their main game class. Enums DrawMode Specifies whether a shape should be drawn filled or as an outline. FileMode Represents the different modes you can open a File in. FileType Represents the type of a file system object. FullscreenType Types of fullscreen modes. KeyCode Represents keyboard scancodes. Values correspond to SDL_Scancode. KeySymbol Represents logical key symbols. Values correspond to SDL_Keycode. MouseButton Represents mouse buttons. Values correspond to SDL_MouseButtonFlags/ SDL3.SDL.Button* constants. (e.g., Left is 1, Middle is 2, etc.) Delegates ErrorHandlerDelegate Defines the delegate for handling unhandled exceptions from game code. The error handler function will be called when an unhandled exception occurs within the game's Load, Update, Draw, or input callback methods."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Night Engine API Documentation | nightengine",
    "summary": "Night Engine API Documentation Welcome to the API documentation for Night Engine. Use the navigation to explore the available namespaces and classes."
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | nightengine",
    "summary": "Getting Started"
  },
  "docs/index.html": {
    "href": "docs/index.html",
    "title": "Articles | nightengine",
    "summary": "Articles This section contains conceptual articles about Night Engine."
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | nightengine",
    "summary": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | nightengine",
    "summary": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}


================================================
File: site/_site/manifest.json
================================================
{
  "source_base_path": "/Users/danny/Documents/GitHub/any2/site",
  "xrefmap": "xrefmap.yml",
  "files": [
    {
      "type": "Resource",
      "output": {
        "resource": {
          "relative_path": "index.json"
        }
      }
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.AudioConfig.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.AudioConfig.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.AudioConfig",
      "Summary": "<p sourcefile=\"api/Night.AudioConfig.yml\" sourcestartlinenumber=\"1\">Configuration settings for the audio module.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.Color.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.Color.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.Color",
      "Summary": "<p sourcefile=\"api/Night.Color.yml\" sourcestartlinenumber=\"1\">Represents a color with Red, Green, Blue, and Alpha components.\nEach component is a byte value ranging from 0 (no intensity) to 255 (full intensity).\nThe Alpha component controls the transparency of the color, where 0 is fully transparent and 255 is fully opaque.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.ConfigurationManager.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.ConfigurationManager.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.ConfigurationManager",
      "Summary": "<p sourcefile=\"api/Night.ConfigurationManager.yml\" sourcestartlinenumber=\"1\">Manages the loading and accessing of game configuration settings.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.DrawMode.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.DrawMode.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.DrawMode",
      "Summary": "<p sourcefile=\"api/Night.DrawMode.yml\" sourcestartlinenumber=\"1\">Specifies whether a shape should be drawn filled or as an outline.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.Error.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.Error.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.Error",
      "Summary": "<p sourcefile=\"api/Night.Error.yml\" sourcestartlinenumber=\"1\">Manages the user-defined error handler.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.ErrorHandlerDelegate.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.ErrorHandlerDelegate.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.ErrorHandlerDelegate",
      "Summary": "<p sourcefile=\"api/Night.ErrorHandlerDelegate.yml\" sourcestartlinenumber=\"1\">Defines the delegate for handling unhandled exceptions from game code.\nThe error handler function will be called when an unhandled exception occurs\nwithin the game's Load, Update, Draw, or input callback methods.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.FileMode.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.FileMode.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.FileMode",
      "Summary": "<p sourcefile=\"api/Night.FileMode.yml\" sourcestartlinenumber=\"1\">Represents the different modes you can open a File in.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.FileSystemInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.FileSystemInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.FileSystemInfo",
      "Summary": "<p sourcefile=\"api/Night.FileSystemInfo.yml\" sourcestartlinenumber=\"1\">Contains information about a file or directory.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.FileType.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.FileType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.FileType",
      "Summary": "<p sourcefile=\"api/Night.FileType.yml\" sourcestartlinenumber=\"1\">Represents the type of a file system object.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.Filesystem.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.Filesystem.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.Filesystem",
      "Summary": "<p sourcefile=\"api/Night.Filesystem.yml\" sourcestartlinenumber=\"1\">Provides basic file system operations.\nInspired by Love2D's love.filesystem module.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.Framework.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.Framework.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.Framework",
      "Summary": "<p sourcefile=\"api/Night.Framework.yml\" sourcestartlinenumber=\"1\">Manages the main game loop and coordination of game states.\nProvides the main entry point to run a game.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.FullscreenType.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.FullscreenType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.FullscreenType",
      "Summary": "<p sourcefile=\"api/Night.FullscreenType.yml\" sourcestartlinenumber=\"1\">Types of fullscreen modes.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.GameConfig.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.GameConfig.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.GameConfig",
      "Summary": "<p sourcefile=\"api/Night.GameConfig.yml\" sourcestartlinenumber=\"1\">Represents the overall game configuration settings, typically loaded from a config.json file.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.Graphics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.Graphics.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.Graphics",
      "Summary": "<p sourcefile=\"api/Night.Graphics.yml\" sourcestartlinenumber=\"1\">Provides functionality for drawing graphics.\nMimics Love2D's love.graphics module.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.IGame.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.IGame.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.IGame",
      "Summary": "<p sourcefile=\"api/Night.IGame.yml\" sourcestartlinenumber=\"1\">Interface for a game that can be run by the Night Engine.\nGame developers will implement this interface in their main game class.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.KeyCode.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.KeyCode.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.KeyCode",
      "Summary": "<p sourcefile=\"api/Night.KeyCode.yml\" sourcestartlinenumber=\"1\">Represents keyboard scancodes. Values correspond to SDL_Scancode.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.KeySymbol.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.KeySymbol.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.KeySymbol",
      "Summary": "<p sourcefile=\"api/Night.KeySymbol.yml\" sourcestartlinenumber=\"1\">Represents logical key symbols. Values correspond to SDL_Keycode.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.Keyboard.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.Keyboard.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.Keyboard",
      "Summary": "<p sourcefile=\"api/Night.Keyboard.yml\" sourcestartlinenumber=\"1\">Provides an interface to the user's keyboard.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.ModulesConfig.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.ModulesConfig.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.ModulesConfig",
      "Summary": "<p sourcefile=\"api/Night.ModulesConfig.yml\" sourcestartlinenumber=\"1\">Configuration for enabling or disabling specific engine modules.\nNote: Currently, these are placeholders and do not disable module functionality.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.Mouse.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.Mouse.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.Mouse",
      "Summary": "<p sourcefile=\"api/Night.Mouse.yml\" sourcestartlinenumber=\"1\">Provides an interface to the user's mouse.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.MouseButton.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.MouseButton.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.MouseButton",
      "Summary": "<p sourcefile=\"api/Night.MouseButton.yml\" sourcestartlinenumber=\"1\">Represents mouse buttons. Values correspond to SDL_MouseButtonFlags/\nSDL3.SDL.Button* constants.\n(e.g., Left is 1, Middle is 2, etc.)</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.NightSDL.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.NightSDL.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.NightSDL",
      "Summary": "<p sourcefile=\"api/Night.NightSDL.yml\" sourcestartlinenumber=\"1\">Provides direct access to some SDL3 functions using SDL3-CS bindings.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.PointF.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.PointF.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.PointF",
      "Summary": "<p sourcefile=\"api/Night.PointF.yml\" sourcestartlinenumber=\"1\">Represents a 2D point with floating-point coordinates.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.Rectangle.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.Rectangle.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.Rectangle",
      "Summary": "<p sourcefile=\"api/Night.Rectangle.yml\" sourcestartlinenumber=\"1\">Represents a rectangle with position (X, Y) and dimensions (Width, Height).</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.SampleGame.Game.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.SampleGame.Game.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.SampleGame.Game",
      "Summary": "<p sourcefile=\"api/Night.SampleGame.Game.yml\" sourcestartlinenumber=\"1\">Main game class for the platformer sample.\nImplements the <xref href=\"Night.IGame\" data-throw-if-not-resolved=\"false\"></xref> interface for Night.Engine integration.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.SampleGame.Platformer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.SampleGame.Platformer.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.SampleGame.Platformer",
      "Summary": "<p sourcefile=\"api/Night.SampleGame.Platformer.yml\" sourcestartlinenumber=\"1\">A sample platformer game implementation using the Night engine.\nImplements the <xref href=\"Night.IGame\" data-throw-if-not-resolved=\"false\"></xref> interface for Night.Engine integration.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.SampleGame.PlatformerGame.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.SampleGame.PlatformerGame.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.SampleGame.PlatformerGame",
      "Summary": "<p sourcefile=\"api/Night.SampleGame.PlatformerGame.yml\" sourcestartlinenumber=\"1\">Provides an entry point to run the Platformer sample game.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.SampleGame.Player.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.SampleGame.Player.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.SampleGame.Player",
      "Summary": "<p sourcefile=\"api/Night.SampleGame.Player.yml\" sourcestartlinenumber=\"1\">Represents the player character in the game.\nHandles player movement, physics, and rendering.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.SampleGame.Program.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.SampleGame.Program.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.SampleGame.Program",
      "Summary": "<p sourcefile=\"api/Night.SampleGame.Program.yml\" sourcestartlinenumber=\"1\">Main program class for the SampleGame.\nContains the entry point of the application.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.SampleGame.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.SampleGame.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.SampleGame",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.Sprite.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.Sprite.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.Sprite",
      "Summary": "<p sourcefile=\"api/Night.Sprite.yml\" sourcestartlinenumber=\"1\">Represents a 2D sprite, typically an image loaded into a texture.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.System.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.System.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.System",
      "Summary": "<p sourcefile=\"api/Night.System.yml\" sourcestartlinenumber=\"1\">Provides access to system-level information and functions.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.Timer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.Timer.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.Timer",
      "Summary": "<p sourcefile=\"api/Night.Timer.yml\" sourcestartlinenumber=\"1\">Provides high-resolution timing functionality.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.VersionInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.VersionInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.VersionInfo",
      "Summary": "<p sourcefile=\"api/Night.VersionInfo.yml\" sourcestartlinenumber=\"1\">Provides information about the Night library, such as its version.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.Window.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.Window.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.Window",
      "Summary": "<p sourcefile=\"api/Night.Window.yml\" sourcestartlinenumber=\"1\">Provides an interface for modifying and retrieving information about the program's window.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.WindowConfig.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.WindowConfig.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.WindowConfig",
      "Summary": "<p sourcefile=\"api/Night.WindowConfig.yml\" sourcestartlinenumber=\"1\">Configuration settings for the game window.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.WindowMode.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.WindowMode.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night.WindowMode",
      "Summary": "<p sourcefile=\"api/Night.WindowMode.yml\" sourcestartlinenumber=\"1\">Represents the display mode of a window, including width, height, and other properties.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Night.yml",
      "output": {
        ".html": {
          "relative_path": "api/Night.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Night",
      "Summary": null
    },
    {
      "type": "Conceptual",
      "source_relative_path": "api/index.md",
      "output": {
        ".html": {
          "relative_path": "api/index.html"
        }
      },
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "api/toc.yml",
      "output": {
        ".html": {
          "relative_path": "api/toc.html"
        },
        ".json": {
          "relative_path": "api/toc.json"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "docs/getting-started.md",
      "output": {
        ".html": {
          "relative_path": "docs/getting-started.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "docs/index.md",
      "output": {
        ".html": {
          "relative_path": "docs/index.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "docs/introduction.md",
      "output": {
        ".html": {
          "relative_path": "docs/introduction.html"
        }
      },
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "docs/toc.yml",
      "output": {
        ".html": {
          "relative_path": "docs/toc.html"
        },
        ".json": {
          "relative_path": "docs/toc.json"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "index.md",
      "output": {
        ".html": {
          "relative_path": "index.html"
        }
      },
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "toc.yml",
      "output": {
        ".html": {
          "relative_path": "toc.html"
        },
        ".json": {
          "relative_path": "toc.json"
        }
      },
      "version": ""
    }
  ],
  "groups": [
    {
      "xrefmap": "xrefmap.yml"
    }
  ]
}


================================================
File: site/_site/toc.html
================================================

<div id="sidetoggle">
  <div>
    <div class="sidefilter">
      <form class="toc-filter">
        <span class="glyphicon glyphicon-filter filter-icon"></span>
        <span class="glyphicon glyphicon-remove clear-icon" id="toc_filter_clear"></span>
        <input type="text" id="toc_filter_input" placeholder="Filter by title" onkeypress="if(event.keyCode==13) {return false;}">
      </form>
    </div>
    <div class="sidetoc">
      <div class="toc" id="toc">

          <ul class="nav level1">
                <li>
                    <a>Docs</a>
                </li>
                <li>
                    <a href="api/Night.html" name="api/toc.html" title="API">API</a>
                </li>
          </ul>
      </div>
    </div>
  </div>
</div>



================================================
File: site/_site/toc.json
================================================

{"items":[{"name":"Docs","href":"site/"},{"name":"API","href":"api/Night.html","tocHref":"api/toc.html","topicHref":"api/Night.html","topicUid":"Night"}],"pdf":false}



================================================
File: site/_site/xrefmap.yml
================================================
### YamlMime:XRefMap
sorted: true
references:
- uid: Night
  name: Night
  href: api/Night.html
  commentId: N:Night
  fullName: Night
  nameWithType: Night
- uid: Night.AudioConfig
  name: AudioConfig
  href: api/Night.AudioConfig.html
  commentId: T:Night.AudioConfig
  fullName: Night.AudioConfig
  nameWithType: AudioConfig
- uid: Night.AudioConfig.Mic
  name: Mic
  href: api/Night.AudioConfig.html#Night_AudioConfig_Mic
  commentId: P:Night.AudioConfig.Mic
  fullName: Night.AudioConfig.Mic
  nameWithType: AudioConfig.Mic
- uid: Night.AudioConfig.Mic*
  name: Mic
  href: api/Night.AudioConfig.html#Night_AudioConfig_Mic_
  commentId: Overload:Night.AudioConfig.Mic
  isSpec: "True"
  fullName: Night.AudioConfig.Mic
  nameWithType: AudioConfig.Mic
- uid: Night.AudioConfig.MixWithSystem
  name: MixWithSystem
  href: api/Night.AudioConfig.html#Night_AudioConfig_MixWithSystem
  commentId: P:Night.AudioConfig.MixWithSystem
  fullName: Night.AudioConfig.MixWithSystem
  nameWithType: AudioConfig.MixWithSystem
- uid: Night.AudioConfig.MixWithSystem*
  name: MixWithSystem
  href: api/Night.AudioConfig.html#Night_AudioConfig_MixWithSystem_
  commentId: Overload:Night.AudioConfig.MixWithSystem
  isSpec: "True"
  fullName: Night.AudioConfig.MixWithSystem
  nameWithType: AudioConfig.MixWithSystem
- uid: Night.Color
  name: Color
  href: api/Night.Color.html
  commentId: T:Night.Color
  fullName: Night.Color
  nameWithType: Color
- uid: Night.Color.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)
  name: Color(byte, byte, byte, byte)
  href: api/Night.Color.html#Night_Color__ctor_System_Byte_System_Byte_System_Byte_System_Byte_
  commentId: M:Night.Color.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)
  name.vb: New(Byte, Byte, Byte, Byte)
  fullName: Night.Color.Color(byte, byte, byte, byte)
  fullName.vb: Night.Color.New(Byte, Byte, Byte, Byte)
  nameWithType: Color.Color(byte, byte, byte, byte)
  nameWithType.vb: Color.New(Byte, Byte, Byte, Byte)
- uid: Night.Color.#ctor*
  name: Color
  href: api/Night.Color.html#Night_Color__ctor_
  commentId: Overload:Night.Color.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Night.Color.Color
  fullName.vb: Night.Color.New
  nameWithType: Color.Color
  nameWithType.vb: Color.New
- uid: Night.Color.A
  name: A
  href: api/Night.Color.html#Night_Color_A
  commentId: F:Night.Color.A
  fullName: Night.Color.A
  nameWithType: Color.A
- uid: Night.Color.B
  name: B
  href: api/Night.Color.html#Night_Color_B
  commentId: F:Night.Color.B
  fullName: Night.Color.B
  nameWithType: Color.B
- uid: Night.Color.Black
  name: Black
  href: api/Night.Color.html#Night_Color_Black
  commentId: F:Night.Color.Black
  fullName: Night.Color.Black
  nameWithType: Color.Black
- uid: Night.Color.Blue
  name: Blue
  href: api/Night.Color.html#Night_Color_Blue
  commentId: F:Night.Color.Blue
  fullName: Night.Color.Blue
  nameWithType: Color.Blue
- uid: Night.Color.Cyan
  name: Cyan
  href: api/Night.Color.html#Night_Color_Cyan
  commentId: F:Night.Color.Cyan
  fullName: Night.Color.Cyan
  nameWithType: Color.Cyan
- uid: Night.Color.G
  name: G
  href: api/Night.Color.html#Night_Color_G
  commentId: F:Night.Color.G
  fullName: Night.Color.G
  nameWithType: Color.G
- uid: Night.Color.Green
  name: Green
  href: api/Night.Color.html#Night_Color_Green
  commentId: F:Night.Color.Green
  fullName: Night.Color.Green
  nameWithType: Color.Green
- uid: Night.Color.Magenta
  name: Magenta
  href: api/Night.Color.html#Night_Color_Magenta
  commentId: F:Night.Color.Magenta
  fullName: Night.Color.Magenta
  nameWithType: Color.Magenta
- uid: Night.Color.R
  name: R
  href: api/Night.Color.html#Night_Color_R
  commentId: F:Night.Color.R
  fullName: Night.Color.R
  nameWithType: Color.R
- uid: Night.Color.Red
  name: Red
  href: api/Night.Color.html#Night_Color_Red
  commentId: F:Night.Color.Red
  fullName: Night.Color.Red
  nameWithType: Color.Red
- uid: Night.Color.Transparent
  name: Transparent
  href: api/Night.Color.html#Night_Color_Transparent
  commentId: F:Night.Color.Transparent
  fullName: Night.Color.Transparent
  nameWithType: Color.Transparent
- uid: Night.Color.White
  name: White
  href: api/Night.Color.html#Night_Color_White
  commentId: F:Night.Color.White
  fullName: Night.Color.White
  nameWithType: Color.White
- uid: Night.Color.Yellow
  name: Yellow
  href: api/Night.Color.html#Night_Color_Yellow
  commentId: F:Night.Color.Yellow
  fullName: Night.Color.Yellow
  nameWithType: Color.Yellow
- uid: Night.ConfigurationManager
  name: ConfigurationManager
  href: api/Night.ConfigurationManager.html
  commentId: T:Night.ConfigurationManager
  fullName: Night.ConfigurationManager
  nameWithType: ConfigurationManager
- uid: Night.ConfigurationManager.CurrentConfig
  name: CurrentConfig
  href: api/Night.ConfigurationManager.html#Night_ConfigurationManager_CurrentConfig
  commentId: P:Night.ConfigurationManager.CurrentConfig
  fullName: Night.ConfigurationManager.CurrentConfig
  nameWithType: ConfigurationManager.CurrentConfig
- uid: Night.ConfigurationManager.CurrentConfig*
  name: CurrentConfig
  href: api/Night.ConfigurationManager.html#Night_ConfigurationManager_CurrentConfig_
  commentId: Overload:Night.ConfigurationManager.CurrentConfig
  isSpec: "True"
  fullName: Night.ConfigurationManager.CurrentConfig
  nameWithType: ConfigurationManager.CurrentConfig
- uid: Night.ConfigurationManager.IsLoaded
  name: IsLoaded
  href: api/Night.ConfigurationManager.html#Night_ConfigurationManager_IsLoaded
  commentId: P:Night.ConfigurationManager.IsLoaded
  fullName: Night.ConfigurationManager.IsLoaded
  nameWithType: ConfigurationManager.IsLoaded
- uid: Night.ConfigurationManager.IsLoaded*
  name: IsLoaded
  href: api/Night.ConfigurationManager.html#Night_ConfigurationManager_IsLoaded_
  commentId: Overload:Night.ConfigurationManager.IsLoaded
  isSpec: "True"
  fullName: Night.ConfigurationManager.IsLoaded
  nameWithType: ConfigurationManager.IsLoaded
- uid: Night.ConfigurationManager.LoadConfig(System.String)
  name: LoadConfig(string?)
  href: api/Night.ConfigurationManager.html#Night_ConfigurationManager_LoadConfig_System_String_
  commentId: M:Night.ConfigurationManager.LoadConfig(System.String)
  name.vb: LoadConfig(String)
  fullName: Night.ConfigurationManager.LoadConfig(string?)
  fullName.vb: Night.ConfigurationManager.LoadConfig(String)
  nameWithType: ConfigurationManager.LoadConfig(string?)
  nameWithType.vb: ConfigurationManager.LoadConfig(String)
- uid: Night.ConfigurationManager.LoadConfig*
  name: LoadConfig
  href: api/Night.ConfigurationManager.html#Night_ConfigurationManager_LoadConfig_
  commentId: Overload:Night.ConfigurationManager.LoadConfig
  isSpec: "True"
  fullName: Night.ConfigurationManager.LoadConfig
  nameWithType: ConfigurationManager.LoadConfig
- uid: Night.DrawMode
  name: DrawMode
  href: api/Night.DrawMode.html
  commentId: T:Night.DrawMode
  fullName: Night.DrawMode
  nameWithType: DrawMode
- uid: Night.DrawMode.Fill
  name: Fill
  href: api/Night.DrawMode.html#Night_DrawMode_Fill
  commentId: F:Night.DrawMode.Fill
  fullName: Night.DrawMode.Fill
  nameWithType: DrawMode.Fill
- uid: Night.DrawMode.Line
  name: Line
  href: api/Night.DrawMode.html#Night_DrawMode_Line
  commentId: F:Night.DrawMode.Line
  fullName: Night.DrawMode.Line
  nameWithType: DrawMode.Line
- uid: Night.Error
  name: Error
  href: api/Night.Error.html
  commentId: T:Night.Error
  fullName: Night.Error
  nameWithType: Error
- uid: Night.Error.SetHandler(Night.ErrorHandlerDelegate)
  name: SetHandler(ErrorHandlerDelegate)
  href: api/Night.Error.html#Night_Error_SetHandler_Night_ErrorHandlerDelegate_
  commentId: M:Night.Error.SetHandler(Night.ErrorHandlerDelegate)
  fullName: Night.Error.SetHandler(Night.ErrorHandlerDelegate)
  nameWithType: Error.SetHandler(ErrorHandlerDelegate)
- uid: Night.Error.SetHandler*
  name: SetHandler
  href: api/Night.Error.html#Night_Error_SetHandler_
  commentId: Overload:Night.Error.SetHandler
  isSpec: "True"
  fullName: Night.Error.SetHandler
  nameWithType: Error.SetHandler
- uid: Night.ErrorHandlerDelegate
  name: ErrorHandlerDelegate
  href: api/Night.ErrorHandlerDelegate.html
  commentId: T:Night.ErrorHandlerDelegate
  fullName: Night.ErrorHandlerDelegate
  nameWithType: ErrorHandlerDelegate
- uid: Night.FileMode
  name: FileMode
  href: api/Night.FileMode.html
  commentId: T:Night.FileMode
  fullName: Night.FileMode
  nameWithType: FileMode
- uid: Night.FileMode.A
  name: A
  href: api/Night.FileMode.html#Night_FileMode_A
  commentId: F:Night.FileMode.A
  fullName: Night.FileMode.A
  nameWithType: FileMode.A
- uid: Night.FileMode.Append
  name: Append
  href: api/Night.FileMode.html#Night_FileMode_Append
  commentId: F:Night.FileMode.Append
  fullName: Night.FileMode.Append
  nameWithType: FileMode.Append
- uid: Night.FileMode.C
  name: C
  href: api/Night.FileMode.html#Night_FileMode_C
  commentId: F:Night.FileMode.C
  fullName: Night.FileMode.C
  nameWithType: FileMode.C
- uid: Night.FileMode.Close
  name: Close
  href: api/Night.FileMode.html#Night_FileMode_Close
  commentId: F:Night.FileMode.Close
  fullName: Night.FileMode.Close
  nameWithType: FileMode.Close
- uid: Night.FileMode.R
  name: R
  href: api/Night.FileMode.html#Night_FileMode_R
  commentId: F:Night.FileMode.R
  fullName: Night.FileMode.R
  nameWithType: FileMode.R
- uid: Night.FileMode.Read
  name: Read
  href: api/Night.FileMode.html#Night_FileMode_Read
  commentId: F:Night.FileMode.Read
  fullName: Night.FileMode.Read
  nameWithType: FileMode.Read
- uid: Night.FileMode.W
  name: W
  href: api/Night.FileMode.html#Night_FileMode_W
  commentId: F:Night.FileMode.W
  fullName: Night.FileMode.W
  nameWithType: FileMode.W
- uid: Night.FileMode.Write
  name: Write
  href: api/Night.FileMode.html#Night_FileMode_Write
  commentId: F:Night.FileMode.Write
  fullName: Night.FileMode.Write
  nameWithType: FileMode.Write
- uid: Night.FileSystemInfo
  name: FileSystemInfo
  href: api/Night.FileSystemInfo.html
  commentId: T:Night.FileSystemInfo
  fullName: Night.FileSystemInfo
  nameWithType: FileSystemInfo
- uid: Night.FileSystemInfo.#ctor
  name: FileSystemInfo()
  href: api/Night.FileSystemInfo.html#Night_FileSystemInfo__ctor
  commentId: M:Night.FileSystemInfo.#ctor
  name.vb: New()
  fullName: Night.FileSystemInfo.FileSystemInfo()
  fullName.vb: Night.FileSystemInfo.New()
  nameWithType: FileSystemInfo.FileSystemInfo()
  nameWithType.vb: FileSystemInfo.New()
- uid: Night.FileSystemInfo.#ctor(Night.FileType,System.Nullable{System.Int64},System.Nullable{System.Int64})
  name: FileSystemInfo(FileType, long?, long?)
  href: api/Night.FileSystemInfo.html#Night_FileSystemInfo__ctor_Night_FileType_System_Nullable_System_Int64__System_Nullable_System_Int64__
  commentId: M:Night.FileSystemInfo.#ctor(Night.FileType,System.Nullable{System.Int64},System.Nullable{System.Int64})
  name.vb: New(FileType, Long?, Long?)
  fullName: Night.FileSystemInfo.FileSystemInfo(Night.FileType, long?, long?)
  fullName.vb: Night.FileSystemInfo.New(Night.FileType, Long?, Long?)
  nameWithType: FileSystemInfo.FileSystemInfo(FileType, long?, long?)
  nameWithType.vb: FileSystemInfo.New(FileType, Long?, Long?)
- uid: Night.FileSystemInfo.#ctor*
  name: FileSystemInfo
  href: api/Night.FileSystemInfo.html#Night_FileSystemInfo__ctor_
  commentId: Overload:Night.FileSystemInfo.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Night.FileSystemInfo.FileSystemInfo
  fullName.vb: Night.FileSystemInfo.New
  nameWithType: FileSystemInfo.FileSystemInfo
  nameWithType.vb: FileSystemInfo.New
- uid: Night.FileSystemInfo.ModTime
  name: ModTime
  href: api/Night.FileSystemInfo.html#Night_FileSystemInfo_ModTime
  commentId: P:Night.FileSystemInfo.ModTime
  fullName: Night.FileSystemInfo.ModTime
  nameWithType: FileSystemInfo.ModTime
- uid: Night.FileSystemInfo.ModTime*
  name: ModTime
  href: api/Night.FileSystemInfo.html#Night_FileSystemInfo_ModTime_
  commentId: Overload:Night.FileSystemInfo.ModTime
  isSpec: "True"
  fullName: Night.FileSystemInfo.ModTime
  nameWithType: FileSystemInfo.ModTime
- uid: Night.FileSystemInfo.Size
  name: Size
  href: api/Night.FileSystemInfo.html#Night_FileSystemInfo_Size
  commentId: P:Night.FileSystemInfo.Size
  fullName: Night.FileSystemInfo.Size
  nameWithType: FileSystemInfo.Size
- uid: Night.FileSystemInfo.Size*
  name: Size
  href: api/Night.FileSystemInfo.html#Night_FileSystemInfo_Size_
  commentId: Overload:Night.FileSystemInfo.Size
  isSpec: "True"
  fullName: Night.FileSystemInfo.Size
  nameWithType: FileSystemInfo.Size
- uid: Night.FileSystemInfo.Type
  name: Type
  href: api/Night.FileSystemInfo.html#Night_FileSystemInfo_Type
  commentId: P:Night.FileSystemInfo.Type
  fullName: Night.FileSystemInfo.Type
  nameWithType: FileSystemInfo.Type
- uid: Night.FileSystemInfo.Type*
  name: Type
  href: api/Night.FileSystemInfo.html#Night_FileSystemInfo_Type_
  commentId: Overload:Night.FileSystemInfo.Type
  isSpec: "True"
  fullName: Night.FileSystemInfo.Type
  nameWithType: FileSystemInfo.Type
- uid: Night.FileType
  name: FileType
  href: api/Night.FileType.html
  commentId: T:Night.FileType
  fullName: Night.FileType
  nameWithType: FileType
- uid: Night.FileType.Directory
  name: Directory
  href: api/Night.FileType.html#Night_FileType_Directory
  commentId: F:Night.FileType.Directory
  fullName: Night.FileType.Directory
  nameWithType: FileType.Directory
- uid: Night.FileType.File
  name: File
  href: api/Night.FileType.html#Night_FileType_File
  commentId: F:Night.FileType.File
  fullName: Night.FileType.File
  nameWithType: FileType.File
- uid: Night.FileType.None
  name: None
  href: api/Night.FileType.html#Night_FileType_None
  commentId: F:Night.FileType.None
  fullName: Night.FileType.None
  nameWithType: FileType.None
- uid: Night.FileType.Other
  name: Other
  href: api/Night.FileType.html#Night_FileType_Other
  commentId: F:Night.FileType.Other
  fullName: Night.FileType.Other
  nameWithType: FileType.Other
- uid: Night.FileType.Symlink
  name: Symlink
  href: api/Night.FileType.html#Night_FileType_Symlink
  commentId: F:Night.FileType.Symlink
  fullName: Night.FileType.Symlink
  nameWithType: FileType.Symlink
- uid: Night.Filesystem
  name: Filesystem
  href: api/Night.Filesystem.html
  commentId: T:Night.Filesystem
  fullName: Night.Filesystem
  nameWithType: Filesystem
- uid: Night.Filesystem.GetInfo(System.String,Night.FileSystemInfo)
  name: GetInfo(string, FileSystemInfo)
  href: api/Night.Filesystem.html#Night_Filesystem_GetInfo_System_String_Night_FileSystemInfo_
  commentId: M:Night.Filesystem.GetInfo(System.String,Night.FileSystemInfo)
  name.vb: GetInfo(String, FileSystemInfo)
  fullName: Night.Filesystem.GetInfo(string, Night.FileSystemInfo)
  fullName.vb: Night.Filesystem.GetInfo(String, Night.FileSystemInfo)
  nameWithType: Filesystem.GetInfo(string, FileSystemInfo)
  nameWithType.vb: Filesystem.GetInfo(String, FileSystemInfo)
- uid: Night.Filesystem.GetInfo(System.String,Night.FileType,Night.FileSystemInfo)
  name: GetInfo(string, FileType, FileSystemInfo)
  href: api/Night.Filesystem.html#Night_Filesystem_GetInfo_System_String_Night_FileType_Night_FileSystemInfo_
  commentId: M:Night.Filesystem.GetInfo(System.String,Night.FileType,Night.FileSystemInfo)
  name.vb: GetInfo(String, FileType, FileSystemInfo)
  fullName: Night.Filesystem.GetInfo(string, Night.FileType, Night.FileSystemInfo)
  fullName.vb: Night.Filesystem.GetInfo(String, Night.FileType, Night.FileSystemInfo)
  nameWithType: Filesystem.GetInfo(string, FileType, FileSystemInfo)
  nameWithType.vb: Filesystem.GetInfo(String, FileType, FileSystemInfo)
- uid: Night.Filesystem.GetInfo(System.String,System.Nullable{Night.FileType})
  name: GetInfo(string, FileType?)
  href: api/Night.Filesystem.html#Night_Filesystem_GetInfo_System_String_System_Nullable_Night_FileType__
  commentId: M:Night.Filesystem.GetInfo(System.String,System.Nullable{Night.FileType})
  name.vb: GetInfo(String, FileType?)
  fullName: Night.Filesystem.GetInfo(string, Night.FileType?)
  fullName.vb: Night.Filesystem.GetInfo(String, Night.FileType?)
  nameWithType: Filesystem.GetInfo(string, FileType?)
  nameWithType.vb: Filesystem.GetInfo(String, FileType?)
- uid: Night.Filesystem.GetInfo*
  name: GetInfo
  href: api/Night.Filesystem.html#Night_Filesystem_GetInfo_
  commentId: Overload:Night.Filesystem.GetInfo
  isSpec: "True"
  fullName: Night.Filesystem.GetInfo
  nameWithType: Filesystem.GetInfo
- uid: Night.Filesystem.ReadBytes(System.String)
  name: ReadBytes(string)
  href: api/Night.Filesystem.html#Night_Filesystem_ReadBytes_System_String_
  commentId: M:Night.Filesystem.ReadBytes(System.String)
  name.vb: ReadBytes(String)
  fullName: Night.Filesystem.ReadBytes(string)
  fullName.vb: Night.Filesystem.ReadBytes(String)
  nameWithType: Filesystem.ReadBytes(string)
  nameWithType.vb: Filesystem.ReadBytes(String)
- uid: Night.Filesystem.ReadBytes*
  name: ReadBytes
  href: api/Night.Filesystem.html#Night_Filesystem_ReadBytes_
  commentId: Overload:Night.Filesystem.ReadBytes
  isSpec: "True"
  fullName: Night.Filesystem.ReadBytes
  nameWithType: Filesystem.ReadBytes
- uid: Night.Filesystem.ReadText(System.String)
  name: ReadText(string)
  href: api/Night.Filesystem.html#Night_Filesystem_ReadText_System_String_
  commentId: M:Night.Filesystem.ReadText(System.String)
  name.vb: ReadText(String)
  fullName: Night.Filesystem.ReadText(string)
  fullName.vb: Night.Filesystem.ReadText(String)
  nameWithType: Filesystem.ReadText(string)
  nameWithType.vb: Filesystem.ReadText(String)
- uid: Night.Filesystem.ReadText*
  name: ReadText
  href: api/Night.Filesystem.html#Night_Filesystem_ReadText_
  commentId: Overload:Night.Filesystem.ReadText
  isSpec: "True"
  fullName: Night.Filesystem.ReadText
  nameWithType: Filesystem.ReadText
- uid: Night.Framework
  name: Framework
  href: api/Night.Framework.html
  commentId: T:Night.Framework
  fullName: Night.Framework
  nameWithType: Framework
- uid: Night.Framework.IsInputInitialized
  name: IsInputInitialized
  href: api/Night.Framework.html#Night_Framework_IsInputInitialized
  commentId: P:Night.Framework.IsInputInitialized
  fullName: Night.Framework.IsInputInitialized
  nameWithType: Framework.IsInputInitialized
- uid: Night.Framework.IsInputInitialized*
  name: IsInputInitialized
  href: api/Night.Framework.html#Night_Framework_IsInputInitialized_
  commentId: Overload:Night.Framework.IsInputInitialized
  isSpec: "True"
  fullName: Night.Framework.IsInputInitialized
  nameWithType: Framework.IsInputInitialized
- uid: Night.Framework.Run(Night.IGame)
  name: Run(IGame)
  href: api/Night.Framework.html#Night_Framework_Run_Night_IGame_
  commentId: M:Night.Framework.Run(Night.IGame)
  fullName: Night.Framework.Run(Night.IGame)
  nameWithType: Framework.Run(IGame)
- uid: Night.Framework.Run*
  name: Run
  href: api/Night.Framework.html#Night_Framework_Run_
  commentId: Overload:Night.Framework.Run
  isSpec: "True"
  fullName: Night.Framework.Run
  nameWithType: Framework.Run
- uid: Night.FullscreenType
  name: FullscreenType
  href: api/Night.FullscreenType.html
  commentId: T:Night.FullscreenType
  fullName: Night.FullscreenType
  nameWithType: FullscreenType
- uid: Night.FullscreenType.Desktop
  name: Desktop
  href: api/Night.FullscreenType.html#Night_FullscreenType_Desktop
  commentId: F:Night.FullscreenType.Desktop
  fullName: Night.FullscreenType.Desktop
  nameWithType: FullscreenType.Desktop
- uid: Night.FullscreenType.Exclusive
  name: Exclusive
  href: api/Night.FullscreenType.html#Night_FullscreenType_Exclusive
  commentId: F:Night.FullscreenType.Exclusive
  fullName: Night.FullscreenType.Exclusive
  nameWithType: FullscreenType.Exclusive
- uid: Night.GameConfig
  name: GameConfig
  href: api/Night.GameConfig.html
  commentId: T:Night.GameConfig
  fullName: Night.GameConfig
  nameWithType: GameConfig
- uid: Night.GameConfig.AccelerometerJoystick
  name: AccelerometerJoystick
  href: api/Night.GameConfig.html#Night_GameConfig_AccelerometerJoystick
  commentId: P:Night.GameConfig.AccelerometerJoystick
  fullName: Night.GameConfig.AccelerometerJoystick
  nameWithType: GameConfig.AccelerometerJoystick
- uid: Night.GameConfig.AccelerometerJoystick*
  name: AccelerometerJoystick
  href: api/Night.GameConfig.html#Night_GameConfig_AccelerometerJoystick_
  commentId: Overload:Night.GameConfig.AccelerometerJoystick
  isSpec: "True"
  fullName: Night.GameConfig.AccelerometerJoystick
  nameWithType: GameConfig.AccelerometerJoystick
- uid: Night.GameConfig.AppendIdentity
  name: AppendIdentity
  href: api/Night.GameConfig.html#Night_GameConfig_AppendIdentity
  commentId: P:Night.GameConfig.AppendIdentity
  fullName: Night.GameConfig.AppendIdentity
  nameWithType: GameConfig.AppendIdentity
- uid: Night.GameConfig.AppendIdentity*
  name: AppendIdentity
  href: api/Night.GameConfig.html#Night_GameConfig_AppendIdentity_
  commentId: Overload:Night.GameConfig.AppendIdentity
  isSpec: "True"
  fullName: Night.GameConfig.AppendIdentity
  nameWithType: GameConfig.AppendIdentity
- uid: Night.GameConfig.Audio
  name: Audio
  href: api/Night.GameConfig.html#Night_GameConfig_Audio
  commentId: P:Night.GameConfig.Audio
  fullName: Night.GameConfig.Audio
  nameWithType: GameConfig.Audio
- uid: Night.GameConfig.Audio*
  name: Audio
  href: api/Night.GameConfig.html#Night_GameConfig_Audio_
  commentId: Overload:Night.GameConfig.Audio
  isSpec: "True"
  fullName: Night.GameConfig.Audio
  nameWithType: GameConfig.Audio
- uid: Night.GameConfig.Console
  name: Console
  href: api/Night.GameConfig.html#Night_GameConfig_Console
  commentId: P:Night.GameConfig.Console
  fullName: Night.GameConfig.Console
  nameWithType: GameConfig.Console
- uid: Night.GameConfig.Console*
  name: Console
  href: api/Night.GameConfig.html#Night_GameConfig_Console_
  commentId: Overload:Night.GameConfig.Console
  isSpec: "True"
  fullName: Night.GameConfig.Console
  nameWithType: GameConfig.Console
- uid: Night.GameConfig.ExternalStorage
  name: ExternalStorage
  href: api/Night.GameConfig.html#Night_GameConfig_ExternalStorage
  commentId: P:Night.GameConfig.ExternalStorage
  fullName: Night.GameConfig.ExternalStorage
  nameWithType: GameConfig.ExternalStorage
- uid: Night.GameConfig.ExternalStorage*
  name: ExternalStorage
  href: api/Night.GameConfig.html#Night_GameConfig_ExternalStorage_
  commentId: Overload:Night.GameConfig.ExternalStorage
  isSpec: "True"
  fullName: Night.GameConfig.ExternalStorage
  nameWithType: GameConfig.ExternalStorage
- uid: Night.GameConfig.GammaCorrect
  name: GammaCorrect
  href: api/Night.GameConfig.html#Night_GameConfig_GammaCorrect
  commentId: P:Night.GameConfig.GammaCorrect
  fullName: Night.GameConfig.GammaCorrect
  nameWithType: GameConfig.GammaCorrect
- uid: Night.GameConfig.GammaCorrect*
  name: GammaCorrect
  href: api/Night.GameConfig.html#Night_GameConfig_GammaCorrect_
  commentId: Overload:Night.GameConfig.GammaCorrect
  isSpec: "True"
  fullName: Night.GameConfig.GammaCorrect
  nameWithType: GameConfig.GammaCorrect
- uid: Night.GameConfig.Identity
  name: Identity
  href: api/Night.GameConfig.html#Night_GameConfig_Identity
  commentId: P:Night.GameConfig.Identity
  fullName: Night.GameConfig.Identity
  nameWithType: GameConfig.Identity
- uid: Night.GameConfig.Identity*
  name: Identity
  href: api/Night.GameConfig.html#Night_GameConfig_Identity_
  commentId: Overload:Night.GameConfig.Identity
  isSpec: "True"
  fullName: Night.GameConfig.Identity
  nameWithType: GameConfig.Identity
- uid: Night.GameConfig.Modules
  name: Modules
  href: api/Night.GameConfig.html#Night_GameConfig_Modules
  commentId: P:Night.GameConfig.Modules
  fullName: Night.GameConfig.Modules
  nameWithType: GameConfig.Modules
- uid: Night.GameConfig.Modules*
  name: Modules
  href: api/Night.GameConfig.html#Night_GameConfig_Modules_
  commentId: Overload:Night.GameConfig.Modules
  isSpec: "True"
  fullName: Night.GameConfig.Modules
  nameWithType: GameConfig.Modules
- uid: Night.GameConfig.Version
  name: Version
  href: api/Night.GameConfig.html#Night_GameConfig_Version
  commentId: P:Night.GameConfig.Version
  fullName: Night.GameConfig.Version
  nameWithType: GameConfig.Version
- uid: Night.GameConfig.Version*
  name: Version
  href: api/Night.GameConfig.html#Night_GameConfig_Version_
  commentId: Overload:Night.GameConfig.Version
  isSpec: "True"
  fullName: Night.GameConfig.Version
  nameWithType: GameConfig.Version
- uid: Night.GameConfig.Window
  name: Window
  href: api/Night.GameConfig.html#Night_GameConfig_Window
  commentId: P:Night.GameConfig.Window
  fullName: Night.GameConfig.Window
  nameWithType: GameConfig.Window
- uid: Night.GameConfig.Window*
  name: Window
  href: api/Night.GameConfig.html#Night_GameConfig_Window_
  commentId: Overload:Night.GameConfig.Window
  isSpec: "True"
  fullName: Night.GameConfig.Window
  nameWithType: GameConfig.Window
- uid: Night.Graphics
  name: Graphics
  href: api/Night.Graphics.html
  commentId: T:Night.Graphics
  fullName: Night.Graphics
  nameWithType: Graphics
- uid: Night.Graphics.Circle(Night.DrawMode,System.Single,System.Single,System.Single,System.Int32)
  name: Circle(DrawMode, float, float, float, int)
  href: api/Night.Graphics.html#Night_Graphics_Circle_Night_DrawMode_System_Single_System_Single_System_Single_System_Int32_
  commentId: M:Night.Graphics.Circle(Night.DrawMode,System.Single,System.Single,System.Single,System.Int32)
  name.vb: Circle(DrawMode, Single, Single, Single, Integer)
  fullName: Night.Graphics.Circle(Night.DrawMode, float, float, float, int)
  fullName.vb: Night.Graphics.Circle(Night.DrawMode, Single, Single, Single, Integer)
  nameWithType: Graphics.Circle(DrawMode, float, float, float, int)
  nameWithType.vb: Graphics.Circle(DrawMode, Single, Single, Single, Integer)
- uid: Night.Graphics.Circle*
  name: Circle
  href: api/Night.Graphics.html#Night_Graphics_Circle_
  commentId: Overload:Night.Graphics.Circle
  isSpec: "True"
  fullName: Night.Graphics.Circle
  nameWithType: Graphics.Circle
- uid: Night.Graphics.Clear(Night.Color)
  name: Clear(Color)
  href: api/Night.Graphics.html#Night_Graphics_Clear_Night_Color_
  commentId: M:Night.Graphics.Clear(Night.Color)
  fullName: Night.Graphics.Clear(Night.Color)
  nameWithType: Graphics.Clear(Color)
- uid: Night.Graphics.Clear*
  name: Clear
  href: api/Night.Graphics.html#Night_Graphics_Clear_
  commentId: Overload:Night.Graphics.Clear
  isSpec: "True"
  fullName: Night.Graphics.Clear
  nameWithType: Graphics.Clear
- uid: Night.Graphics.Draw(Night.Sprite,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  name: Draw(Sprite, float, float, float, float, float, float, float)
  href: api/Night.Graphics.html#Night_Graphics_Draw_Night_Sprite_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_
  commentId: M:Night.Graphics.Draw(Night.Sprite,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  name.vb: Draw(Sprite, Single, Single, Single, Single, Single, Single, Single)
  fullName: Night.Graphics.Draw(Night.Sprite, float, float, float, float, float, float, float)
  fullName.vb: Night.Graphics.Draw(Night.Sprite, Single, Single, Single, Single, Single, Single, Single)
  nameWithType: Graphics.Draw(Sprite, float, float, float, float, float, float, float)
  nameWithType.vb: Graphics.Draw(Sprite, Single, Single, Single, Single, Single, Single, Single)
- uid: Night.Graphics.Draw*
  name: Draw
  href: api/Night.Graphics.html#Night_Graphics_Draw_
  commentId: Overload:Night.Graphics.Draw
  isSpec: "True"
  fullName: Night.Graphics.Draw
  nameWithType: Graphics.Draw
- uid: Night.Graphics.Line(Night.PointF[])
  name: Line(PointF[])
  href: api/Night.Graphics.html#Night_Graphics_Line_Night_PointF___
  commentId: M:Night.Graphics.Line(Night.PointF[])
  name.vb: Line(PointF())
  fullName: Night.Graphics.Line(Night.PointF[])
  fullName.vb: Night.Graphics.Line(Night.PointF())
  nameWithType: Graphics.Line(PointF[])
  nameWithType.vb: Graphics.Line(PointF())
- uid: Night.Graphics.Line(System.Single,System.Single,System.Single,System.Single)
  name: Line(float, float, float, float)
  href: api/Night.Graphics.html#Night_Graphics_Line_System_Single_System_Single_System_Single_System_Single_
  commentId: M:Night.Graphics.Line(System.Single,System.Single,System.Single,System.Single)
  name.vb: Line(Single, Single, Single, Single)
  fullName: Night.Graphics.Line(float, float, float, float)
  fullName.vb: Night.Graphics.Line(Single, Single, Single, Single)
  nameWithType: Graphics.Line(float, float, float, float)
  nameWithType.vb: Graphics.Line(Single, Single, Single, Single)
- uid: Night.Graphics.Line*
  name: Line
  href: api/Night.Graphics.html#Night_Graphics_Line_
  commentId: Overload:Night.Graphics.Line
  isSpec: "True"
  fullName: Night.Graphics.Line
  nameWithType: Graphics.Line
- uid: Night.Graphics.NewImage(System.String)
  name: NewImage(string)
  href: api/Night.Graphics.html#Night_Graphics_NewImage_System_String_
  commentId: M:Night.Graphics.NewImage(System.String)
  name.vb: NewImage(String)
  fullName: Night.Graphics.NewImage(string)
  fullName.vb: Night.Graphics.NewImage(String)
  nameWithType: Graphics.NewImage(string)
  nameWithType.vb: Graphics.NewImage(String)
- uid: Night.Graphics.NewImage*
  name: NewImage
  href: api/Night.Graphics.html#Night_Graphics_NewImage_
  commentId: Overload:Night.Graphics.NewImage
  isSpec: "True"
  fullName: Night.Graphics.NewImage
  nameWithType: Graphics.NewImage
- uid: Night.Graphics.Polygon(Night.DrawMode,Night.PointF[])
  name: Polygon(DrawMode, PointF[])
  href: api/Night.Graphics.html#Night_Graphics_Polygon_Night_DrawMode_Night_PointF___
  commentId: M:Night.Graphics.Polygon(Night.DrawMode,Night.PointF[])
  name.vb: Polygon(DrawMode, PointF())
  fullName: Night.Graphics.Polygon(Night.DrawMode, Night.PointF[])
  fullName.vb: Night.Graphics.Polygon(Night.DrawMode, Night.PointF())
  nameWithType: Graphics.Polygon(DrawMode, PointF[])
  nameWithType.vb: Graphics.Polygon(DrawMode, PointF())
- uid: Night.Graphics.Polygon*
  name: Polygon
  href: api/Night.Graphics.html#Night_Graphics_Polygon_
  commentId: Overload:Night.Graphics.Polygon
  isSpec: "True"
  fullName: Night.Graphics.Polygon
  nameWithType: Graphics.Polygon
- uid: Night.Graphics.Present
  name: Present()
  href: api/Night.Graphics.html#Night_Graphics_Present
  commentId: M:Night.Graphics.Present
  fullName: Night.Graphics.Present()
  nameWithType: Graphics.Present()
- uid: Night.Graphics.Present*
  name: Present
  href: api/Night.Graphics.html#Night_Graphics_Present_
  commentId: Overload:Night.Graphics.Present
  isSpec: "True"
  fullName: Night.Graphics.Present
  nameWithType: Graphics.Present
- uid: Night.Graphics.Rectangle(Night.DrawMode,System.Single,System.Single,System.Single,System.Single)
  name: Rectangle(DrawMode, float, float, float, float)
  href: api/Night.Graphics.html#Night_Graphics_Rectangle_Night_DrawMode_System_Single_System_Single_System_Single_System_Single_
  commentId: M:Night.Graphics.Rectangle(Night.DrawMode,System.Single,System.Single,System.Single,System.Single)
  name.vb: Rectangle(DrawMode, Single, Single, Single, Single)
  fullName: Night.Graphics.Rectangle(Night.DrawMode, float, float, float, float)
  fullName.vb: Night.Graphics.Rectangle(Night.DrawMode, Single, Single, Single, Single)
  nameWithType: Graphics.Rectangle(DrawMode, float, float, float, float)
  nameWithType.vb: Graphics.Rectangle(DrawMode, Single, Single, Single, Single)
- uid: Night.Graphics.Rectangle*
  name: Rectangle
  href: api/Night.Graphics.html#Night_Graphics_Rectangle_
  commentId: Overload:Night.Graphics.Rectangle
  isSpec: "True"
  fullName: Night.Graphics.Rectangle
  nameWithType: Graphics.Rectangle
- uid: Night.Graphics.SetColor(Night.Color)
  name: SetColor(Color)
  href: api/Night.Graphics.html#Night_Graphics_SetColor_Night_Color_
  commentId: M:Night.Graphics.SetColor(Night.Color)
  fullName: Night.Graphics.SetColor(Night.Color)
  nameWithType: Graphics.SetColor(Color)
- uid: Night.Graphics.SetColor(System.Byte,System.Byte,System.Byte,System.Byte)
  name: SetColor(byte, byte, byte, byte)
  href: api/Night.Graphics.html#Night_Graphics_SetColor_System_Byte_System_Byte_System_Byte_System_Byte_
  commentId: M:Night.Graphics.SetColor(System.Byte,System.Byte,System.Byte,System.Byte)
  name.vb: SetColor(Byte, Byte, Byte, Byte)
  fullName: Night.Graphics.SetColor(byte, byte, byte, byte)
  fullName.vb: Night.Graphics.SetColor(Byte, Byte, Byte, Byte)
  nameWithType: Graphics.SetColor(byte, byte, byte, byte)
  nameWithType.vb: Graphics.SetColor(Byte, Byte, Byte, Byte)
- uid: Night.Graphics.SetColor*
  name: SetColor
  href: api/Night.Graphics.html#Night_Graphics_SetColor_
  commentId: Overload:Night.Graphics.SetColor
  isSpec: "True"
  fullName: Night.Graphics.SetColor
  nameWithType: Graphics.SetColor
- uid: Night.IGame
  name: IGame
  href: api/Night.IGame.html
  commentId: T:Night.IGame
  fullName: Night.IGame
  nameWithType: IGame
- uid: Night.IGame.Draw
  name: Draw()
  href: api/Night.IGame.html#Night_IGame_Draw
  commentId: M:Night.IGame.Draw
  fullName: Night.IGame.Draw()
  nameWithType: IGame.Draw()
- uid: Night.IGame.Draw*
  name: Draw
  href: api/Night.IGame.html#Night_IGame_Draw_
  commentId: Overload:Night.IGame.Draw
  isSpec: "True"
  fullName: Night.IGame.Draw
  nameWithType: IGame.Draw
- uid: Night.IGame.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
  name: KeyPressed(KeySymbol, KeyCode, bool)
  href: api/Night.IGame.html#Night_IGame_KeyPressed_Night_KeySymbol_Night_KeyCode_System_Boolean_
  commentId: M:Night.IGame.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
  name.vb: KeyPressed(KeySymbol, KeyCode, Boolean)
  fullName: Night.IGame.KeyPressed(Night.KeySymbol, Night.KeyCode, bool)
  fullName.vb: Night.IGame.KeyPressed(Night.KeySymbol, Night.KeyCode, Boolean)
  nameWithType: IGame.KeyPressed(KeySymbol, KeyCode, bool)
  nameWithType.vb: IGame.KeyPressed(KeySymbol, KeyCode, Boolean)
- uid: Night.IGame.KeyPressed*
  name: KeyPressed
  href: api/Night.IGame.html#Night_IGame_KeyPressed_
  commentId: Overload:Night.IGame.KeyPressed
  isSpec: "True"
  fullName: Night.IGame.KeyPressed
  nameWithType: IGame.KeyPressed
- uid: Night.IGame.KeyReleased(Night.KeySymbol,Night.KeyCode)
  name: KeyReleased(KeySymbol, KeyCode)
  href: api/Night.IGame.html#Night_IGame_KeyReleased_Night_KeySymbol_Night_KeyCode_
  commentId: M:Night.IGame.KeyReleased(Night.KeySymbol,Night.KeyCode)
  fullName: Night.IGame.KeyReleased(Night.KeySymbol, Night.KeyCode)
  nameWithType: IGame.KeyReleased(KeySymbol, KeyCode)
- uid: Night.IGame.KeyReleased*
  name: KeyReleased
  href: api/Night.IGame.html#Night_IGame_KeyReleased_
  commentId: Overload:Night.IGame.KeyReleased
  isSpec: "True"
  fullName: Night.IGame.KeyReleased
  nameWithType: IGame.KeyReleased
- uid: Night.IGame.Load
  name: Load()
  href: api/Night.IGame.html#Night_IGame_Load
  commentId: M:Night.IGame.Load
  fullName: Night.IGame.Load()
  nameWithType: IGame.Load()
- uid: Night.IGame.Load*
  name: Load
  href: api/Night.IGame.html#Night_IGame_Load_
  commentId: Overload:Night.IGame.Load
  isSpec: "True"
  fullName: Night.IGame.Load
  nameWithType: IGame.Load
- uid: Night.IGame.MousePressed(System.Int32,System.Int32,Night.MouseButton,System.Boolean,System.Int32)
  name: MousePressed(int, int, MouseButton, bool, int)
  href: api/Night.IGame.html#Night_IGame_MousePressed_System_Int32_System_Int32_Night_MouseButton_System_Boolean_System_Int32_
  commentId: M:Night.IGame.MousePressed(System.Int32,System.Int32,Night.MouseButton,System.Boolean,System.Int32)
  name.vb: MousePressed(Integer, Integer, MouseButton, Boolean, Integer)
  fullName: Night.IGame.MousePressed(int, int, Night.MouseButton, bool, int)
  fullName.vb: Night.IGame.MousePressed(Integer, Integer, Night.MouseButton, Boolean, Integer)
  nameWithType: IGame.MousePressed(int, int, MouseButton, bool, int)
  nameWithType.vb: IGame.MousePressed(Integer, Integer, MouseButton, Boolean, Integer)
- uid: Night.IGame.MousePressed*
  name: MousePressed
  href: api/Night.IGame.html#Night_IGame_MousePressed_
  commentId: Overload:Night.IGame.MousePressed
  isSpec: "True"
  fullName: Night.IGame.MousePressed
  nameWithType: IGame.MousePressed
- uid: Night.IGame.MouseReleased(System.Int32,System.Int32,Night.MouseButton,System.Boolean,System.Int32)
  name: MouseReleased(int, int, MouseButton, bool, int)
  href: api/Night.IGame.html#Night_IGame_MouseReleased_System_Int32_System_Int32_Night_MouseButton_System_Boolean_System_Int32_
  commentId: M:Night.IGame.MouseReleased(System.Int32,System.Int32,Night.MouseButton,System.Boolean,System.Int32)
  name.vb: MouseReleased(Integer, Integer, MouseButton, Boolean, Integer)
  fullName: Night.IGame.MouseReleased(int, int, Night.MouseButton, bool, int)
  fullName.vb: Night.IGame.MouseReleased(Integer, Integer, Night.MouseButton, Boolean, Integer)
  nameWithType: IGame.MouseReleased(int, int, MouseButton, bool, int)
  nameWithType.vb: IGame.MouseReleased(Integer, Integer, MouseButton, Boolean, Integer)
- uid: Night.IGame.MouseReleased*
  name: MouseReleased
  href: api/Night.IGame.html#Night_IGame_MouseReleased_
  commentId: Overload:Night.IGame.MouseReleased
  isSpec: "True"
  fullName: Night.IGame.MouseReleased
  nameWithType: IGame.MouseReleased
- uid: Night.IGame.Update(System.Double)
  name: Update(double)
  href: api/Night.IGame.html#Night_IGame_Update_System_Double_
  commentId: M:Night.IGame.Update(System.Double)
  name.vb: Update(Double)
  fullName: Night.IGame.Update(double)
  fullName.vb: Night.IGame.Update(Double)
  nameWithType: IGame.Update(double)
  nameWithType.vb: IGame.Update(Double)
- uid: Night.IGame.Update*
  name: Update
  href: api/Night.IGame.html#Night_IGame_Update_
  commentId: Overload:Night.IGame.Update
  isSpec: "True"
  fullName: Night.IGame.Update
  nameWithType: IGame.Update
- uid: Night.KeyCode
  name: KeyCode
  href: api/Night.KeyCode.html
  commentId: T:Night.KeyCode
  fullName: Night.KeyCode
  nameWithType: KeyCode
- uid: Night.KeyCode.A
  name: A
  href: api/Night.KeyCode.html#Night_KeyCode_A
  commentId: F:Night.KeyCode.A
  fullName: Night.KeyCode.A
  nameWithType: KeyCode.A
- uid: Night.KeyCode.Again
  name: Again
  href: api/Night.KeyCode.html#Night_KeyCode_Again
  commentId: F:Night.KeyCode.Again
  fullName: Night.KeyCode.Again
  nameWithType: KeyCode.Again
- uid: Night.KeyCode.Alpha0
  name: Alpha0
  href: api/Night.KeyCode.html#Night_KeyCode_Alpha0
  commentId: F:Night.KeyCode.Alpha0
  fullName: Night.KeyCode.Alpha0
  nameWithType: KeyCode.Alpha0
- uid: Night.KeyCode.Alpha1
  name: Alpha1
  href: api/Night.KeyCode.html#Night_KeyCode_Alpha1
  commentId: F:Night.KeyCode.Alpha1
  fullName: Night.KeyCode.Alpha1
  nameWithType: KeyCode.Alpha1
- uid: Night.KeyCode.Alpha2
  name: Alpha2
  href: api/Night.KeyCode.html#Night_KeyCode_Alpha2
  commentId: F:Night.KeyCode.Alpha2
  fullName: Night.KeyCode.Alpha2
  nameWithType: KeyCode.Alpha2
- uid: Night.KeyCode.Alpha3
  name: Alpha3
  href: api/Night.KeyCode.html#Night_KeyCode_Alpha3
  commentId: F:Night.KeyCode.Alpha3
  fullName: Night.KeyCode.Alpha3
  nameWithType: KeyCode.Alpha3
- uid: Night.KeyCode.Alpha4
  name: Alpha4
  href: api/Night.KeyCode.html#Night_KeyCode_Alpha4
  commentId: F:Night.KeyCode.Alpha4
  fullName: Night.KeyCode.Alpha4
  nameWithType: KeyCode.Alpha4
- uid: Night.KeyCode.Alpha5
  name: Alpha5
  href: api/Night.KeyCode.html#Night_KeyCode_Alpha5
  commentId: F:Night.KeyCode.Alpha5
  fullName: Night.KeyCode.Alpha5
  nameWithType: KeyCode.Alpha5
- uid: Night.KeyCode.Alpha6
  name: Alpha6
  href: api/Night.KeyCode.html#Night_KeyCode_Alpha6
  commentId: F:Night.KeyCode.Alpha6
  fullName: Night.KeyCode.Alpha6
  nameWithType: KeyCode.Alpha6
- uid: Night.KeyCode.Alpha7
  name: Alpha7
  href: api/Night.KeyCode.html#Night_KeyCode_Alpha7
  commentId: F:Night.KeyCode.Alpha7
  fullName: Night.KeyCode.Alpha7
  nameWithType: KeyCode.Alpha7
- uid: Night.KeyCode.Alpha8
  name: Alpha8
  href: api/Night.KeyCode.html#Night_KeyCode_Alpha8
  commentId: F:Night.KeyCode.Alpha8
  fullName: Night.KeyCode.Alpha8
  nameWithType: KeyCode.Alpha8
- uid: Night.KeyCode.Alpha9
  name: Alpha9
  href: api/Night.KeyCode.html#Night_KeyCode_Alpha9
  commentId: F:Night.KeyCode.Alpha9
  fullName: Night.KeyCode.Alpha9
  nameWithType: KeyCode.Alpha9
- uid: Night.KeyCode.Apostrophe
  name: Apostrophe
  href: api/Night.KeyCode.html#Night_KeyCode_Apostrophe
  commentId: F:Night.KeyCode.Apostrophe
  fullName: Night.KeyCode.Apostrophe
  nameWithType: KeyCode.Apostrophe
- uid: Night.KeyCode.AppBack
  name: AppBack
  href: api/Night.KeyCode.html#Night_KeyCode_AppBack
  commentId: F:Night.KeyCode.AppBack
  fullName: Night.KeyCode.AppBack
  nameWithType: KeyCode.AppBack
- uid: Night.KeyCode.AppBookmarks
  name: AppBookmarks
  href: api/Night.KeyCode.html#Night_KeyCode_AppBookmarks
  commentId: F:Night.KeyCode.AppBookmarks
  fullName: Night.KeyCode.AppBookmarks
  nameWithType: KeyCode.AppBookmarks
- uid: Night.KeyCode.AppForward
  name: AppForward
  href: api/Night.KeyCode.html#Night_KeyCode_AppForward
  commentId: F:Night.KeyCode.AppForward
  fullName: Night.KeyCode.AppForward
  nameWithType: KeyCode.AppForward
- uid: Night.KeyCode.AppHome
  name: AppHome
  href: api/Night.KeyCode.html#Night_KeyCode_AppHome
  commentId: F:Night.KeyCode.AppHome
  fullName: Night.KeyCode.AppHome
  nameWithType: KeyCode.AppHome
- uid: Night.KeyCode.AppRefresh
  name: AppRefresh
  href: api/Night.KeyCode.html#Night_KeyCode_AppRefresh
  commentId: F:Night.KeyCode.AppRefresh
  fullName: Night.KeyCode.AppRefresh
  nameWithType: KeyCode.AppRefresh
- uid: Night.KeyCode.AppSearch
  name: AppSearch
  href: api/Night.KeyCode.html#Night_KeyCode_AppSearch
  commentId: F:Night.KeyCode.AppSearch
  fullName: Night.KeyCode.AppSearch
  nameWithType: KeyCode.AppSearch
- uid: Night.KeyCode.AppStop
  name: AppStop
  href: api/Night.KeyCode.html#Night_KeyCode_AppStop
  commentId: F:Night.KeyCode.AppStop
  fullName: Night.KeyCode.AppStop
  nameWithType: KeyCode.AppStop
- uid: Night.KeyCode.Application
  name: Application
  href: api/Night.KeyCode.html#Night_KeyCode_Application
  commentId: F:Night.KeyCode.Application
  fullName: Night.KeyCode.Application
  nameWithType: KeyCode.Application
- uid: Night.KeyCode.B
  name: B
  href: api/Night.KeyCode.html#Night_KeyCode_B
  commentId: F:Night.KeyCode.B
  fullName: Night.KeyCode.B
  nameWithType: KeyCode.B
- uid: Night.KeyCode.Backslash
  name: Backslash
  href: api/Night.KeyCode.html#Night_KeyCode_Backslash
  commentId: F:Night.KeyCode.Backslash
  fullName: Night.KeyCode.Backslash
  nameWithType: KeyCode.Backslash
- uid: Night.KeyCode.Backspace
  name: Backspace
  href: api/Night.KeyCode.html#Night_KeyCode_Backspace
  commentId: F:Night.KeyCode.Backspace
  fullName: Night.KeyCode.Backspace
  nameWithType: KeyCode.Backspace
- uid: Night.KeyCode.C
  name: C
  href: api/Night.KeyCode.html#Night_KeyCode_C
  commentId: F:Night.KeyCode.C
  fullName: Night.KeyCode.C
  nameWithType: KeyCode.C
- uid: Night.KeyCode.Capslock
  name: Capslock
  href: api/Night.KeyCode.html#Night_KeyCode_Capslock
  commentId: F:Night.KeyCode.Capslock
  fullName: Night.KeyCode.Capslock
  nameWithType: KeyCode.Capslock
- uid: Night.KeyCode.Comma
  name: Comma
  href: api/Night.KeyCode.html#Night_KeyCode_Comma
  commentId: F:Night.KeyCode.Comma
  fullName: Night.KeyCode.Comma
  nameWithType: KeyCode.Comma
- uid: Night.KeyCode.Copy
  name: Copy
  href: api/Night.KeyCode.html#Night_KeyCode_Copy
  commentId: F:Night.KeyCode.Copy
  fullName: Night.KeyCode.Copy
  nameWithType: KeyCode.Copy
- uid: Night.KeyCode.Cut
  name: Cut
  href: api/Night.KeyCode.html#Night_KeyCode_Cut
  commentId: F:Night.KeyCode.Cut
  fullName: Night.KeyCode.Cut
  nameWithType: KeyCode.Cut
- uid: Night.KeyCode.D
  name: D
  href: api/Night.KeyCode.html#Night_KeyCode_D
  commentId: F:Night.KeyCode.D
  fullName: Night.KeyCode.D
  nameWithType: KeyCode.D
- uid: Night.KeyCode.Delete
  name: Delete
  href: api/Night.KeyCode.html#Night_KeyCode_Delete
  commentId: F:Night.KeyCode.Delete
  fullName: Night.KeyCode.Delete
  nameWithType: KeyCode.Delete
- uid: Night.KeyCode.Down
  name: Down
  href: api/Night.KeyCode.html#Night_KeyCode_Down
  commentId: F:Night.KeyCode.Down
  fullName: Night.KeyCode.Down
  nameWithType: KeyCode.Down
- uid: Night.KeyCode.E
  name: E
  href: api/Night.KeyCode.html#Night_KeyCode_E
  commentId: F:Night.KeyCode.E
  fullName: Night.KeyCode.E
  nameWithType: KeyCode.E
- uid: Night.KeyCode.End
  name: End
  href: api/Night.KeyCode.html#Night_KeyCode_End
  commentId: F:Night.KeyCode.End
  fullName: Night.KeyCode.End
  nameWithType: KeyCode.End
- uid: Night.KeyCode.Equals
  name: Equals
  href: api/Night.KeyCode.html#Night_KeyCode_Equals
  commentId: F:Night.KeyCode.Equals
  fullName: Night.KeyCode.Equals
  nameWithType: KeyCode.Equals
- uid: Night.KeyCode.Escape
  name: Escape
  href: api/Night.KeyCode.html#Night_KeyCode_Escape
  commentId: F:Night.KeyCode.Escape
  fullName: Night.KeyCode.Escape
  nameWithType: KeyCode.Escape
- uid: Night.KeyCode.Execute
  name: Execute
  href: api/Night.KeyCode.html#Night_KeyCode_Execute
  commentId: F:Night.KeyCode.Execute
  fullName: Night.KeyCode.Execute
  nameWithType: KeyCode.Execute
- uid: Night.KeyCode.F
  name: F
  href: api/Night.KeyCode.html#Night_KeyCode_F
  commentId: F:Night.KeyCode.F
  fullName: Night.KeyCode.F
  nameWithType: KeyCode.F
- uid: Night.KeyCode.F1
  name: F1
  href: api/Night.KeyCode.html#Night_KeyCode_F1
  commentId: F:Night.KeyCode.F1
  fullName: Night.KeyCode.F1
  nameWithType: KeyCode.F1
- uid: Night.KeyCode.F10
  name: F10
  href: api/Night.KeyCode.html#Night_KeyCode_F10
  commentId: F:Night.KeyCode.F10
  fullName: Night.KeyCode.F10
  nameWithType: KeyCode.F10
- uid: Night.KeyCode.F11
  name: F11
  href: api/Night.KeyCode.html#Night_KeyCode_F11
  commentId: F:Night.KeyCode.F11
  fullName: Night.KeyCode.F11
  nameWithType: KeyCode.F11
- uid: Night.KeyCode.F12
  name: F12
  href: api/Night.KeyCode.html#Night_KeyCode_F12
  commentId: F:Night.KeyCode.F12
  fullName: Night.KeyCode.F12
  nameWithType: KeyCode.F12
- uid: Night.KeyCode.F13
  name: F13
  href: api/Night.KeyCode.html#Night_KeyCode_F13
  commentId: F:Night.KeyCode.F13
  fullName: Night.KeyCode.F13
  nameWithType: KeyCode.F13
- uid: Night.KeyCode.F14
  name: F14
  href: api/Night.KeyCode.html#Night_KeyCode_F14
  commentId: F:Night.KeyCode.F14
  fullName: Night.KeyCode.F14
  nameWithType: KeyCode.F14
- uid: Night.KeyCode.F15
  name: F15
  href: api/Night.KeyCode.html#Night_KeyCode_F15
  commentId: F:Night.KeyCode.F15
  fullName: Night.KeyCode.F15
  nameWithType: KeyCode.F15
- uid: Night.KeyCode.F16
  name: F16
  href: api/Night.KeyCode.html#Night_KeyCode_F16
  commentId: F:Night.KeyCode.F16
  fullName: Night.KeyCode.F16
  nameWithType: KeyCode.F16
- uid: Night.KeyCode.F17
  name: F17
  href: api/Night.KeyCode.html#Night_KeyCode_F17
  commentId: F:Night.KeyCode.F17
  fullName: Night.KeyCode.F17
  nameWithType: KeyCode.F17
- uid: Night.KeyCode.F18
  name: F18
  href: api/Night.KeyCode.html#Night_KeyCode_F18
  commentId: F:Night.KeyCode.F18
  fullName: Night.KeyCode.F18
  nameWithType: KeyCode.F18
- uid: Night.KeyCode.F19
  name: F19
  href: api/Night.KeyCode.html#Night_KeyCode_F19
  commentId: F:Night.KeyCode.F19
  fullName: Night.KeyCode.F19
  nameWithType: KeyCode.F19
- uid: Night.KeyCode.F2
  name: F2
  href: api/Night.KeyCode.html#Night_KeyCode_F2
  commentId: F:Night.KeyCode.F2
  fullName: Night.KeyCode.F2
  nameWithType: KeyCode.F2
- uid: Night.KeyCode.F20
  name: F20
  href: api/Night.KeyCode.html#Night_KeyCode_F20
  commentId: F:Night.KeyCode.F20
  fullName: Night.KeyCode.F20
  nameWithType: KeyCode.F20
- uid: Night.KeyCode.F21
  name: F21
  href: api/Night.KeyCode.html#Night_KeyCode_F21
  commentId: F:Night.KeyCode.F21
  fullName: Night.KeyCode.F21
  nameWithType: KeyCode.F21
- uid: Night.KeyCode.F22
  name: F22
  href: api/Night.KeyCode.html#Night_KeyCode_F22
  commentId: F:Night.KeyCode.F22
  fullName: Night.KeyCode.F22
  nameWithType: KeyCode.F22
- uid: Night.KeyCode.F23
  name: F23
  href: api/Night.KeyCode.html#Night_KeyCode_F23
  commentId: F:Night.KeyCode.F23
  fullName: Night.KeyCode.F23
  nameWithType: KeyCode.F23
- uid: Night.KeyCode.F24
  name: F24
  href: api/Night.KeyCode.html#Night_KeyCode_F24
  commentId: F:Night.KeyCode.F24
  fullName: Night.KeyCode.F24
  nameWithType: KeyCode.F24
- uid: Night.KeyCode.F3
  name: F3
  href: api/Night.KeyCode.html#Night_KeyCode_F3
  commentId: F:Night.KeyCode.F3
  fullName: Night.KeyCode.F3
  nameWithType: KeyCode.F3
- uid: Night.KeyCode.F4
  name: F4
  href: api/Night.KeyCode.html#Night_KeyCode_F4
  commentId: F:Night.KeyCode.F4
  fullName: Night.KeyCode.F4
  nameWithType: KeyCode.F4
- uid: Night.KeyCode.F5
  name: F5
  href: api/Night.KeyCode.html#Night_KeyCode_F5
  commentId: F:Night.KeyCode.F5
  fullName: Night.KeyCode.F5
  nameWithType: KeyCode.F5
- uid: Night.KeyCode.F6
  name: F6
  href: api/Night.KeyCode.html#Night_KeyCode_F6
  commentId: F:Night.KeyCode.F6
  fullName: Night.KeyCode.F6
  nameWithType: KeyCode.F6
- uid: Night.KeyCode.F7
  name: F7
  href: api/Night.KeyCode.html#Night_KeyCode_F7
  commentId: F:Night.KeyCode.F7
  fullName: Night.KeyCode.F7
  nameWithType: KeyCode.F7
- uid: Night.KeyCode.F8
  name: F8
  href: api/Night.KeyCode.html#Night_KeyCode_F8
  commentId: F:Night.KeyCode.F8
  fullName: Night.KeyCode.F8
  nameWithType: KeyCode.F8
- uid: Night.KeyCode.F9
  name: F9
  href: api/Night.KeyCode.html#Night_KeyCode_F9
  commentId: F:Night.KeyCode.F9
  fullName: Night.KeyCode.F9
  nameWithType: KeyCode.F9
- uid: Night.KeyCode.Find
  name: Find
  href: api/Night.KeyCode.html#Night_KeyCode_Find
  commentId: F:Night.KeyCode.Find
  fullName: Night.KeyCode.Find
  nameWithType: KeyCode.Find
- uid: Night.KeyCode.G
  name: G
  href: api/Night.KeyCode.html#Night_KeyCode_G
  commentId: F:Night.KeyCode.G
  fullName: Night.KeyCode.G
  nameWithType: KeyCode.G
- uid: Night.KeyCode.Grave
  name: Grave
  href: api/Night.KeyCode.html#Night_KeyCode_Grave
  commentId: F:Night.KeyCode.Grave
  fullName: Night.KeyCode.Grave
  nameWithType: KeyCode.Grave
- uid: Night.KeyCode.H
  name: H
  href: api/Night.KeyCode.html#Night_KeyCode_H
  commentId: F:Night.KeyCode.H
  fullName: Night.KeyCode.H
  nameWithType: KeyCode.H
- uid: Night.KeyCode.Help
  name: Help
  href: api/Night.KeyCode.html#Night_KeyCode_Help
  commentId: F:Night.KeyCode.Help
  fullName: Night.KeyCode.Help
  nameWithType: KeyCode.Help
- uid: Night.KeyCode.Home
  name: Home
  href: api/Night.KeyCode.html#Night_KeyCode_Home
  commentId: F:Night.KeyCode.Home
  fullName: Night.KeyCode.Home
  nameWithType: KeyCode.Home
- uid: Night.KeyCode.I
  name: I
  href: api/Night.KeyCode.html#Night_KeyCode_I
  commentId: F:Night.KeyCode.I
  fullName: Night.KeyCode.I
  nameWithType: KeyCode.I
- uid: Night.KeyCode.Insert
  name: Insert
  href: api/Night.KeyCode.html#Night_KeyCode_Insert
  commentId: F:Night.KeyCode.Insert
  fullName: Night.KeyCode.Insert
  nameWithType: KeyCode.Insert
- uid: Night.KeyCode.J
  name: J
  href: api/Night.KeyCode.html#Night_KeyCode_J
  commentId: F:Night.KeyCode.J
  fullName: Night.KeyCode.J
  nameWithType: KeyCode.J
- uid: Night.KeyCode.K
  name: K
  href: api/Night.KeyCode.html#Night_KeyCode_K
  commentId: F:Night.KeyCode.K
  fullName: Night.KeyCode.K
  nameWithType: KeyCode.K
- uid: Night.KeyCode.Kp0
  name: Kp0
  href: api/Night.KeyCode.html#Night_KeyCode_Kp0
  commentId: F:Night.KeyCode.Kp0
  fullName: Night.KeyCode.Kp0
  nameWithType: KeyCode.Kp0
- uid: Night.KeyCode.Kp1
  name: Kp1
  href: api/Night.KeyCode.html#Night_KeyCode_Kp1
  commentId: F:Night.KeyCode.Kp1
  fullName: Night.KeyCode.Kp1
  nameWithType: KeyCode.Kp1
- uid: Night.KeyCode.Kp2
  name: Kp2
  href: api/Night.KeyCode.html#Night_KeyCode_Kp2
  commentId: F:Night.KeyCode.Kp2
  fullName: Night.KeyCode.Kp2
  nameWithType: KeyCode.Kp2
- uid: Night.KeyCode.Kp3
  name: Kp3
  href: api/Night.KeyCode.html#Night_KeyCode_Kp3
  commentId: F:Night.KeyCode.Kp3
  fullName: Night.KeyCode.Kp3
  nameWithType: KeyCode.Kp3
- uid: Night.KeyCode.Kp4
  name: Kp4
  href: api/Night.KeyCode.html#Night_KeyCode_Kp4
  commentId: F:Night.KeyCode.Kp4
  fullName: Night.KeyCode.Kp4
  nameWithType: KeyCode.Kp4
- uid: Night.KeyCode.Kp5
  name: Kp5
  href: api/Night.KeyCode.html#Night_KeyCode_Kp5
  commentId: F:Night.KeyCode.Kp5
  fullName: Night.KeyCode.Kp5
  nameWithType: KeyCode.Kp5
- uid: Night.KeyCode.Kp6
  name: Kp6
  href: api/Night.KeyCode.html#Night_KeyCode_Kp6
  commentId: F:Night.KeyCode.Kp6
  fullName: Night.KeyCode.Kp6
  nameWithType: KeyCode.Kp6
- uid: Night.KeyCode.Kp7
  name: Kp7
  href: api/Night.KeyCode.html#Night_KeyCode_Kp7
  commentId: F:Night.KeyCode.Kp7
  fullName: Night.KeyCode.Kp7
  nameWithType: KeyCode.Kp7
- uid: Night.KeyCode.Kp8
  name: Kp8
  href: api/Night.KeyCode.html#Night_KeyCode_Kp8
  commentId: F:Night.KeyCode.Kp8
  fullName: Night.KeyCode.Kp8
  nameWithType: KeyCode.Kp8
- uid: Night.KeyCode.Kp9
  name: Kp9
  href: api/Night.KeyCode.html#Night_KeyCode_Kp9
  commentId: F:Night.KeyCode.Kp9
  fullName: Night.KeyCode.Kp9
  nameWithType: KeyCode.Kp9
- uid: Night.KeyCode.KpComma
  name: KpComma
  href: api/Night.KeyCode.html#Night_KeyCode_KpComma
  commentId: F:Night.KeyCode.KpComma
  fullName: Night.KeyCode.KpComma
  nameWithType: KeyCode.KpComma
- uid: Night.KeyCode.KpDivide
  name: KpDivide
  href: api/Night.KeyCode.html#Night_KeyCode_KpDivide
  commentId: F:Night.KeyCode.KpDivide
  fullName: Night.KeyCode.KpDivide
  nameWithType: KeyCode.KpDivide
- uid: Night.KeyCode.KpEnter
  name: KpEnter
  href: api/Night.KeyCode.html#Night_KeyCode_KpEnter
  commentId: F:Night.KeyCode.KpEnter
  fullName: Night.KeyCode.KpEnter
  nameWithType: KeyCode.KpEnter
- uid: Night.KeyCode.KpEquals
  name: KpEquals
  href: api/Night.KeyCode.html#Night_KeyCode_KpEquals
  commentId: F:Night.KeyCode.KpEquals
  fullName: Night.KeyCode.KpEquals
  nameWithType: KeyCode.KpEquals
- uid: Night.KeyCode.KpMinus
  name: KpMinus
  href: api/Night.KeyCode.html#Night_KeyCode_KpMinus
  commentId: F:Night.KeyCode.KpMinus
  fullName: Night.KeyCode.KpMinus
  nameWithType: KeyCode.KpMinus
- uid: Night.KeyCode.KpMultiply
  name: KpMultiply
  href: api/Night.KeyCode.html#Night_KeyCode_KpMultiply
  commentId: F:Night.KeyCode.KpMultiply
  fullName: Night.KeyCode.KpMultiply
  nameWithType: KeyCode.KpMultiply
- uid: Night.KeyCode.KpPeriod
  name: KpPeriod
  href: api/Night.KeyCode.html#Night_KeyCode_KpPeriod
  commentId: F:Night.KeyCode.KpPeriod
  fullName: Night.KeyCode.KpPeriod
  nameWithType: KeyCode.KpPeriod
- uid: Night.KeyCode.KpPlus
  name: KpPlus
  href: api/Night.KeyCode.html#Night_KeyCode_KpPlus
  commentId: F:Night.KeyCode.KpPlus
  fullName: Night.KeyCode.KpPlus
  nameWithType: KeyCode.KpPlus
- uid: Night.KeyCode.L
  name: L
  href: api/Night.KeyCode.html#Night_KeyCode_L
  commentId: F:Night.KeyCode.L
  fullName: Night.KeyCode.L
  nameWithType: KeyCode.L
- uid: Night.KeyCode.LAlt
  name: LAlt
  href: api/Night.KeyCode.html#Night_KeyCode_LAlt
  commentId: F:Night.KeyCode.LAlt
  fullName: Night.KeyCode.LAlt
  nameWithType: KeyCode.LAlt
- uid: Night.KeyCode.LCtrl
  name: LCtrl
  href: api/Night.KeyCode.html#Night_KeyCode_LCtrl
  commentId: F:Night.KeyCode.LCtrl
  fullName: Night.KeyCode.LCtrl
  nameWithType: KeyCode.LCtrl
- uid: Night.KeyCode.LGUI
  name: LGUI
  href: api/Night.KeyCode.html#Night_KeyCode_LGUI
  commentId: F:Night.KeyCode.LGUI
  fullName: Night.KeyCode.LGUI
  nameWithType: KeyCode.LGUI
- uid: Night.KeyCode.LShift
  name: LShift
  href: api/Night.KeyCode.html#Night_KeyCode_LShift
  commentId: F:Night.KeyCode.LShift
  fullName: Night.KeyCode.LShift
  nameWithType: KeyCode.LShift
- uid: Night.KeyCode.Left
  name: Left
  href: api/Night.KeyCode.html#Night_KeyCode_Left
  commentId: F:Night.KeyCode.Left
  fullName: Night.KeyCode.Left
  nameWithType: KeyCode.Left
- uid: Night.KeyCode.Leftbracket
  name: Leftbracket
  href: api/Night.KeyCode.html#Night_KeyCode_Leftbracket
  commentId: F:Night.KeyCode.Leftbracket
  fullName: Night.KeyCode.Leftbracket
  nameWithType: KeyCode.Leftbracket
- uid: Night.KeyCode.M
  name: M
  href: api/Night.KeyCode.html#Night_KeyCode_M
  commentId: F:Night.KeyCode.M
  fullName: Night.KeyCode.M
  nameWithType: KeyCode.M
- uid: Night.KeyCode.MediaEject
  name: MediaEject
  href: api/Night.KeyCode.html#Night_KeyCode_MediaEject
  commentId: F:Night.KeyCode.MediaEject
  fullName: Night.KeyCode.MediaEject
  nameWithType: KeyCode.MediaEject
- uid: Night.KeyCode.MediaFastForward
  name: MediaFastForward
  href: api/Night.KeyCode.html#Night_KeyCode_MediaFastForward
  commentId: F:Night.KeyCode.MediaFastForward
  fullName: Night.KeyCode.MediaFastForward
  nameWithType: KeyCode.MediaFastForward
- uid: Night.KeyCode.MediaNextTrack
  name: MediaNextTrack
  href: api/Night.KeyCode.html#Night_KeyCode_MediaNextTrack
  commentId: F:Night.KeyCode.MediaNextTrack
  fullName: Night.KeyCode.MediaNextTrack
  nameWithType: KeyCode.MediaNextTrack
- uid: Night.KeyCode.MediaPause
  name: MediaPause
  href: api/Night.KeyCode.html#Night_KeyCode_MediaPause
  commentId: F:Night.KeyCode.MediaPause
  fullName: Night.KeyCode.MediaPause
  nameWithType: KeyCode.MediaPause
- uid: Night.KeyCode.MediaPlay
  name: MediaPlay
  href: api/Night.KeyCode.html#Night_KeyCode_MediaPlay
  commentId: F:Night.KeyCode.MediaPlay
  fullName: Night.KeyCode.MediaPlay
  nameWithType: KeyCode.MediaPlay
- uid: Night.KeyCode.MediaPlayPause
  name: MediaPlayPause
  href: api/Night.KeyCode.html#Night_KeyCode_MediaPlayPause
  commentId: F:Night.KeyCode.MediaPlayPause
  fullName: Night.KeyCode.MediaPlayPause
  nameWithType: KeyCode.MediaPlayPause
- uid: Night.KeyCode.MediaPreviousTrack
  name: MediaPreviousTrack
  href: api/Night.KeyCode.html#Night_KeyCode_MediaPreviousTrack
  commentId: F:Night.KeyCode.MediaPreviousTrack
  fullName: Night.KeyCode.MediaPreviousTrack
  nameWithType: KeyCode.MediaPreviousTrack
- uid: Night.KeyCode.MediaRecord
  name: MediaRecord
  href: api/Night.KeyCode.html#Night_KeyCode_MediaRecord
  commentId: F:Night.KeyCode.MediaRecord
  fullName: Night.KeyCode.MediaRecord
  nameWithType: KeyCode.MediaRecord
- uid: Night.KeyCode.MediaRewind
  name: MediaRewind
  href: api/Night.KeyCode.html#Night_KeyCode_MediaRewind
  commentId: F:Night.KeyCode.MediaRewind
  fullName: Night.KeyCode.MediaRewind
  nameWithType: KeyCode.MediaRewind
- uid: Night.KeyCode.MediaSelect
  name: MediaSelect
  href: api/Night.KeyCode.html#Night_KeyCode_MediaSelect
  commentId: F:Night.KeyCode.MediaSelect
  fullName: Night.KeyCode.MediaSelect
  nameWithType: KeyCode.MediaSelect
- uid: Night.KeyCode.MediaStop
  name: MediaStop
  href: api/Night.KeyCode.html#Night_KeyCode_MediaStop
  commentId: F:Night.KeyCode.MediaStop
  fullName: Night.KeyCode.MediaStop
  nameWithType: KeyCode.MediaStop
- uid: Night.KeyCode.Menu
  name: Menu
  href: api/Night.KeyCode.html#Night_KeyCode_Menu
  commentId: F:Night.KeyCode.Menu
  fullName: Night.KeyCode.Menu
  nameWithType: KeyCode.Menu
- uid: Night.KeyCode.Minus
  name: Minus
  href: api/Night.KeyCode.html#Night_KeyCode_Minus
  commentId: F:Night.KeyCode.Minus
  fullName: Night.KeyCode.Minus
  nameWithType: KeyCode.Minus
- uid: Night.KeyCode.Mode
  name: Mode
  href: api/Night.KeyCode.html#Night_KeyCode_Mode
  commentId: F:Night.KeyCode.Mode
  fullName: Night.KeyCode.Mode
  nameWithType: KeyCode.Mode
- uid: Night.KeyCode.Mute
  name: Mute
  href: api/Night.KeyCode.html#Night_KeyCode_Mute
  commentId: F:Night.KeyCode.Mute
  fullName: Night.KeyCode.Mute
  nameWithType: KeyCode.Mute
- uid: Night.KeyCode.N
  name: N
  href: api/Night.KeyCode.html#Night_KeyCode_N
  commentId: F:Night.KeyCode.N
  fullName: Night.KeyCode.N
  nameWithType: KeyCode.N
- uid: Night.KeyCode.NonUsbackslash
  name: NonUsbackslash
  href: api/Night.KeyCode.html#Night_KeyCode_NonUsbackslash
  commentId: F:Night.KeyCode.NonUsbackslash
  fullName: Night.KeyCode.NonUsbackslash
  nameWithType: KeyCode.NonUsbackslash
- uid: Night.KeyCode.NonUshash
  name: NonUshash
  href: api/Night.KeyCode.html#Night_KeyCode_NonUshash
  commentId: F:Night.KeyCode.NonUshash
  fullName: Night.KeyCode.NonUshash
  nameWithType: KeyCode.NonUshash
- uid: Night.KeyCode.NumlockClear
  name: NumlockClear
  href: api/Night.KeyCode.html#Night_KeyCode_NumlockClear
  commentId: F:Night.KeyCode.NumlockClear
  fullName: Night.KeyCode.NumlockClear
  nameWithType: KeyCode.NumlockClear
- uid: Night.KeyCode.O
  name: O
  href: api/Night.KeyCode.html#Night_KeyCode_O
  commentId: F:Night.KeyCode.O
  fullName: Night.KeyCode.O
  nameWithType: KeyCode.O
- uid: Night.KeyCode.P
  name: P
  href: api/Night.KeyCode.html#Night_KeyCode_P
  commentId: F:Night.KeyCode.P
  fullName: Night.KeyCode.P
  nameWithType: KeyCode.P
- uid: Night.KeyCode.Pagedown
  name: Pagedown
  href: api/Night.KeyCode.html#Night_KeyCode_Pagedown
  commentId: F:Night.KeyCode.Pagedown
  fullName: Night.KeyCode.Pagedown
  nameWithType: KeyCode.Pagedown
- uid: Night.KeyCode.Pageup
  name: Pageup
  href: api/Night.KeyCode.html#Night_KeyCode_Pageup
  commentId: F:Night.KeyCode.Pageup
  fullName: Night.KeyCode.Pageup
  nameWithType: KeyCode.Pageup
- uid: Night.KeyCode.Paste
  name: Paste
  href: api/Night.KeyCode.html#Night_KeyCode_Paste
  commentId: F:Night.KeyCode.Paste
  fullName: Night.KeyCode.Paste
  nameWithType: KeyCode.Paste
- uid: Night.KeyCode.Pause
  name: Pause
  href: api/Night.KeyCode.html#Night_KeyCode_Pause
  commentId: F:Night.KeyCode.Pause
  fullName: Night.KeyCode.Pause
  nameWithType: KeyCode.Pause
- uid: Night.KeyCode.Period
  name: Period
  href: api/Night.KeyCode.html#Night_KeyCode_Period
  commentId: F:Night.KeyCode.Period
  fullName: Night.KeyCode.Period
  nameWithType: KeyCode.Period
- uid: Night.KeyCode.Power
  name: Power
  href: api/Night.KeyCode.html#Night_KeyCode_Power
  commentId: F:Night.KeyCode.Power
  fullName: Night.KeyCode.Power
  nameWithType: KeyCode.Power
- uid: Night.KeyCode.Printscreen
  name: Printscreen
  href: api/Night.KeyCode.html#Night_KeyCode_Printscreen
  commentId: F:Night.KeyCode.Printscreen
  fullName: Night.KeyCode.Printscreen
  nameWithType: KeyCode.Printscreen
- uid: Night.KeyCode.Q
  name: Q
  href: api/Night.KeyCode.html#Night_KeyCode_Q
  commentId: F:Night.KeyCode.Q
  fullName: Night.KeyCode.Q
  nameWithType: KeyCode.Q
- uid: Night.KeyCode.R
  name: R
  href: api/Night.KeyCode.html#Night_KeyCode_R
  commentId: F:Night.KeyCode.R
  fullName: Night.KeyCode.R
  nameWithType: KeyCode.R
- uid: Night.KeyCode.RAlt
  name: RAlt
  href: api/Night.KeyCode.html#Night_KeyCode_RAlt
  commentId: F:Night.KeyCode.RAlt
  fullName: Night.KeyCode.RAlt
  nameWithType: KeyCode.RAlt
- uid: Night.KeyCode.RCtrl
  name: RCtrl
  href: api/Night.KeyCode.html#Night_KeyCode_RCtrl
  commentId: F:Night.KeyCode.RCtrl
  fullName: Night.KeyCode.RCtrl
  nameWithType: KeyCode.RCtrl
- uid: Night.KeyCode.RGUI
  name: RGUI
  href: api/Night.KeyCode.html#Night_KeyCode_RGUI
  commentId: F:Night.KeyCode.RGUI
  fullName: Night.KeyCode.RGUI
  nameWithType: KeyCode.RGUI
- uid: Night.KeyCode.RShift
  name: RShift
  href: api/Night.KeyCode.html#Night_KeyCode_RShift
  commentId: F:Night.KeyCode.RShift
  fullName: Night.KeyCode.RShift
  nameWithType: KeyCode.RShift
- uid: Night.KeyCode.Return
  name: Return
  href: api/Night.KeyCode.html#Night_KeyCode_Return
  commentId: F:Night.KeyCode.Return
  fullName: Night.KeyCode.Return
  nameWithType: KeyCode.Return
- uid: Night.KeyCode.Right
  name: Right
  href: api/Night.KeyCode.html#Night_KeyCode_Right
  commentId: F:Night.KeyCode.Right
  fullName: Night.KeyCode.Right
  nameWithType: KeyCode.Right
- uid: Night.KeyCode.Rightbracket
  name: Rightbracket
  href: api/Night.KeyCode.html#Night_KeyCode_Rightbracket
  commentId: F:Night.KeyCode.Rightbracket
  fullName: Night.KeyCode.Rightbracket
  nameWithType: KeyCode.Rightbracket
- uid: Night.KeyCode.S
  name: S
  href: api/Night.KeyCode.html#Night_KeyCode_S
  commentId: F:Night.KeyCode.S
  fullName: Night.KeyCode.S
  nameWithType: KeyCode.S
- uid: Night.KeyCode.Scrolllock
  name: Scrolllock
  href: api/Night.KeyCode.html#Night_KeyCode_Scrolllock
  commentId: F:Night.KeyCode.Scrolllock
  fullName: Night.KeyCode.Scrolllock
  nameWithType: KeyCode.Scrolllock
- uid: Night.KeyCode.Select
  name: Select
  href: api/Night.KeyCode.html#Night_KeyCode_Select
  commentId: F:Night.KeyCode.Select
  fullName: Night.KeyCode.Select
  nameWithType: KeyCode.Select
- uid: Night.KeyCode.Semicolon
  name: Semicolon
  href: api/Night.KeyCode.html#Night_KeyCode_Semicolon
  commentId: F:Night.KeyCode.Semicolon
  fullName: Night.KeyCode.Semicolon
  nameWithType: KeyCode.Semicolon
- uid: Night.KeyCode.Slash
  name: Slash
  href: api/Night.KeyCode.html#Night_KeyCode_Slash
  commentId: F:Night.KeyCode.Slash
  fullName: Night.KeyCode.Slash
  nameWithType: KeyCode.Slash
- uid: Night.KeyCode.Space
  name: Space
  href: api/Night.KeyCode.html#Night_KeyCode_Space
  commentId: F:Night.KeyCode.Space
  fullName: Night.KeyCode.Space
  nameWithType: KeyCode.Space
- uid: Night.KeyCode.Stop
  name: Stop
  href: api/Night.KeyCode.html#Night_KeyCode_Stop
  commentId: F:Night.KeyCode.Stop
  fullName: Night.KeyCode.Stop
  nameWithType: KeyCode.Stop
- uid: Night.KeyCode.T
  name: T
  href: api/Night.KeyCode.html#Night_KeyCode_T
  commentId: F:Night.KeyCode.T
  fullName: Night.KeyCode.T
  nameWithType: KeyCode.T
- uid: Night.KeyCode.Tab
  name: Tab
  href: api/Night.KeyCode.html#Night_KeyCode_Tab
  commentId: F:Night.KeyCode.Tab
  fullName: Night.KeyCode.Tab
  nameWithType: KeyCode.Tab
- uid: Night.KeyCode.U
  name: U
  href: api/Night.KeyCode.html#Night_KeyCode_U
  commentId: F:Night.KeyCode.U
  fullName: Night.KeyCode.U
  nameWithType: KeyCode.U
- uid: Night.KeyCode.Undo
  name: Undo
  href: api/Night.KeyCode.html#Night_KeyCode_Undo
  commentId: F:Night.KeyCode.Undo
  fullName: Night.KeyCode.Undo
  nameWithType: KeyCode.Undo
- uid: Night.KeyCode.Unknown
  name: Unknown
  href: api/Night.KeyCode.html#Night_KeyCode_Unknown
  commentId: F:Night.KeyCode.Unknown
  fullName: Night.KeyCode.Unknown
  nameWithType: KeyCode.Unknown
- uid: Night.KeyCode.Up
  name: Up
  href: api/Night.KeyCode.html#Night_KeyCode_Up
  commentId: F:Night.KeyCode.Up
  fullName: Night.KeyCode.Up
  nameWithType: KeyCode.Up
- uid: Night.KeyCode.V
  name: V
  href: api/Night.KeyCode.html#Night_KeyCode_V
  commentId: F:Night.KeyCode.V
  fullName: Night.KeyCode.V
  nameWithType: KeyCode.V
- uid: Night.KeyCode.VolumeDown
  name: VolumeDown
  href: api/Night.KeyCode.html#Night_KeyCode_VolumeDown
  commentId: F:Night.KeyCode.VolumeDown
  fullName: Night.KeyCode.VolumeDown
  nameWithType: KeyCode.VolumeDown
- uid: Night.KeyCode.VolumeUp
  name: VolumeUp
  href: api/Night.KeyCode.html#Night_KeyCode_VolumeUp
  commentId: F:Night.KeyCode.VolumeUp
  fullName: Night.KeyCode.VolumeUp
  nameWithType: KeyCode.VolumeUp
- uid: Night.KeyCode.W
  name: W
  href: api/Night.KeyCode.html#Night_KeyCode_W
  commentId: F:Night.KeyCode.W
  fullName: Night.KeyCode.W
  nameWithType: KeyCode.W
- uid: Night.KeyCode.X
  name: X
  href: api/Night.KeyCode.html#Night_KeyCode_X
  commentId: F:Night.KeyCode.X
  fullName: Night.KeyCode.X
  nameWithType: KeyCode.X
- uid: Night.KeyCode.Y
  name: Y
  href: api/Night.KeyCode.html#Night_KeyCode_Y
  commentId: F:Night.KeyCode.Y
  fullName: Night.KeyCode.Y
  nameWithType: KeyCode.Y
- uid: Night.KeyCode.Z
  name: Z
  href: api/Night.KeyCode.html#Night_KeyCode_Z
  commentId: F:Night.KeyCode.Z
  fullName: Night.KeyCode.Z
  nameWithType: KeyCode.Z
- uid: Night.KeySymbol
  name: KeySymbol
  href: api/Night.KeySymbol.html
  commentId: T:Night.KeySymbol
  fullName: Night.KeySymbol
  nameWithType: KeySymbol
- uid: Night.KeySymbol.A
  name: A
  href: api/Night.KeySymbol.html#Night_KeySymbol_A
  commentId: F:Night.KeySymbol.A
  fullName: Night.KeySymbol.A
  nameWithType: KeySymbol.A
- uid: Night.KeySymbol.Alpha0
  name: Alpha0
  href: api/Night.KeySymbol.html#Night_KeySymbol_Alpha0
  commentId: F:Night.KeySymbol.Alpha0
  fullName: Night.KeySymbol.Alpha0
  nameWithType: KeySymbol.Alpha0
- uid: Night.KeySymbol.Alpha1
  name: Alpha1
  href: api/Night.KeySymbol.html#Night_KeySymbol_Alpha1
  commentId: F:Night.KeySymbol.Alpha1
  fullName: Night.KeySymbol.Alpha1
  nameWithType: KeySymbol.Alpha1
- uid: Night.KeySymbol.Alpha2
  name: Alpha2
  href: api/Night.KeySymbol.html#Night_KeySymbol_Alpha2
  commentId: F:Night.KeySymbol.Alpha2
  fullName: Night.KeySymbol.Alpha2
  nameWithType: KeySymbol.Alpha2
- uid: Night.KeySymbol.Alpha3
  name: Alpha3
  href: api/Night.KeySymbol.html#Night_KeySymbol_Alpha3
  commentId: F:Night.KeySymbol.Alpha3
  fullName: Night.KeySymbol.Alpha3
  nameWithType: KeySymbol.Alpha3
- uid: Night.KeySymbol.Alpha4
  name: Alpha4
  href: api/Night.KeySymbol.html#Night_KeySymbol_Alpha4
  commentId: F:Night.KeySymbol.Alpha4
  fullName: Night.KeySymbol.Alpha4
  nameWithType: KeySymbol.Alpha4
- uid: Night.KeySymbol.Alpha5
  name: Alpha5
  href: api/Night.KeySymbol.html#Night_KeySymbol_Alpha5
  commentId: F:Night.KeySymbol.Alpha5
  fullName: Night.KeySymbol.Alpha5
  nameWithType: KeySymbol.Alpha5
- uid: Night.KeySymbol.Alpha6
  name: Alpha6
  href: api/Night.KeySymbol.html#Night_KeySymbol_Alpha6
  commentId: F:Night.KeySymbol.Alpha6
  fullName: Night.KeySymbol.Alpha6
  nameWithType: KeySymbol.Alpha6
- uid: Night.KeySymbol.Alpha7
  name: Alpha7
  href: api/Night.KeySymbol.html#Night_KeySymbol_Alpha7
  commentId: F:Night.KeySymbol.Alpha7
  fullName: Night.KeySymbol.Alpha7
  nameWithType: KeySymbol.Alpha7
- uid: Night.KeySymbol.Alpha8
  name: Alpha8
  href: api/Night.KeySymbol.html#Night_KeySymbol_Alpha8
  commentId: F:Night.KeySymbol.Alpha8
  fullName: Night.KeySymbol.Alpha8
  nameWithType: KeySymbol.Alpha8
- uid: Night.KeySymbol.Alpha9
  name: Alpha9
  href: api/Night.KeySymbol.html#Night_KeySymbol_Alpha9
  commentId: F:Night.KeySymbol.Alpha9
  fullName: Night.KeySymbol.Alpha9
  nameWithType: KeySymbol.Alpha9
- uid: Night.KeySymbol.Apostrophe
  name: Apostrophe
  href: api/Night.KeySymbol.html#Night_KeySymbol_Apostrophe
  commentId: F:Night.KeySymbol.Apostrophe
  fullName: Night.KeySymbol.Apostrophe
  nameWithType: KeySymbol.Apostrophe
- uid: Night.KeySymbol.B
  name: B
  href: api/Night.KeySymbol.html#Night_KeySymbol_B
  commentId: F:Night.KeySymbol.B
  fullName: Night.KeySymbol.B
  nameWithType: KeySymbol.B
- uid: Night.KeySymbol.Backslash
  name: Backslash
  href: api/Night.KeySymbol.html#Night_KeySymbol_Backslash
  commentId: F:Night.KeySymbol.Backslash
  fullName: Night.KeySymbol.Backslash
  nameWithType: KeySymbol.Backslash
- uid: Night.KeySymbol.Backspace
  name: Backspace
  href: api/Night.KeySymbol.html#Night_KeySymbol_Backspace
  commentId: F:Night.KeySymbol.Backspace
  fullName: Night.KeySymbol.Backspace
  nameWithType: KeySymbol.Backspace
- uid: Night.KeySymbol.C
  name: C
  href: api/Night.KeySymbol.html#Night_KeySymbol_C
  commentId: F:Night.KeySymbol.C
  fullName: Night.KeySymbol.C
  nameWithType: KeySymbol.C
- uid: Night.KeySymbol.Comma
  name: Comma
  href: api/Night.KeySymbol.html#Night_KeySymbol_Comma
  commentId: F:Night.KeySymbol.Comma
  fullName: Night.KeySymbol.Comma
  nameWithType: KeySymbol.Comma
- uid: Night.KeySymbol.D
  name: D
  href: api/Night.KeySymbol.html#Night_KeySymbol_D
  commentId: F:Night.KeySymbol.D
  fullName: Night.KeySymbol.D
  nameWithType: KeySymbol.D
- uid: Night.KeySymbol.Down
  name: Down
  href: api/Night.KeySymbol.html#Night_KeySymbol_Down
  commentId: F:Night.KeySymbol.Down
  fullName: Night.KeySymbol.Down
  nameWithType: KeySymbol.Down
- uid: Night.KeySymbol.E
  name: E
  href: api/Night.KeySymbol.html#Night_KeySymbol_E
  commentId: F:Night.KeySymbol.E
  fullName: Night.KeySymbol.E
  nameWithType: KeySymbol.E
- uid: Night.KeySymbol.Equals
  name: Equals
  href: api/Night.KeySymbol.html#Night_KeySymbol_Equals
  commentId: F:Night.KeySymbol.Equals
  fullName: Night.KeySymbol.Equals
  nameWithType: KeySymbol.Equals
- uid: Night.KeySymbol.Escape
  name: Escape
  href: api/Night.KeySymbol.html#Night_KeySymbol_Escape
  commentId: F:Night.KeySymbol.Escape
  fullName: Night.KeySymbol.Escape
  nameWithType: KeySymbol.Escape
- uid: Night.KeySymbol.F
  name: F
  href: api/Night.KeySymbol.html#Night_KeySymbol_F
  commentId: F:Night.KeySymbol.F
  fullName: Night.KeySymbol.F
  nameWithType: KeySymbol.F
- uid: Night.KeySymbol.F1
  name: F1
  href: api/Night.KeySymbol.html#Night_KeySymbol_F1
  commentId: F:Night.KeySymbol.F1
  fullName: Night.KeySymbol.F1
  nameWithType: KeySymbol.F1
- uid: Night.KeySymbol.F10
  name: F10
  href: api/Night.KeySymbol.html#Night_KeySymbol_F10
  commentId: F:Night.KeySymbol.F10
  fullName: Night.KeySymbol.F10
  nameWithType: KeySymbol.F10
- uid: Night.KeySymbol.F11
  name: F11
  href: api/Night.KeySymbol.html#Night_KeySymbol_F11
  commentId: F:Night.KeySymbol.F11
  fullName: Night.KeySymbol.F11
  nameWithType: KeySymbol.F11
- uid: Night.KeySymbol.F12
  name: F12
  href: api/Night.KeySymbol.html#Night_KeySymbol_F12
  commentId: F:Night.KeySymbol.F12
  fullName: Night.KeySymbol.F12
  nameWithType: KeySymbol.F12
- uid: Night.KeySymbol.F2
  name: F2
  href: api/Night.KeySymbol.html#Night_KeySymbol_F2
  commentId: F:Night.KeySymbol.F2
  fullName: Night.KeySymbol.F2
  nameWithType: KeySymbol.F2
- uid: Night.KeySymbol.F3
  name: F3
  href: api/Night.KeySymbol.html#Night_KeySymbol_F3
  commentId: F:Night.KeySymbol.F3
  fullName: Night.KeySymbol.F3
  nameWithType: KeySymbol.F3
- uid: Night.KeySymbol.F4
  name: F4
  href: api/Night.KeySymbol.html#Night_KeySymbol_F4
  commentId: F:Night.KeySymbol.F4
  fullName: Night.KeySymbol.F4
  nameWithType: KeySymbol.F4
- uid: Night.KeySymbol.F5
  name: F5
  href: api/Night.KeySymbol.html#Night_KeySymbol_F5
  commentId: F:Night.KeySymbol.F5
  fullName: Night.KeySymbol.F5
  nameWithType: KeySymbol.F5
- uid: Night.KeySymbol.F6
  name: F6
  href: api/Night.KeySymbol.html#Night_KeySymbol_F6
  commentId: F:Night.KeySymbol.F6
  fullName: Night.KeySymbol.F6
  nameWithType: KeySymbol.F6
- uid: Night.KeySymbol.F7
  name: F7
  href: api/Night.KeySymbol.html#Night_KeySymbol_F7
  commentId: F:Night.KeySymbol.F7
  fullName: Night.KeySymbol.F7
  nameWithType: KeySymbol.F7
- uid: Night.KeySymbol.F8
  name: F8
  href: api/Night.KeySymbol.html#Night_KeySymbol_F8
  commentId: F:Night.KeySymbol.F8
  fullName: Night.KeySymbol.F8
  nameWithType: KeySymbol.F8
- uid: Night.KeySymbol.F9
  name: F9
  href: api/Night.KeySymbol.html#Night_KeySymbol_F9
  commentId: F:Night.KeySymbol.F9
  fullName: Night.KeySymbol.F9
  nameWithType: KeySymbol.F9
- uid: Night.KeySymbol.G
  name: G
  href: api/Night.KeySymbol.html#Night_KeySymbol_G
  commentId: F:Night.KeySymbol.G
  fullName: Night.KeySymbol.G
  nameWithType: KeySymbol.G
- uid: Night.KeySymbol.Grave
  name: Grave
  href: api/Night.KeySymbol.html#Night_KeySymbol_Grave
  commentId: F:Night.KeySymbol.Grave
  fullName: Night.KeySymbol.Grave
  nameWithType: KeySymbol.Grave
- uid: Night.KeySymbol.H
  name: H
  href: api/Night.KeySymbol.html#Night_KeySymbol_H
  commentId: F:Night.KeySymbol.H
  fullName: Night.KeySymbol.H
  nameWithType: KeySymbol.H
- uid: Night.KeySymbol.I
  name: I
  href: api/Night.KeySymbol.html#Night_KeySymbol_I
  commentId: F:Night.KeySymbol.I
  fullName: Night.KeySymbol.I
  nameWithType: KeySymbol.I
- uid: Night.KeySymbol.J
  name: J
  href: api/Night.KeySymbol.html#Night_KeySymbol_J
  commentId: F:Night.KeySymbol.J
  fullName: Night.KeySymbol.J
  nameWithType: KeySymbol.J
- uid: Night.KeySymbol.K
  name: K
  href: api/Night.KeySymbol.html#Night_KeySymbol_K
  commentId: F:Night.KeySymbol.K
  fullName: Night.KeySymbol.K
  nameWithType: KeySymbol.K
- uid: Night.KeySymbol.L
  name: L
  href: api/Night.KeySymbol.html#Night_KeySymbol_L
  commentId: F:Night.KeySymbol.L
  fullName: Night.KeySymbol.L
  nameWithType: KeySymbol.L
- uid: Night.KeySymbol.LAlt
  name: LAlt
  href: api/Night.KeySymbol.html#Night_KeySymbol_LAlt
  commentId: F:Night.KeySymbol.LAlt
  fullName: Night.KeySymbol.LAlt
  nameWithType: KeySymbol.LAlt
- uid: Night.KeySymbol.LCtrl
  name: LCtrl
  href: api/Night.KeySymbol.html#Night_KeySymbol_LCtrl
  commentId: F:Night.KeySymbol.LCtrl
  fullName: Night.KeySymbol.LCtrl
  nameWithType: KeySymbol.LCtrl
- uid: Night.KeySymbol.LGUI
  name: LGUI
  href: api/Night.KeySymbol.html#Night_KeySymbol_LGUI
  commentId: F:Night.KeySymbol.LGUI
  fullName: Night.KeySymbol.LGUI
  nameWithType: KeySymbol.LGUI
- uid: Night.KeySymbol.LShift
  name: LShift
  href: api/Night.KeySymbol.html#Night_KeySymbol_LShift
  commentId: F:Night.KeySymbol.LShift
  fullName: Night.KeySymbol.LShift
  nameWithType: KeySymbol.LShift
- uid: Night.KeySymbol.Left
  name: Left
  href: api/Night.KeySymbol.html#Night_KeySymbol_Left
  commentId: F:Night.KeySymbol.Left
  fullName: Night.KeySymbol.Left
  nameWithType: KeySymbol.Left
- uid: Night.KeySymbol.Leftbracket
  name: Leftbracket
  href: api/Night.KeySymbol.html#Night_KeySymbol_Leftbracket
  commentId: F:Night.KeySymbol.Leftbracket
  fullName: Night.KeySymbol.Leftbracket
  nameWithType: KeySymbol.Leftbracket
- uid: Night.KeySymbol.M
  name: M
  href: api/Night.KeySymbol.html#Night_KeySymbol_M
  commentId: F:Night.KeySymbol.M
  fullName: Night.KeySymbol.M
  nameWithType: KeySymbol.M
- uid: Night.KeySymbol.Minus
  name: Minus
  href: api/Night.KeySymbol.html#Night_KeySymbol_Minus
  commentId: F:Night.KeySymbol.Minus
  fullName: Night.KeySymbol.Minus
  nameWithType: KeySymbol.Minus
- uid: Night.KeySymbol.N
  name: N
  href: api/Night.KeySymbol.html#Night_KeySymbol_N
  commentId: F:Night.KeySymbol.N
  fullName: Night.KeySymbol.N
  nameWithType: KeySymbol.N
- uid: Night.KeySymbol.O
  name: O
  href: api/Night.KeySymbol.html#Night_KeySymbol_O
  commentId: F:Night.KeySymbol.O
  fullName: Night.KeySymbol.O
  nameWithType: KeySymbol.O
- uid: Night.KeySymbol.P
  name: P
  href: api/Night.KeySymbol.html#Night_KeySymbol_P
  commentId: F:Night.KeySymbol.P
  fullName: Night.KeySymbol.P
  nameWithType: KeySymbol.P
- uid: Night.KeySymbol.Period
  name: Period
  href: api/Night.KeySymbol.html#Night_KeySymbol_Period
  commentId: F:Night.KeySymbol.Period
  fullName: Night.KeySymbol.Period
  nameWithType: KeySymbol.Period
- uid: Night.KeySymbol.Q
  name: Q
  href: api/Night.KeySymbol.html#Night_KeySymbol_Q
  commentId: F:Night.KeySymbol.Q
  fullName: Night.KeySymbol.Q
  nameWithType: KeySymbol.Q
- uid: Night.KeySymbol.R
  name: R
  href: api/Night.KeySymbol.html#Night_KeySymbol_R
  commentId: F:Night.KeySymbol.R
  fullName: Night.KeySymbol.R
  nameWithType: KeySymbol.R
- uid: Night.KeySymbol.RAlt
  name: RAlt
  href: api/Night.KeySymbol.html#Night_KeySymbol_RAlt
  commentId: F:Night.KeySymbol.RAlt
  fullName: Night.KeySymbol.RAlt
  nameWithType: KeySymbol.RAlt
- uid: Night.KeySymbol.RCtrl
  name: RCtrl
  href: api/Night.KeySymbol.html#Night_KeySymbol_RCtrl
  commentId: F:Night.KeySymbol.RCtrl
  fullName: Night.KeySymbol.RCtrl
  nameWithType: KeySymbol.RCtrl
- uid: Night.KeySymbol.RGUI
  name: RGUI
  href: api/Night.KeySymbol.html#Night_KeySymbol_RGUI
  commentId: F:Night.KeySymbol.RGUI
  fullName: Night.KeySymbol.RGUI
  nameWithType: KeySymbol.RGUI
- uid: Night.KeySymbol.RShift
  name: RShift
  href: api/Night.KeySymbol.html#Night_KeySymbol_RShift
  commentId: F:Night.KeySymbol.RShift
  fullName: Night.KeySymbol.RShift
  nameWithType: KeySymbol.RShift
- uid: Night.KeySymbol.Return
  name: Return
  href: api/Night.KeySymbol.html#Night_KeySymbol_Return
  commentId: F:Night.KeySymbol.Return
  fullName: Night.KeySymbol.Return
  nameWithType: KeySymbol.Return
- uid: Night.KeySymbol.Right
  name: Right
  href: api/Night.KeySymbol.html#Night_KeySymbol_Right
  commentId: F:Night.KeySymbol.Right
  fullName: Night.KeySymbol.Right
  nameWithType: KeySymbol.Right
- uid: Night.KeySymbol.Rightbracket
  name: Rightbracket
  href: api/Night.KeySymbol.html#Night_KeySymbol_Rightbracket
  commentId: F:Night.KeySymbol.Rightbracket
  fullName: Night.KeySymbol.Rightbracket
  nameWithType: KeySymbol.Rightbracket
- uid: Night.KeySymbol.S
  name: S
  href: api/Night.KeySymbol.html#Night_KeySymbol_S
  commentId: F:Night.KeySymbol.S
  fullName: Night.KeySymbol.S
  nameWithType: KeySymbol.S
- uid: Night.KeySymbol.Semicolon
  name: Semicolon
  href: api/Night.KeySymbol.html#Night_KeySymbol_Semicolon
  commentId: F:Night.KeySymbol.Semicolon
  fullName: Night.KeySymbol.Semicolon
  nameWithType: KeySymbol.Semicolon
- uid: Night.KeySymbol.Slash
  name: Slash
  href: api/Night.KeySymbol.html#Night_KeySymbol_Slash
  commentId: F:Night.KeySymbol.Slash
  fullName: Night.KeySymbol.Slash
  nameWithType: KeySymbol.Slash
- uid: Night.KeySymbol.Space
  name: Space
  href: api/Night.KeySymbol.html#Night_KeySymbol_Space
  commentId: F:Night.KeySymbol.Space
  fullName: Night.KeySymbol.Space
  nameWithType: KeySymbol.Space
- uid: Night.KeySymbol.T
  name: T
  href: api/Night.KeySymbol.html#Night_KeySymbol_T
  commentId: F:Night.KeySymbol.T
  fullName: Night.KeySymbol.T
  nameWithType: KeySymbol.T
- uid: Night.KeySymbol.Tab
  name: Tab
  href: api/Night.KeySymbol.html#Night_KeySymbol_Tab
  commentId: F:Night.KeySymbol.Tab
  fullName: Night.KeySymbol.Tab
  nameWithType: KeySymbol.Tab
- uid: Night.KeySymbol.U
  name: U
  href: api/Night.KeySymbol.html#Night_KeySymbol_U
  commentId: F:Night.KeySymbol.U
  fullName: Night.KeySymbol.U
  nameWithType: KeySymbol.U
- uid: Night.KeySymbol.Unknown
  name: Unknown
  href: api/Night.KeySymbol.html#Night_KeySymbol_Unknown
  commentId: F:Night.KeySymbol.Unknown
  fullName: Night.KeySymbol.Unknown
  nameWithType: KeySymbol.Unknown
- uid: Night.KeySymbol.Up
  name: Up
  href: api/Night.KeySymbol.html#Night_KeySymbol_Up
  commentId: F:Night.KeySymbol.Up
  fullName: Night.KeySymbol.Up
  nameWithType: KeySymbol.Up
- uid: Night.KeySymbol.V
  name: V
  href: api/Night.KeySymbol.html#Night_KeySymbol_V
  commentId: F:Night.KeySymbol.V
  fullName: Night.KeySymbol.V
  nameWithType: KeySymbol.V
- uid: Night.KeySymbol.W
  name: W
  href: api/Night.KeySymbol.html#Night_KeySymbol_W
  commentId: F:Night.KeySymbol.W
  fullName: Night.KeySymbol.W
  nameWithType: KeySymbol.W
- uid: Night.KeySymbol.X
  name: X
  href: api/Night.KeySymbol.html#Night_KeySymbol_X
  commentId: F:Night.KeySymbol.X
  fullName: Night.KeySymbol.X
  nameWithType: KeySymbol.X
- uid: Night.KeySymbol.Y
  name: Y
  href: api/Night.KeySymbol.html#Night_KeySymbol_Y
  commentId: F:Night.KeySymbol.Y
  fullName: Night.KeySymbol.Y
  nameWithType: KeySymbol.Y
- uid: Night.KeySymbol.Z
  name: Z
  href: api/Night.KeySymbol.html#Night_KeySymbol_Z
  commentId: F:Night.KeySymbol.Z
  fullName: Night.KeySymbol.Z
  nameWithType: KeySymbol.Z
- uid: Night.Keyboard
  name: Keyboard
  href: api/Night.Keyboard.html
  commentId: T:Night.Keyboard
  fullName: Night.Keyboard
  nameWithType: Keyboard
- uid: Night.Keyboard.IsDown(Night.KeyCode)
  name: IsDown(KeyCode)
  href: api/Night.Keyboard.html#Night_Keyboard_IsDown_Night_KeyCode_
  commentId: M:Night.Keyboard.IsDown(Night.KeyCode)
  fullName: Night.Keyboard.IsDown(Night.KeyCode)
  nameWithType: Keyboard.IsDown(KeyCode)
- uid: Night.Keyboard.IsDown*
  name: IsDown
  href: api/Night.Keyboard.html#Night_Keyboard_IsDown_
  commentId: Overload:Night.Keyboard.IsDown
  isSpec: "True"
  fullName: Night.Keyboard.IsDown
  nameWithType: Keyboard.IsDown
- uid: Night.ModulesConfig
  name: ModulesConfig
  href: api/Night.ModulesConfig.html
  commentId: T:Night.ModulesConfig
  fullName: Night.ModulesConfig
  nameWithType: ModulesConfig
- uid: Night.ModulesConfig.Audio
  name: Audio
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Audio
  commentId: P:Night.ModulesConfig.Audio
  fullName: Night.ModulesConfig.Audio
  nameWithType: ModulesConfig.Audio
- uid: Night.ModulesConfig.Audio*
  name: Audio
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Audio_
  commentId: Overload:Night.ModulesConfig.Audio
  isSpec: "True"
  fullName: Night.ModulesConfig.Audio
  nameWithType: ModulesConfig.Audio
- uid: Night.ModulesConfig.Data
  name: Data
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Data
  commentId: P:Night.ModulesConfig.Data
  fullName: Night.ModulesConfig.Data
  nameWithType: ModulesConfig.Data
- uid: Night.ModulesConfig.Data*
  name: Data
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Data_
  commentId: Overload:Night.ModulesConfig.Data
  isSpec: "True"
  fullName: Night.ModulesConfig.Data
  nameWithType: ModulesConfig.Data
- uid: Night.ModulesConfig.Event
  name: Event
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Event
  commentId: P:Night.ModulesConfig.Event
  fullName: Night.ModulesConfig.Event
  nameWithType: ModulesConfig.Event
- uid: Night.ModulesConfig.Event*
  name: Event
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Event_
  commentId: Overload:Night.ModulesConfig.Event
  isSpec: "True"
  fullName: Night.ModulesConfig.Event
  nameWithType: ModulesConfig.Event
- uid: Night.ModulesConfig.Font
  name: Font
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Font
  commentId: P:Night.ModulesConfig.Font
  fullName: Night.ModulesConfig.Font
  nameWithType: ModulesConfig.Font
- uid: Night.ModulesConfig.Font*
  name: Font
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Font_
  commentId: Overload:Night.ModulesConfig.Font
  isSpec: "True"
  fullName: Night.ModulesConfig.Font
  nameWithType: ModulesConfig.Font
- uid: Night.ModulesConfig.Graphics
  name: Graphics
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Graphics
  commentId: P:Night.ModulesConfig.Graphics
  fullName: Night.ModulesConfig.Graphics
  nameWithType: ModulesConfig.Graphics
- uid: Night.ModulesConfig.Graphics*
  name: Graphics
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Graphics_
  commentId: Overload:Night.ModulesConfig.Graphics
  isSpec: "True"
  fullName: Night.ModulesConfig.Graphics
  nameWithType: ModulesConfig.Graphics
- uid: Night.ModulesConfig.Image
  name: Image
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Image
  commentId: P:Night.ModulesConfig.Image
  fullName: Night.ModulesConfig.Image
  nameWithType: ModulesConfig.Image
- uid: Night.ModulesConfig.Image*
  name: Image
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Image_
  commentId: Overload:Night.ModulesConfig.Image
  isSpec: "True"
  fullName: Night.ModulesConfig.Image
  nameWithType: ModulesConfig.Image
- uid: Night.ModulesConfig.Joystick
  name: Joystick
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Joystick
  commentId: P:Night.ModulesConfig.Joystick
  fullName: Night.ModulesConfig.Joystick
  nameWithType: ModulesConfig.Joystick
- uid: Night.ModulesConfig.Joystick*
  name: Joystick
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Joystick_
  commentId: Overload:Night.ModulesConfig.Joystick
  isSpec: "True"
  fullName: Night.ModulesConfig.Joystick
  nameWithType: ModulesConfig.Joystick
- uid: Night.ModulesConfig.Keyboard
  name: Keyboard
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Keyboard
  commentId: P:Night.ModulesConfig.Keyboard
  fullName: Night.ModulesConfig.Keyboard
  nameWithType: ModulesConfig.Keyboard
- uid: Night.ModulesConfig.Keyboard*
  name: Keyboard
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Keyboard_
  commentId: Overload:Night.ModulesConfig.Keyboard
  isSpec: "True"
  fullName: Night.ModulesConfig.Keyboard
  nameWithType: ModulesConfig.Keyboard
- uid: Night.ModulesConfig.Math
  name: Math
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Math
  commentId: P:Night.ModulesConfig.Math
  fullName: Night.ModulesConfig.Math
  nameWithType: ModulesConfig.Math
- uid: Night.ModulesConfig.Math*
  name: Math
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Math_
  commentId: Overload:Night.ModulesConfig.Math
  isSpec: "True"
  fullName: Night.ModulesConfig.Math
  nameWithType: ModulesConfig.Math
- uid: Night.ModulesConfig.Mouse
  name: Mouse
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Mouse
  commentId: P:Night.ModulesConfig.Mouse
  fullName: Night.ModulesConfig.Mouse
  nameWithType: ModulesConfig.Mouse
- uid: Night.ModulesConfig.Mouse*
  name: Mouse
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Mouse_
  commentId: Overload:Night.ModulesConfig.Mouse
  isSpec: "True"
  fullName: Night.ModulesConfig.Mouse
  nameWithType: ModulesConfig.Mouse
- uid: Night.ModulesConfig.Physics
  name: Physics
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Physics
  commentId: P:Night.ModulesConfig.Physics
  fullName: Night.ModulesConfig.Physics
  nameWithType: ModulesConfig.Physics
- uid: Night.ModulesConfig.Physics*
  name: Physics
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Physics_
  commentId: Overload:Night.ModulesConfig.Physics
  isSpec: "True"
  fullName: Night.ModulesConfig.Physics
  nameWithType: ModulesConfig.Physics
- uid: Night.ModulesConfig.Sound
  name: Sound
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Sound
  commentId: P:Night.ModulesConfig.Sound
  fullName: Night.ModulesConfig.Sound
  nameWithType: ModulesConfig.Sound
- uid: Night.ModulesConfig.Sound*
  name: Sound
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Sound_
  commentId: Overload:Night.ModulesConfig.Sound
  isSpec: "True"
  fullName: Night.ModulesConfig.Sound
  nameWithType: ModulesConfig.Sound
- uid: Night.ModulesConfig.System
  name: System
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_System
  commentId: P:Night.ModulesConfig.System
  fullName: Night.ModulesConfig.System
  nameWithType: ModulesConfig.System
- uid: Night.ModulesConfig.System*
  name: System
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_System_
  commentId: Overload:Night.ModulesConfig.System
  isSpec: "True"
  fullName: Night.ModulesConfig.System
  nameWithType: ModulesConfig.System
- uid: Night.ModulesConfig.Thread
  name: Thread
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Thread
  commentId: P:Night.ModulesConfig.Thread
  fullName: Night.ModulesConfig.Thread
  nameWithType: ModulesConfig.Thread
- uid: Night.ModulesConfig.Thread*
  name: Thread
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Thread_
  commentId: Overload:Night.ModulesConfig.Thread
  isSpec: "True"
  fullName: Night.ModulesConfig.Thread
  nameWithType: ModulesConfig.Thread
- uid: Night.ModulesConfig.Timer
  name: Timer
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Timer
  commentId: P:Night.ModulesConfig.Timer
  fullName: Night.ModulesConfig.Timer
  nameWithType: ModulesConfig.Timer
- uid: Night.ModulesConfig.Timer*
  name: Timer
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Timer_
  commentId: Overload:Night.ModulesConfig.Timer
  isSpec: "True"
  fullName: Night.ModulesConfig.Timer
  nameWithType: ModulesConfig.Timer
- uid: Night.ModulesConfig.Touch
  name: Touch
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Touch
  commentId: P:Night.ModulesConfig.Touch
  fullName: Night.ModulesConfig.Touch
  nameWithType: ModulesConfig.Touch
- uid: Night.ModulesConfig.Touch*
  name: Touch
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Touch_
  commentId: Overload:Night.ModulesConfig.Touch
  isSpec: "True"
  fullName: Night.ModulesConfig.Touch
  nameWithType: ModulesConfig.Touch
- uid: Night.ModulesConfig.Video
  name: Video
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Video
  commentId: P:Night.ModulesConfig.Video
  fullName: Night.ModulesConfig.Video
  nameWithType: ModulesConfig.Video
- uid: Night.ModulesConfig.Video*
  name: Video
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Video_
  commentId: Overload:Night.ModulesConfig.Video
  isSpec: "True"
  fullName: Night.ModulesConfig.Video
  nameWithType: ModulesConfig.Video
- uid: Night.ModulesConfig.Window
  name: Window
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Window
  commentId: P:Night.ModulesConfig.Window
  fullName: Night.ModulesConfig.Window
  nameWithType: ModulesConfig.Window
- uid: Night.ModulesConfig.Window*
  name: Window
  href: api/Night.ModulesConfig.html#Night_ModulesConfig_Window_
  commentId: Overload:Night.ModulesConfig.Window
  isSpec: "True"
  fullName: Night.ModulesConfig.Window
  nameWithType: ModulesConfig.Window
- uid: Night.Mouse
  name: Mouse
  href: api/Night.Mouse.html
  commentId: T:Night.Mouse
  fullName: Night.Mouse
  nameWithType: Mouse
- uid: Night.Mouse.GetPosition
  name: GetPosition()
  href: api/Night.Mouse.html#Night_Mouse_GetPosition
  commentId: M:Night.Mouse.GetPosition
  fullName: Night.Mouse.GetPosition()
  nameWithType: Mouse.GetPosition()
- uid: Night.Mouse.GetPosition*
  name: GetPosition
  href: api/Night.Mouse.html#Night_Mouse_GetPosition_
  commentId: Overload:Night.Mouse.GetPosition
  isSpec: "True"
  fullName: Night.Mouse.GetPosition
  nameWithType: Mouse.GetPosition
- uid: Night.Mouse.IsDown(Night.MouseButton)
  name: IsDown(MouseButton)
  href: api/Night.Mouse.html#Night_Mouse_IsDown_Night_MouseButton_
  commentId: M:Night.Mouse.IsDown(Night.MouseButton)
  fullName: Night.Mouse.IsDown(Night.MouseButton)
  nameWithType: Mouse.IsDown(MouseButton)
- uid: Night.Mouse.IsDown*
  name: IsDown
  href: api/Night.Mouse.html#Night_Mouse_IsDown_
  commentId: Overload:Night.Mouse.IsDown
  isSpec: "True"
  fullName: Night.Mouse.IsDown
  nameWithType: Mouse.IsDown
- uid: Night.Mouse.SetGrabbed(System.Boolean)
  name: SetGrabbed(bool)
  href: api/Night.Mouse.html#Night_Mouse_SetGrabbed_System_Boolean_
  commentId: M:Night.Mouse.SetGrabbed(System.Boolean)
  name.vb: SetGrabbed(Boolean)
  fullName: Night.Mouse.SetGrabbed(bool)
  fullName.vb: Night.Mouse.SetGrabbed(Boolean)
  nameWithType: Mouse.SetGrabbed(bool)
  nameWithType.vb: Mouse.SetGrabbed(Boolean)
- uid: Night.Mouse.SetGrabbed*
  name: SetGrabbed
  href: api/Night.Mouse.html#Night_Mouse_SetGrabbed_
  commentId: Overload:Night.Mouse.SetGrabbed
  isSpec: "True"
  fullName: Night.Mouse.SetGrabbed
  nameWithType: Mouse.SetGrabbed
- uid: Night.Mouse.SetRelativeMode(System.Boolean)
  name: SetRelativeMode(bool)
  href: api/Night.Mouse.html#Night_Mouse_SetRelativeMode_System_Boolean_
  commentId: M:Night.Mouse.SetRelativeMode(System.Boolean)
  name.vb: SetRelativeMode(Boolean)
  fullName: Night.Mouse.SetRelativeMode(bool)
  fullName.vb: Night.Mouse.SetRelativeMode(Boolean)
  nameWithType: Mouse.SetRelativeMode(bool)
  nameWithType.vb: Mouse.SetRelativeMode(Boolean)
- uid: Night.Mouse.SetRelativeMode*
  name: SetRelativeMode
  href: api/Night.Mouse.html#Night_Mouse_SetRelativeMode_
  commentId: Overload:Night.Mouse.SetRelativeMode
  isSpec: "True"
  fullName: Night.Mouse.SetRelativeMode
  nameWithType: Mouse.SetRelativeMode
- uid: Night.Mouse.SetVisible(System.Boolean)
  name: SetVisible(bool)
  href: api/Night.Mouse.html#Night_Mouse_SetVisible_System_Boolean_
  commentId: M:Night.Mouse.SetVisible(System.Boolean)
  name.vb: SetVisible(Boolean)
  fullName: Night.Mouse.SetVisible(bool)
  fullName.vb: Night.Mouse.SetVisible(Boolean)
  nameWithType: Mouse.SetVisible(bool)
  nameWithType.vb: Mouse.SetVisible(Boolean)
- uid: Night.Mouse.SetVisible*
  name: SetVisible
  href: api/Night.Mouse.html#Night_Mouse_SetVisible_
  commentId: Overload:Night.Mouse.SetVisible
  isSpec: "True"
  fullName: Night.Mouse.SetVisible
  nameWithType: Mouse.SetVisible
- uid: Night.MouseButton
  name: MouseButton
  href: api/Night.MouseButton.html
  commentId: T:Night.MouseButton
  fullName: Night.MouseButton
  nameWithType: MouseButton
- uid: Night.MouseButton.Left
  name: Left
  href: api/Night.MouseButton.html#Night_MouseButton_Left
  commentId: F:Night.MouseButton.Left
  fullName: Night.MouseButton.Left
  nameWithType: MouseButton.Left
- uid: Night.MouseButton.Middle
  name: Middle
  href: api/Night.MouseButton.html#Night_MouseButton_Middle
  commentId: F:Night.MouseButton.Middle
  fullName: Night.MouseButton.Middle
  nameWithType: MouseButton.Middle
- uid: Night.MouseButton.Right
  name: Right
  href: api/Night.MouseButton.html#Night_MouseButton_Right
  commentId: F:Night.MouseButton.Right
  fullName: Night.MouseButton.Right
  nameWithType: MouseButton.Right
- uid: Night.MouseButton.Unknown
  name: Unknown
  href: api/Night.MouseButton.html#Night_MouseButton_Unknown
  commentId: F:Night.MouseButton.Unknown
  fullName: Night.MouseButton.Unknown
  nameWithType: MouseButton.Unknown
- uid: Night.MouseButton.X1
  name: X1
  href: api/Night.MouseButton.html#Night_MouseButton_X1
  commentId: F:Night.MouseButton.X1
  fullName: Night.MouseButton.X1
  nameWithType: MouseButton.X1
- uid: Night.MouseButton.X2
  name: X2
  href: api/Night.MouseButton.html#Night_MouseButton_X2
  commentId: F:Night.MouseButton.X2
  fullName: Night.MouseButton.X2
  nameWithType: MouseButton.X2
- uid: Night.NightSDL
  name: NightSDL
  href: api/Night.NightSDL.html
  commentId: T:Night.NightSDL
  fullName: Night.NightSDL
  nameWithType: NightSDL
- uid: Night.NightSDL.GetError
  name: GetError()
  href: api/Night.NightSDL.html#Night_NightSDL_GetError
  commentId: M:Night.NightSDL.GetError
  fullName: Night.NightSDL.GetError()
  nameWithType: NightSDL.GetError()
- uid: Night.NightSDL.GetError*
  name: GetError
  href: api/Night.NightSDL.html#Night_NightSDL_GetError_
  commentId: Overload:Night.NightSDL.GetError
  isSpec: "True"
  fullName: Night.NightSDL.GetError
  nameWithType: NightSDL.GetError
- uid: Night.NightSDL.GetVersion
  name: GetVersion()
  href: api/Night.NightSDL.html#Night_NightSDL_GetVersion
  commentId: M:Night.NightSDL.GetVersion
  fullName: Night.NightSDL.GetVersion()
  nameWithType: NightSDL.GetVersion()
- uid: Night.NightSDL.GetVersion*
  name: GetVersion
  href: api/Night.NightSDL.html#Night_NightSDL_GetVersion_
  commentId: Overload:Night.NightSDL.GetVersion
  isSpec: "True"
  fullName: Night.NightSDL.GetVersion
  nameWithType: NightSDL.GetVersion
- uid: Night.PointF
  name: PointF
  href: api/Night.PointF.html
  commentId: T:Night.PointF
  fullName: Night.PointF
  nameWithType: PointF
- uid: Night.PointF.#ctor(System.Single,System.Single)
  name: PointF(float, float)
  href: api/Night.PointF.html#Night_PointF__ctor_System_Single_System_Single_
  commentId: M:Night.PointF.#ctor(System.Single,System.Single)
  name.vb: New(Single, Single)
  fullName: Night.PointF.PointF(float, float)
  fullName.vb: Night.PointF.New(Single, Single)
  nameWithType: PointF.PointF(float, float)
  nameWithType.vb: PointF.New(Single, Single)
- uid: Night.PointF.#ctor*
  name: PointF
  href: api/Night.PointF.html#Night_PointF__ctor_
  commentId: Overload:Night.PointF.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Night.PointF.PointF
  fullName.vb: Night.PointF.New
  nameWithType: PointF.PointF
  nameWithType.vb: PointF.New
- uid: Night.PointF.X
  name: X
  href: api/Night.PointF.html#Night_PointF_X
  commentId: F:Night.PointF.X
  fullName: Night.PointF.X
  nameWithType: PointF.X
- uid: Night.PointF.Y
  name: Y
  href: api/Night.PointF.html#Night_PointF_Y
  commentId: F:Night.PointF.Y
  fullName: Night.PointF.Y
  nameWithType: PointF.Y
- uid: Night.Rectangle
  name: Rectangle
  href: api/Night.Rectangle.html
  commentId: T:Night.Rectangle
  fullName: Night.Rectangle
  nameWithType: Rectangle
- uid: Night.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  name: Rectangle(int, int, int, int)
  href: api/Night.Rectangle.html#Night_Rectangle__ctor_System_Int32_System_Int32_System_Int32_System_Int32_
  commentId: M:Night.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  name.vb: New(Integer, Integer, Integer, Integer)
  fullName: Night.Rectangle.Rectangle(int, int, int, int)
  fullName.vb: Night.Rectangle.New(Integer, Integer, Integer, Integer)
  nameWithType: Rectangle.Rectangle(int, int, int, int)
  nameWithType.vb: Rectangle.New(Integer, Integer, Integer, Integer)
- uid: Night.Rectangle.#ctor*
  name: Rectangle
  href: api/Night.Rectangle.html#Night_Rectangle__ctor_
  commentId: Overload:Night.Rectangle.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Night.Rectangle.Rectangle
  fullName.vb: Night.Rectangle.New
  nameWithType: Rectangle.Rectangle
  nameWithType.vb: Rectangle.New
- uid: Night.Rectangle.Height
  name: Height
  href: api/Night.Rectangle.html#Night_Rectangle_Height
  commentId: F:Night.Rectangle.Height
  fullName: Night.Rectangle.Height
  nameWithType: Rectangle.Height
- uid: Night.Rectangle.Width
  name: Width
  href: api/Night.Rectangle.html#Night_Rectangle_Width
  commentId: F:Night.Rectangle.Width
  fullName: Night.Rectangle.Width
  nameWithType: Rectangle.Width
- uid: Night.Rectangle.X
  name: X
  href: api/Night.Rectangle.html#Night_Rectangle_X
  commentId: F:Night.Rectangle.X
  fullName: Night.Rectangle.X
  nameWithType: Rectangle.X
- uid: Night.Rectangle.Y
  name: Y
  href: api/Night.Rectangle.html#Night_Rectangle_Y
  commentId: F:Night.Rectangle.Y
  fullName: Night.Rectangle.Y
  nameWithType: Rectangle.Y
- uid: Night.SampleGame
  name: Night.SampleGame
  href: api/Night.SampleGame.html
  commentId: N:Night.SampleGame
  fullName: Night.SampleGame
  nameWithType: Night.SampleGame
- uid: Night.SampleGame.Game
  name: Game
  href: api/Night.SampleGame.Game.html
  commentId: T:Night.SampleGame.Game
  fullName: Night.SampleGame.Game
  nameWithType: Game
- uid: Night.SampleGame.Game.#ctor
  name: Game()
  href: api/Night.SampleGame.Game.html#Night_SampleGame_Game__ctor
  commentId: M:Night.SampleGame.Game.#ctor
  name.vb: New()
  fullName: Night.SampleGame.Game.Game()
  fullName.vb: Night.SampleGame.Game.New()
  nameWithType: Game.Game()
  nameWithType.vb: Game.New()
- uid: Night.SampleGame.Game.#ctor*
  name: Game
  href: api/Night.SampleGame.Game.html#Night_SampleGame_Game__ctor_
  commentId: Overload:Night.SampleGame.Game.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Night.SampleGame.Game.Game
  fullName.vb: Night.SampleGame.Game.New
  nameWithType: Game.Game
  nameWithType.vb: Game.New
- uid: Night.SampleGame.Game.Draw
  name: Draw()
  href: api/Night.SampleGame.Game.html#Night_SampleGame_Game_Draw
  commentId: M:Night.SampleGame.Game.Draw
  fullName: Night.SampleGame.Game.Draw()
  nameWithType: Game.Draw()
- uid: Night.SampleGame.Game.Draw*
  name: Draw
  href: api/Night.SampleGame.Game.html#Night_SampleGame_Game_Draw_
  commentId: Overload:Night.SampleGame.Game.Draw
  isSpec: "True"
  fullName: Night.SampleGame.Game.Draw
  nameWithType: Game.Draw
- uid: Night.SampleGame.Game.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
  name: KeyPressed(KeySymbol, KeyCode, bool)
  href: api/Night.SampleGame.Game.html#Night_SampleGame_Game_KeyPressed_Night_KeySymbol_Night_KeyCode_System_Boolean_
  commentId: M:Night.SampleGame.Game.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
  name.vb: KeyPressed(KeySymbol, KeyCode, Boolean)
  fullName: Night.SampleGame.Game.KeyPressed(Night.KeySymbol, Night.KeyCode, bool)
  fullName.vb: Night.SampleGame.Game.KeyPressed(Night.KeySymbol, Night.KeyCode, Boolean)
  nameWithType: Game.KeyPressed(KeySymbol, KeyCode, bool)
  nameWithType.vb: Game.KeyPressed(KeySymbol, KeyCode, Boolean)
- uid: Night.SampleGame.Game.KeyPressed*
  name: KeyPressed
  href: api/Night.SampleGame.Game.html#Night_SampleGame_Game_KeyPressed_
  commentId: Overload:Night.SampleGame.Game.KeyPressed
  isSpec: "True"
  fullName: Night.SampleGame.Game.KeyPressed
  nameWithType: Game.KeyPressed
- uid: Night.SampleGame.Game.Load
  name: Load()
  href: api/Night.SampleGame.Game.html#Night_SampleGame_Game_Load
  commentId: M:Night.SampleGame.Game.Load
  fullName: Night.SampleGame.Game.Load()
  nameWithType: Game.Load()
- uid: Night.SampleGame.Game.Load*
  name: Load
  href: api/Night.SampleGame.Game.html#Night_SampleGame_Game_Load_
  commentId: Overload:Night.SampleGame.Game.Load
  isSpec: "True"
  fullName: Night.SampleGame.Game.Load
  nameWithType: Game.Load
- uid: Night.SampleGame.Game.Update(System.Double)
  name: Update(double)
  href: api/Night.SampleGame.Game.html#Night_SampleGame_Game_Update_System_Double_
  commentId: M:Night.SampleGame.Game.Update(System.Double)
  name.vb: Update(Double)
  fullName: Night.SampleGame.Game.Update(double)
  fullName.vb: Night.SampleGame.Game.Update(Double)
  nameWithType: Game.Update(double)
  nameWithType.vb: Game.Update(Double)
- uid: Night.SampleGame.Game.Update*
  name: Update
  href: api/Night.SampleGame.Game.html#Night_SampleGame_Game_Update_
  commentId: Overload:Night.SampleGame.Game.Update
  isSpec: "True"
  fullName: Night.SampleGame.Game.Update
  nameWithType: Game.Update
- uid: Night.SampleGame.Platformer
  name: Platformer
  href: api/Night.SampleGame.Platformer.html
  commentId: T:Night.SampleGame.Platformer
  fullName: Night.SampleGame.Platformer
  nameWithType: Platformer
- uid: Night.SampleGame.Platformer.#ctor
  name: Platformer()
  href: api/Night.SampleGame.Platformer.html#Night_SampleGame_Platformer__ctor
  commentId: M:Night.SampleGame.Platformer.#ctor
  name.vb: New()
  fullName: Night.SampleGame.Platformer.Platformer()
  fullName.vb: Night.SampleGame.Platformer.New()
  nameWithType: Platformer.Platformer()
  nameWithType.vb: Platformer.New()
- uid: Night.SampleGame.Platformer.#ctor*
  name: Platformer
  href: api/Night.SampleGame.Platformer.html#Night_SampleGame_Platformer__ctor_
  commentId: Overload:Night.SampleGame.Platformer.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Night.SampleGame.Platformer.Platformer
  fullName.vb: Night.SampleGame.Platformer.New
  nameWithType: Platformer.Platformer
  nameWithType.vb: Platformer.New
- uid: Night.SampleGame.Platformer.Draw
  name: Draw()
  href: api/Night.SampleGame.Platformer.html#Night_SampleGame_Platformer_Draw
  commentId: M:Night.SampleGame.Platformer.Draw
  fullName: Night.SampleGame.Platformer.Draw()
  nameWithType: Platformer.Draw()
- uid: Night.SampleGame.Platformer.Draw*
  name: Draw
  href: api/Night.SampleGame.Platformer.html#Night_SampleGame_Platformer_Draw_
  commentId: Overload:Night.SampleGame.Platformer.Draw
  isSpec: "True"
  fullName: Night.SampleGame.Platformer.Draw
  nameWithType: Platformer.Draw
- uid: Night.SampleGame.Platformer.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
  name: KeyPressed(KeySymbol, KeyCode, bool)
  href: api/Night.SampleGame.Platformer.html#Night_SampleGame_Platformer_KeyPressed_Night_KeySymbol_Night_KeyCode_System_Boolean_
  commentId: M:Night.SampleGame.Platformer.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
  name.vb: KeyPressed(KeySymbol, KeyCode, Boolean)
  fullName: Night.SampleGame.Platformer.KeyPressed(Night.KeySymbol, Night.KeyCode, bool)
  fullName.vb: Night.SampleGame.Platformer.KeyPressed(Night.KeySymbol, Night.KeyCode, Boolean)
  nameWithType: Platformer.KeyPressed(KeySymbol, KeyCode, bool)
  nameWithType.vb: Platformer.KeyPressed(KeySymbol, KeyCode, Boolean)
- uid: Night.SampleGame.Platformer.KeyPressed*
  name: KeyPressed
  href: api/Night.SampleGame.Platformer.html#Night_SampleGame_Platformer_KeyPressed_
  commentId: Overload:Night.SampleGame.Platformer.KeyPressed
  isSpec: "True"
  fullName: Night.SampleGame.Platformer.KeyPressed
  nameWithType: Platformer.KeyPressed
- uid: Night.SampleGame.Platformer.Load
  name: Load()
  href: api/Night.SampleGame.Platformer.html#Night_SampleGame_Platformer_Load
  commentId: M:Night.SampleGame.Platformer.Load
  fullName: Night.SampleGame.Platformer.Load()
  nameWithType: Platformer.Load()
- uid: Night.SampleGame.Platformer.Load*
  name: Load
  href: api/Night.SampleGame.Platformer.html#Night_SampleGame_Platformer_Load_
  commentId: Overload:Night.SampleGame.Platformer.Load
  isSpec: "True"
  fullName: Night.SampleGame.Platformer.Load
  nameWithType: Platformer.Load
- uid: Night.SampleGame.Platformer.Update(System.Double)
  name: Update(double)
  href: api/Night.SampleGame.Platformer.html#Night_SampleGame_Platformer_Update_System_Double_
  commentId: M:Night.SampleGame.Platformer.Update(System.Double)
  name.vb: Update(Double)
  fullName: Night.SampleGame.Platformer.Update(double)
  fullName.vb: Night.SampleGame.Platformer.Update(Double)
  nameWithType: Platformer.Update(double)
  nameWithType.vb: Platformer.Update(Double)
- uid: Night.SampleGame.Platformer.Update*
  name: Update
  href: api/Night.SampleGame.Platformer.html#Night_SampleGame_Platformer_Update_
  commentId: Overload:Night.SampleGame.Platformer.Update
  isSpec: "True"
  fullName: Night.SampleGame.Platformer.Update
  nameWithType: Platformer.Update
- uid: Night.SampleGame.PlatformerGame
  name: PlatformerGame
  href: api/Night.SampleGame.PlatformerGame.html
  commentId: T:Night.SampleGame.PlatformerGame
  fullName: Night.SampleGame.PlatformerGame
  nameWithType: PlatformerGame
- uid: Night.SampleGame.PlatformerGame.PlatformerGameMain
  name: PlatformerGameMain()
  href: api/Night.SampleGame.PlatformerGame.html#Night_SampleGame_PlatformerGame_PlatformerGameMain
  commentId: M:Night.SampleGame.PlatformerGame.PlatformerGameMain
  fullName: Night.SampleGame.PlatformerGame.PlatformerGameMain()
  nameWithType: PlatformerGame.PlatformerGameMain()
- uid: Night.SampleGame.PlatformerGame.PlatformerGameMain*
  name: PlatformerGameMain
  href: api/Night.SampleGame.PlatformerGame.html#Night_SampleGame_PlatformerGame_PlatformerGameMain_
  commentId: Overload:Night.SampleGame.PlatformerGame.PlatformerGameMain
  isSpec: "True"
  fullName: Night.SampleGame.PlatformerGame.PlatformerGameMain
  nameWithType: PlatformerGame.PlatformerGameMain
- uid: Night.SampleGame.Player
  name: Player
  href: api/Night.SampleGame.Player.html
  commentId: T:Night.SampleGame.Player
  fullName: Night.SampleGame.Player
  nameWithType: Player
- uid: Night.SampleGame.Player.#ctor
  name: Player()
  href: api/Night.SampleGame.Player.html#Night_SampleGame_Player__ctor
  commentId: M:Night.SampleGame.Player.#ctor
  name.vb: New()
  fullName: Night.SampleGame.Player.Player()
  fullName.vb: Night.SampleGame.Player.New()
  nameWithType: Player.Player()
  nameWithType.vb: Player.New()
- uid: Night.SampleGame.Player.#ctor*
  name: Player
  href: api/Night.SampleGame.Player.html#Night_SampleGame_Player__ctor_
  commentId: Overload:Night.SampleGame.Player.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Night.SampleGame.Player.Player
  fullName.vb: Night.SampleGame.Player.New
  nameWithType: Player.Player
  nameWithType.vb: Player.New
- uid: Night.SampleGame.Player.Draw
  name: Draw()
  href: api/Night.SampleGame.Player.html#Night_SampleGame_Player_Draw
  commentId: M:Night.SampleGame.Player.Draw
  fullName: Night.SampleGame.Player.Draw()
  nameWithType: Player.Draw()
- uid: Night.SampleGame.Player.Draw*
  name: Draw
  href: api/Night.SampleGame.Player.html#Night_SampleGame_Player_Draw_
  commentId: Overload:Night.SampleGame.Player.Draw
  isSpec: "True"
  fullName: Night.SampleGame.Player.Draw
  nameWithType: Player.Draw
- uid: Night.SampleGame.Player.Height
  name: Height
  href: api/Night.SampleGame.Player.html#Night_SampleGame_Player_Height
  commentId: P:Night.SampleGame.Player.Height
  fullName: Night.SampleGame.Player.Height
  nameWithType: Player.Height
- uid: Night.SampleGame.Player.Height*
  name: Height
  href: api/Night.SampleGame.Player.html#Night_SampleGame_Player_Height_
  commentId: Overload:Night.SampleGame.Player.Height
  isSpec: "True"
  fullName: Night.SampleGame.Player.Height
  nameWithType: Player.Height
- uid: Night.SampleGame.Player.Load
  name: Load()
  href: api/Night.SampleGame.Player.html#Night_SampleGame_Player_Load
  commentId: M:Night.SampleGame.Player.Load
  fullName: Night.SampleGame.Player.Load()
  nameWithType: Player.Load()
- uid: Night.SampleGame.Player.Load*
  name: Load
  href: api/Night.SampleGame.Player.html#Night_SampleGame_Player_Load_
  commentId: Overload:Night.SampleGame.Player.Load
  isSpec: "True"
  fullName: Night.SampleGame.Player.Load
  nameWithType: Player.Load
- uid: Night.SampleGame.Player.Update(System.Double,System.Collections.Generic.List{Night.Rectangle})
  name: Update(double, List<Rectangle>)
  href: api/Night.SampleGame.Player.html#Night_SampleGame_Player_Update_System_Double_System_Collections_Generic_List_Night_Rectangle__
  commentId: M:Night.SampleGame.Player.Update(System.Double,System.Collections.Generic.List{Night.Rectangle})
  name.vb: Update(Double, List(Of Rectangle))
  fullName: Night.SampleGame.Player.Update(double, System.Collections.Generic.List<Night.Rectangle>)
  fullName.vb: Night.SampleGame.Player.Update(Double, System.Collections.Generic.List(Of Night.Rectangle))
  nameWithType: Player.Update(double, List<Rectangle>)
  nameWithType.vb: Player.Update(Double, List(Of Rectangle))
- uid: Night.SampleGame.Player.Update*
  name: Update
  href: api/Night.SampleGame.Player.html#Night_SampleGame_Player_Update_
  commentId: Overload:Night.SampleGame.Player.Update
  isSpec: "True"
  fullName: Night.SampleGame.Player.Update
  nameWithType: Player.Update
- uid: Night.SampleGame.Player.Width
  name: Width
  href: api/Night.SampleGame.Player.html#Night_SampleGame_Player_Width
  commentId: P:Night.SampleGame.Player.Width
  fullName: Night.SampleGame.Player.Width
  nameWithType: Player.Width
- uid: Night.SampleGame.Player.Width*
  name: Width
  href: api/Night.SampleGame.Player.html#Night_SampleGame_Player_Width_
  commentId: Overload:Night.SampleGame.Player.Width
  isSpec: "True"
  fullName: Night.SampleGame.Player.Width
  nameWithType: Player.Width
- uid: Night.SampleGame.Player.X
  name: X
  href: api/Night.SampleGame.Player.html#Night_SampleGame_Player_X
  commentId: P:Night.SampleGame.Player.X
  fullName: Night.SampleGame.Player.X
  nameWithType: Player.X
- uid: Night.SampleGame.Player.X*
  name: X
  href: api/Night.SampleGame.Player.html#Night_SampleGame_Player_X_
  commentId: Overload:Night.SampleGame.Player.X
  isSpec: "True"
  fullName: Night.SampleGame.Player.X
  nameWithType: Player.X
- uid: Night.SampleGame.Player.Y
  name: Y
  href: api/Night.SampleGame.Player.html#Night_SampleGame_Player_Y
  commentId: P:Night.SampleGame.Player.Y
  fullName: Night.SampleGame.Player.Y
  nameWithType: Player.Y
- uid: Night.SampleGame.Player.Y*
  name: Y
  href: api/Night.SampleGame.Player.html#Night_SampleGame_Player_Y_
  commentId: Overload:Night.SampleGame.Player.Y
  isSpec: "True"
  fullName: Night.SampleGame.Player.Y
  nameWithType: Player.Y
- uid: Night.SampleGame.Program
  name: Program
  href: api/Night.SampleGame.Program.html
  commentId: T:Night.SampleGame.Program
  fullName: Night.SampleGame.Program
  nameWithType: Program
- uid: Night.SampleGame.Program.Main
  name: Main()
  href: api/Night.SampleGame.Program.html#Night_SampleGame_Program_Main
  commentId: M:Night.SampleGame.Program.Main
  fullName: Night.SampleGame.Program.Main()
  nameWithType: Program.Main()
- uid: Night.SampleGame.Program.Main*
  name: Main
  href: api/Night.SampleGame.Program.html#Night_SampleGame_Program_Main_
  commentId: Overload:Night.SampleGame.Program.Main
  isSpec: "True"
  fullName: Night.SampleGame.Program.Main
  nameWithType: Program.Main
- uid: Night.Sprite
  name: Sprite
  href: api/Night.Sprite.html
  commentId: T:Night.Sprite
  fullName: Night.Sprite
  nameWithType: Sprite
- uid: Night.Sprite.#ctor(System.IntPtr,System.Int32,System.Int32)
  name: Sprite(nint, int, int)
  href: api/Night.Sprite.html#Night_Sprite__ctor_System_IntPtr_System_Int32_System_Int32_
  commentId: M:Night.Sprite.#ctor(System.IntPtr,System.Int32,System.Int32)
  name.vb: New(IntPtr, Integer, Integer)
  fullName: Night.Sprite.Sprite(nint, int, int)
  fullName.vb: Night.Sprite.New(System.IntPtr, Integer, Integer)
  nameWithType: Sprite.Sprite(nint, int, int)
  nameWithType.vb: Sprite.New(IntPtr, Integer, Integer)
- uid: Night.Sprite.#ctor*
  name: Sprite
  href: api/Night.Sprite.html#Night_Sprite__ctor_
  commentId: Overload:Night.Sprite.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Night.Sprite.Sprite
  fullName.vb: Night.Sprite.New
  nameWithType: Sprite.Sprite
  nameWithType.vb: Sprite.New
- uid: Night.Sprite.Height
  name: Height
  href: api/Night.Sprite.html#Night_Sprite_Height
  commentId: P:Night.Sprite.Height
  fullName: Night.Sprite.Height
  nameWithType: Sprite.Height
- uid: Night.Sprite.Height*
  name: Height
  href: api/Night.Sprite.html#Night_Sprite_Height_
  commentId: Overload:Night.Sprite.Height
  isSpec: "True"
  fullName: Night.Sprite.Height
  nameWithType: Sprite.Height
- uid: Night.Sprite.Texture
  name: Texture
  href: api/Night.Sprite.html#Night_Sprite_Texture
  commentId: P:Night.Sprite.Texture
  fullName: Night.Sprite.Texture
  nameWithType: Sprite.Texture
- uid: Night.Sprite.Texture*
  name: Texture
  href: api/Night.Sprite.html#Night_Sprite_Texture_
  commentId: Overload:Night.Sprite.Texture
  isSpec: "True"
  fullName: Night.Sprite.Texture
  nameWithType: Sprite.Texture
- uid: Night.Sprite.Width
  name: Width
  href: api/Night.Sprite.html#Night_Sprite_Width
  commentId: P:Night.Sprite.Width
  fullName: Night.Sprite.Width
  nameWithType: Sprite.Width
- uid: Night.Sprite.Width*
  name: Width
  href: api/Night.Sprite.html#Night_Sprite_Width_
  commentId: Overload:Night.Sprite.Width
  isSpec: "True"
  fullName: Night.Sprite.Width
  nameWithType: Sprite.Width
- uid: Night.System
  name: System
  href: api/Night.System.html
  commentId: T:Night.System
  fullName: Night.System
  nameWithType: System
- uid: Night.System.SetClipboardText(System.String)
  name: SetClipboardText(string)
  href: api/Night.System.html#Night_System_SetClipboardText_System_String_
  commentId: M:Night.System.SetClipboardText(System.String)
  name.vb: SetClipboardText(String)
  fullName: Night.System.SetClipboardText(string)
  fullName.vb: Night.System.SetClipboardText(String)
  nameWithType: System.SetClipboardText(string)
  nameWithType.vb: System.SetClipboardText(String)
- uid: Night.System.SetClipboardText*
  name: SetClipboardText
  href: api/Night.System.html#Night_System_SetClipboardText_
  commentId: Overload:Night.System.SetClipboardText
  isSpec: "True"
  fullName: Night.System.SetClipboardText
  nameWithType: System.SetClipboardText
- uid: Night.Timer
  name: Timer
  href: api/Night.Timer.html
  commentId: T:Night.Timer
  fullName: Night.Timer
  nameWithType: Timer
- uid: Night.Timer.GetAverageDelta
  name: GetAverageDelta()
  href: api/Night.Timer.html#Night_Timer_GetAverageDelta
  commentId: M:Night.Timer.GetAverageDelta
  fullName: Night.Timer.GetAverageDelta()
  nameWithType: Timer.GetAverageDelta()
- uid: Night.Timer.GetAverageDelta*
  name: GetAverageDelta
  href: api/Night.Timer.html#Night_Timer_GetAverageDelta_
  commentId: Overload:Night.Timer.GetAverageDelta
  isSpec: "True"
  fullName: Night.Timer.GetAverageDelta
  nameWithType: Timer.GetAverageDelta
- uid: Night.Timer.GetDelta
  name: GetDelta()
  href: api/Night.Timer.html#Night_Timer_GetDelta
  commentId: M:Night.Timer.GetDelta
  fullName: Night.Timer.GetDelta()
  nameWithType: Timer.GetDelta()
- uid: Night.Timer.GetDelta*
  name: GetDelta
  href: api/Night.Timer.html#Night_Timer_GetDelta_
  commentId: Overload:Night.Timer.GetDelta
  isSpec: "True"
  fullName: Night.Timer.GetDelta
  nameWithType: Timer.GetDelta
- uid: Night.Timer.GetFPS
  name: GetFPS()
  href: api/Night.Timer.html#Night_Timer_GetFPS
  commentId: M:Night.Timer.GetFPS
  fullName: Night.Timer.GetFPS()
  nameWithType: Timer.GetFPS()
- uid: Night.Timer.GetFPS*
  name: GetFPS
  href: api/Night.Timer.html#Night_Timer_GetFPS_
  commentId: Overload:Night.Timer.GetFPS
  isSpec: "True"
  fullName: Night.Timer.GetFPS
  nameWithType: Timer.GetFPS
- uid: Night.Timer.GetTime
  name: GetTime()
  href: api/Night.Timer.html#Night_Timer_GetTime
  commentId: M:Night.Timer.GetTime
  fullName: Night.Timer.GetTime()
  nameWithType: Timer.GetTime()
- uid: Night.Timer.GetTime*
  name: GetTime
  href: api/Night.Timer.html#Night_Timer_GetTime_
  commentId: Overload:Night.Timer.GetTime
  isSpec: "True"
  fullName: Night.Timer.GetTime
  nameWithType: Timer.GetTime
- uid: Night.Timer.Sleep(System.Double)
  name: Sleep(double)
  href: api/Night.Timer.html#Night_Timer_Sleep_System_Double_
  commentId: M:Night.Timer.Sleep(System.Double)
  name.vb: Sleep(Double)
  fullName: Night.Timer.Sleep(double)
  fullName.vb: Night.Timer.Sleep(Double)
  nameWithType: Timer.Sleep(double)
  nameWithType.vb: Timer.Sleep(Double)
- uid: Night.Timer.Sleep*
  name: Sleep
  href: api/Night.Timer.html#Night_Timer_Sleep_
  commentId: Overload:Night.Timer.Sleep
  isSpec: "True"
  fullName: Night.Timer.Sleep
  nameWithType: Timer.Sleep
- uid: Night.Timer.Step
  name: Step()
  href: api/Night.Timer.html#Night_Timer_Step
  commentId: M:Night.Timer.Step
  fullName: Night.Timer.Step()
  nameWithType: Timer.Step()
- uid: Night.Timer.Step*
  name: Step
  href: api/Night.Timer.html#Night_Timer_Step_
  commentId: Overload:Night.Timer.Step
  isSpec: "True"
  fullName: Night.Timer.Step
  nameWithType: Timer.Step
- uid: Night.VersionInfo
  name: VersionInfo
  href: api/Night.VersionInfo.html
  commentId: T:Night.VersionInfo
  fullName: Night.VersionInfo
  nameWithType: VersionInfo
- uid: Night.VersionInfo.CodeName
  name: CodeName
  href: api/Night.VersionInfo.html#Night_VersionInfo_CodeName
  commentId: F:Night.VersionInfo.CodeName
  fullName: Night.VersionInfo.CodeName
  nameWithType: VersionInfo.CodeName
- uid: Night.VersionInfo.GetVersion
  name: GetVersion()
  href: api/Night.VersionInfo.html#Night_VersionInfo_GetVersion
  commentId: M:Night.VersionInfo.GetVersion
  fullName: Night.VersionInfo.GetVersion()
  nameWithType: VersionInfo.GetVersion()
- uid: Night.VersionInfo.GetVersion*
  name: GetVersion
  href: api/Night.VersionInfo.html#Night_VersionInfo_GetVersion_
  commentId: Overload:Night.VersionInfo.GetVersion
  isSpec: "True"
  fullName: Night.VersionInfo.GetVersion
  nameWithType: VersionInfo.GetVersion
- uid: Night.VersionInfo.Version
  name: Version
  href: api/Night.VersionInfo.html#Night_VersionInfo_Version
  commentId: F:Night.VersionInfo.Version
  fullName: Night.VersionInfo.Version
  nameWithType: VersionInfo.Version
- uid: Night.Window
  name: Window
  href: api/Night.Window.html
  commentId: T:Night.Window
  fullName: Night.Window
  nameWithType: Window
- uid: Night.Window.Close
  name: Close()
  href: api/Night.Window.html#Night_Window_Close
  commentId: M:Night.Window.Close
  fullName: Night.Window.Close()
  nameWithType: Window.Close()
- uid: Night.Window.Close*
  name: Close
  href: api/Night.Window.html#Night_Window_Close_
  commentId: Overload:Night.Window.Close
  isSpec: "True"
  fullName: Night.Window.Close
  nameWithType: Window.Close
- uid: Night.Window.FromPixels(System.Single)
  name: FromPixels(float)
  href: api/Night.Window.html#Night_Window_FromPixels_System_Single_
  commentId: M:Night.Window.FromPixels(System.Single)
  name.vb: FromPixels(Single)
  fullName: Night.Window.FromPixels(float)
  fullName.vb: Night.Window.FromPixels(Single)
  nameWithType: Window.FromPixels(float)
  nameWithType.vb: Window.FromPixels(Single)
- uid: Night.Window.FromPixels*
  name: FromPixels
  href: api/Night.Window.html#Night_Window_FromPixels_
  commentId: Overload:Night.Window.FromPixels
  isSpec: "True"
  fullName: Night.Window.FromPixels
  nameWithType: Window.FromPixels
- uid: Night.Window.GetDPIScale
  name: GetDPIScale()
  href: api/Night.Window.html#Night_Window_GetDPIScale
  commentId: M:Night.Window.GetDPIScale
  fullName: Night.Window.GetDPIScale()
  nameWithType: Window.GetDPIScale()
- uid: Night.Window.GetDPIScale*
  name: GetDPIScale
  href: api/Night.Window.html#Night_Window_GetDPIScale_
  commentId: Overload:Night.Window.GetDPIScale
  isSpec: "True"
  fullName: Night.Window.GetDPIScale
  nameWithType: Window.GetDPIScale
- uid: Night.Window.GetDesktopDimensions(System.Int32)
  name: GetDesktopDimensions(int)
  href: api/Night.Window.html#Night_Window_GetDesktopDimensions_System_Int32_
  commentId: M:Night.Window.GetDesktopDimensions(System.Int32)
  name.vb: GetDesktopDimensions(Integer)
  fullName: Night.Window.GetDesktopDimensions(int)
  fullName.vb: Night.Window.GetDesktopDimensions(Integer)
  nameWithType: Window.GetDesktopDimensions(int)
  nameWithType.vb: Window.GetDesktopDimensions(Integer)
- uid: Night.Window.GetDesktopDimensions*
  name: GetDesktopDimensions
  href: api/Night.Window.html#Night_Window_GetDesktopDimensions_
  commentId: Overload:Night.Window.GetDesktopDimensions
  isSpec: "True"
  fullName: Night.Window.GetDesktopDimensions
  nameWithType: Window.GetDesktopDimensions
- uid: Night.Window.GetDisplayCount
  name: GetDisplayCount()
  href: api/Night.Window.html#Night_Window_GetDisplayCount
  commentId: M:Night.Window.GetDisplayCount
  fullName: Night.Window.GetDisplayCount()
  nameWithType: Window.GetDisplayCount()
- uid: Night.Window.GetDisplayCount*
  name: GetDisplayCount
  href: api/Night.Window.html#Night_Window_GetDisplayCount_
  commentId: Overload:Night.Window.GetDisplayCount
  isSpec: "True"
  fullName: Night.Window.GetDisplayCount
  nameWithType: Window.GetDisplayCount
- uid: Night.Window.GetFullscreen
  name: GetFullscreen()
  href: api/Night.Window.html#Night_Window_GetFullscreen
  commentId: M:Night.Window.GetFullscreen
  fullName: Night.Window.GetFullscreen()
  nameWithType: Window.GetFullscreen()
- uid: Night.Window.GetFullscreen*
  name: GetFullscreen
  href: api/Night.Window.html#Night_Window_GetFullscreen_
  commentId: Overload:Night.Window.GetFullscreen
  isSpec: "True"
  fullName: Night.Window.GetFullscreen
  nameWithType: Window.GetFullscreen
- uid: Night.Window.GetFullscreenModes(System.Int32)
  name: GetFullscreenModes(int)
  href: api/Night.Window.html#Night_Window_GetFullscreenModes_System_Int32_
  commentId: M:Night.Window.GetFullscreenModes(System.Int32)
  name.vb: GetFullscreenModes(Integer)
  fullName: Night.Window.GetFullscreenModes(int)
  fullName.vb: Night.Window.GetFullscreenModes(Integer)
  nameWithType: Window.GetFullscreenModes(int)
  nameWithType.vb: Window.GetFullscreenModes(Integer)
- uid: Night.Window.GetFullscreenModes*
  name: GetFullscreenModes
  href: api/Night.Window.html#Night_Window_GetFullscreenModes_
  commentId: Overload:Night.Window.GetFullscreenModes
  isSpec: "True"
  fullName: Night.Window.GetFullscreenModes
  nameWithType: Window.GetFullscreenModes
- uid: Night.Window.GetMode
  name: GetMode()
  href: api/Night.Window.html#Night_Window_GetMode
  commentId: M:Night.Window.GetMode
  fullName: Night.Window.GetMode()
  nameWithType: Window.GetMode()
- uid: Night.Window.GetMode*
  name: GetMode
  href: api/Night.Window.html#Night_Window_GetMode_
  commentId: Overload:Night.Window.GetMode
  isSpec: "True"
  fullName: Night.Window.GetMode
  nameWithType: Window.GetMode
- uid: Night.Window.IsOpen
  name: IsOpen()
  href: api/Night.Window.html#Night_Window_IsOpen
  commentId: M:Night.Window.IsOpen
  fullName: Night.Window.IsOpen()
  nameWithType: Window.IsOpen()
- uid: Night.Window.IsOpen*
  name: IsOpen
  href: api/Night.Window.html#Night_Window_IsOpen_
  commentId: Overload:Night.Window.IsOpen
  isSpec: "True"
  fullName: Night.Window.IsOpen
  nameWithType: Window.IsOpen
- uid: Night.Window.SetFullscreen(System.Boolean,Night.FullscreenType)
  name: SetFullscreen(bool, FullscreenType)
  href: api/Night.Window.html#Night_Window_SetFullscreen_System_Boolean_Night_FullscreenType_
  commentId: M:Night.Window.SetFullscreen(System.Boolean,Night.FullscreenType)
  name.vb: SetFullscreen(Boolean, FullscreenType)
  fullName: Night.Window.SetFullscreen(bool, Night.FullscreenType)
  fullName.vb: Night.Window.SetFullscreen(Boolean, Night.FullscreenType)
  nameWithType: Window.SetFullscreen(bool, FullscreenType)
  nameWithType.vb: Window.SetFullscreen(Boolean, FullscreenType)
- uid: Night.Window.SetFullscreen*
  name: SetFullscreen
  href: api/Night.Window.html#Night_Window_SetFullscreen_
  commentId: Overload:Night.Window.SetFullscreen
  isSpec: "True"
  fullName: Night.Window.SetFullscreen
  nameWithType: Window.SetFullscreen
- uid: Night.Window.SetMode(System.Int32,System.Int32,SDL3.SDL.WindowFlags)
  name: SetMode(int, int, WindowFlags)
  href: api/Night.Window.html#Night_Window_SetMode_System_Int32_System_Int32_SDL3_SDL_WindowFlags_
  commentId: M:Night.Window.SetMode(System.Int32,System.Int32,SDL3.SDL.WindowFlags)
  name.vb: SetMode(Integer, Integer, WindowFlags)
  fullName: Night.Window.SetMode(int, int, SDL3.SDL.WindowFlags)
  fullName.vb: Night.Window.SetMode(Integer, Integer, SDL3.SDL.WindowFlags)
  nameWithType: Window.SetMode(int, int, SDL.WindowFlags)
  nameWithType.vb: Window.SetMode(Integer, Integer, SDL.WindowFlags)
- uid: Night.Window.SetMode*
  name: SetMode
  href: api/Night.Window.html#Night_Window_SetMode_
  commentId: Overload:Night.Window.SetMode
  isSpec: "True"
  fullName: Night.Window.SetMode
  nameWithType: Window.SetMode
- uid: Night.Window.SetTitle(System.String)
  name: SetTitle(string)
  href: api/Night.Window.html#Night_Window_SetTitle_System_String_
  commentId: M:Night.Window.SetTitle(System.String)
  name.vb: SetTitle(String)
  fullName: Night.Window.SetTitle(string)
  fullName.vb: Night.Window.SetTitle(String)
  nameWithType: Window.SetTitle(string)
  nameWithType.vb: Window.SetTitle(String)
- uid: Night.Window.SetTitle*
  name: SetTitle
  href: api/Night.Window.html#Night_Window_SetTitle_
  commentId: Overload:Night.Window.SetTitle
  isSpec: "True"
  fullName: Night.Window.SetTitle
  nameWithType: Window.SetTitle
- uid: Night.Window.ToPixels(System.Single)
  name: ToPixels(float)
  href: api/Night.Window.html#Night_Window_ToPixels_System_Single_
  commentId: M:Night.Window.ToPixels(System.Single)
  name.vb: ToPixels(Single)
  fullName: Night.Window.ToPixels(float)
  fullName.vb: Night.Window.ToPixels(Single)
  nameWithType: Window.ToPixels(float)
  nameWithType.vb: Window.ToPixels(Single)
- uid: Night.Window.ToPixels*
  name: ToPixels
  href: api/Night.Window.html#Night_Window_ToPixels_
  commentId: Overload:Night.Window.ToPixels
  isSpec: "True"
  fullName: Night.Window.ToPixels
  nameWithType: Window.ToPixels
- uid: Night.WindowConfig
  name: WindowConfig
  href: api/Night.WindowConfig.html
  commentId: T:Night.WindowConfig
  fullName: Night.WindowConfig
  nameWithType: WindowConfig
- uid: Night.WindowConfig.Borderless
  name: Borderless
  href: api/Night.WindowConfig.html#Night_WindowConfig_Borderless
  commentId: P:Night.WindowConfig.Borderless
  fullName: Night.WindowConfig.Borderless
  nameWithType: WindowConfig.Borderless
- uid: Night.WindowConfig.Borderless*
  name: Borderless
  href: api/Night.WindowConfig.html#Night_WindowConfig_Borderless_
  commentId: Overload:Night.WindowConfig.Borderless
  isSpec: "True"
  fullName: Night.WindowConfig.Borderless
  nameWithType: WindowConfig.Borderless
- uid: Night.WindowConfig.Depth
  name: Depth
  href: api/Night.WindowConfig.html#Night_WindowConfig_Depth
  commentId: P:Night.WindowConfig.Depth
  fullName: Night.WindowConfig.Depth
  nameWithType: WindowConfig.Depth
- uid: Night.WindowConfig.Depth*
  name: Depth
  href: api/Night.WindowConfig.html#Night_WindowConfig_Depth_
  commentId: Overload:Night.WindowConfig.Depth
  isSpec: "True"
  fullName: Night.WindowConfig.Depth
  nameWithType: WindowConfig.Depth
- uid: Night.WindowConfig.Display
  name: Display
  href: api/Night.WindowConfig.html#Night_WindowConfig_Display
  commentId: P:Night.WindowConfig.Display
  fullName: Night.WindowConfig.Display
  nameWithType: WindowConfig.Display
- uid: Night.WindowConfig.Display*
  name: Display
  href: api/Night.WindowConfig.html#Night_WindowConfig_Display_
  commentId: Overload:Night.WindowConfig.Display
  isSpec: "True"
  fullName: Night.WindowConfig.Display
  nameWithType: WindowConfig.Display
- uid: Night.WindowConfig.Fullscreen
  name: Fullscreen
  href: api/Night.WindowConfig.html#Night_WindowConfig_Fullscreen
  commentId: P:Night.WindowConfig.Fullscreen
  fullName: Night.WindowConfig.Fullscreen
  nameWithType: WindowConfig.Fullscreen
- uid: Night.WindowConfig.Fullscreen*
  name: Fullscreen
  href: api/Night.WindowConfig.html#Night_WindowConfig_Fullscreen_
  commentId: Overload:Night.WindowConfig.Fullscreen
  isSpec: "True"
  fullName: Night.WindowConfig.Fullscreen
  nameWithType: WindowConfig.Fullscreen
- uid: Night.WindowConfig.FullscreenType
  name: FullscreenType
  href: api/Night.WindowConfig.html#Night_WindowConfig_FullscreenType
  commentId: P:Night.WindowConfig.FullscreenType
  fullName: Night.WindowConfig.FullscreenType
  nameWithType: WindowConfig.FullscreenType
- uid: Night.WindowConfig.FullscreenType*
  name: FullscreenType
  href: api/Night.WindowConfig.html#Night_WindowConfig_FullscreenType_
  commentId: Overload:Night.WindowConfig.FullscreenType
  isSpec: "True"
  fullName: Night.WindowConfig.FullscreenType
  nameWithType: WindowConfig.FullscreenType
- uid: Night.WindowConfig.Height
  name: Height
  href: api/Night.WindowConfig.html#Night_WindowConfig_Height
  commentId: P:Night.WindowConfig.Height
  fullName: Night.WindowConfig.Height
  nameWithType: WindowConfig.Height
- uid: Night.WindowConfig.Height*
  name: Height
  href: api/Night.WindowConfig.html#Night_WindowConfig_Height_
  commentId: Overload:Night.WindowConfig.Height
  isSpec: "True"
  fullName: Night.WindowConfig.Height
  nameWithType: WindowConfig.Height
- uid: Night.WindowConfig.HighDPI
  name: HighDPI
  href: api/Night.WindowConfig.html#Night_WindowConfig_HighDPI
  commentId: P:Night.WindowConfig.HighDPI
  fullName: Night.WindowConfig.HighDPI
  nameWithType: WindowConfig.HighDPI
- uid: Night.WindowConfig.HighDPI*
  name: HighDPI
  href: api/Night.WindowConfig.html#Night_WindowConfig_HighDPI_
  commentId: Overload:Night.WindowConfig.HighDPI
  isSpec: "True"
  fullName: Night.WindowConfig.HighDPI
  nameWithType: WindowConfig.HighDPI
- uid: Night.WindowConfig.Icon
  name: Icon
  href: api/Night.WindowConfig.html#Night_WindowConfig_Icon
  commentId: P:Night.WindowConfig.Icon
  fullName: Night.WindowConfig.Icon
  nameWithType: WindowConfig.Icon
- uid: Night.WindowConfig.Icon*
  name: Icon
  href: api/Night.WindowConfig.html#Night_WindowConfig_Icon_
  commentId: Overload:Night.WindowConfig.Icon
  isSpec: "True"
  fullName: Night.WindowConfig.Icon
  nameWithType: WindowConfig.Icon
- uid: Night.WindowConfig.MSAA
  name: MSAA
  href: api/Night.WindowConfig.html#Night_WindowConfig_MSAA
  commentId: P:Night.WindowConfig.MSAA
  fullName: Night.WindowConfig.MSAA
  nameWithType: WindowConfig.MSAA
- uid: Night.WindowConfig.MSAA*
  name: MSAA
  href: api/Night.WindowConfig.html#Night_WindowConfig_MSAA_
  commentId: Overload:Night.WindowConfig.MSAA
  isSpec: "True"
  fullName: Night.WindowConfig.MSAA
  nameWithType: WindowConfig.MSAA
- uid: Night.WindowConfig.MinHeight
  name: MinHeight
  href: api/Night.WindowConfig.html#Night_WindowConfig_MinHeight
  commentId: P:Night.WindowConfig.MinHeight
  fullName: Night.WindowConfig.MinHeight
  nameWithType: WindowConfig.MinHeight
- uid: Night.WindowConfig.MinHeight*
  name: MinHeight
  href: api/Night.WindowConfig.html#Night_WindowConfig_MinHeight_
  commentId: Overload:Night.WindowConfig.MinHeight
  isSpec: "True"
  fullName: Night.WindowConfig.MinHeight
  nameWithType: WindowConfig.MinHeight
- uid: Night.WindowConfig.MinWidth
  name: MinWidth
  href: api/Night.WindowConfig.html#Night_WindowConfig_MinWidth
  commentId: P:Night.WindowConfig.MinWidth
  fullName: Night.WindowConfig.MinWidth
  nameWithType: WindowConfig.MinWidth
- uid: Night.WindowConfig.MinWidth*
  name: MinWidth
  href: api/Night.WindowConfig.html#Night_WindowConfig_MinWidth_
  commentId: Overload:Night.WindowConfig.MinWidth
  isSpec: "True"
  fullName: Night.WindowConfig.MinWidth
  nameWithType: WindowConfig.MinWidth
- uid: Night.WindowConfig.Resizable
  name: Resizable
  href: api/Night.WindowConfig.html#Night_WindowConfig_Resizable
  commentId: P:Night.WindowConfig.Resizable
  fullName: Night.WindowConfig.Resizable
  nameWithType: WindowConfig.Resizable
- uid: Night.WindowConfig.Resizable*
  name: Resizable
  href: api/Night.WindowConfig.html#Night_WindowConfig_Resizable_
  commentId: Overload:Night.WindowConfig.Resizable
  isSpec: "True"
  fullName: Night.WindowConfig.Resizable
  nameWithType: WindowConfig.Resizable
- uid: Night.WindowConfig.Stencil
  name: Stencil
  href: api/Night.WindowConfig.html#Night_WindowConfig_Stencil
  commentId: P:Night.WindowConfig.Stencil
  fullName: Night.WindowConfig.Stencil
  nameWithType: WindowConfig.Stencil
- uid: Night.WindowConfig.Stencil*
  name: Stencil
  href: api/Night.WindowConfig.html#Night_WindowConfig_Stencil_
  commentId: Overload:Night.WindowConfig.Stencil
  isSpec: "True"
  fullName: Night.WindowConfig.Stencil
  nameWithType: WindowConfig.Stencil
- uid: Night.WindowConfig.Title
  name: Title
  href: api/Night.WindowConfig.html#Night_WindowConfig_Title
  commentId: P:Night.WindowConfig.Title
  fullName: Night.WindowConfig.Title
  nameWithType: WindowConfig.Title
- uid: Night.WindowConfig.Title*
  name: Title
  href: api/Night.WindowConfig.html#Night_WindowConfig_Title_
  commentId: Overload:Night.WindowConfig.Title
  isSpec: "True"
  fullName: Night.WindowConfig.Title
  nameWithType: WindowConfig.Title
- uid: Night.WindowConfig.UseDPIScale
  name: UseDPIScale
  href: api/Night.WindowConfig.html#Night_WindowConfig_UseDPIScale
  commentId: P:Night.WindowConfig.UseDPIScale
  fullName: Night.WindowConfig.UseDPIScale
  nameWithType: WindowConfig.UseDPIScale
- uid: Night.WindowConfig.UseDPIScale*
  name: UseDPIScale
  href: api/Night.WindowConfig.html#Night_WindowConfig_UseDPIScale_
  commentId: Overload:Night.WindowConfig.UseDPIScale
  isSpec: "True"
  fullName: Night.WindowConfig.UseDPIScale
  nameWithType: WindowConfig.UseDPIScale
- uid: Night.WindowConfig.VSync
  name: VSync
  href: api/Night.WindowConfig.html#Night_WindowConfig_VSync
  commentId: P:Night.WindowConfig.VSync
  fullName: Night.WindowConfig.VSync
  nameWithType: WindowConfig.VSync
- uid: Night.WindowConfig.VSync*
  name: VSync
  href: api/Night.WindowConfig.html#Night_WindowConfig_VSync_
  commentId: Overload:Night.WindowConfig.VSync
  isSpec: "True"
  fullName: Night.WindowConfig.VSync
  nameWithType: WindowConfig.VSync
- uid: Night.WindowConfig.Width
  name: Width
  href: api/Night.WindowConfig.html#Night_WindowConfig_Width
  commentId: P:Night.WindowConfig.Width
  fullName: Night.WindowConfig.Width
  nameWithType: WindowConfig.Width
- uid: Night.WindowConfig.Width*
  name: Width
  href: api/Night.WindowConfig.html#Night_WindowConfig_Width_
  commentId: Overload:Night.WindowConfig.Width
  isSpec: "True"
  fullName: Night.WindowConfig.Width
  nameWithType: WindowConfig.Width
- uid: Night.WindowConfig.X
  name: X
  href: api/Night.WindowConfig.html#Night_WindowConfig_X
  commentId: P:Night.WindowConfig.X
  fullName: Night.WindowConfig.X
  nameWithType: WindowConfig.X
- uid: Night.WindowConfig.X*
  name: X
  href: api/Night.WindowConfig.html#Night_WindowConfig_X_
  commentId: Overload:Night.WindowConfig.X
  isSpec: "True"
  fullName: Night.WindowConfig.X
  nameWithType: WindowConfig.X
- uid: Night.WindowConfig.Y
  name: Y
  href: api/Night.WindowConfig.html#Night_WindowConfig_Y
  commentId: P:Night.WindowConfig.Y
  fullName: Night.WindowConfig.Y
  nameWithType: WindowConfig.Y
- uid: Night.WindowConfig.Y*
  name: Y
  href: api/Night.WindowConfig.html#Night_WindowConfig_Y_
  commentId: Overload:Night.WindowConfig.Y
  isSpec: "True"
  fullName: Night.WindowConfig.Y
  nameWithType: WindowConfig.Y
- uid: Night.WindowMode
  name: WindowMode
  href: api/Night.WindowMode.html
  commentId: T:Night.WindowMode
  fullName: Night.WindowMode
  nameWithType: WindowMode
- uid: Night.WindowMode.Borderless
  name: Borderless
  href: api/Night.WindowMode.html#Night_WindowMode_Borderless
  commentId: F:Night.WindowMode.Borderless
  fullName: Night.WindowMode.Borderless
  nameWithType: WindowMode.Borderless
- uid: Night.WindowMode.Centered
  name: Centered
  href: api/Night.WindowMode.html#Night_WindowMode_Centered
  commentId: F:Night.WindowMode.Centered
  fullName: Night.WindowMode.Centered
  nameWithType: WindowMode.Centered
- uid: Night.WindowMode.Display
  name: Display
  href: api/Night.WindowMode.html#Night_WindowMode_Display
  commentId: F:Night.WindowMode.Display
  fullName: Night.WindowMode.Display
  nameWithType: WindowMode.Display
- uid: Night.WindowMode.Fullscreen
  name: Fullscreen
  href: api/Night.WindowMode.html#Night_WindowMode_Fullscreen
  commentId: F:Night.WindowMode.Fullscreen
  fullName: Night.WindowMode.Fullscreen
  nameWithType: WindowMode.Fullscreen
- uid: Night.WindowMode.FullscreenType
  name: FullscreenType
  href: api/Night.WindowMode.html#Night_WindowMode_FullscreenType
  commentId: F:Night.WindowMode.FullscreenType
  fullName: Night.WindowMode.FullscreenType
  nameWithType: WindowMode.FullscreenType
- uid: Night.WindowMode.Height
  name: Height
  href: api/Night.WindowMode.html#Night_WindowMode_Height
  commentId: F:Night.WindowMode.Height
  fullName: Night.WindowMode.Height
  nameWithType: WindowMode.Height
- uid: Night.WindowMode.HighDpi
  name: HighDpi
  href: api/Night.WindowMode.html#Night_WindowMode_HighDpi
  commentId: F:Night.WindowMode.HighDpi
  fullName: Night.WindowMode.HighDpi
  nameWithType: WindowMode.HighDpi
- uid: Night.WindowMode.MinHeight
  name: MinHeight
  href: api/Night.WindowMode.html#Night_WindowMode_MinHeight
  commentId: F:Night.WindowMode.MinHeight
  fullName: Night.WindowMode.MinHeight
  nameWithType: WindowMode.MinHeight
- uid: Night.WindowMode.MinWidth
  name: MinWidth
  href: api/Night.WindowMode.html#Night_WindowMode_MinWidth
  commentId: F:Night.WindowMode.MinWidth
  fullName: Night.WindowMode.MinWidth
  nameWithType: WindowMode.MinWidth
- uid: Night.WindowMode.Msaa
  name: Msaa
  href: api/Night.WindowMode.html#Night_WindowMode_Msaa
  commentId: F:Night.WindowMode.Msaa
  fullName: Night.WindowMode.Msaa
  nameWithType: WindowMode.Msaa
- uid: Night.WindowMode.RefreshRate
  name: RefreshRate
  href: api/Night.WindowMode.html#Night_WindowMode_RefreshRate
  commentId: F:Night.WindowMode.RefreshRate
  fullName: Night.WindowMode.RefreshRate
  nameWithType: WindowMode.RefreshRate
- uid: Night.WindowMode.Resizable
  name: Resizable
  href: api/Night.WindowMode.html#Night_WindowMode_Resizable
  commentId: F:Night.WindowMode.Resizable
  fullName: Night.WindowMode.Resizable
  nameWithType: WindowMode.Resizable
- uid: Night.WindowMode.Vsync
  name: Vsync
  href: api/Night.WindowMode.html#Night_WindowMode_Vsync
  commentId: F:Night.WindowMode.Vsync
  fullName: Night.WindowMode.Vsync
  nameWithType: WindowMode.Vsync
- uid: Night.WindowMode.Width
  name: Width
  href: api/Night.WindowMode.html#Night_WindowMode_Width
  commentId: F:Night.WindowMode.Width
  fullName: Night.WindowMode.Width
  nameWithType: WindowMode.Width
- uid: Night.WindowMode.X
  name: X
  href: api/Night.WindowMode.html#Night_WindowMode_X
  commentId: F:Night.WindowMode.X
  fullName: Night.WindowMode.X
  nameWithType: WindowMode.X
- uid: Night.WindowMode.Y
  name: Y
  href: api/Night.WindowMode.html#Night_WindowMode_Y
  commentId: F:Night.WindowMode.Y
  fullName: Night.WindowMode.Y
  nameWithType: WindowMode.Y



================================================
File: site/_site/api/Night.AudioConfig.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Class AudioConfig | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Class AudioConfig | nightengine ">
      
      <meta name="description" content="Configuration settings for the audio module.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_AudioConfig.md&amp;value=---%0Auid%3A%20Night.AudioConfig%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.AudioConfig">



  <h1 id="Night_AudioConfig" data-uid="Night.AudioConfig" class="text-break">
Class AudioConfig  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/AudioConfig.cs/#L30"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Configuration settings for the audio module.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class AudioConfig</code></pre>
  </div>




  <dl class="typelist inheritance">
    <dt>Inheritance</dt>
    <dd>
      <div><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object">object</a></div>
      <div><span class="xref">AudioConfig</span></div>
    </dd>
  </dl>



  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)">object.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode">object.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone">object.MemberwiseClone()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.tostring">object.ToString()</a>
    </div>
  </dd></dl>






  <h2 class="section" id="properties">Properties
</h2>


  <a id="Night_AudioConfig_Mic_" data-uid="Night.AudioConfig.Mic*"></a>

  <h3 id="Night_AudioConfig_Mic" data-uid="Night.AudioConfig.Mic">
  Mic
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/AudioConfig.cs/#L35"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the microphone should be enabled.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;mic&quot;)]
public bool Mic { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_AudioConfig_MixWithSystem_" data-uid="Night.AudioConfig.MixWithSystem*"></a>

  <h3 id="Night_AudioConfig_MixWithSystem" data-uid="Night.AudioConfig.MixWithSystem">
  MixWithSystem
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/AudioConfig.cs/#L41"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the game's audio should mix with system audio.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;mixwithsystem&quot;)]
public bool MixWithSystem { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>









</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/AudioConfig.cs/#L30" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.Color.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Struct Color | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Struct Color | nightengine ">
      
      <meta name="description" content="Represents a color with Red, Green, Blue, and Alpha components. Each component is a byte value ranging from 0 (no intensity) to 255 (full intensity). The Alpha component controls the transparency of the color, where 0 is fully transparent and 255 is fully opaque.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_Color.md&amp;value=---%0Auid%3A%20Night.Color%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.Color">



  <h1 id="Night_Color" data-uid="Night.Color" class="text-break">
Struct Color  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Color.cs/#L32"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Represents a color with Red, Green, Blue, and Alpha components.
Each component is a byte value ranging from 0 (no intensity) to 255 (full intensity).
The Alpha component controls the transparency of the color, where 0 is fully transparent and 255 is fully opaque.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public struct Color</code></pre>
  </div>







  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.valuetype.equals">ValueType.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode">ValueType.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.valuetype.tostring">ValueType.ToString()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
  </dd></dl>






  <h2 class="section" id="constructors">Constructors
</h2>


  <a id="Night_Color__ctor_" data-uid="Night.Color.#ctor*"></a>

  <h3 id="Night_Color__ctor_System_Byte_System_Byte_System_Byte_System_Byte_" data-uid="Night.Color.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
  Color(byte, byte, byte, byte)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Color.cs/#L90"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Initializes a new instance of the <a class="xref" href="Night.Color.html">Color</a> struct.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Color(byte r, byte g, byte b, byte a = 255)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>r</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.byte">byte</a></dt>
    <dd><p>The red component (0-255).</p>
</dd>
    <dt><code>g</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.byte">byte</a></dt>
    <dd><p>The green component (0-255).</p>
</dd>
    <dt><code>b</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.byte">byte</a></dt>
    <dd><p>The blue component (0-255).</p>
</dd>
    <dt><code>a</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.byte">byte</a></dt>
    <dd><p>The alpha component (0-255). Defaults to 255 (fully opaque).</p>
</dd>
  </dl>












  <h2 class="section" id="fields">Fields
</h2>



  <h3 id="Night_Color_A" data-uid="Night.Color.A">
  A
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Color.cs/#L81"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>The alpha (transparency) component of the color.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public byte A</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.byte">byte</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_Color_B" data-uid="Night.Color.B">
  B
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Color.cs/#L76"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>The blue component of the color.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public byte B</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.byte">byte</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_Color_Black" data-uid="Night.Color.Black">
  Black
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Color.cs/#L37"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Represents the color black.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static readonly Color Black</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="Night.Color.html">Color</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_Color_Blue" data-uid="Night.Color.Blue">
  Blue
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Color.cs/#L49"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Represents the color blue.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static readonly Color Blue</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="Night.Color.html">Color</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_Color_Cyan" data-uid="Night.Color.Cyan">
  Cyan
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Color.cs/#L58"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Represents the color cyan.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static readonly Color Cyan</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="Night.Color.html">Color</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_Color_G" data-uid="Night.Color.G">
  G
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Color.cs/#L71"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>The green component of the color.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public byte G</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.byte">byte</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_Color_Green" data-uid="Night.Color.Green">
  Green
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Color.cs/#L46"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Represents the color green.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static readonly Color Green</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="Night.Color.html">Color</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_Color_Magenta" data-uid="Night.Color.Magenta">
  Magenta
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Color.cs/#L55"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Represents the color magenta.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static readonly Color Magenta</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="Night.Color.html">Color</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_Color_R" data-uid="Night.Color.R">
  R
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Color.cs/#L66"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>The red component of the color.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public byte R</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.byte">byte</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_Color_Red" data-uid="Night.Color.Red">
  Red
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Color.cs/#L43"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Represents the color red.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static readonly Color Red</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="Night.Color.html">Color</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_Color_Transparent" data-uid="Night.Color.Transparent">
  Transparent
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Color.cs/#L61"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Represents a fully transparent color.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static readonly Color Transparent</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="Night.Color.html">Color</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_Color_White" data-uid="Night.Color.White">
  White
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Color.cs/#L40"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Represents the color white.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static readonly Color White</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="Night.Color.html">Color</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_Color_Yellow" data-uid="Night.Color.Yellow">
  Yellow
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Color.cs/#L52"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Represents the color yellow.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static readonly Color Yellow</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="Night.Color.html">Color</a></dt>
    <dd></dd>
  </dl>










</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Color.cs/#L32" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.ConfigurationManager.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Class ConfigurationManager | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Class ConfigurationManager | nightengine ">
      
      <meta name="description" content="Manages the loading and accessing of game configuration settings.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_ConfigurationManager.md&amp;value=---%0Auid%3A%20Night.ConfigurationManager%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.ConfigurationManager">



  <h1 id="Night_ConfigurationManager" data-uid="Night.ConfigurationManager" class="text-break">
Class ConfigurationManager  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/ConfigurationManager.cs/#L34"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Manages the loading and accessing of game configuration settings.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static class ConfigurationManager</code></pre>
  </div>




  <dl class="typelist inheritance">
    <dt>Inheritance</dt>
    <dd>
      <div><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object">object</a></div>
      <div><span class="xref">ConfigurationManager</span></div>
    </dd>
  </dl>



  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)">object.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode">object.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone">object.MemberwiseClone()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.tostring">object.ToString()</a>
    </div>
  </dd></dl>






  <h2 class="section" id="properties">Properties
</h2>


  <a id="Night_ConfigurationManager_CurrentConfig_" data-uid="Night.ConfigurationManager.CurrentConfig*"></a>

  <h3 id="Night_ConfigurationManager_CurrentConfig" data-uid="Night.ConfigurationManager.CurrentConfig">
  CurrentConfig
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/ConfigurationManager.cs/#L43"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets the currently loaded game configuration. If no configuration has been loaded, returns the default configuration.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static GameConfig CurrentConfig { get; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="Night.GameConfig.html">GameConfig</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_ConfigurationManager_IsLoaded_" data-uid="Night.ConfigurationManager.IsLoaded*"></a>

  <h3 id="Night_ConfigurationManager_IsLoaded" data-uid="Night.ConfigurationManager.IsLoaded">
  IsLoaded
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/ConfigurationManager.cs/#L48"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets a value indicating whether the configuration has been loaded.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool IsLoaded { get; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <h2 class="section" id="methods">Methods
</h2>


  <a id="Night_ConfigurationManager_LoadConfig_" data-uid="Night.ConfigurationManager.LoadConfig*"></a>

  <h3 id="Night_ConfigurationManager_LoadConfig_System_String_" data-uid="Night.ConfigurationManager.LoadConfig(System.String)">
  LoadConfig(string?)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/ConfigurationManager.cs/#L56"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Loads the game configuration from a 'config.json' file.
If the file is not found, or if an error occurs during loading or parsing, default settings are used.
The configuration is loaded only once; subsequent calls will not reload the configuration.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void LoadConfig(string? gameDirectory = null)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>gameDirectory</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.string">string</a></dt>
    <dd><p>The directory to search for 'config.json'. If null, the application's base directory is used.</p>
</dd>
  </dl>













</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/ConfigurationManager.cs/#L34" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.DrawMode.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Enum DrawMode | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Enum DrawMode | nightengine ">
      
      <meta name="description" content="Specifies whether a shape should be drawn filled or as an outline.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_DrawMode.md&amp;value=---%0Auid%3A%20Night.DrawMode%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.DrawMode">




  <h1 id="Night_DrawMode" data-uid="Night.DrawMode" class="text-break">
Enum DrawMode  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/DrawMode.cs/#L30"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Specifies whether a shape should be drawn filled or as an outline.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public enum DrawMode</code></pre>
  </div>









  <h2 id="fields">Fields
</h2>
  <dl class="parameters">
    <dt id="Night_DrawMode_Fill"><code>Fill = 0</code></dt>
  
  <dd><p>Draw the shape filled.</p>
</dd>
    <dt id="Night_DrawMode_Line"><code>Line = 1</code></dt>
  
  <dd><p>Draw the shape as an outline.</p>
</dd>
  </dl>



</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/DrawMode.cs/#L30" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.Error.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Class Error | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Class Error | nightengine ">
      
      <meta name="description" content="Manages the user-defined error handler.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_Error.md&amp;value=---%0Auid%3A%20Night.Error%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.Error">



  <h1 id="Night_Error" data-uid="Night.Error" class="text-break">
Class Error  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Error.cs/#L39"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Manages the user-defined error handler.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static class Error</code></pre>
  </div>




  <dl class="typelist inheritance">
    <dt>Inheritance</dt>
    <dd>
      <div><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object">object</a></div>
      <div><span class="xref">Error</span></div>
    </dd>
  </dl>



  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)">object.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode">object.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone">object.MemberwiseClone()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.tostring">object.ToString()</a>
    </div>
  </dd></dl>






  <h2 class="section" id="methods">Methods
</h2>


  <a id="Night_Error_SetHandler_" data-uid="Night.Error.SetHandler*"></a>

  <h3 id="Night_Error_SetHandler_Night_ErrorHandlerDelegate_" data-uid="Night.Error.SetHandler(Night.ErrorHandlerDelegate)">
  SetHandler(ErrorHandlerDelegate)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Error.cs/#L51"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Sets a custom function to be called when an unhandled error occurs in game code.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void SetHandler(ErrorHandlerDelegate handler)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>handler</code> <a class="xref" href="Night.ErrorHandlerDelegate.html">ErrorHandlerDelegate</a></dt>
    <dd><p>The delegate to handle errors.</p>
</dd>
  </dl>













</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Error.cs/#L39" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.ErrorHandlerDelegate.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Delegate ErrorHandlerDelegate | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Delegate ErrorHandlerDelegate | nightengine ">
      
      <meta name="description" content="Defines the delegate for handling unhandled exceptions from game code. The error handler function will be called when an unhandled exception occurs within the game&#39;s Load, Update, Draw, or input callback methods.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_ErrorHandlerDelegate.md&amp;value=---%0Auid%3A%20Night.ErrorHandlerDelegate%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.ErrorHandlerDelegate">



  <h1 id="Night_ErrorHandlerDelegate" data-uid="Night.ErrorHandlerDelegate" class="text-break">
Delegate ErrorHandlerDelegate  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Error.cs/#L34"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Defines the delegate for handling unhandled exceptions from game code.
The error handler function will be called when an unhandled exception occurs
within the game's Load, Update, Draw, or input callback methods.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public delegate void ErrorHandlerDelegate(Exception e)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>e</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.exception">Exception</a></dt>
    <dd><p>The exception that occurred.</p>
</dd>
  </dl>













</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Error.cs/#L34" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.FileMode.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Enum FileMode | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Enum FileMode | nightengine ">
      
      <meta name="description" content="Represents the different modes you can open a File in.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_FileMode.md&amp;value=---%0Auid%3A%20Night.FileMode%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.FileMode">




  <h1 id="Night_FileMode" data-uid="Night.FileMode" class="text-break">
Enum FileMode  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Filesystem/FileMode.cs/#L30"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Represents the different modes you can open a File in.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public enum FileMode</code></pre>
  </div>









  <h2 id="fields">Fields
</h2>
  <dl class="parameters">
    <dt id="Night_FileMode_A"><code>A = 2</code></dt>
  
  <dd><p>Open a file for append.</p>
</dd>
    <dt id="Night_FileMode_Append"><code>Append = 2</code></dt>
  
  <dd><p>Open a file for append.</p>
</dd>
    <dt id="Night_FileMode_C"><code>C = 3</code></dt>
  
  <dd><p>Do not open a file (represents a closed file.)</p>
</dd>
    <dt id="Night_FileMode_Close"><code>Close = 3</code></dt>
  
  <dd><p>Do not open a file (represents a closed file.)</p>
</dd>
    <dt id="Night_FileMode_R"><code>R = 0</code></dt>
  
  <dd><p>Open a file for read.</p>
</dd>
    <dt id="Night_FileMode_Read"><code>Read = 0</code></dt>
  
  <dd><p>Open a file for read.</p>
</dd>
    <dt id="Night_FileMode_W"><code>W = 1</code></dt>
  
  <dd><p>Open a file for write.</p>
</dd>
    <dt id="Night_FileMode_Write"><code>Write = 1</code></dt>
  
  <dd><p>Open a file for write.</p>
</dd>
  </dl>



</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Filesystem/FileMode.cs/#L30" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.FileSystemInfo.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Class FileSystemInfo | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Class FileSystemInfo | nightengine ">
      
      <meta name="description" content="Contains information about a file or directory.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_FileSystemInfo.md&amp;value=---%0Auid%3A%20Night.FileSystemInfo%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.FileSystemInfo">



  <h1 id="Night_FileSystemInfo" data-uid="Night.FileSystemInfo" class="text-break">
Class FileSystemInfo  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Filesystem/FileSystemInfo.cs/#L30"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Contains information about a file or directory.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class FileSystemInfo</code></pre>
  </div>




  <dl class="typelist inheritance">
    <dt>Inheritance</dt>
    <dd>
      <div><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object">object</a></div>
      <div><span class="xref">FileSystemInfo</span></div>
    </dd>
  </dl>



  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)">object.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode">object.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone">object.MemberwiseClone()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.tostring">object.ToString()</a>
    </div>
  </dd></dl>






  <h2 class="section" id="constructors">Constructors
</h2>


  <a id="Night_FileSystemInfo__ctor_" data-uid="Night.FileSystemInfo.#ctor*"></a>

  <h3 id="Night_FileSystemInfo__ctor" data-uid="Night.FileSystemInfo.#ctor">
  FileSystemInfo()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Filesystem/FileSystemInfo.cs/#L35"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Initializes a new instance of the <a class="xref" href="Night.FileSystemInfo.html">FileSystemInfo</a> class.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public FileSystemInfo()</code></pre>
  </div>













  <a id="Night_FileSystemInfo__ctor_" data-uid="Night.FileSystemInfo.#ctor*"></a>

  <h3 id="Night_FileSystemInfo__ctor_Night_FileType_System_Nullable_System_Int64__System_Nullable_System_Int64__" data-uid="Night.FileSystemInfo.#ctor(Night.FileType,System.Nullable{System.Int64},System.Nullable{System.Int64})">
  FileSystemInfo(FileType, long?, long?)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Filesystem/FileSystemInfo.cs/#L45"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Initializes a new instance of the <a class="xref" href="Night.FileSystemInfo.html">FileSystemInfo</a> class with specified values.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public FileSystemInfo(FileType type, long? size, long? modTime)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>type</code> <a class="xref" href="Night.FileType.html">FileType</a></dt>
    <dd><p>The type of the file system object.</p>
</dd>
    <dt><code>size</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int64">long</a>?</dt>
    <dd><p>The size of the file in bytes.</p>
</dd>
    <dt><code>modTime</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int64">long</a>?</dt>
    <dd><p>The last modification time in Unix epoch seconds.</p>
</dd>
  </dl>












  <h2 class="section" id="properties">Properties
</h2>


  <a id="Night_FileSystemInfo_ModTime_" data-uid="Night.FileSystemInfo.ModTime*"></a>

  <h3 id="Night_FileSystemInfo_ModTime" data-uid="Night.FileSystemInfo.ModTime">
  ModTime
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Filesystem/FileSystemInfo.cs/#L66"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the file's last modification time in seconds since the Unix epoch, or null if it can't be determined.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public long? ModTime { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int64">long</a>?</dt>
    <dd></dd>
  </dl>








  <a id="Night_FileSystemInfo_Size_" data-uid="Night.FileSystemInfo.Size*"></a>

  <h3 id="Night_FileSystemInfo_Size" data-uid="Night.FileSystemInfo.Size">
  Size
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Filesystem/FileSystemInfo.cs/#L61"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the size in bytes of the file, or null if it can't be determined or not applicable (e.g. for a directory).</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public long? Size { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int64">long</a>?</dt>
    <dd></dd>
  </dl>








  <a id="Night_FileSystemInfo_Type_" data-uid="Night.FileSystemInfo.Type*"></a>

  <h3 id="Night_FileSystemInfo_Type" data-uid="Night.FileSystemInfo.Type">
  Type
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Filesystem/FileSystemInfo.cs/#L56"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the type of the object at the path (file, directory, symlink, etc.).
Default is None.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public FileType Type { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="Night.FileType.html">FileType</a></dt>
    <dd></dd>
  </dl>









</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Filesystem/FileSystemInfo.cs/#L30" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.FileType.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Enum FileType | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Enum FileType | nightengine ">
      
      <meta name="description" content="Represents the type of a file system object.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_FileType.md&amp;value=---%0Auid%3A%20Night.FileType%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.FileType">




  <h1 id="Night_FileType" data-uid="Night.FileType" class="text-break">
Enum FileType  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Filesystem/FileType.cs/#L30"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Represents the type of a file system object.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public enum FileType</code></pre>
  </div>









  <h2 id="fields">Fields
</h2>
  <dl class="parameters">
    <dt id="Night_FileType_Directory"><code>Directory = 1</code></dt>
  
  <dd><p>A directory.</p>
</dd>
    <dt id="Night_FileType_File"><code>File = 0</code></dt>
  
  <dd><p>A regular file.</p>
</dd>
    <dt id="Night_FileType_None"><code>None = 4</code></dt>
  
  <dd><p>The path does not exist or its type cannot be determined.</p>
</dd>
    <dt id="Night_FileType_Other"><code>Other = 3</code></dt>
  
  <dd><p>Other type (e.g., device, pipe).</p>
</dd>
    <dt id="Night_FileType_Symlink"><code>Symlink = 2</code></dt>
  
  <dd><p>A symbolic link.</p>
</dd>
  </dl>



</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Filesystem/FileType.cs/#L30" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.Filesystem.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Class Filesystem | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Class Filesystem | nightengine ">
      
      <meta name="description" content="Provides basic file system operations. Inspired by Love2D&#39;s love.filesystem module.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_Filesystem.md&amp;value=---%0Auid%3A%20Night.Filesystem%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.Filesystem">



  <h1 id="Night_Filesystem" data-uid="Night.Filesystem" class="text-break">
Class Filesystem  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Filesystem/Filesystem.cs/#L32"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Provides basic file system operations.
Inspired by Love2D's love.filesystem module.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static class Filesystem</code></pre>
  </div>




  <dl class="typelist inheritance">
    <dt>Inheritance</dt>
    <dd>
      <div><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object">object</a></div>
      <div><span class="xref">Filesystem</span></div>
    </dd>
  </dl>



  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)">object.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode">object.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone">object.MemberwiseClone()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.tostring">object.ToString()</a>
    </div>
  </dd></dl>






  <h2 class="section" id="methods">Methods
</h2>


  <a id="Night_Filesystem_GetInfo_" data-uid="Night.Filesystem.GetInfo*"></a>

  <h3 id="Night_Filesystem_GetInfo_System_String_Night_FileSystemInfo_" data-uid="Night.Filesystem.GetInfo(System.String,Night.FileSystemInfo)">
  GetInfo(string, FileSystemInfo)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Filesystem/Filesystem.cs/#L105"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets information about the specified file or directory and populates an existing FileSystemInfo object.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static FileSystemInfo? GetInfo(string path, FileSystemInfo info)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>path</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.string">string</a></dt>
    <dd><p>The file or directory path to check.</p>
</dd>
    <dt><code>info</code> <a class="xref" href="Night.FileSystemInfo.html">FileSystemInfo</a></dt>
    <dd><p>A FileSystemInfo object which will be filled in.</p>
</dd>
  </dl>

  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="Night.FileSystemInfo.html">FileSystemInfo</a></dt>
    <dd><p>The FileSystemInfo object given as an argument, filled with information, or null if nothing exists at the path.</p>
</dd>
  </dl>











  <a id="Night_Filesystem_GetInfo_" data-uid="Night.Filesystem.GetInfo*"></a>

  <h3 id="Night_Filesystem_GetInfo_System_String_Night_FileType_Night_FileSystemInfo_" data-uid="Night.Filesystem.GetInfo(System.String,Night.FileType,Night.FileSystemInfo)">
  GetInfo(string, FileType, FileSystemInfo)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Filesystem/Filesystem.cs/#L131"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets information about the specified file or directory, filtered by type, and populates an existing FileSystemInfo object.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static FileSystemInfo? GetInfo(string path, FileType filterType, FileSystemInfo info)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>path</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.string">string</a></dt>
    <dd><p>The file or directory path to check.</p>
</dd>
    <dt><code>filterType</code> <a class="xref" href="Night.FileType.html">FileType</a></dt>
    <dd><p>Causes getInfo to only return the info table if the item at the given path matches the specified file type.</p>
</dd>
    <dt><code>info</code> <a class="xref" href="Night.FileSystemInfo.html">FileSystemInfo</a></dt>
    <dd><p>A FileSystemInfo object which will be filled in.</p>
</dd>
  </dl>

  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="Night.FileSystemInfo.html">FileSystemInfo</a></dt>
    <dd><p>The FileSystemInfo object given as an argument, filled with information, or null if nothing exists at the path or if it doesn't match the filterType.</p>
</dd>
  </dl>











  <a id="Night_Filesystem_GetInfo_" data-uid="Night.Filesystem.GetInfo*"></a>

  <h3 id="Night_Filesystem_GetInfo_System_String_System_Nullable_Night_FileType__" data-uid="Night.Filesystem.GetInfo(System.String,System.Nullable{Night.FileType})">
  GetInfo(string, FileType?)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Filesystem/Filesystem.cs/#L40"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets information about the specified file or directory.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static FileSystemInfo? GetInfo(string path, FileType? filterType = null)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>path</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.string">string</a></dt>
    <dd><p>The file or directory path to check.</p>
</dd>
    <dt><code>filterType</code> <a class="xref" href="Night.FileType.html">FileType</a>?</dt>
    <dd><p>If supplied, this parameter causes getInfo to only return the info table if the item at the given path matches the specified file type.</p>
</dd>
  </dl>

  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="Night.FileSystemInfo.html">FileSystemInfo</a></dt>
    <dd><p>A FileSystemInfo object containing information about the specified path, or null if nothing exists at the path or if it doesn't match the filterType.</p>
</dd>
  </dl>











  <a id="Night_Filesystem_ReadBytes_" data-uid="Night.Filesystem.ReadBytes*"></a>

  <h3 id="Night_Filesystem_ReadBytes_System_String_" data-uid="Night.Filesystem.ReadBytes(System.String)">
  ReadBytes(string)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Filesystem/Filesystem.cs/#L156"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Reads the entire content of a file into a byte array.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static byte[] ReadBytes(string path)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>path</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.string">string</a></dt>
    <dd><p>The path to the file to read.</p>
</dd>
  </dl>

  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.byte">byte</a>[]</dt>
    <dd><p>A byte array containing the contents of the file.</p>
</dd>
  </dl>








  <h4 class="section">Exceptions</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.io.filenotfoundexception">FileNotFoundException</a></dt>
    <dd><p>Thrown if the file is not found.</p>
</dd>
  </dl>



  <a id="Night_Filesystem_ReadText_" data-uid="Night.Filesystem.ReadText*"></a>

  <h3 id="Night_Filesystem_ReadText_System_String_" data-uid="Night.Filesystem.ReadText(System.String)">
  ReadText(string)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Filesystem/Filesystem.cs/#L167"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Reads the entire content of a file into a string.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static string ReadText(string path)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>path</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.string">string</a></dt>
    <dd><p>The path to the file to read.</p>
</dd>
  </dl>

  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.string">string</a></dt>
    <dd><p>A string containing the contents of the file.</p>
</dd>
  </dl>








  <h4 class="section">Exceptions</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.io.filenotfoundexception">FileNotFoundException</a></dt>
    <dd><p>Thrown if the file is not found.</p>
</dd>
  </dl>




</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Filesystem/Filesystem.cs/#L32" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.Framework.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Class Framework | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Class Framework | nightengine ">
      
      <meta name="description" content="Manages the main game loop and coordination of game states. Provides the main entry point to run a game.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_Framework.md&amp;value=---%0Auid%3A%20Night.Framework%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.Framework">



  <h1 id="Night_Framework" data-uid="Night.Framework" class="text-break">
Class Framework  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Framework.cs/#L39"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Manages the main game loop and coordination of game states.
Provides the main entry point to run a game.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static class Framework</code></pre>
  </div>




  <dl class="typelist inheritance">
    <dt>Inheritance</dt>
    <dd>
      <div><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object">object</a></div>
      <div><span class="xref">Framework</span></div>
    </dd>
  </dl>



  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)">object.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode">object.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone">object.MemberwiseClone()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.tostring">object.ToString()</a>
    </div>
  </dd></dl>






  <h2 class="section" id="properties">Properties
</h2>


  <a id="Night_Framework_IsInputInitialized_" data-uid="Night.Framework.IsInputInitialized*"></a>

  <h3 id="Night_Framework_IsInputInitialized" data-uid="Night.Framework.IsInputInitialized">
  IsInputInitialized
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Framework.cs/#L56"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets a value indicating whether a flag indicating whether the core SDL systems, particularly for input,
have been successfully initialized by this Framework's Run method.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool IsInputInitialized { get; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <h2 class="section" id="methods">Methods
</h2>


  <a id="Night_Framework_Run_" data-uid="Night.Framework.Run*"></a>

  <h3 id="Night_Framework_Run_Night_IGame_" data-uid="Night.Framework.Run(Night.IGame)">
  Run(IGame)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Framework.cs/#L65"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Runs the game instance.
The game loop will internally call Load, Update, and Draw methods
on the provided game logic.
This method will initialize and shut down required SDL subsystems.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void Run(IGame game)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>game</code> <a class="xref" href="Night.IGame.html">IGame</a></dt>
    <dd><p>The game interface to run. Must implement <a class="xref" href="Night.IGame.html">IGame</a>.</p>
</dd>
  </dl>













</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Framework.cs/#L39" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.FullscreenType.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Enum FullscreenType | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Enum FullscreenType | nightengine ">
      
      <meta name="description" content="Types of fullscreen modes.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_FullscreenType.md&amp;value=---%0Auid%3A%20Night.FullscreenType%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.FullscreenType">




  <h1 id="Night_FullscreenType" data-uid="Night.FullscreenType" class="text-break">
Enum FullscreenType  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/FullscreenType.cs/#L30"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Types of fullscreen modes.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public enum FullscreenType</code></pre>
  </div>









  <h2 id="fields">Fields
</h2>
  <dl class="parameters">
    <dt id="Night_FullscreenType_Desktop"><code>Desktop = 1</code></dt>
  
  <dd><p>Borderless fullscreen windowed mode. A borderless screen-sized window is created which sits on top of all desktop UI elements.
The window is automatically resized to match the dimensions of the desktop, and its size cannot be changed.</p>
</dd>
    <dt id="Night_FullscreenType_Exclusive"><code>Exclusive = 0</code></dt>
  
  <dd><p>Standard exclusive-fullscreen mode. Changes the display mode (actual resolution) of the monitor.</p>
</dd>
  </dl>



</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/FullscreenType.cs/#L30" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.GameConfig.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Class GameConfig | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Class GameConfig | nightengine ">
      
      <meta name="description" content="Represents the overall game configuration settings, typically loaded from a config.json file.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_GameConfig.md&amp;value=---%0Auid%3A%20Night.GameConfig%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.GameConfig">



  <h1 id="Night_GameConfig" data-uid="Night.GameConfig" class="text-break">
Class GameConfig  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/GameConfig.cs/#L30"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Represents the overall game configuration settings, typically loaded from a config.json file.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class GameConfig</code></pre>
  </div>




  <dl class="typelist inheritance">
    <dt>Inheritance</dt>
    <dd>
      <div><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object">object</a></div>
      <div><span class="xref">GameConfig</span></div>
    </dd>
  </dl>



  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)">object.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode">object.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone">object.MemberwiseClone()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.tostring">object.ToString()</a>
    </div>
  </dd></dl>






  <h2 class="section" id="properties">Properties
</h2>


  <a id="Night_GameConfig_AccelerometerJoystick_" data-uid="Night.GameConfig.AccelerometerJoystick*"></a>

  <h3 id="Night_GameConfig_AccelerometerJoystick" data-uid="Night.GameConfig.AccelerometerJoystick">
  AccelerometerJoystick
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/GameConfig.cs/#L59"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the accelerometer should be used as a joystick.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;accelerometerjoystick&quot;)]
public bool AccelerometerJoystick { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_GameConfig_AppendIdentity_" data-uid="Night.GameConfig.AppendIdentity*"></a>

  <h3 id="Night_GameConfig_AppendIdentity" data-uid="Night.GameConfig.AppendIdentity">
  AppendIdentity
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/GameConfig.cs/#L41"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the game identity should be appended to the save directory path.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;appendidentity&quot;)]
public bool AppendIdentity { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_GameConfig_Audio_" data-uid="Night.GameConfig.Audio*"></a>

  <h3 id="Night_GameConfig_Audio" data-uid="Night.GameConfig.Audio">
  Audio
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/GameConfig.cs/#L77"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the audio module configuration.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;audio&quot;)]
public AudioConfig Audio { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="Night.AudioConfig.html">AudioConfig</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_GameConfig_Console_" data-uid="Night.GameConfig.Console*"></a>

  <h3 id="Night_GameConfig_Console" data-uid="Night.GameConfig.Console">
  Console
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/GameConfig.cs/#L53"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether a console window should be attached (Windows only, currently placeholder).</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;console&quot;)]
public bool Console { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_GameConfig_ExternalStorage_" data-uid="Night.GameConfig.ExternalStorage*"></a>

  <h3 id="Night_GameConfig_ExternalStorage" data-uid="Night.GameConfig.ExternalStorage">
  ExternalStorage
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/GameConfig.cs/#L65"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether to request external storage access (Android only, currently placeholder).</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;externalstorage&quot;)]
public bool ExternalStorage { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_GameConfig_GammaCorrect_" data-uid="Night.GameConfig.GammaCorrect*"></a>

  <h3 id="Night_GameConfig_GammaCorrect" data-uid="Night.GameConfig.GammaCorrect">
  GammaCorrect
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/GameConfig.cs/#L71"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether gamma correction should be enabled.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;gammacorrect&quot;)]
public bool GammaCorrect { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_GameConfig_Identity_" data-uid="Night.GameConfig.Identity*"></a>

  <h3 id="Night_GameConfig_Identity" data-uid="Night.GameConfig.Identity">
  Identity
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/GameConfig.cs/#L35"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the identity of the game. This is used for the save directory.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;identity&quot;)]
public string? Identity { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.string">string</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_GameConfig_Modules_" data-uid="Night.GameConfig.Modules*"></a>

  <h3 id="Night_GameConfig_Modules" data-uid="Night.GameConfig.Modules">
  Modules
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/GameConfig.cs/#L89"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the configuration for enabling/disabling engine modules.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;modules&quot;)]
public ModulesConfig Modules { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="Night.ModulesConfig.html">ModulesConfig</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_GameConfig_Version_" data-uid="Night.GameConfig.Version*"></a>

  <h3 id="Night_GameConfig_Version" data-uid="Night.GameConfig.Version">
  Version
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/GameConfig.cs/#L47"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the LÖVE version this game targets. Currently informational.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;version&quot;)]
public string Version { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.string">string</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_GameConfig_Window_" data-uid="Night.GameConfig.Window*"></a>

  <h3 id="Night_GameConfig_Window" data-uid="Night.GameConfig.Window">
  Window
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/GameConfig.cs/#L83"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the window module configuration.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;window&quot;)]
public WindowConfig Window { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="Night.WindowConfig.html">WindowConfig</a></dt>
    <dd></dd>
  </dl>









</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/GameConfig.cs/#L30" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.Graphics.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Class Graphics | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Class Graphics | nightengine ">
      
      <meta name="description" content="Provides functionality for drawing graphics. Mimics Love2D&#39;s love.graphics module.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_Graphics.md&amp;value=---%0Auid%3A%20Night.Graphics%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.Graphics">



  <h1 id="Night_Graphics" data-uid="Night.Graphics" class="text-break">
Class Graphics  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Graphics.cs/#L37"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Provides functionality for drawing graphics.
Mimics Love2D's love.graphics module.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static class Graphics</code></pre>
  </div>




  <dl class="typelist inheritance">
    <dt>Inheritance</dt>
    <dd>
      <div><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object">object</a></div>
      <div><span class="xref">Graphics</span></div>
    </dd>
  </dl>



  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)">object.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode">object.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone">object.MemberwiseClone()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.tostring">object.ToString()</a>
    </div>
  </dd></dl>






  <h2 class="section" id="methods">Methods
</h2>


  <a id="Night_Graphics_Circle_" data-uid="Night.Graphics.Circle*"></a>

  <h3 id="Night_Graphics_Circle_Night_DrawMode_System_Single_System_Single_System_Single_System_Int32_" data-uid="Night.Graphics.Circle(Night.DrawMode,System.Single,System.Single,System.Single,System.Int32)">
  Circle(DrawMode, float, float, float, int)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Graphics.cs/#L416"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Draws a circle.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void Circle(DrawMode mode, float x, float y, float radius, int segments = 12)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>mode</code> <a class="xref" href="Night.DrawMode.html">DrawMode</a></dt>
    <dd><p>The drawing mode (Fill or Line).</p>
</dd>
    <dt><code>x</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The x-coordinate of the circle's center.</p>
</dd>
    <dt><code>y</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The y-coordinate of the circle's center.</p>
</dd>
    <dt><code>radius</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The radius of the circle.</p>
</dd>
    <dt><code>segments</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd><p>The number of segments used to draw the circle (more segments means a smoother circle).</p>
</dd>
  </dl>












  <a id="Night_Graphics_Clear_" data-uid="Night.Graphics.Clear*"></a>

  <h3 id="Night_Graphics_Clear_Night_Color_" data-uid="Night.Graphics.Clear(Night.Color)">
  Clear(Color)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Graphics.cs/#L572"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Clears the screen to a specific color.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void Clear(Color color)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>color</code> <a class="xref" href="Night.Color.html">Color</a></dt>
    <dd><p>The color to clear the screen with.</p>
</dd>
  </dl>












  <a id="Night_Graphics_Draw_" data-uid="Night.Graphics.Draw*"></a>

  <h3 id="Night_Graphics_Draw_Night_Sprite_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_" data-uid="Night.Graphics.Draw(Night.Sprite,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
  Draw(Sprite, float, float, float, float, float, float, float)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Graphics.cs/#L491"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Draws a sprite to the screen.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void Draw(Sprite sprite, float x, float y, float rotation = 0, float scaleX = 1, float scaleY = 1, float offsetX = 0, float offsetY = 0)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>sprite</code> <a class="xref" href="Night.Sprite.html">Sprite</a></dt>
    <dd><p>The sprite to draw.</p>
</dd>
    <dt><code>x</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The x-coordinate to draw the sprite at.</p>
</dd>
    <dt><code>y</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The y-coordinate to draw the sprite at.</p>
</dd>
    <dt><code>rotation</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The rotation of the sprite (in radians).</p>
</dd>
    <dt><code>scaleX</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The horizontal scale factor.</p>
</dd>
    <dt><code>scaleY</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The vertical scale factor.</p>
</dd>
    <dt><code>offsetX</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The x-offset for the sprite's origin.</p>
</dd>
    <dt><code>offsetY</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The y-offset for the sprite's origin.</p>
</dd>
  </dl>












  <a id="Night_Graphics_Line_" data-uid="Night.Graphics.Line*"></a>

  <h3 id="Night_Graphics_Line_Night_PointF___" data-uid="Night.Graphics.Line(Night.PointF[])">
  Line(PointF[])
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Graphics.cs/#L262"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Draws a sequence of connected line segments.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void Line(PointF[] points)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>points</code> <a class="xref" href="Night.PointF.html">PointF</a>[]</dt>
    <dd><p>An array of points to connect.</p>
</dd>
  </dl>












  <a id="Night_Graphics_Line_" data-uid="Night.Graphics.Line*"></a>

  <h3 id="Night_Graphics_Line_System_Single_System_Single_System_Single_System_Single_" data-uid="Night.Graphics.Line(System.Single,System.Single,System.Single,System.Single)">
  Line(float, float, float, float)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Graphics.cs/#L242"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Draws a line segment between two points.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void Line(float x1, float y1, float x2, float y2)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>x1</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The x-coordinate of the first point.</p>
</dd>
    <dt><code>y1</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The y-coordinate of the first point.</p>
</dd>
    <dt><code>x2</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The x-coordinate of the second point.</p>
</dd>
    <dt><code>y2</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The y-coordinate of the second point.</p>
</dd>
  </dl>












  <a id="Night_Graphics_NewImage_" data-uid="Night.Graphics.NewImage*"></a>

  <h3 id="Night_Graphics_NewImage_System_String_" data-uid="Night.Graphics.NewImage(System.String)">
  NewImage(string)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Graphics.cs/#L44"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Creates a new image (Sprite) from a file.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Sprite? NewImage(string filePath)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>filePath</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.string">string</a></dt>
    <dd><p>The path to the image file.</p>
</dd>
  </dl>

  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="Night.Sprite.html">Sprite</a></dt>
    <dd><p>A new Sprite object.</p>
</dd>
  </dl>











  <a id="Night_Graphics_Polygon_" data-uid="Night.Graphics.Polygon*"></a>

  <h3 id="Night_Graphics_Polygon_Night_DrawMode_Night_PointF___" data-uid="Night.Graphics.Polygon(Night.DrawMode,Night.PointF[])">
  Polygon(DrawMode, PointF[])
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Graphics.cs/#L295"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Draws a polygon.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void Polygon(DrawMode mode, PointF[] vertices)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>mode</code> <a class="xref" href="Night.DrawMode.html">DrawMode</a></dt>
    <dd><p>The drawing mode (Fill or Line).</p>
</dd>
    <dt><code>vertices</code> <a class="xref" href="Night.PointF.html">PointF</a>[]</dt>
    <dd><p>An array of points representing the polygon's vertices.</p>
</dd>
  </dl>












  <a id="Night_Graphics_Present_" data-uid="Night.Graphics.Present*"></a>

  <h3 id="Night_Graphics_Present" data-uid="Night.Graphics.Present">
  Present()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Graphics.cs/#L599"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Presents the drawn graphics to the screen (swaps buffers).</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void Present()</code></pre>
  </div>













  <a id="Night_Graphics_Rectangle_" data-uid="Night.Graphics.Rectangle*"></a>

  <h3 id="Night_Graphics_Rectangle_Night_DrawMode_System_Single_System_Single_System_Single_System_Single_" data-uid="Night.Graphics.Rectangle(Night.DrawMode,System.Single,System.Single,System.Single,System.Single)">
  Rectangle(DrawMode, float, float, float, float)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Graphics.cs/#L132"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Draws a rectangle.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void Rectangle(DrawMode mode, float x, float y, float width, float height)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>mode</code> <a class="xref" href="Night.DrawMode.html">DrawMode</a></dt>
    <dd><p>The drawing mode (Fill or Line).</p>
</dd>
    <dt><code>x</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The x-coordinate of the top-left corner.</p>
</dd>
    <dt><code>y</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The y-coordinate of the top-left corner.</p>
</dd>
    <dt><code>width</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The width of the rectangle.</p>
</dd>
    <dt><code>height</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The height of the rectangle.</p>
</dd>
  </dl>












  <a id="Night_Graphics_SetColor_" data-uid="Night.Graphics.SetColor*"></a>

  <h3 id="Night_Graphics_SetColor_Night_Color_" data-uid="Night.Graphics.SetColor(Night.Color)">
  SetColor(Color)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Graphics.cs/#L96"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Sets the active color for drawing operations.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void SetColor(Color color)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>color</code> <a class="xref" href="Night.Color.html">Color</a></dt>
    <dd><p>The color to set.</p>
</dd>
  </dl>












  <a id="Night_Graphics_SetColor_" data-uid="Night.Graphics.SetColor*"></a>

  <h3 id="Night_Graphics_SetColor_System_Byte_System_Byte_System_Byte_System_Byte_" data-uid="Night.Graphics.SetColor(System.Byte,System.Byte,System.Byte,System.Byte)">
  SetColor(byte, byte, byte, byte)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Graphics.cs/#L119"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Sets the active color for drawing operations using individual RGBA components.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void SetColor(byte r, byte g, byte b, byte a = 255)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>r</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.byte">byte</a></dt>
    <dd><p>The red component (0-255).</p>
</dd>
    <dt><code>g</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.byte">byte</a></dt>
    <dd><p>The green component (0-255).</p>
</dd>
    <dt><code>b</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.byte">byte</a></dt>
    <dd><p>The blue component (0-255).</p>
</dd>
    <dt><code>a</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.byte">byte</a></dt>
    <dd><p>The alpha component (0-255), defaults to 255 (opaque).</p>
</dd>
  </dl>













</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Graphics.cs/#L37" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.IGame.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Interface IGame | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Interface IGame | nightengine ">
      
      <meta name="description" content="Interface for a game that can be run by the Night Engine. Game developers will implement this interface in their main game class.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_IGame.md&amp;value=---%0Auid%3A%20Night.IGame%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.IGame">



  <h1 id="Night_IGame" data-uid="Night.IGame" class="text-break">
Interface IGame  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/IGame.cs/#L31"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Interface for a game that can be run by the Night Engine.
Game developers will implement this interface in their main game class.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public interface IGame</code></pre>
  </div>













  <h2 class="section" id="methods">Methods
</h2>


  <a id="Night_IGame_Draw_" data-uid="Night.IGame.Draw*"></a>

  <h3 id="Night_IGame_Draw" data-uid="Night.IGame.Draw">
  Draw()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/IGame.cs/#L47"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Callback function used to draw on the screen every frame.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">void Draw()</code></pre>
  </div>













  <a id="Night_IGame_KeyPressed_" data-uid="Night.IGame.KeyPressed*"></a>

  <h3 id="Night_IGame_KeyPressed_Night_KeySymbol_Night_KeyCode_System_Boolean_" data-uid="Night.IGame.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)">
  KeyPressed(KeySymbol, KeyCode, bool)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/IGame.cs/#L55"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Callback function triggered when a key is pressed.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">void KeyPressed(KeySymbol key, KeyCode scancode, bool isRepeat)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>key</code> <a class="xref" href="Night.KeySymbol.html">KeySymbol</a></dt>
    <dd><p>The logical key symbol that was pressed.</p>
</dd>
    <dt><code>scancode</code> <a class="xref" href="Night.KeyCode.html">KeyCode</a></dt>
    <dd><p>The physical key (scancode) that was pressed.</p>
</dd>
    <dt><code>isRepeat</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd><p>True if this is a key repeat event, false otherwise.</p>
</dd>
  </dl>












  <a id="Night_IGame_KeyReleased_" data-uid="Night.IGame.KeyReleased*"></a>

  <h3 id="Night_IGame_KeyReleased_Night_KeySymbol_Night_KeyCode_" data-uid="Night.IGame.KeyReleased(Night.KeySymbol,Night.KeyCode)">
  KeyReleased(KeySymbol, KeyCode)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/IGame.cs/#L62"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Callback function triggered when a key is released.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">void KeyReleased(KeySymbol key, KeyCode scancode)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>key</code> <a class="xref" href="Night.KeySymbol.html">KeySymbol</a></dt>
    <dd><p>The logical key symbol that was released.</p>
</dd>
    <dt><code>scancode</code> <a class="xref" href="Night.KeyCode.html">KeyCode</a></dt>
    <dd><p>The physical key (scancode) that was released.</p>
</dd>
  </dl>












  <a id="Night_IGame_Load_" data-uid="Night.IGame.Load*"></a>

  <h3 id="Night_IGame_Load" data-uid="Night.IGame.Load">
  Load()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/IGame.cs/#L36"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Called exactly once when the game starts for loading resources.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">void Load()</code></pre>
  </div>













  <a id="Night_IGame_MousePressed_" data-uid="Night.IGame.MousePressed*"></a>

  <h3 id="Night_IGame_MousePressed_System_Int32_System_Int32_Night_MouseButton_System_Boolean_System_Int32_" data-uid="Night.IGame.MousePressed(System.Int32,System.Int32,Night.MouseButton,System.Boolean,System.Int32)">
  MousePressed(int, int, MouseButton, bool, int)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/IGame.cs/#L74"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Callback function triggered when a mouse button is pressed.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">void MousePressed(int x, int y, MouseButton button, bool istouch, int presses)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>x</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd><p>The x-coordinate of the mouse cursor relative to the window.</p>
</dd>
    <dt><code>y</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd><p>The y-coordinate of the mouse cursor relative to the window.</p>
</dd>
    <dt><code>button</code> <a class="xref" href="Night.MouseButton.html">MouseButton</a></dt>
    <dd><p>The mouse button that was pressed.</p>
</dd>
    <dt><code>istouch</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd><p>True if the event was generated by a touch input device, false otherwise.</p>
</dd>
    <dt><code>presses</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd><p>The number of clicks (1 for single-click, 2 for double-click, etc.).</p>
</dd>
  </dl>












  <a id="Night_IGame_MouseReleased_" data-uid="Night.IGame.MouseReleased*"></a>

  <h3 id="Night_IGame_MouseReleased_System_Int32_System_Int32_Night_MouseButton_System_Boolean_System_Int32_" data-uid="Night.IGame.MouseReleased(System.Int32,System.Int32,Night.MouseButton,System.Boolean,System.Int32)">
  MouseReleased(int, int, MouseButton, bool, int)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/IGame.cs/#L86"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Callback function triggered when a mouse button is released.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">void MouseReleased(int x, int y, MouseButton button, bool istouch, int presses)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>x</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd><p>The x-coordinate of the mouse cursor relative to the window.</p>
</dd>
    <dt><code>y</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd><p>The y-coordinate of the mouse cursor relative to the window.</p>
</dd>
    <dt><code>button</code> <a class="xref" href="Night.MouseButton.html">MouseButton</a></dt>
    <dd><p>The mouse button that was released.</p>
</dd>
    <dt><code>istouch</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd><p>True if the event was generated by a touch input device, false otherwise.</p>
</dd>
    <dt><code>presses</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd><p>The number of clicks (typically 1 for release, but may vary).</p>
</dd>
  </dl>












  <a id="Night_IGame_Update_" data-uid="Night.IGame.Update*"></a>

  <h3 id="Night_IGame_Update_System_Double_" data-uid="Night.IGame.Update(System.Double)">
  Update(double)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/IGame.cs/#L42"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Callback function used to update the state of the game every frame.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">void Update(double deltaTime)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>deltaTime</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.double">double</a></dt>
    <dd><p>The time elapsed since the last frame, in seconds.</p>
</dd>
  </dl>













</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/IGame.cs/#L31" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.KeyCode.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Enum KeyCode | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Enum KeyCode | nightengine ">
      
      <meta name="description" content="Represents keyboard scancodes. Values correspond to SDL_Scancode.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_KeyCode.md&amp;value=---%0Auid%3A%20Night.KeyCode%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.KeyCode">




  <h1 id="Night_KeyCode" data-uid="Night.KeyCode" class="text-break">
Enum KeyCode  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Keyboard/KeyCode.cs/#L32"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Represents keyboard scancodes. Values correspond to SDL_Scancode.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public enum KeyCode</code></pre>
  </div>









  <h2 id="fields">Fields
</h2>
  <dl class="parameters">
    <dt id="Night_KeyCode_A"><code>A = 4</code></dt>
  
  <dd><p>The 'A' key.</p>
</dd>
    <dt id="Night_KeyCode_Again"><code>Again = 121</code></dt>
  
  <dd><p>The Again key.</p>
</dd>
    <dt id="Night_KeyCode_Alpha0"><code>Alpha0 = 39</code></dt>
  
  <dd><p>The '0' key.</p>
</dd>
    <dt id="Night_KeyCode_Alpha1"><code>Alpha1 = 30</code></dt>
  
  <dd><p>The '1' key.</p>
</dd>
    <dt id="Night_KeyCode_Alpha2"><code>Alpha2 = 31</code></dt>
  
  <dd><p>The '2' key.</p>
</dd>
    <dt id="Night_KeyCode_Alpha3"><code>Alpha3 = 32</code></dt>
  
  <dd><p>The '3' key.</p>
</dd>
    <dt id="Night_KeyCode_Alpha4"><code>Alpha4 = 33</code></dt>
  
  <dd><p>The '4' key.</p>
</dd>
    <dt id="Night_KeyCode_Alpha5"><code>Alpha5 = 34</code></dt>
  
  <dd><p>The '5' key.</p>
</dd>
    <dt id="Night_KeyCode_Alpha6"><code>Alpha6 = 35</code></dt>
  
  <dd><p>The '6' key.</p>
</dd>
    <dt id="Night_KeyCode_Alpha7"><code>Alpha7 = 36</code></dt>
  
  <dd><p>The '7' key.</p>
</dd>
    <dt id="Night_KeyCode_Alpha8"><code>Alpha8 = 37</code></dt>
  
  <dd><p>The '8' key.</p>
</dd>
    <dt id="Night_KeyCode_Alpha9"><code>Alpha9 = 38</code></dt>
  
  <dd><p>The '9' key.</p>
</dd>
    <dt id="Night_KeyCode_Apostrophe"><code>Apostrophe = 52</code></dt>
  
  <dd><p>The Apostrophe ''' key.</p>
</dd>
    <dt id="Night_KeyCode_AppBack"><code>AppBack = 282</code></dt>
  
  <dd><p>The Application Back key.</p>
</dd>
    <dt id="Night_KeyCode_AppBookmarks"><code>AppBookmarks = 286</code></dt>
  
  <dd><p>The Application Bookmarks key.</p>
</dd>
    <dt id="Night_KeyCode_AppForward"><code>AppForward = 283</code></dt>
  
  <dd><p>The Application Forward key.</p>
</dd>
    <dt id="Night_KeyCode_AppHome"><code>AppHome = 281</code></dt>
  
  <dd><p>The Application Home key.</p>
</dd>
    <dt id="Night_KeyCode_AppRefresh"><code>AppRefresh = 285</code></dt>
  
  <dd><p>The Application Refresh key.</p>
</dd>
    <dt id="Night_KeyCode_AppSearch"><code>AppSearch = 280</code></dt>
  
  <dd><p>The Application Search key.</p>
</dd>
    <dt id="Night_KeyCode_AppStop"><code>AppStop = 284</code></dt>
  
  <dd><p>The Application Stop key.</p>
</dd>
    <dt id="Night_KeyCode_Application"><code>Application = 101</code></dt>
  
  <dd><p>The Application key (context menu).</p>
</dd>
    <dt id="Night_KeyCode_B"><code>B = 5</code></dt>
  
  <dd><p>The 'B' key.</p>
</dd>
    <dt id="Night_KeyCode_Backslash"><code>Backslash = 49</code></dt>
  
  <dd><p>The Backslash '' key.</p>
</dd>
    <dt id="Night_KeyCode_Backspace"><code>Backspace = 42</code></dt>
  
  <dd><p>The Backspace key.</p>
</dd>
    <dt id="Night_KeyCode_C"><code>C = 6</code></dt>
  
  <dd><p>The 'C' key.</p>
</dd>
    <dt id="Night_KeyCode_Capslock"><code>Capslock = 57</code></dt>
  
  <dd><p>The Caps Lock key.</p>
</dd>
    <dt id="Night_KeyCode_Comma"><code>Comma = 54</code></dt>
  
  <dd><p>The Comma ',' key.</p>
</dd>
    <dt id="Night_KeyCode_Copy"><code>Copy = 124</code></dt>
  
  <dd><p>The Copy key.</p>
</dd>
    <dt id="Night_KeyCode_Cut"><code>Cut = 123</code></dt>
  
  <dd><p>The Cut key.</p>
</dd>
    <dt id="Night_KeyCode_D"><code>D = 7</code></dt>
  
  <dd><p>The 'D' key.</p>
</dd>
    <dt id="Night_KeyCode_Delete"><code>Delete = 76</code></dt>
  
  <dd><p>The Delete key.</p>
</dd>
    <dt id="Night_KeyCode_Down"><code>Down = 81</code></dt>
  
  <dd><p>The Down Arrow key.</p>
</dd>
    <dt id="Night_KeyCode_E"><code>E = 8</code></dt>
  
  <dd><p>The 'E' key.</p>
</dd>
    <dt id="Night_KeyCode_End"><code>End = 77</code></dt>
  
  <dd><p>The End key.</p>
</dd>
    <dt id="Night_KeyCode_Equals"><code>Equals = 46</code></dt>
  
  <dd><p>The Equals '=' key.</p>
</dd>
    <dt id="Night_KeyCode_Escape"><code>Escape = 41</code></dt>
  
  <dd><p>The Escape key.</p>
</dd>
    <dt id="Night_KeyCode_Execute"><code>Execute = 116</code></dt>
  
  <dd><p>The Execute key.</p>
</dd>
    <dt id="Night_KeyCode_F"><code>F = 9</code></dt>
  
  <dd><p>The 'F' key.</p>
</dd>
    <dt id="Night_KeyCode_F1"><code>F1 = 58</code></dt>
  
  <dd><p>The F1 key.</p>
</dd>
    <dt id="Night_KeyCode_F10"><code>F10 = 67</code></dt>
  
  <dd><p>The F10 key.</p>
</dd>
    <dt id="Night_KeyCode_F11"><code>F11 = 68</code></dt>
  
  <dd><p>The F11 key.</p>
</dd>
    <dt id="Night_KeyCode_F12"><code>F12 = 69</code></dt>
  
  <dd><p>The F12 key.</p>
</dd>
    <dt id="Night_KeyCode_F13"><code>F13 = 104</code></dt>
  
  <dd><p>The F13 key.</p>
</dd>
    <dt id="Night_KeyCode_F14"><code>F14 = 105</code></dt>
  
  <dd><p>The F14 key.</p>
</dd>
    <dt id="Night_KeyCode_F15"><code>F15 = 106</code></dt>
  
  <dd><p>The F15 key.</p>
</dd>
    <dt id="Night_KeyCode_F16"><code>F16 = 107</code></dt>
  
  <dd><p>The F16 key.</p>
</dd>
    <dt id="Night_KeyCode_F17"><code>F17 = 108</code></dt>
  
  <dd><p>The F17 key.</p>
</dd>
    <dt id="Night_KeyCode_F18"><code>F18 = 109</code></dt>
  
  <dd><p>The F18 key.</p>
</dd>
    <dt id="Night_KeyCode_F19"><code>F19 = 110</code></dt>
  
  <dd><p>The F19 key.</p>
</dd>
    <dt id="Night_KeyCode_F2"><code>F2 = 59</code></dt>
  
  <dd><p>The F2 key.</p>
</dd>
    <dt id="Night_KeyCode_F20"><code>F20 = 111</code></dt>
  
  <dd><p>The F20 key.</p>
</dd>
    <dt id="Night_KeyCode_F21"><code>F21 = 112</code></dt>
  
  <dd><p>The F21 key.</p>
</dd>
    <dt id="Night_KeyCode_F22"><code>F22 = 113</code></dt>
  
  <dd><p>The F22 key.</p>
</dd>
    <dt id="Night_KeyCode_F23"><code>F23 = 114</code></dt>
  
  <dd><p>The F23 key.</p>
</dd>
    <dt id="Night_KeyCode_F24"><code>F24 = 115</code></dt>
  
  <dd><p>The F24 key.</p>
</dd>
    <dt id="Night_KeyCode_F3"><code>F3 = 60</code></dt>
  
  <dd><p>The F3 key.</p>
</dd>
    <dt id="Night_KeyCode_F4"><code>F4 = 61</code></dt>
  
  <dd><p>The F4 key.</p>
</dd>
    <dt id="Night_KeyCode_F5"><code>F5 = 62</code></dt>
  
  <dd><p>The F5 key.</p>
</dd>
    <dt id="Night_KeyCode_F6"><code>F6 = 63</code></dt>
  
  <dd><p>The F6 key.</p>
</dd>
    <dt id="Night_KeyCode_F7"><code>F7 = 64</code></dt>
  
  <dd><p>The F7 key.</p>
</dd>
    <dt id="Night_KeyCode_F8"><code>F8 = 65</code></dt>
  
  <dd><p>The F8 key.</p>
</dd>
    <dt id="Night_KeyCode_F9"><code>F9 = 66</code></dt>
  
  <dd><p>The F9 key.</p>
</dd>
    <dt id="Night_KeyCode_Find"><code>Find = 126</code></dt>
  
  <dd><p>The Find key.</p>
</dd>
    <dt id="Night_KeyCode_G"><code>G = 10</code></dt>
  
  <dd><p>The 'G' key.</p>
</dd>
    <dt id="Night_KeyCode_Grave"><code>Grave = 53</code></dt>
  
  <dd><p>The Grave Accent (Backtick) '`' key.</p>
</dd>
    <dt id="Night_KeyCode_H"><code>H = 11</code></dt>
  
  <dd><p>The 'H' key.</p>
</dd>
    <dt id="Night_KeyCode_Help"><code>Help = 117</code></dt>
  
  <dd><p>The Help key.</p>
</dd>
    <dt id="Night_KeyCode_Home"><code>Home = 74</code></dt>
  
  <dd><p>The Home key.</p>
</dd>
    <dt id="Night_KeyCode_I"><code>I = 12</code></dt>
  
  <dd><p>The 'I' key.</p>
</dd>
    <dt id="Night_KeyCode_Insert"><code>Insert = 73</code></dt>
  
  <dd><p>The Insert key.</p>
</dd>
    <dt id="Night_KeyCode_J"><code>J = 13</code></dt>
  
  <dd><p>The 'J' key.</p>
</dd>
    <dt id="Night_KeyCode_K"><code>K = 14</code></dt>
  
  <dd><p>The 'K' key.</p>
</dd>
    <dt id="Night_KeyCode_Kp0"><code>Kp0 = 98</code></dt>
  
  <dd><p>The Keypad '0' key.</p>
</dd>
    <dt id="Night_KeyCode_Kp1"><code>Kp1 = 89</code></dt>
  
  <dd><p>The Keypad '1' key.</p>
</dd>
    <dt id="Night_KeyCode_Kp2"><code>Kp2 = 90</code></dt>
  
  <dd><p>The Keypad '2' key.</p>
</dd>
    <dt id="Night_KeyCode_Kp3"><code>Kp3 = 91</code></dt>
  
  <dd><p>The Keypad '3' key.</p>
</dd>
    <dt id="Night_KeyCode_Kp4"><code>Kp4 = 92</code></dt>
  
  <dd><p>The Keypad '4' key.</p>
</dd>
    <dt id="Night_KeyCode_Kp5"><code>Kp5 = 93</code></dt>
  
  <dd><p>The Keypad '5' key.</p>
</dd>
    <dt id="Night_KeyCode_Kp6"><code>Kp6 = 94</code></dt>
  
  <dd><p>The Keypad '6' key.</p>
</dd>
    <dt id="Night_KeyCode_Kp7"><code>Kp7 = 95</code></dt>
  
  <dd><p>The Keypad '7' key.</p>
</dd>
    <dt id="Night_KeyCode_Kp8"><code>Kp8 = 96</code></dt>
  
  <dd><p>The Keypad '8' key.</p>
</dd>
    <dt id="Night_KeyCode_Kp9"><code>Kp9 = 97</code></dt>
  
  <dd><p>The Keypad '9' key.</p>
</dd>
    <dt id="Night_KeyCode_KpComma"><code>KpComma = 133</code></dt>
  
  <dd><p>The Keypad Comma ',' key.</p>
</dd>
    <dt id="Night_KeyCode_KpDivide"><code>KpDivide = 84</code></dt>
  
  <dd><p>The Keypad Divide '/' key.</p>
</dd>
    <dt id="Night_KeyCode_KpEnter"><code>KpEnter = 88</code></dt>
  
  <dd><p>The Keypad Enter key.</p>
</dd>
    <dt id="Night_KeyCode_KpEquals"><code>KpEquals = 103</code></dt>
  
  <dd><p>The Keypad Equals '=' key.</p>
</dd>
    <dt id="Night_KeyCode_KpMinus"><code>KpMinus = 86</code></dt>
  
  <dd><p>The Keypad Minus '-' key.</p>
</dd>
    <dt id="Night_KeyCode_KpMultiply"><code>KpMultiply = 85</code></dt>
  
  <dd><p>The Keypad Multiply '*' key.</p>
</dd>
    <dt id="Night_KeyCode_KpPeriod"><code>KpPeriod = 99</code></dt>
  
  <dd><p>The Keypad Period '.' key.</p>
</dd>
    <dt id="Night_KeyCode_KpPlus"><code>KpPlus = 87</code></dt>
  
  <dd><p>The Keypad Plus '+' key.</p>
</dd>
    <dt id="Night_KeyCode_L"><code>L = 15</code></dt>
  
  <dd><p>The 'L' key.</p>
</dd>
    <dt id="Night_KeyCode_LAlt"><code>LAlt = 226</code></dt>
  
  <dd><p>The Left Alt key.</p>
</dd>
    <dt id="Night_KeyCode_LCtrl"><code>LCtrl = 224</code></dt>
  
  <dd><p>The Left Control key.</p>
</dd>
    <dt id="Night_KeyCode_LGUI"><code>LGUI = 227</code></dt>
  
  <dd><p>The Left GUI key (Windows/Command/Meta key).</p>
</dd>
    <dt id="Night_KeyCode_LShift"><code>LShift = 225</code></dt>
  
  <dd><p>The Left Shift key.</p>
</dd>
    <dt id="Night_KeyCode_Left"><code>Left = 80</code></dt>
  
  <dd><p>The Left Arrow key.</p>
</dd>
    <dt id="Night_KeyCode_Leftbracket"><code>Leftbracket = 47</code></dt>
  
  <dd><p>The Left Bracket '[' key.</p>
</dd>
    <dt id="Night_KeyCode_M"><code>M = 16</code></dt>
  
  <dd><p>The 'M' key.</p>
</dd>
    <dt id="Night_KeyCode_MediaEject"><code>MediaEject = 270</code></dt>
  
  <dd><p>The Media Eject key.</p>
</dd>
    <dt id="Night_KeyCode_MediaFastForward"><code>MediaFastForward = 265</code></dt>
  
  <dd><p>The Media Fast Forward key.</p>
</dd>
    <dt id="Night_KeyCode_MediaNextTrack"><code>MediaNextTrack = 267</code></dt>
  
  <dd><p>The Media Next Track key.</p>
</dd>
    <dt id="Night_KeyCode_MediaPause"><code>MediaPause = 263</code></dt>
  
  <dd><p>The Media Pause key.</p>
</dd>
    <dt id="Night_KeyCode_MediaPlay"><code>MediaPlay = 262</code></dt>
  
  <dd><p>The Media Play key.</p>
</dd>
    <dt id="Night_KeyCode_MediaPlayPause"><code>MediaPlayPause = 271</code></dt>
  
  <dd><p>The Media Play/Pause key.</p>
</dd>
    <dt id="Night_KeyCode_MediaPreviousTrack"><code>MediaPreviousTrack = 268</code></dt>
  
  <dd><p>The Media Previous Track key.</p>
</dd>
    <dt id="Night_KeyCode_MediaRecord"><code>MediaRecord = 264</code></dt>
  
  <dd><p>The Media Record key.</p>
</dd>
    <dt id="Night_KeyCode_MediaRewind"><code>MediaRewind = 266</code></dt>
  
  <dd><p>The Media Rewind key.</p>
</dd>
    <dt id="Night_KeyCode_MediaSelect"><code>MediaSelect = 272</code></dt>
  
  <dd><p>The Media Select key.</p>
</dd>
    <dt id="Night_KeyCode_MediaStop"><code>MediaStop = 269</code></dt>
  
  <dd><p>The Media Stop key.</p>
</dd>
    <dt id="Night_KeyCode_Menu"><code>Menu = 118</code></dt>
  
  <dd><p>The Menu key.</p>
</dd>
    <dt id="Night_KeyCode_Minus"><code>Minus = 45</code></dt>
  
  <dd><p>The Minus '-' key.</p>
</dd>
    <dt id="Night_KeyCode_Mode"><code>Mode = 257</code></dt>
  
  <dd><p>The Mode Switch key.</p>
</dd>
    <dt id="Night_KeyCode_Mute"><code>Mute = 127</code></dt>
  
  <dd><p>The Mute key.</p>
</dd>
    <dt id="Night_KeyCode_N"><code>N = 17</code></dt>
  
  <dd><p>The 'N' key.</p>
</dd>
    <dt id="Night_KeyCode_NonUsbackslash"><code>NonUsbackslash = 100</code></dt>
  
  <dd><p>The Non-US Backslash key.</p>
</dd>
    <dt id="Night_KeyCode_NonUshash"><code>NonUshash = 50</code></dt>
  
  <dd><p>The Non-US Hash key (e.g., UK pound sign).</p>
</dd>
    <dt id="Night_KeyCode_NumlockClear"><code>NumlockClear = 83</code></dt>
  
  <dd><p>The Num Lock or Clear key.</p>
</dd>
    <dt id="Night_KeyCode_O"><code>O = 18</code></dt>
  
  <dd><p>The 'O' key.</p>
</dd>
    <dt id="Night_KeyCode_P"><code>P = 19</code></dt>
  
  <dd><p>The 'P' key.</p>
</dd>
    <dt id="Night_KeyCode_Pagedown"><code>Pagedown = 78</code></dt>
  
  <dd><p>The Page Down key.</p>
</dd>
    <dt id="Night_KeyCode_Pageup"><code>Pageup = 75</code></dt>
  
  <dd><p>The Page Up key.</p>
</dd>
    <dt id="Night_KeyCode_Paste"><code>Paste = 125</code></dt>
  
  <dd><p>The Paste key.</p>
</dd>
    <dt id="Night_KeyCode_Pause"><code>Pause = 72</code></dt>
  
  <dd><p>The Pause key.</p>
</dd>
    <dt id="Night_KeyCode_Period"><code>Period = 55</code></dt>
  
  <dd><p>The Period '.' key.</p>
</dd>
    <dt id="Night_KeyCode_Power"><code>Power = 102</code></dt>
  
  <dd><p>The Power key.</p>
</dd>
    <dt id="Night_KeyCode_Printscreen"><code>Printscreen = 70</code></dt>
  
  <dd><p>The Print Screen key.</p>
</dd>
    <dt id="Night_KeyCode_Q"><code>Q = 20</code></dt>
  
  <dd><p>The 'Q' key.</p>
</dd>
    <dt id="Night_KeyCode_R"><code>R = 21</code></dt>
  
  <dd><p>The 'R' key.</p>
</dd>
    <dt id="Night_KeyCode_RAlt"><code>RAlt = 230</code></dt>
  
  <dd><p>The Right Alt key.</p>
</dd>
    <dt id="Night_KeyCode_RCtrl"><code>RCtrl = 228</code></dt>
  
  <dd><p>The Right Control key.</p>
</dd>
    <dt id="Night_KeyCode_RGUI"><code>RGUI = 231</code></dt>
  
  <dd><p>The Right GUI key (Windows/Command/Meta key).</p>
</dd>
    <dt id="Night_KeyCode_RShift"><code>RShift = 229</code></dt>
  
  <dd><p>The Right Shift key.</p>
</dd>
    <dt id="Night_KeyCode_Return"><code>Return = 40</code></dt>
  
  <dd><p>The Return/Enter key.</p>
</dd>
    <dt id="Night_KeyCode_Right"><code>Right = 79</code></dt>
  
  <dd><p>The Right Arrow key.</p>
</dd>
    <dt id="Night_KeyCode_Rightbracket"><code>Rightbracket = 48</code></dt>
  
  <dd><p>The Right Bracket ']' key.</p>
</dd>
    <dt id="Night_KeyCode_S"><code>S = 22</code></dt>
  
  <dd><p>The 'S' key.</p>
</dd>
    <dt id="Night_KeyCode_Scrolllock"><code>Scrolllock = 71</code></dt>
  
  <dd><p>The Scroll Lock key.</p>
</dd>
    <dt id="Night_KeyCode_Select"><code>Select = 119</code></dt>
  
  <dd><p>The Select key.</p>
</dd>
    <dt id="Night_KeyCode_Semicolon"><code>Semicolon = 51</code></dt>
  
  <dd><p>The Semicolon ';' key.</p>
</dd>
    <dt id="Night_KeyCode_Slash"><code>Slash = 56</code></dt>
  
  <dd><p>The Slash '/' key.</p>
</dd>
    <dt id="Night_KeyCode_Space"><code>Space = 44</code></dt>
  
  <dd><p>The Space bar.</p>
</dd>
    <dt id="Night_KeyCode_Stop"><code>Stop = 120</code></dt>
  
  <dd><p>The Stop key.</p>
</dd>
    <dt id="Night_KeyCode_T"><code>T = 23</code></dt>
  
  <dd><p>The 'T' key.</p>
</dd>
    <dt id="Night_KeyCode_Tab"><code>Tab = 43</code></dt>
  
  <dd><p>The Tab key.</p>
</dd>
    <dt id="Night_KeyCode_U"><code>U = 24</code></dt>
  
  <dd><p>The 'U' key.</p>
</dd>
    <dt id="Night_KeyCode_Undo"><code>Undo = 122</code></dt>
  
  <dd><p>The Undo key.</p>
</dd>
    <dt id="Night_KeyCode_Unknown"><code>Unknown = 0</code></dt>
  
  <dd><p>An unknown scancode.</p>
</dd>
    <dt id="Night_KeyCode_Up"><code>Up = 82</code></dt>
  
  <dd><p>The Up Arrow key.</p>
</dd>
    <dt id="Night_KeyCode_V"><code>V = 25</code></dt>
  
  <dd><p>The 'V' key.</p>
</dd>
    <dt id="Night_KeyCode_VolumeDown"><code>VolumeDown = 129</code></dt>
  
  <dd><p>The Volume Down key.</p>
</dd>
    <dt id="Night_KeyCode_VolumeUp"><code>VolumeUp = 128</code></dt>
  
  <dd><p>The Volume Up key.</p>
</dd>
    <dt id="Night_KeyCode_W"><code>W = 26</code></dt>
  
  <dd><p>The 'W' key.</p>
</dd>
    <dt id="Night_KeyCode_X"><code>X = 27</code></dt>
  
  <dd><p>The 'X' key.</p>
</dd>
    <dt id="Night_KeyCode_Y"><code>Y = 28</code></dt>
  
  <dd><p>The 'Y' key.</p>
</dd>
    <dt id="Night_KeyCode_Z"><code>Z = 29</code></dt>
  
  <dd><p>The 'Z' key.</p>
</dd>
  </dl>


  <h2 id="Night_KeyCode_remarks">Remarks</h2>
  <div class="markdown level0 remarks"><p>See SDL_scancode.h for the full list of SDL_Scancode values.
This enum maps directly to SDL_Scancode values, representing the physical key on the keyboard.</p>
</div>

</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Keyboard/KeyCode.cs/#L32" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.KeySymbol.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Enum KeySymbol | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Enum KeySymbol | nightengine ">
      
      <meta name="description" content="Represents logical key symbols. Values correspond to SDL_Keycode.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_KeySymbol.md&amp;value=---%0Auid%3A%20Night.KeySymbol%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.KeySymbol">




  <h1 id="Night_KeySymbol" data-uid="Night.KeySymbol" class="text-break">
Enum KeySymbol  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Keyboard/KeySymbol.cs/#L34"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Represents logical key symbols. Values correspond to SDL_Keycode.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public enum KeySymbol : uint</code></pre>
  </div>









  <h2 id="fields">Fields
</h2>
  <dl class="parameters">
    <dt id="Night_KeySymbol_A"><code>A = 97</code></dt>
  
  <dd><p>The 'A' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Alpha0"><code>Alpha0 = 48</code></dt>
  
  <dd><p>The '0' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Alpha1"><code>Alpha1 = 49</code></dt>
  
  <dd><p>The '1' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Alpha2"><code>Alpha2 = 50</code></dt>
  
  <dd><p>The '2' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Alpha3"><code>Alpha3 = 51</code></dt>
  
  <dd><p>The '3' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Alpha4"><code>Alpha4 = 52</code></dt>
  
  <dd><p>The '4' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Alpha5"><code>Alpha5 = 53</code></dt>
  
  <dd><p>The '5' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Alpha6"><code>Alpha6 = 54</code></dt>
  
  <dd><p>The '6' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Alpha7"><code>Alpha7 = 55</code></dt>
  
  <dd><p>The '7' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Alpha8"><code>Alpha8 = 56</code></dt>
  
  <dd><p>The '8' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Alpha9"><code>Alpha9 = 57</code></dt>
  
  <dd><p>The '9' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Apostrophe"><code>Apostrophe = 39</code></dt>
  
  <dd><p>The Apostrophe ''' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_B"><code>B = 98</code></dt>
  
  <dd><p>The 'B' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Backslash"><code>Backslash = 92</code></dt>
  
  <dd><p>The Backslash '' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Backspace"><code>Backspace = 8</code></dt>
  
  <dd><p>The Backspace symbol.</p>
</dd>
    <dt id="Night_KeySymbol_C"><code>C = 99</code></dt>
  
  <dd><p>The 'C' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Comma"><code>Comma = 44</code></dt>
  
  <dd><p>The Comma ',' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_D"><code>D = 100</code></dt>
  
  <dd><p>The 'D' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Down"><code>Down = 1073741905</code></dt>
  
  <dd><p>The Down Arrow symbol.</p>
</dd>
    <dt id="Night_KeySymbol_E"><code>E = 101</code></dt>
  
  <dd><p>The 'E' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Equals"><code>Equals = 61</code></dt>
  
  <dd><p>The Equals '=' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Escape"><code>Escape = 27</code></dt>
  
  <dd><p>The Escape symbol.</p>
</dd>
    <dt id="Night_KeySymbol_F"><code>F = 102</code></dt>
  
  <dd><p>The 'F' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_F1"><code>F1 = 1073741882</code></dt>
  
  <dd><p>The F1 symbol.</p>
</dd>
    <dt id="Night_KeySymbol_F10"><code>F10 = 1073741891</code></dt>
  
  <dd><p>The F10 symbol.</p>
</dd>
    <dt id="Night_KeySymbol_F11"><code>F11 = 1073741892</code></dt>
  
  <dd><p>The F11 symbol.</p>
</dd>
    <dt id="Night_KeySymbol_F12"><code>F12 = 1073741893</code></dt>
  
  <dd><p>The F12 symbol.</p>
</dd>
    <dt id="Night_KeySymbol_F2"><code>F2 = 1073741883</code></dt>
  
  <dd><p>The F2 symbol.</p>
</dd>
    <dt id="Night_KeySymbol_F3"><code>F3 = 1073741884</code></dt>
  
  <dd><p>The F3 symbol.</p>
</dd>
    <dt id="Night_KeySymbol_F4"><code>F4 = 1073741885</code></dt>
  
  <dd><p>The F4 symbol.</p>
</dd>
    <dt id="Night_KeySymbol_F5"><code>F5 = 1073741886</code></dt>
  
  <dd><p>The F5 symbol.</p>
</dd>
    <dt id="Night_KeySymbol_F6"><code>F6 = 1073741887</code></dt>
  
  <dd><p>The F6 symbol.</p>
</dd>
    <dt id="Night_KeySymbol_F7"><code>F7 = 1073741888</code></dt>
  
  <dd><p>The F7 symbol.</p>
</dd>
    <dt id="Night_KeySymbol_F8"><code>F8 = 1073741889</code></dt>
  
  <dd><p>The F8 symbol.</p>
</dd>
    <dt id="Night_KeySymbol_F9"><code>F9 = 1073741890</code></dt>
  
  <dd><p>The F9 symbol.</p>
</dd>
    <dt id="Night_KeySymbol_G"><code>G = 103</code></dt>
  
  <dd><p>The 'G' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Grave"><code>Grave = 96</code></dt>
  
  <dd><p>The Grave Accent (Backtick) '`' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_H"><code>H = 104</code></dt>
  
  <dd><p>The 'H' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_I"><code>I = 105</code></dt>
  
  <dd><p>The 'I' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_J"><code>J = 106</code></dt>
  
  <dd><p>The 'J' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_K"><code>K = 107</code></dt>
  
  <dd><p>The 'K' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_L"><code>L = 108</code></dt>
  
  <dd><p>The 'L' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_LAlt"><code>LAlt = 1073742050</code></dt>
  
  <dd><p>The Left Alt symbol.</p>
</dd>
    <dt id="Night_KeySymbol_LCtrl"><code>LCtrl = 1073742048</code></dt>
  
  <dd><p>The Left Control symbol.</p>
</dd>
    <dt id="Night_KeySymbol_LGUI"><code>LGUI = 1073742051</code></dt>
  
  <dd><p>The Left GUI symbol (Windows/Command/Meta key).</p>
</dd>
    <dt id="Night_KeySymbol_LShift"><code>LShift = 1073742049</code></dt>
  
  <dd><p>The Left Shift symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Left"><code>Left = 1073741904</code></dt>
  
  <dd><p>The Left Arrow symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Leftbracket"><code>Leftbracket = 91</code></dt>
  
  <dd><p>The Left Bracket '[' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_M"><code>M = 109</code></dt>
  
  <dd><p>The 'M' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Minus"><code>Minus = 45</code></dt>
  
  <dd><p>The Minus '-' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_N"><code>N = 110</code></dt>
  
  <dd><p>The 'N' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_O"><code>O = 111</code></dt>
  
  <dd><p>The 'O' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_P"><code>P = 112</code></dt>
  
  <dd><p>The 'P' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Period"><code>Period = 46</code></dt>
  
  <dd><p>The Period '.' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Q"><code>Q = 113</code></dt>
  
  <dd><p>The 'Q' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_R"><code>R = 114</code></dt>
  
  <dd><p>The 'R' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_RAlt"><code>RAlt = 1073742054</code></dt>
  
  <dd><p>The Right Alt symbol.</p>
</dd>
    <dt id="Night_KeySymbol_RCtrl"><code>RCtrl = 1073742052</code></dt>
  
  <dd><p>The Right Control symbol.</p>
</dd>
    <dt id="Night_KeySymbol_RGUI"><code>RGUI = 1073742055</code></dt>
  
  <dd><p>The Right GUI symbol (Windows/Command/Meta key).</p>
</dd>
    <dt id="Night_KeySymbol_RShift"><code>RShift = 1073742053</code></dt>
  
  <dd><p>The Right Shift symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Return"><code>Return = 13</code></dt>
  
  <dd><p>The Return/Enter symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Right"><code>Right = 1073741903</code></dt>
  
  <dd><p>The Right Arrow symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Rightbracket"><code>Rightbracket = 93</code></dt>
  
  <dd><p>The Right Bracket ']' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_S"><code>S = 115</code></dt>
  
  <dd><p>The 'S' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Semicolon"><code>Semicolon = 59</code></dt>
  
  <dd><p>The Semicolon ';' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Slash"><code>Slash = 47</code></dt>
  
  <dd><p>The Slash '/' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Space"><code>Space = 32</code></dt>
  
  <dd><p>The Space symbol.</p>
</dd>
    <dt id="Night_KeySymbol_T"><code>T = 116</code></dt>
  
  <dd><p>The 'T' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Tab"><code>Tab = 9</code></dt>
  
  <dd><p>The Tab symbol.</p>
</dd>
    <dt id="Night_KeySymbol_U"><code>U = 117</code></dt>
  
  <dd><p>The 'U' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Unknown"><code>Unknown = 0</code></dt>
  
  <dd><p>An unknown key symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Up"><code>Up = 1073741906</code></dt>
  
  <dd><p>The Up Arrow symbol.</p>
</dd>
    <dt id="Night_KeySymbol_V"><code>V = 118</code></dt>
  
  <dd><p>The 'V' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_W"><code>W = 119</code></dt>
  
  <dd><p>The 'W' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_X"><code>X = 120</code></dt>
  
  <dd><p>The 'X' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Y"><code>Y = 121</code></dt>
  
  <dd><p>The 'Y' symbol.</p>
</dd>
    <dt id="Night_KeySymbol_Z"><code>Z = 122</code></dt>
  
  <dd><p>The 'Z' symbol.</p>
</dd>
  </dl>


  <h2 id="Night_KeySymbol_remarks">Remarks</h2>
  <div class="markdown level0 remarks"><p>This enum maps to SDL_Keycode values, representing the symbol produced by a key press
under the current keyboard layout.</p>
</div>

</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Keyboard/KeySymbol.cs/#L34" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.Keyboard.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Class Keyboard | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Class Keyboard | nightengine ">
      
      <meta name="description" content="Provides an interface to the user&#39;s keyboard.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_Keyboard.md&amp;value=---%0Auid%3A%20Night.Keyboard%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.Keyboard">



  <h1 id="Night_Keyboard" data-uid="Night.Keyboard" class="text-break">
Class Keyboard  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Keyboard/Keyboard.cs/#L35"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Provides an interface to the user's keyboard.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static class Keyboard</code></pre>
  </div>




  <dl class="typelist inheritance">
    <dt>Inheritance</dt>
    <dd>
      <div><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object">object</a></div>
      <div><span class="xref">Keyboard</span></div>
    </dd>
  </dl>



  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)">object.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode">object.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone">object.MemberwiseClone()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.tostring">object.ToString()</a>
    </div>
  </dd></dl>






  <h2 class="section" id="methods">Methods
</h2>


  <a id="Night_Keyboard_IsDown_" data-uid="Night.Keyboard.IsDown*"></a>

  <h3 id="Night_Keyboard_IsDown_Night_KeyCode_" data-uid="Night.Keyboard.IsDown(Night.KeyCode)">
  IsDown(KeyCode)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Keyboard/Keyboard.cs/#L42"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Checks whether a certain key is down.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool IsDown(KeyCode key)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>key</code> <a class="xref" href="Night.KeyCode.html">KeyCode</a></dt>
    <dd><p>The key to check.</p>
</dd>
  </dl>

  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd><p>True if the key is down, false otherwise.</p>
</dd>
  </dl>












</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Keyboard/Keyboard.cs/#L35" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.ModulesConfig.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Class ModulesConfig | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Class ModulesConfig | nightengine ">
      
      <meta name="description" content="Configuration for enabling or disabling specific engine modules. Note: Currently, these are placeholders and do not disable module functionality.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_ModulesConfig.md&amp;value=---%0Auid%3A%20Night.ModulesConfig%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.ModulesConfig">



  <h1 id="Night_ModulesConfig" data-uid="Night.ModulesConfig" class="text-break">
Class ModulesConfig  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/ModulesConfig.cs/#L31"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Configuration for enabling or disabling specific engine modules.
Note: Currently, these are placeholders and do not disable module functionality.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class ModulesConfig</code></pre>
  </div>




  <dl class="typelist inheritance">
    <dt>Inheritance</dt>
    <dd>
      <div><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object">object</a></div>
      <div><span class="xref">ModulesConfig</span></div>
    </dd>
  </dl>



  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)">object.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode">object.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone">object.MemberwiseClone()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.tostring">object.ToString()</a>
    </div>
  </dd></dl>






  <h2 class="section" id="properties">Properties
</h2>


  <a id="Night_ModulesConfig_Audio_" data-uid="Night.ModulesConfig.Audio*"></a>

  <h3 id="Night_ModulesConfig_Audio" data-uid="Night.ModulesConfig.Audio">
  Audio
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/ModulesConfig.cs/#L40"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the Audio module is enabled.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;audio&quot;)]
public bool Audio { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_ModulesConfig_Data_" data-uid="Night.ModulesConfig.Data*"></a>

  <h3 id="Night_ModulesConfig_Data" data-uid="Night.ModulesConfig.Data">
  Data
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/ModulesConfig.cs/#L46"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the Data module is enabled (Mandatory in LÖVE).</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;data&quot;)]
public bool Data { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_ModulesConfig_Event_" data-uid="Night.ModulesConfig.Event*"></a>

  <h3 id="Night_ModulesConfig_Event" data-uid="Night.ModulesConfig.Event">
  Event
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/ModulesConfig.cs/#L52"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the Event module is enabled.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;event&quot;)]
public bool Event { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_ModulesConfig_Font_" data-uid="Night.ModulesConfig.Font*"></a>

  <h3 id="Night_ModulesConfig_Font" data-uid="Night.ModulesConfig.Font">
  Font
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/ModulesConfig.cs/#L58"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the Font module is enabled.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;font&quot;)]
public bool Font { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_ModulesConfig_Graphics_" data-uid="Night.ModulesConfig.Graphics*"></a>

  <h3 id="Night_ModulesConfig_Graphics" data-uid="Night.ModulesConfig.Graphics">
  Graphics
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/ModulesConfig.cs/#L64"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the Graphics module is enabled (Needs Window module).</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;graphics&quot;)]
public bool Graphics { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_ModulesConfig_Image_" data-uid="Night.ModulesConfig.Image*"></a>

  <h3 id="Night_ModulesConfig_Image" data-uid="Night.ModulesConfig.Image">
  Image
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/ModulesConfig.cs/#L70"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the Image module is enabled.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;image&quot;)]
public bool Image { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_ModulesConfig_Joystick_" data-uid="Night.ModulesConfig.Joystick*"></a>

  <h3 id="Night_ModulesConfig_Joystick" data-uid="Night.ModulesConfig.Joystick">
  Joystick
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/ModulesConfig.cs/#L76"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the Joystick module is enabled.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;joystick&quot;)]
public bool Joystick { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_ModulesConfig_Keyboard_" data-uid="Night.ModulesConfig.Keyboard*"></a>

  <h3 id="Night_ModulesConfig_Keyboard" data-uid="Night.ModulesConfig.Keyboard">
  Keyboard
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/ModulesConfig.cs/#L82"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the Keyboard module is enabled.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;keyboard&quot;)]
public bool Keyboard { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_ModulesConfig_Math_" data-uid="Night.ModulesConfig.Math*"></a>

  <h3 id="Night_ModulesConfig_Math" data-uid="Night.ModulesConfig.Math">
  Math
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/ModulesConfig.cs/#L88"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the Math module is enabled.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;math&quot;)]
public bool Math { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_ModulesConfig_Mouse_" data-uid="Night.ModulesConfig.Mouse*"></a>

  <h3 id="Night_ModulesConfig_Mouse" data-uid="Night.ModulesConfig.Mouse">
  Mouse
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/ModulesConfig.cs/#L94"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the Mouse module is enabled.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;mouse&quot;)]
public bool Mouse { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_ModulesConfig_Physics_" data-uid="Night.ModulesConfig.Physics*"></a>

  <h3 id="Night_ModulesConfig_Physics" data-uid="Night.ModulesConfig.Physics">
  Physics
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/ModulesConfig.cs/#L100"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the Physics module is enabled.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;physics&quot;)]
public bool Physics { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_ModulesConfig_Sound_" data-uid="Night.ModulesConfig.Sound*"></a>

  <h3 id="Night_ModulesConfig_Sound" data-uid="Night.ModulesConfig.Sound">
  Sound
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/ModulesConfig.cs/#L106"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the Sound module is enabled.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;sound&quot;)]
public bool Sound { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_ModulesConfig_System_" data-uid="Night.ModulesConfig.System*"></a>

  <h3 id="Night_ModulesConfig_System" data-uid="Night.ModulesConfig.System">
  System
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/ModulesConfig.cs/#L112"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the System module is enabled.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;system&quot;)]
public bool System { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_ModulesConfig_Thread_" data-uid="Night.ModulesConfig.Thread*"></a>

  <h3 id="Night_ModulesConfig_Thread" data-uid="Night.ModulesConfig.Thread">
  Thread
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/ModulesConfig.cs/#L118"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the Thread module is enabled.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;thread&quot;)]
public bool Thread { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_ModulesConfig_Timer_" data-uid="Night.ModulesConfig.Timer*"></a>

  <h3 id="Night_ModulesConfig_Timer" data-uid="Night.ModulesConfig.Timer">
  Timer
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/ModulesConfig.cs/#L124"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the Timer module is enabled.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;timer&quot;)]
public bool Timer { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_ModulesConfig_Touch_" data-uid="Night.ModulesConfig.Touch*"></a>

  <h3 id="Night_ModulesConfig_Touch" data-uid="Night.ModulesConfig.Touch">
  Touch
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/ModulesConfig.cs/#L130"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the Touch module is enabled.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;touch&quot;)]
public bool Touch { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_ModulesConfig_Video_" data-uid="Night.ModulesConfig.Video*"></a>

  <h3 id="Night_ModulesConfig_Video" data-uid="Night.ModulesConfig.Video">
  Video
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/ModulesConfig.cs/#L136"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the Video module is enabled.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;video&quot;)]
public bool Video { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_ModulesConfig_Window_" data-uid="Night.ModulesConfig.Window*"></a>

  <h3 id="Night_ModulesConfig_Window" data-uid="Night.ModulesConfig.Window">
  Window
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/ModulesConfig.cs/#L142"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the Window module is enabled (Mandatory for Graphics module).</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;window&quot;)]
public bool Window { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>









</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/ModulesConfig.cs/#L31" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.Mouse.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Class Mouse | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Class Mouse | nightengine ">
      
      <meta name="description" content="Provides an interface to the user&#39;s mouse.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_Mouse.md&amp;value=---%0Auid%3A%20Night.Mouse%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.Mouse">



  <h1 id="Night_Mouse" data-uid="Night.Mouse" class="text-break">
Class Mouse  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Mouse/Mouse.cs/#L34"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Provides an interface to the user's mouse.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static class Mouse</code></pre>
  </div>




  <dl class="typelist inheritance">
    <dt>Inheritance</dt>
    <dd>
      <div><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object">object</a></div>
      <div><span class="xref">Mouse</span></div>
    </dd>
  </dl>



  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)">object.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode">object.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone">object.MemberwiseClone()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.tostring">object.ToString()</a>
    </div>
  </dd></dl>






  <h2 class="section" id="methods">Methods
</h2>


  <a id="Night_Mouse_GetPosition_" data-uid="Night.Mouse.GetPosition*"></a>

  <h3 id="Night_Mouse_GetPosition" data-uid="Night.Mouse.GetPosition">
  GetPosition()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Mouse/Mouse.cs/#L82"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets the current position of the mouse cursor in the window.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static (int X, int Y) GetPosition()</code></pre>
  </div>


  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt>(<a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.x">X</a>, <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.y">Y</a>)</dt>
    <dd><p>A tuple (int X, int Y) representing the mouse cursor coordinates.</p>
</dd>
  </dl>











  <a id="Night_Mouse_IsDown_" data-uid="Night.Mouse.IsDown*"></a>

  <h3 id="Night_Mouse_IsDown_Night_MouseButton_" data-uid="Night.Mouse.IsDown(Night.MouseButton)">
  IsDown(MouseButton)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Mouse/Mouse.cs/#L42"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Checks whether a certain mouse button is down.
This function does not detect mouse wheel scrolling.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool IsDown(MouseButton button)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>button</code> <a class="xref" href="Night.MouseButton.html">MouseButton</a></dt>
    <dd><p>The index of a button to check. 1 is the primary mouse button, 2 is the secondary mouse button, 3 is the middle button, 4 is the X1 button (typically &quot;back&quot;), and 5 is the X2 button (typically &quot;forward&quot;).</p>
</dd>
  </dl>

  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd><p>True if the button is down, false otherwise.</p>
</dd>
  </dl>











  <a id="Night_Mouse_SetGrabbed_" data-uid="Night.Mouse.SetGrabbed*"></a>

  <h3 id="Night_Mouse_SetGrabbed_System_Boolean_" data-uid="Night.Mouse.SetGrabbed(System.Boolean)">
  SetGrabbed(bool)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Mouse/Mouse.cs/#L120"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Grabs the mouse, confining it to the window.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void SetGrabbed(bool grabbed)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>grabbed</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd><p>True to grab the mouse, false to release it.</p>
</dd>
  </dl>












  <a id="Night_Mouse_SetRelativeMode_" data-uid="Night.Mouse.SetRelativeMode*"></a>

  <h3 id="Night_Mouse_SetRelativeMode_System_Boolean_" data-uid="Night.Mouse.SetRelativeMode(System.Boolean)">
  SetRelativeMode(bool)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Mouse/Mouse.cs/#L135"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Sets whether relative mouse mode is enabled for the current window.
In relative mode, the cursor is hidden and mouse motion is reported as relative to the last position.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void SetRelativeMode(bool enabled)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>enabled</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd><p>True to enable relative mode, false to disable it.</p>
</dd>
  </dl>












  <a id="Night_Mouse_SetVisible_" data-uid="Night.Mouse.SetVisible*"></a>

  <h3 id="Night_Mouse_SetVisible_System_Boolean_" data-uid="Night.Mouse.SetVisible(System.Boolean)">
  SetVisible(bool)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Mouse/Mouse.cs/#L99"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Sets the visibility of the mouse cursor.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void SetVisible(bool visible)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>visible</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd><p>True to show the cursor, false to hide it.</p>
</dd>
  </dl>













</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Mouse/Mouse.cs/#L34" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.MouseButton.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Enum MouseButton | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Enum MouseButton | nightengine ">
      
      <meta name="description" content="Represents mouse buttons. Values correspond to SDL_MouseButtonFlags/ SDL3.SDL.Button* constants. (e.g., Left is 1, Middle is 2, etc.)">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_MouseButton.md&amp;value=---%0Auid%3A%20Night.MouseButton%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.MouseButton">




  <h1 id="Night_MouseButton" data-uid="Night.MouseButton" class="text-break">
Enum MouseButton  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Mouse/MouseButton.cs/#L32"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Represents mouse buttons. Values correspond to SDL_MouseButtonFlags/
SDL3.SDL.Button* constants.
(e.g., Left is 1, Middle is 2, etc.)</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public enum MouseButton</code></pre>
  </div>









  <h2 id="fields">Fields
</h2>
  <dl class="parameters">
    <dt id="Night_MouseButton_Left"><code>Left = 1</code></dt>
  
  <dd><p>The left mouse button.</p>
</dd>
    <dt id="Night_MouseButton_Middle"><code>Middle = 2</code></dt>
  
  <dd><p>The middle mouse button.</p>
</dd>
    <dt id="Night_MouseButton_Right"><code>Right = 3</code></dt>
  
  <dd><p>The right mouse button.</p>
</dd>
    <dt id="Night_MouseButton_Unknown"><code>Unknown = 0</code></dt>
  
  <dd><p>An unknown or unspecified mouse button.</p>
</dd>
    <dt id="Night_MouseButton_X1"><code>X1 = 4</code></dt>
  
  <dd><p>The first extra mouse button (often &quot;back&quot;).</p>
</dd>
    <dt id="Night_MouseButton_X2"><code>X2 = 5</code></dt>
  
  <dd><p>The second extra mouse button (often &quot;forward&quot;).</p>
</dd>
  </dl>



</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Mouse/MouseButton.cs/#L32" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.NightSDL.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Class NightSDL | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Class NightSDL | nightengine ">
      
      <meta name="description" content="Provides direct access to some SDL3 functions using SDL3-CS bindings.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_NightSDL.md&amp;value=---%0Auid%3A%20Night.NightSDL%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.NightSDL">



  <h1 id="Night_NightSDL" data-uid="Night.NightSDL" class="text-break">
Class NightSDL  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/SDL/NightSDL.cs/#L32"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Provides direct access to some SDL3 functions using SDL3-CS bindings.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static class NightSDL</code></pre>
  </div>




  <dl class="typelist inheritance">
    <dt>Inheritance</dt>
    <dd>
      <div><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object">object</a></div>
      <div><span class="xref">NightSDL</span></div>
    </dd>
  </dl>



  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)">object.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode">object.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone">object.MemberwiseClone()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.tostring">object.ToString()</a>
    </div>
  </dd></dl>






  <h2 class="section" id="methods">Methods
</h2>


  <a id="Night_NightSDL_GetError_" data-uid="Night.NightSDL.GetError*"></a>

  <h3 id="Night_NightSDL_GetError" data-uid="Night.NightSDL.GetError">
  GetError()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/SDL/NightSDL.cs/#L55"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Retrieve a message about the last error that occurred on the current thread.
Calls the SDL3-CS binding for SDL_GetError() and returns a string.
<a href="https://wiki.libsdl.org/SDL3/SDL_GetError">https://wiki.libsdl.org/SDL3/SDL_GetError</a>.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static string GetError()</code></pre>
  </div>


  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.string">string</a></dt>
    <dd><p>Returns a message with information about the specific error that occurred, or an empty string if there hasn't been an error message set since the last call to SDL_ClearError().</p>
</dd>
  </dl>











  <a id="Night_NightSDL_GetVersion_" data-uid="Night.NightSDL.GetVersion*"></a>

  <h3 id="Night_NightSDL_GetVersion" data-uid="Night.NightSDL.GetVersion">
  GetVersion()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/SDL/NightSDL.cs/#L40"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Get the version of SDL that is linked against the Night Engine.
Calls the SDL3-CS binding for SDL_GetVersion() and returns a packed int.
<a href="https://wiki.libsdl.org/SDL3/SDL_GetVersion">https://wiki.libsdl.org/SDL3/SDL_GetVersion</a>.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static string GetVersion()</code></pre>
  </div>


  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.string">string</a></dt>
    <dd><p>A string representing the SDL version &quot;major.minor.patch&quot;.</p>
</dd>
  </dl>












</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/SDL/NightSDL.cs/#L32" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.PointF.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Struct PointF | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Struct PointF | nightengine ">
      
      <meta name="description" content="Represents a 2D point with floating-point coordinates.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_PointF.md&amp;value=---%0Auid%3A%20Night.PointF%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.PointF">



  <h1 id="Night_PointF" data-uid="Night.PointF" class="text-break">
Struct PointF  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/PointF.cs/#L30"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Represents a 2D point with floating-point coordinates.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public struct PointF</code></pre>
  </div>







  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.valuetype.equals">ValueType.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode">ValueType.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.valuetype.tostring">ValueType.ToString()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
  </dd></dl>






  <h2 class="section" id="constructors">Constructors
</h2>


  <a id="Night_PointF__ctor_" data-uid="Night.PointF.#ctor*"></a>

  <h3 id="Night_PointF__ctor_System_Single_System_Single_" data-uid="Night.PointF.#ctor(System.Single,System.Single)">
  PointF(float, float)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/PointF.cs/#L47"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Initializes a new instance of the <a class="xref" href="Night.PointF.html">PointF</a> struct.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public PointF(float x, float y)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>x</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The X-coordinate.</p>
</dd>
    <dt><code>y</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The Y-coordinate.</p>
</dd>
  </dl>












  <h2 class="section" id="fields">Fields
</h2>



  <h3 id="Night_PointF_X" data-uid="Night.PointF.X">
  X
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/PointF.cs/#L35"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>The X-coordinate of the point.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public float X</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_PointF_Y" data-uid="Night.PointF.Y">
  Y
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/PointF.cs/#L40"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>The Y-coordinate of the point.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public float Y</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd></dd>
  </dl>










</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/PointF.cs/#L30" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.Rectangle.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Struct Rectangle | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Struct Rectangle | nightengine ">
      
      <meta name="description" content="Represents a rectangle with position (X, Y) and dimensions (Width, Height).">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_Rectangle.md&amp;value=---%0Auid%3A%20Night.Rectangle%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.Rectangle">



  <h1 id="Night_Rectangle" data-uid="Night.Rectangle" class="text-break">
Struct Rectangle  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Rectangle.cs/#L30"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Represents a rectangle with position (X, Y) and dimensions (Width, Height).</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public struct Rectangle</code></pre>
  </div>







  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.valuetype.equals">ValueType.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode">ValueType.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.valuetype.tostring">ValueType.ToString()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
  </dd></dl>






  <h2 class="section" id="constructors">Constructors
</h2>


  <a id="Night_Rectangle__ctor_" data-uid="Night.Rectangle.#ctor*"></a>

  <h3 id="Night_Rectangle__ctor_System_Int32_System_Int32_System_Int32_System_Int32_" data-uid="Night.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
  Rectangle(int, int, int, int)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Rectangle.cs/#L59"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Initializes a new instance of the <a class="xref" href="Night.Rectangle.html">Rectangle</a> struct.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Rectangle(int x, int y, int width, int height)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>x</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd><p>The X-coordinate of the top-left corner.</p>
</dd>
    <dt><code>y</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd><p>The Y-coordinate of the top-left corner.</p>
</dd>
    <dt><code>width</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd><p>The width of the rectangle.</p>
</dd>
    <dt><code>height</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd><p>The height of the rectangle.</p>
</dd>
  </dl>












  <h2 class="section" id="fields">Fields
</h2>



  <h3 id="Night_Rectangle_Height" data-uid="Night.Rectangle.Height">
  Height
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Rectangle.cs/#L50"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>The height of the rectangle.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int Height</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_Rectangle_Width" data-uid="Night.Rectangle.Width">
  Width
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Rectangle.cs/#L45"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>The width of the rectangle.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int Width</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_Rectangle_X" data-uid="Night.Rectangle.X">
  X
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Rectangle.cs/#L35"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>The X-coordinate of the top-left corner of the rectangle.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int X</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_Rectangle_Y" data-uid="Night.Rectangle.Y">
  Y
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Rectangle.cs/#L40"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>The Y-coordinate of the top-left corner of the rectangle.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int Y</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd></dd>
  </dl>










</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Rectangle.cs/#L30" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.SampleGame.Game.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Class Game | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Class Game | nightengine ">
      
      <meta name="description" content="Main game class for the platformer sample. Implements the  interface for Night.Engine integration.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_SampleGame_Game.md&amp;value=---%0Auid%3A%20Night.SampleGame.Game%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.SampleGame.Game">



  <h1 id="Night_SampleGame_Game" data-uid="Night.SampleGame.Game" class="text-break">
Class Game  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Game.cs/#L37"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a>.<a class="xref" href="Night.SampleGame.html">SampleGame</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.SampleGame.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Main game class for the platformer sample.
Implements the <a class="xref" href="Night.IGame.html">IGame</a> interface for Night.Engine integration.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class Game : IGame</code></pre>
  </div>




  <dl class="typelist inheritance">
    <dt>Inheritance</dt>
    <dd>
      <div><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object">object</a></div>
      <div><span class="xref">Game</span></div>
    </dd>
  </dl>

  <dl class="typelist implements">
    <dt>Implements</dt>
    <dd>
      <div><a class="xref" href="Night.IGame.html">IGame</a></div>
    </dd>
  </dl>


  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)">object.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode">object.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone">object.MemberwiseClone()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.tostring">object.ToString()</a>
    </div>
  </dd></dl>






  <h2 class="section" id="constructors">Constructors
</h2>


  <a id="Night_SampleGame_Game__ctor_" data-uid="Night.SampleGame.Game.#ctor*"></a>

  <h3 id="Night_SampleGame_Game__ctor" data-uid="Night.SampleGame.Game.#ctor">
  Game()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Game.cs/#L48"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Initializes a new instance of the <a class="xref" href="Night.SampleGame.Game.html">Game</a> class.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Game()</code></pre>
  </div>













  <h2 class="section" id="methods">Methods
</h2>


  <a id="Night_SampleGame_Game_Draw_" data-uid="Night.SampleGame.Game.Draw*"></a>

  <h3 id="Night_SampleGame_Game_Draw" data-uid="Night.SampleGame.Game.Draw">
  Draw()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Game.cs/#L112"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Draws the game scene.
Called every frame by the Night.Engine after Update.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Draw()</code></pre>
  </div>













  <a id="Night_SampleGame_Game_KeyPressed_" data-uid="Night.SampleGame.Game.KeyPressed*"></a>

  <h3 id="Night_SampleGame_Game_KeyPressed_Night_KeySymbol_Night_KeyCode_System_Boolean_" data-uid="Night.SampleGame.Game.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)">
  KeyPressed(KeySymbol, KeyCode, bool)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Game.cs/#L228"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Handles key press events.
Called by Night.Engine when a key is pressed.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void KeyPressed(KeySymbol key, KeyCode scancode, bool isRepeat)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>key</code> <a class="xref" href="Night.KeySymbol.html">KeySymbol</a></dt>
    <dd><p>The <a class="xref" href="Night.KeySymbol.html">KeySymbol</a> of the pressed key.</p>
</dd>
    <dt><code>scancode</code> <a class="xref" href="Night.KeyCode.html">KeyCode</a></dt>
    <dd><p>The <a class="xref" href="Night.KeyCode.html">KeyCode</a> (physical key code) of the pressed key.</p>
</dd>
    <dt><code>isRepeat</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd><p>True if this is a repeat key event, false otherwise.</p>
</dd>
  </dl>












  <a id="Night_SampleGame_Game_Load_" data-uid="Night.SampleGame.Game.Load*"></a>

  <h3 id="Night_SampleGame_Game_Load" data-uid="Night.SampleGame.Game.Load">
  Load()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Game.cs/#L58"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Loads game assets and initializes game state.
Called once at the start of the game by the Night.Engine.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Load()</code></pre>
  </div>













  <a id="Night_SampleGame_Game_Update_" data-uid="Night.SampleGame.Game.Update*"></a>

  <h3 id="Night_SampleGame_Game_Update_System_Double_" data-uid="Night.SampleGame.Game.Update(System.Double)">
  Update(double)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Game.cs/#L88"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Updates the game state.
Called every frame by the Night.Engine.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Update(double deltaTime)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>deltaTime</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.double">double</a></dt>
    <dd><p>The time elapsed since the last frame, in seconds.</p>
</dd>
  </dl>













</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Game.cs/#L37" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.SampleGame.Platformer.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Class Platformer | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Class Platformer | nightengine ">
      
      <meta name="description" content="A sample platformer game implementation using the Night engine. Implements the  interface for Night.Engine integration.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_SampleGame_Platformer.md&amp;value=---%0Auid%3A%20Night.SampleGame.Platformer%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.SampleGame.Platformer">



  <h1 id="Night_SampleGame_Platformer" data-uid="Night.SampleGame.Platformer" class="text-break">
Class Platformer  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Samples/Platformer.cs/#L37"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a>.<a class="xref" href="Night.SampleGame.html">SampleGame</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.SampleGame.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>A sample platformer game implementation using the Night engine.
Implements the <a class="xref" href="Night.IGame.html">IGame</a> interface for Night.Engine integration.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class Platformer : IGame</code></pre>
  </div>




  <dl class="typelist inheritance">
    <dt>Inheritance</dt>
    <dd>
      <div><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object">object</a></div>
      <div><span class="xref">Platformer</span></div>
    </dd>
  </dl>

  <dl class="typelist implements">
    <dt>Implements</dt>
    <dd>
      <div><a class="xref" href="Night.IGame.html">IGame</a></div>
    </dd>
  </dl>


  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)">object.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode">object.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone">object.MemberwiseClone()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.tostring">object.ToString()</a>
    </div>
  </dd></dl>






  <h2 class="section" id="constructors">Constructors
</h2>


  <a id="Night_SampleGame_Platformer__ctor_" data-uid="Night.SampleGame.Platformer.#ctor*"></a>

  <h3 id="Night_SampleGame_Platformer__ctor" data-uid="Night.SampleGame.Platformer.#ctor">
  Platformer()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Samples/Platformer.cs/#L48"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Initializes a new instance of the <a class="xref" href="Night.SampleGame.Platformer.html">Platformer</a> class.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Platformer()</code></pre>
  </div>













  <h2 class="section" id="methods">Methods
</h2>


  <a id="Night_SampleGame_Platformer_Draw_" data-uid="Night.SampleGame.Platformer.Draw*"></a>

  <h3 id="Night_SampleGame_Platformer_Draw" data-uid="Night.SampleGame.Platformer.Draw">
  Draw()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Samples/Platformer.cs/#L103"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Draws the platformer game scene.
Called every frame by the Night.Engine after Update.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Draw()</code></pre>
  </div>













  <a id="Night_SampleGame_Platformer_KeyPressed_" data-uid="Night.SampleGame.Platformer.KeyPressed*"></a>

  <h3 id="Night_SampleGame_Platformer_KeyPressed_Night_KeySymbol_Night_KeyCode_System_Boolean_" data-uid="Night.SampleGame.Platformer.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)">
  KeyPressed(KeySymbol, KeyCode, bool)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Samples/Platformer.cs/#L135"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Handles key press events for the platformer game.
Called by Night.Engine when a key is pressed.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void KeyPressed(KeySymbol key, KeyCode scancode, bool isRepeat)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>key</code> <a class="xref" href="Night.KeySymbol.html">KeySymbol</a></dt>
    <dd><p>The <a class="xref" href="Night.KeySymbol.html">KeySymbol</a> of the pressed key.</p>
</dd>
    <dt><code>scancode</code> <a class="xref" href="Night.KeyCode.html">KeyCode</a></dt>
    <dd><p>The <a class="xref" href="Night.KeyCode.html">KeyCode</a> (physical key code) of the pressed key.</p>
</dd>
    <dt><code>isRepeat</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd><p>True if this is a repeat key event, false otherwise.</p>
</dd>
  </dl>












  <a id="Night_SampleGame_Platformer_Load_" data-uid="Night.SampleGame.Platformer.Load*"></a>

  <h3 id="Night_SampleGame_Platformer_Load" data-uid="Night.SampleGame.Platformer.Load">
  Load()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Samples/Platformer.cs/#L58"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Loads game assets and initializes game state for the platformer.
Called once at the start of the game by the Night.Engine.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Load()</code></pre>
  </div>













  <a id="Night_SampleGame_Platformer_Update_" data-uid="Night.SampleGame.Platformer.Update*"></a>

  <h3 id="Night_SampleGame_Platformer_Update_System_Double_" data-uid="Night.SampleGame.Platformer.Update(System.Double)">
  Update(double)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Samples/Platformer.cs/#L86"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Updates the platformer game state.
Called every frame by the Night.Engine.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Update(double deltaTime)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>deltaTime</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.double">double</a></dt>
    <dd><p>The time elapsed since the last frame, in seconds.</p>
</dd>
  </dl>













</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Samples/Platformer.cs/#L37" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.SampleGame.PlatformerGame.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Class PlatformerGame | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Class PlatformerGame | nightengine ">
      
      <meta name="description" content="Provides an entry point to run the Platformer sample game.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_SampleGame_PlatformerGame.md&amp;value=---%0Auid%3A%20Night.SampleGame.PlatformerGame%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.SampleGame.PlatformerGame">



  <h1 id="Night_SampleGame_PlatformerGame" data-uid="Night.SampleGame.PlatformerGame" class="text-break">
Class PlatformerGame  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Samples/PlatformerGame.cs/#L30"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a>.<a class="xref" href="Night.SampleGame.html">SampleGame</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.SampleGame.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Provides an entry point to run the Platformer sample game.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class PlatformerGame</code></pre>
  </div>




  <dl class="typelist inheritance">
    <dt>Inheritance</dt>
    <dd>
      <div><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object">object</a></div>
      <div><span class="xref">PlatformerGame</span></div>
    </dd>
  </dl>



  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)">object.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode">object.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone">object.MemberwiseClone()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.tostring">object.ToString()</a>
    </div>
  </dd></dl>






  <h2 class="section" id="methods">Methods
</h2>


  <a id="Night_SampleGame_PlatformerGame_PlatformerGameMain_" data-uid="Night.SampleGame.PlatformerGame.PlatformerGameMain*"></a>

  <h3 id="Night_SampleGame_PlatformerGame_PlatformerGameMain" data-uid="Night.SampleGame.PlatformerGame.PlatformerGameMain">
  PlatformerGameMain()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Samples/PlatformerGame.cs/#L35"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Main method to initialize and run the Platformer game.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void PlatformerGameMain()</code></pre>
  </div>














</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Samples/PlatformerGame.cs/#L30" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.SampleGame.Player.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Class Player | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Class Player | nightengine ">
      
      <meta name="description" content="Represents the player character in the game. Handles player movement, physics, and rendering.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_SampleGame_Player.md&amp;value=---%0Auid%3A%20Night.SampleGame.Player%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.SampleGame.Player">



  <h1 id="Night_SampleGame_Player" data-uid="Night.SampleGame.Player" class="text-break">
Class Player  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Player.cs/#L35"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a>.<a class="xref" href="Night.SampleGame.html">SampleGame</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.SampleGame.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Represents the player character in the game.
Handles player movement, physics, and rendering.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class Player</code></pre>
  </div>




  <dl class="typelist inheritance">
    <dt>Inheritance</dt>
    <dd>
      <div><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object">object</a></div>
      <div><span class="xref">Player</span></div>
    </dd>
  </dl>



  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)">object.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode">object.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone">object.MemberwiseClone()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.tostring">object.ToString()</a>
    </div>
  </dd></dl>






  <h2 class="section" id="constructors">Constructors
</h2>


  <a id="Night_SampleGame_Player__ctor_" data-uid="Night.SampleGame.Player.#ctor*"></a>

  <h3 id="Night_SampleGame_Player__ctor" data-uid="Night.SampleGame.Player.#ctor">
  Player()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Player.cs/#L49"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Initializes a new instance of the <a class="xref" href="Night.SampleGame.Player.html">Player</a> class.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Player()</code></pre>
  </div>













  <h2 class="section" id="properties">Properties
</h2>


  <a id="Night_SampleGame_Player_Height_" data-uid="Night.SampleGame.Player.Height*"></a>

  <h3 id="Night_SampleGame_Player_Height" data-uid="Night.SampleGame.Player.Height">
  Height
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Player.cs/#L73"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets the height of the player.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int Height { get; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_SampleGame_Player_Width_" data-uid="Night.SampleGame.Player.Width*"></a>

  <h3 id="Night_SampleGame_Player_Width" data-uid="Night.SampleGame.Player.Width">
  Width
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Player.cs/#L68"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets the width of the player.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int Width { get; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_SampleGame_Player_X_" data-uid="Night.SampleGame.Player.X*"></a>

  <h3 id="Night_SampleGame_Player_X" data-uid="Night.SampleGame.Player.X">
  X
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Player.cs/#L58"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets the player's current X-coordinate (left edge).</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public float X { get; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_SampleGame_Player_Y_" data-uid="Night.SampleGame.Player.Y*"></a>

  <h3 id="Night_SampleGame_Player_Y" data-uid="Night.SampleGame.Player.Y">
  Y
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Player.cs/#L63"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets the player's current Y-coordinate (top edge).</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public float Y { get; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd></dd>
  </dl>








  <h2 class="section" id="methods">Methods
</h2>


  <a id="Night_SampleGame_Player_Draw_" data-uid="Night.SampleGame.Player.Draw*"></a>

  <h3 id="Night_SampleGame_Player_Draw" data-uid="Night.SampleGame.Player.Draw">
  Draw()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Player.cs/#L288"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Draws the player on the screen.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Draw()</code></pre>
  </div>













  <a id="Night_SampleGame_Player_Load_" data-uid="Night.SampleGame.Player.Load*"></a>

  <h3 id="Night_SampleGame_Player_Load" data-uid="Night.SampleGame.Player.Load">
  Load()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Player.cs/#L78"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Loads player assets and initializes player state (position, size, sprite).</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Load()</code></pre>
  </div>













  <a id="Night_SampleGame_Player_Update_" data-uid="Night.SampleGame.Player.Update*"></a>

  <h3 id="Night_SampleGame_Player_Update_System_Double_System_Collections_Generic_List_Night_Rectangle__" data-uid="Night.SampleGame.Player.Update(System.Double,System.Collections.Generic.List{Night.Rectangle})">
  Update(double, List&lt;Rectangle&gt;)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Player.cs/#L122"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Updates the player's state, including handling input, physics, and collisions.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Update(double deltaTime, List&lt;Rectangle&gt; platforms)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>deltaTime</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.double">double</a></dt>
    <dd><p>The time elapsed since the last frame, in seconds.</p>
</dd>
    <dt><code>platforms</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1">List</a>&lt;<a class="xref" href="Night.Rectangle.html">Rectangle</a>&gt;</dt>
    <dd><p>A list of <a class="xref" href="Night.Rectangle.html">Rectangle</a> objects representing solid platforms.</p>
</dd>
  </dl>













</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Player.cs/#L35" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.SampleGame.Program.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Class Program | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Class Program | nightengine ">
      
      <meta name="description" content="Main program class for the SampleGame. Contains the entry point of the application.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_SampleGame_Program.md&amp;value=---%0Auid%3A%20Night.SampleGame.Program%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.SampleGame.Program">



  <h1 id="Night_SampleGame_Program" data-uid="Night.SampleGame.Program" class="text-break">
Class Program  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Program.cs/#L29"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a>.<a class="xref" href="Night.SampleGame.html">SampleGame</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.SampleGame.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Main program class for the SampleGame.
Contains the entry point of the application.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class Program</code></pre>
  </div>




  <dl class="typelist inheritance">
    <dt>Inheritance</dt>
    <dd>
      <div><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object">object</a></div>
      <div><span class="xref">Program</span></div>
    </dd>
  </dl>



  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)">object.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode">object.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone">object.MemberwiseClone()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.tostring">object.ToString()</a>
    </div>
  </dd></dl>






  <h2 class="section" id="methods">Methods
</h2>


  <a id="Night_SampleGame_Program_Main_" data-uid="Night.SampleGame.Program.Main*"></a>

  <h3 id="Night_SampleGame_Program_Main" data-uid="Night.SampleGame.Program.Main">
  Main()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Program.cs/#L35"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>The main entry point for the application.
Initializes and runs the game using the Night.Framework.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void Main()</code></pre>
  </div>














</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/SampleGame/Program.cs/#L29" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.SampleGame.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Namespace Night.SampleGame | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Namespace Night.SampleGame | nightengine ">
      
      
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.SampleGame">

  <h1 id="Night_SampleGame" data-uid="Night.SampleGame" class="text-break">Namespace Night.SampleGame</h1>
  <div class="markdown level0 summary"></div>
  <div class="markdown level0 conceptual"></div>
  <div class="markdown level0 remarks"></div>

    <h3 id="classes">
Classes
</h3>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.SampleGame.Game.html">Game</a></dt>
      <dd><p>Main game class for the platformer sample.
Implements the <a class="xref" href="Night.IGame.html">IGame</a> interface for Night.Engine integration.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.SampleGame.Platformer.html">Platformer</a></dt>
      <dd><p>A sample platformer game implementation using the Night engine.
Implements the <a class="xref" href="Night.IGame.html">IGame</a> interface for Night.Engine integration.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.SampleGame.PlatformerGame.html">PlatformerGame</a></dt>
      <dd><p>Provides an entry point to run the Platformer sample game.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.SampleGame.Player.html">Player</a></dt>
      <dd><p>Represents the player character in the game.
Handles player movement, physics, and rendering.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.SampleGame.Program.html">Program</a></dt>
      <dd><p>Main program class for the SampleGame.
Contains the entry point of the application.</p>
</dd>
    </dl>


</article>

        <div class="contribution d-print-none">
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.Sprite.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Class Sprite | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Class Sprite | nightengine ">
      
      <meta name="description" content="Represents a 2D sprite, typically an image loaded into a texture.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_Sprite.md&amp;value=---%0Auid%3A%20Night.Sprite%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.Sprite">



  <h1 id="Night_Sprite" data-uid="Night.Sprite" class="text-break">
Class Sprite  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Sprite.cs/#L30"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Represents a 2D sprite, typically an image loaded into a texture.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class Sprite</code></pre>
  </div>




  <dl class="typelist inheritance">
    <dt>Inheritance</dt>
    <dd>
      <div><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object">object</a></div>
      <div><span class="xref">Sprite</span></div>
    </dd>
  </dl>



  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)">object.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode">object.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone">object.MemberwiseClone()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.tostring">object.ToString()</a>
    </div>
  </dd></dl>






  <h2 class="section" id="constructors">Constructors
</h2>


  <a id="Night_Sprite__ctor_" data-uid="Night.Sprite.#ctor*"></a>

  <h3 id="Night_Sprite__ctor_System_IntPtr_System_Int32_System_Int32_" data-uid="Night.Sprite.#ctor(System.IntPtr,System.Int32,System.Int32)">
  Sprite(nint, int, int)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Sprite.cs/#L38"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Initializes a new instance of the <a class="xref" href="Night.Sprite.html">Sprite</a> class.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Sprite(nint texture, int width, int height)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>texture</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.intptr">nint</a></dt>
    <dd><p>The SDL texture handle.</p>
</dd>
    <dt><code>width</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd><p>The width of the texture.</p>
</dd>
    <dt><code>height</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd><p>The height of the texture.</p>
</dd>
  </dl>












  <h2 class="section" id="properties">Properties
</h2>


  <a id="Night_Sprite_Height_" data-uid="Night.Sprite.Height*"></a>

  <h3 id="Night_Sprite_Height" data-uid="Night.Sprite.Height">
  Height
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Sprite.cs/#L58"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets the height of the sprite in pixels.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int Height { get; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_Sprite_Texture_" data-uid="Night.Sprite.Texture*"></a>

  <h3 id="Night_Sprite_Texture" data-uid="Night.Sprite.Texture">
  Texture
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Sprite.cs/#L48"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets the SDL texture handle.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public nint Texture { get; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.intptr">nint</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_Sprite_Width_" data-uid="Night.Sprite.Width*"></a>

  <h3 id="Night_Sprite_Width" data-uid="Night.Sprite.Width">
  Width
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Sprite.cs/#L53"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets the width of the sprite in pixels.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int Width { get; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd></dd>
  </dl>









</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Graphics/Sprite.cs/#L30" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.System.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Class System | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Class System | nightengine ">
      
      <meta name="description" content="Provides access to system-level information and functions.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_System.md&amp;value=---%0Auid%3A%20Night.System%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.System">



  <h1 id="Night_System" data-uid="Night.System" class="text-break">
Class System  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/System/System.cs/#L30"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Provides access to system-level information and functions.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static class System</code></pre>
  </div>




  <dl class="typelist inheritance">
    <dt>Inheritance</dt>
    <dd>
      <div><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object">object</a></div>
      <div><span class="xref">System</span></div>
    </dd>
  </dl>



  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)">object.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode">object.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone">object.MemberwiseClone()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.tostring">object.ToString()</a>
    </div>
  </dd></dl>






  <h2 class="section" id="methods">Methods
</h2>


  <a id="Night_System_SetClipboardText_" data-uid="Night.System.SetClipboardText*"></a>

  <h3 id="Night_System_SetClipboardText_System_String_" data-uid="Night.System.SetClipboardText(System.String)">
  SetClipboardText(string)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/System/System.cs/#L37"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Puts text in the system's clipboard.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool SetClipboardText(string text)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>text</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.string">string</a></dt>
    <dd><p>The new text to hold in the system's clipboard.</p>
</dd>
  </dl>

  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd><p>True if the operation was successful, false otherwise.</p>
</dd>
  </dl>












</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/System/System.cs/#L30" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.Timer.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Class Timer | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Class Timer | nightengine ">
      
      <meta name="description" content="Provides high-resolution timing functionality.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_Timer.md&amp;value=---%0Auid%3A%20Night.Timer%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.Timer">



  <h1 id="Night_Timer" data-uid="Night.Timer" class="text-break">
Class Timer  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Timer/Timer.cs/#L33"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Provides high-resolution timing functionality.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static class Timer</code></pre>
  </div>




  <dl class="typelist inheritance">
    <dt>Inheritance</dt>
    <dd>
      <div><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object">object</a></div>
      <div><span class="xref">Timer</span></div>
    </dd>
  </dl>



  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)">object.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode">object.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone">object.MemberwiseClone()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.tostring">object.ToString()</a>
    </div>
  </dd></dl>






  <h2 class="section" id="methods">Methods
</h2>


  <a id="Night_Timer_GetAverageDelta_" data-uid="Night.Timer.GetAverageDelta*"></a>

  <h3 id="Night_Timer_GetAverageDelta" data-uid="Night.Timer.GetAverageDelta">
  GetAverageDelta()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Timer/Timer.cs/#L101"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Returns the average delta time (seconds per frame) over the last second.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static double GetAverageDelta()</code></pre>
  </div>


  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.double">double</a></dt>
    <dd><p>The average delta time over the last second.</p>
</dd>
  </dl>











  <a id="Night_Timer_GetDelta_" data-uid="Night.Timer.GetDelta*"></a>

  <h3 id="Night_Timer_GetDelta" data-uid="Night.Timer.GetDelta">
  GetDelta()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Timer/Timer.cs/#L92"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets the time elapsed since the last frame, in seconds.
This is the same value passed to. <pre><code class="lang-csharp">IGame.Update(float deltaTime)</code></pre>.
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static float GetDelta()</code></pre>
  </div>


  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The delta time in seconds.</p>
</dd>
  </dl>











  <a id="Night_Timer_GetFPS_" data-uid="Night.Timer.GetFPS*"></a>

  <h3 id="Night_Timer_GetFPS" data-uid="Night.Timer.GetFPS">
  GetFPS()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Timer/Timer.cs/#L82"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets the current frames per second (FPS).</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static int GetFPS()</code></pre>
  </div>


  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd><p>The current FPS.</p>
</dd>
  </dl>











  <a id="Night_Timer_GetTime_" data-uid="Night.Timer.GetTime*"></a>

  <h3 id="Night_Timer_GetTime" data-uid="Night.Timer.GetTime">
  GetTime()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Timer/Timer.cs/#L67"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets the time elapsed since the Timer module was loaded, in seconds.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static double GetTime()</code></pre>
  </div>


  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.double">double</a></dt>
    <dd><p>The time in seconds. Given as a decimal, accurate to the microsecond.</p>
</dd>
  </dl>











  <a id="Night_Timer_Sleep_" data-uid="Night.Timer.Sleep*"></a>

  <h3 id="Night_Timer_Sleep_System_Double_" data-uid="Night.Timer.Sleep(System.Double)">
  Sleep(double)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Timer/Timer.cs/#L113"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Pauses the current thread for the specified amount of time.
This function causes the entire thread to pause. Graphics will not draw,
input events will not trigger, code will not run, and the window will
be unresponsive if you use this in the main game thread.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void Sleep(double seconds)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>seconds</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.double">double</a></dt>
    <dd><p>Seconds to sleep for.</p>
</dd>
  </dl>












  <a id="Night_Timer_Step_" data-uid="Night.Timer.Step*"></a>

  <h3 id="Night_Timer_Step" data-uid="Night.Timer.Step">
  Step()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Timer/Timer.cs/#L129"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Measures the time between the last call to this function and the current one.
Calling this function updates the value returned by <a class="xref" href="Night.Timer.html#Night_Timer_GetDelta">GetDelta()</a>.
This is typically called once per frame by the game loop to determine the delta time for that frame.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static double Step()</code></pre>
  </div>


  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.double">double</a></dt>
    <dd><p>The time passed (in seconds) since the last call to Step().</p>
</dd>
  </dl>












</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Timer/Timer.cs/#L33" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.VersionInfo.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Class VersionInfo | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Class VersionInfo | nightengine ">
      
      <meta name="description" content="Provides information about the Night library, such as its version.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_VersionInfo.md&amp;value=---%0Auid%3A%20Night.VersionInfo%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.VersionInfo">



  <h1 id="Night_VersionInfo" data-uid="Night.VersionInfo" class="text-break">
Class VersionInfo  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/VersionInfo.cs/#L28"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Provides information about the Night library, such as its version.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static class VersionInfo</code></pre>
  </div>




  <dl class="typelist inheritance">
    <dt>Inheritance</dt>
    <dd>
      <div><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object">object</a></div>
      <div><span class="xref">VersionInfo</span></div>
    </dd>
  </dl>



  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)">object.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode">object.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone">object.MemberwiseClone()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.tostring">object.ToString()</a>
    </div>
  </dd></dl>






  <h2 class="section" id="fields">Fields
</h2>



  <h3 id="Night_VersionInfo_CodeName" data-uid="Night.VersionInfo.CodeName">
  CodeName
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/VersionInfo.cs/#L40"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets the developer-assigned codename for the current version.
This value is manually updated by the developer.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public const string CodeName = &quot;Initial Codename&quot;</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.string">string</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_VersionInfo_Version" data-uid="Night.VersionInfo.Version">
  Version
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/VersionInfo.cs/#L34"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets the full semantic version string (e.g., &quot;1.0.0&quot;, &quot;1.2.3-beta.1&quot;).
This value is updated by the GitHub release Action.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public const string Version = &quot;0.0.0-dev&quot;</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.string">string</a></dt>
    <dd></dd>
  </dl>









  <h2 class="section" id="methods">Methods
</h2>


  <a id="Night_VersionInfo_GetVersion_" data-uid="Night.VersionInfo.GetVersion*"></a>

  <h3 id="Night_VersionInfo_GetVersion" data-uid="Night.VersionInfo.GetVersion">
  GetVersion()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/VersionInfo.cs/#L47"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets the Semantic Version of the Night library.
This version is set during the release process.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static string GetVersion()</code></pre>
  </div>


  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.string">string</a></dt>
    <dd><p>The library's semantic version string.</p>
</dd>
  </dl>












</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/VersionInfo.cs/#L28" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.Window.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Class Window | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Class Window | nightengine ">
      
      <meta name="description" content="Provides an interface for modifying and retrieving information about the program&#39;s window.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_Window.md&amp;value=---%0Auid%3A%20Night.Window%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.Window">



  <h1 id="Night_Window" data-uid="Night.Window" class="text-break">
Class Window  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/Window.cs/#L34"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Provides an interface for modifying and retrieving information about the program's window.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static class Window</code></pre>
  </div>




  <dl class="typelist inheritance">
    <dt>Inheritance</dt>
    <dd>
      <div><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object">object</a></div>
      <div><span class="xref">Window</span></div>
    </dd>
  </dl>



  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)">object.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode">object.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone">object.MemberwiseClone()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.tostring">object.ToString()</a>
    </div>
  </dd></dl>






  <h2 class="section" id="methods">Methods
</h2>


  <a id="Night_Window_Close_" data-uid="Night.Window.Close*"></a>

  <h3 id="Night_Window_Close" data-uid="Night.Window.Close">
  Close()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/Window.cs/#L138"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Signals that the window should close.
This is typically called by the engine when a quit event is received.
TODO: Does this need to align with Love2D more? <a href="https://love2d.org/wiki/love.window.close">https://love2d.org/wiki/love.window.close</a>.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void Close()</code></pre>
  </div>













  <a id="Night_Window_FromPixels_" data-uid="Night.Window.FromPixels*"></a>

  <h3 id="Night_Window_FromPixels_System_Single_" data-uid="Night.Window.FromPixels(System.Single)">
  FromPixels(float)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/Window.cs/#L445"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Converts a value from pixels to density-independent units, using the window's current DPI scale.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static float FromPixels(float value)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>value</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The value in pixels.</p>
</dd>
  </dl>

  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The equivalent value in density-independent units.</p>
</dd>
  </dl>











  <a id="Night_Window_GetDPIScale_" data-uid="Night.Window.GetDPIScale*"></a>

  <h3 id="Night_Window_GetDPIScale" data-uid="Night.Window.GetDPIScale">
  GetDPIScale()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/Window.cs/#L414"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets the DPI scale factor of the display containing the window.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static float GetDPIScale()</code></pre>
  </div>


  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The DPI scale factor, or 1.0f on error or if not applicable.</p>
</dd>
  </dl>











  <a id="Night_Window_GetDesktopDimensions_" data-uid="Night.Window.GetDesktopDimensions*"></a>

  <h3 id="Night_Window_GetDesktopDimensions_System_Int32_" data-uid="Night.Window.GetDesktopDimensions(System.Int32)">
  GetDesktopDimensions(int)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/Window.cs/#L168"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets the width and height of the desktop.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static (int Width, int Height) GetDesktopDimensions(int displayIndex = 0)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>displayIndex</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd><p>The index of the display to query (0 for the primary display).</p>
</dd>
  </dl>

  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt>(<a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.x">X</a>, <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.y">Y</a>)</dt>
    <dd><p>A tuple containing the width and height of the desktop, or (0,0) if an error occurs.</p>
</dd>
  </dl>











  <a id="Night_Window_GetDisplayCount_" data-uid="Night.Window.GetDisplayCount*"></a>

  <h3 id="Night_Window_GetDisplayCount" data-uid="Night.Window.GetDisplayCount">
  GetDisplayCount()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/Window.cs/#L147"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets the number of connected monitors.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static int GetDisplayCount()</code></pre>
  </div>


  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd><p>The number of currently connected displays.</p>
</dd>
  </dl>











  <a id="Night_Window_GetFullscreen_" data-uid="Night.Window.GetFullscreen*"></a>

  <h3 id="Night_Window_GetFullscreen" data-uid="Night.Window.GetFullscreen">
  GetFullscreen()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/Window.cs/#L198"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets whether the window is fullscreen.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static (bool IsFullscreen, FullscreenType FsType) GetFullscreen()</code></pre>
  </div>


  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt>(<a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.valuetuple-system.boolean,night.fullscreentype-.isfullscreen">IsFullscreen</a>, <a class="xref" href="Night.FullscreenType.html">FullscreenType</a> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.valuetuple-system.boolean,night.fullscreentype-.fstype">FsType</a>)</dt>
    <dd><p>A tuple: (bool IsFullscreen, FullscreenType FsType).
IsFullscreen is true if the window is in any fullscreen mode, false otherwise.
FsType indicates the type of fullscreen mode used.</p>
</dd>
  </dl>











  <a id="Night_Window_GetFullscreenModes_" data-uid="Night.Window.GetFullscreenModes*"></a>

  <h3 id="Night_Window_GetFullscreenModes_System_Int32_" data-uid="Night.Window.GetFullscreenModes(System.Int32)">
  GetFullscreenModes(int)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/Window.cs/#L307"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets a list of available fullscreen display modes for a given display.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static List&lt;(int Width, int Height)&gt; GetFullscreenModes(int displayIndex = 0)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>displayIndex</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd><p>The index of the display (0 for primary).</p>
</dd>
  </dl>

  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1">List</a>&lt;(<a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.width">Width</a>, <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.height">Height</a>)&gt;</dt>
    <dd><p>A list of (Width, Height) tuples representing available modes, or an empty list on error.</p>
</dd>
  </dl>











  <a id="Night_Window_GetMode_" data-uid="Night.Window.GetMode*"></a>

  <h3 id="Night_Window_GetMode" data-uid="Night.Window.GetMode">
  GetMode()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/Window.cs/#L348"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets the current window mode (width, height, and flags).</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static WindowMode GetMode()</code></pre>
  </div>


  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="Night.WindowMode.html">WindowMode</a></dt>
    <dd><p>A WindowMode struct containing width, height, and current flags.</p>
</dd>
  </dl>











  <a id="Night_Window_IsOpen_" data-uid="Night.Window.IsOpen*"></a>

  <h3 id="Night_Window_IsOpen" data-uid="Night.Window.IsOpen">
  IsOpen()
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/Window.cs/#L128"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Checks if the window is open.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool IsOpen()</code></pre>
  </div>


  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd><p>True if the window is open, false otherwise.</p>
</dd>
  </dl>











  <a id="Night_Window_SetFullscreen_" data-uid="Night.Window.SetFullscreen*"></a>

  <h3 id="Night_Window_SetFullscreen_System_Boolean_Night_FullscreenType_" data-uid="Night.Window.SetFullscreen(System.Boolean,Night.FullscreenType)">
  SetFullscreen(bool, FullscreenType)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/Window.cs/#L221"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Enters or exits fullscreen. The display to use when entering fullscreen is chosen
based on which display the window is currently in, if multiple monitors are connected.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool SetFullscreen(bool fullscreen, FullscreenType fsType = FullscreenType.Desktop)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>fullscreen</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd><p>Whether to enter or exit fullscreen mode.</p>
</dd>
    <dt><code>fsType</code> <a class="xref" href="Night.FullscreenType.html">FullscreenType</a></dt>
    <dd><p>The type of fullscreen mode to use (Desktop or Exclusive).</p>
</dd>
  </dl>

  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd><p>True if the operation was successful, false otherwise.</p>
</dd>
  </dl>











  <a id="Night_Window_SetMode_" data-uid="Night.Window.SetMode*"></a>

  <h3 id="Night_Window_SetMode_System_Int32_System_Int32_SDL3_SDL_WindowFlags_" data-uid="Night.Window.SetMode(System.Int32,System.Int32,SDL3.SDL.WindowFlags)">
  SetMode(int, int, WindowFlags)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/Window.cs/#L59"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Sets the display mode and properties of the window.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool SetMode(int width, int height, SDL.WindowFlags flags)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>width</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd><p>The width of the window.</p>
</dd>
    <dt><code>height</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd><p>The height of the window.</p>
</dd>
    <dt><code>flags</code> <span class="xref">SDL</span>.<span class="xref">WindowFlags</span></dt>
    <dd><p>SDL Window flags to apply.</p>
</dd>
  </dl>

  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd><p>True if the mode was set successfully, false otherwise.</p>
</dd>
  </dl>











  <a id="Night_Window_SetTitle_" data-uid="Night.Window.SetTitle*"></a>

  <h3 id="Night_Window_SetTitle_System_String_" data-uid="Night.Window.SetTitle(System.String)">
  SetTitle(string)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/Window.cs/#L109"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Sets the window title.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void SetTitle(string title)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>title</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.string">string</a></dt>
    <dd><p>The new window title.</p>
</dd>
  </dl>












  <a id="Night_Window_ToPixels_" data-uid="Night.Window.ToPixels*"></a>

  <h3 id="Night_Window_ToPixels_System_Single_" data-uid="Night.Window.ToPixels(System.Single)">
  ToPixels(float)
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/Window.cs/#L435"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Converts a value from density-independent units to pixels, using the window's current DPI scale.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static float ToPixels(float value)</code></pre>
  </div>

  <h4 class="section">Parameters</h4>
  <dl class="parameters">
    <dt><code>value</code> <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The value in density-independent units.</p>
</dd>
  </dl>

  <h4 class="section">Returns</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.single">float</a></dt>
    <dd><p>The equivalent value in pixels.</p>
</dd>
  </dl>












</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/Window.cs/#L34" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.WindowConfig.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Class WindowConfig | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Class WindowConfig | nightengine ">
      
      <meta name="description" content="Configuration settings for the game window.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_WindowConfig.md&amp;value=---%0Auid%3A%20Night.WindowConfig%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.WindowConfig">



  <h1 id="Night_WindowConfig" data-uid="Night.WindowConfig" class="text-break">
Class WindowConfig  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/WindowConfig.cs/#L30"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Configuration settings for the game window.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class WindowConfig</code></pre>
  </div>




  <dl class="typelist inheritance">
    <dt>Inheritance</dt>
    <dd>
      <div><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object">object</a></div>
      <div><span class="xref">WindowConfig</span></div>
    </dd>
  </dl>



  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)">object.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode">object.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone">object.MemberwiseClone()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.tostring">object.ToString()</a>
    </div>
  </dd></dl>






  <h2 class="section" id="properties">Properties
</h2>


  <a id="Night_WindowConfig_Borderless_" data-uid="Night.WindowConfig.Borderless*"></a>

  <h3 id="Night_WindowConfig_Borderless" data-uid="Night.WindowConfig.Borderless">
  Borderless
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/WindowConfig.cs/#L59"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the window should be borderless.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;borderless&quot;)]
public bool Borderless { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_WindowConfig_Depth_" data-uid="Night.WindowConfig.Depth*"></a>

  <h3 id="Night_WindowConfig_Depth" data-uid="Night.WindowConfig.Depth">
  Depth
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/WindowConfig.cs/#L107"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the depth buffer bits. Null for system default.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;depth&quot;)]
public int? Depth { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a>?</dt>
    <dd></dd>
  </dl>








  <a id="Night_WindowConfig_Display_" data-uid="Night.WindowConfig.Display*"></a>

  <h3 id="Night_WindowConfig_Display" data-uid="Night.WindowConfig.Display">
  Display
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/WindowConfig.cs/#L119"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the 1-indexed display number to use for the window.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;display&quot;)]
public int Display { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_WindowConfig_Fullscreen_" data-uid="Night.WindowConfig.Fullscreen*"></a>

  <h3 id="Night_WindowConfig_Fullscreen" data-uid="Night.WindowConfig.Fullscreen">
  Fullscreen
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/WindowConfig.cs/#L83"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the window should start in fullscreen mode.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;fullscreen&quot;)]
public bool Fullscreen { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_WindowConfig_FullscreenType_" data-uid="Night.WindowConfig.FullscreenType*"></a>

  <h3 id="Night_WindowConfig_FullscreenType" data-uid="Night.WindowConfig.FullscreenType">
  FullscreenType
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/WindowConfig.cs/#L89"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the type of fullscreen mode (&quot;desktop&quot; or &quot;exclusive&quot;).</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;fullscreentype&quot;)]
public string FullscreenType { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.string">string</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_WindowConfig_Height_" data-uid="Night.WindowConfig.Height*"></a>

  <h3 id="Night_WindowConfig_Height" data-uid="Night.WindowConfig.Height">
  Height
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/WindowConfig.cs/#L53"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the initial height of the window in pixels.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;height&quot;)]
public int Height { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_WindowConfig_HighDPI_" data-uid="Night.WindowConfig.HighDPI*"></a>

  <h3 id="Night_WindowConfig_HighDPI" data-uid="Night.WindowConfig.HighDPI">
  HighDPI
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/WindowConfig.cs/#L125"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether to enable High DPI mode if available.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;highdpi&quot;)]
public bool HighDPI { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_WindowConfig_Icon_" data-uid="Night.WindowConfig.Icon*"></a>

  <h3 id="Night_WindowConfig_Icon" data-uid="Night.WindowConfig.Icon">
  Icon
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/WindowConfig.cs/#L41"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the path to the window icon image file. Null for no icon.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;icon&quot;)]
public string? Icon { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.string">string</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_WindowConfig_MSAA_" data-uid="Night.WindowConfig.MSAA*"></a>

  <h3 id="Night_WindowConfig_MSAA" data-uid="Night.WindowConfig.MSAA">
  MSAA
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/WindowConfig.cs/#L101"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the multisample anti-aliasing (MSAA) level.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;msaa&quot;)]
public int MSAA { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_WindowConfig_MinHeight_" data-uid="Night.WindowConfig.MinHeight*"></a>

  <h3 id="Night_WindowConfig_MinHeight" data-uid="Night.WindowConfig.MinHeight">
  MinHeight
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/WindowConfig.cs/#L77"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the minimum height of the window if resizable.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;minheight&quot;)]
public int MinHeight { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_WindowConfig_MinWidth_" data-uid="Night.WindowConfig.MinWidth*"></a>

  <h3 id="Night_WindowConfig_MinWidth" data-uid="Night.WindowConfig.MinWidth">
  MinWidth
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/WindowConfig.cs/#L71"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the minimum width of the window if resizable.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;minwidth&quot;)]
public int MinWidth { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_WindowConfig_Resizable_" data-uid="Night.WindowConfig.Resizable*"></a>

  <h3 id="Night_WindowConfig_Resizable" data-uid="Night.WindowConfig.Resizable">
  Resizable
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/WindowConfig.cs/#L65"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the window should be resizable.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;resizable&quot;)]
public bool Resizable { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_WindowConfig_Stencil_" data-uid="Night.WindowConfig.Stencil*"></a>

  <h3 id="Night_WindowConfig_Stencil" data-uid="Night.WindowConfig.Stencil">
  Stencil
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/WindowConfig.cs/#L113"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the stencil buffer bits. Null for system default.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;stencil&quot;)]
public int? Stencil { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a>?</dt>
    <dd></dd>
  </dl>








  <a id="Night_WindowConfig_Title_" data-uid="Night.WindowConfig.Title*"></a>

  <h3 id="Night_WindowConfig_Title" data-uid="Night.WindowConfig.Title">
  Title
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/WindowConfig.cs/#L35"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the title of the window.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;title&quot;)]
public string Title { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.string">string</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_WindowConfig_UseDPIScale_" data-uid="Night.WindowConfig.UseDPIScale*"></a>

  <h3 id="Night_WindowConfig_UseDPIScale" data-uid="Night.WindowConfig.UseDPIScale">
  UseDPIScale
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/WindowConfig.cs/#L131"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether to use DPI scaling.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;usedpiscale&quot;)]
public bool UseDPIScale { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_WindowConfig_VSync_" data-uid="Night.WindowConfig.VSync*"></a>

  <h3 id="Night_WindowConfig_VSync" data-uid="Night.WindowConfig.VSync">
  VSync
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/WindowConfig.cs/#L95"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the VSync mode. -1 for adaptive, 0 for disabled, 1 for enabled.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;vsync&quot;)]
public int VSync { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_WindowConfig_Width_" data-uid="Night.WindowConfig.Width*"></a>

  <h3 id="Night_WindowConfig_Width" data-uid="Night.WindowConfig.Width">
  Width
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/WindowConfig.cs/#L47"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the initial width of the window in pixels.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;width&quot;)]
public int Width { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd></dd>
  </dl>








  <a id="Night_WindowConfig_X_" data-uid="Night.WindowConfig.X*"></a>

  <h3 id="Night_WindowConfig_X" data-uid="Night.WindowConfig.X">
  X
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/WindowConfig.cs/#L137"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the initial X position of the window. Null for centered.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;x&quot;)]
public int? X { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a>?</dt>
    <dd></dd>
  </dl>








  <a id="Night_WindowConfig_Y_" data-uid="Night.WindowConfig.Y*"></a>

  <h3 id="Night_WindowConfig_Y" data-uid="Night.WindowConfig.Y">
  Y
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/WindowConfig.cs/#L143"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the initial Y position of the window. Null for centered.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[JsonPropertyName(&quot;y&quot;)]
public int? Y { get; set; }</code></pre>
  </div>





  <h4 class="section">Property Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a>?</dt>
    <dd></dd>
  </dl>









</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Configuration/WindowConfig.cs/#L30" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.WindowMode.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Struct WindowMode | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Struct WindowMode | nightengine ">
      
      <meta name="description" content="Represents the display mode of a window, including width, height, and other properties.">
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/new/dev/apiSpec/new?filename=Night_WindowMode.md&amp;value=---%0Auid%3A%20Night.WindowMode%0Asummary%3A%20&#39;*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax&#39;%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night.WindowMode">



  <h1 id="Night_WindowMode" data-uid="Night.WindowMode" class="text-break">
Struct WindowMode  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/WindowMode.cs/#L30"><i class="bi bi-code-slash"></i></a>
  </h1>

  <div class="facts text-secondary">
    <dl><dt>Namespace</dt><dd><a class="xref" href="Night.html">Night</a></dd></dl>
  <dl><dt>Assembly</dt><dd>Night.dll</dd></dl>
  </div>

  <div class="markdown summary"><p>Represents the display mode of a window, including width, height, and other properties.</p>
</div>
  <div class="markdown conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public struct WindowMode</code></pre>
  </div>







  <dl class="typelist inheritedMembers">
    <dt>Inherited Members</dt>
    <dd>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.valuetype.equals">ValueType.Equals(object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode">ValueType.GetHashCode()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.valuetype.tostring">ValueType.ToString()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)">object.Equals(object, object)</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.gettype">object.GetType()</a>
    </div>
    <div>
      <a class="xref" href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals">object.ReferenceEquals(object, object)</a>
    </div>
  </dd></dl>






  <h2 class="section" id="fields">Fields
</h2>



  <h3 id="Night_WindowMode_Borderless" data-uid="Night.WindowMode.Borderless">
  Borderless
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/WindowMode.cs/#L55"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the window is borderless.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool Borderless</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_WindowMode_Centered" data-uid="Night.WindowMode.Centered">
  Centered
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/WindowMode.cs/#L75"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the window is centered in windowed mode.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool Centered</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_WindowMode_Display" data-uid="Night.WindowMode.Display">
  Display
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/WindowMode.cs/#L80"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the 1-based index of the display the window is currently in.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int Display</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_WindowMode_Fullscreen" data-uid="Night.WindowMode.Fullscreen">
  Fullscreen
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/WindowMode.cs/#L45"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the window is in fullscreen mode.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool Fullscreen</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_WindowMode_FullscreenType" data-uid="Night.WindowMode.FullscreenType">
  FullscreenType
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/WindowMode.cs/#L50"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the type of fullscreen mode used.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public FullscreenType FullscreenType</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="Night.FullscreenType.html">FullscreenType</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_WindowMode_Height" data-uid="Night.WindowMode.Height">
  Height
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/WindowMode.cs/#L40"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the window height in pixels.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int Height</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_WindowMode_HighDpi" data-uid="Night.WindowMode.HighDpi">
  HighDpi
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/WindowMode.cs/#L95"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether high-dpi mode is allowed on Retina displays (macOS).</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool HighDpi</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_WindowMode_MinHeight" data-uid="Night.WindowMode.MinHeight">
  MinHeight
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/WindowMode.cs/#L90"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the minimum height of the window, if resizable.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int MinHeight</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_WindowMode_MinWidth" data-uid="Night.WindowMode.MinWidth">
  MinWidth
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/WindowMode.cs/#L85"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the minimum width of the window, if resizable.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int MinWidth</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_WindowMode_Msaa" data-uid="Night.WindowMode.Msaa">
  Msaa
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/WindowMode.cs/#L65"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the number of antialiasing samples used (0 if MSAA is disabled).</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int Msaa</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_WindowMode_RefreshRate" data-uid="Night.WindowMode.RefreshRate">
  RefreshRate
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/WindowMode.cs/#L100"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the refresh rate of the screen's current display mode in Hz (0 if undetermined).</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int RefreshRate</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_WindowMode_Resizable" data-uid="Night.WindowMode.Resizable">
  Resizable
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/WindowMode.cs/#L70"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets a value indicating whether the window is resizable in windowed mode.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool Resizable</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.boolean">bool</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_WindowMode_Vsync" data-uid="Night.WindowMode.Vsync">
  Vsync
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/WindowMode.cs/#L60"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the VSync mode. 1 if the graphics framerate is synchronized with the monitor's refresh rate, 0 otherwise.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int Vsync</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_WindowMode_Width" data-uid="Night.WindowMode.Width">
  Width
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/WindowMode.cs/#L35"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the window width in pixels.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int Width</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_WindowMode_X" data-uid="Night.WindowMode.X">
  X
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/WindowMode.cs/#L105"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the x-coordinate of the window's position.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int X</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd></dd>
  </dl>










  <h3 id="Night_WindowMode_Y" data-uid="Night.WindowMode.Y">
  Y
  <a class="header-action link-secondary" title="View source" href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/WindowMode.cs/#L110"><i class="bi bi-code-slash"></i></a>
  </h3>

  <div class="markdown level1 summary"><p>Gets or sets the y-coordinate of the window's position.</p>
</div>
  <div class="markdown level1 conceptual"></div>

  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int Y</code></pre>
  </div>




  <h4 class="section">Field Value</h4>
  <dl class="parameters">
    <dt><a class="xref" href="https://learn.microsoft.com/dotnet/api/system.int32">int</a></dt>
    <dd></dd>
  </dl>










</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/src/Night/Window/WindowMode.cs/#L30" class="edit-link">Edit this page</a>
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/Night.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Namespace Night | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Namespace Night | nightengine ">
      
      
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="ManagedReference">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="Night">

  <h1 id="Night" data-uid="Night" class="text-break">Namespace Night</h1>
  <div class="markdown level0 summary"></div>
  <div class="markdown level0 conceptual"></div>
  <div class="markdown level0 remarks"></div>

    <h3 id="classes">
Classes
</h3>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.AudioConfig.html">AudioConfig</a></dt>
      <dd><p>Configuration settings for the audio module.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.ConfigurationManager.html">ConfigurationManager</a></dt>
      <dd><p>Manages the loading and accessing of game configuration settings.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.Error.html">Error</a></dt>
      <dd><p>Manages the user-defined error handler.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.FileSystemInfo.html">FileSystemInfo</a></dt>
      <dd><p>Contains information about a file or directory.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.Filesystem.html">Filesystem</a></dt>
      <dd><p>Provides basic file system operations.
Inspired by Love2D's love.filesystem module.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.Framework.html">Framework</a></dt>
      <dd><p>Manages the main game loop and coordination of game states.
Provides the main entry point to run a game.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.GameConfig.html">GameConfig</a></dt>
      <dd><p>Represents the overall game configuration settings, typically loaded from a config.json file.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.Graphics.html">Graphics</a></dt>
      <dd><p>Provides functionality for drawing graphics.
Mimics Love2D's love.graphics module.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.Keyboard.html">Keyboard</a></dt>
      <dd><p>Provides an interface to the user's keyboard.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.ModulesConfig.html">ModulesConfig</a></dt>
      <dd><p>Configuration for enabling or disabling specific engine modules.
Note: Currently, these are placeholders and do not disable module functionality.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.Mouse.html">Mouse</a></dt>
      <dd><p>Provides an interface to the user's mouse.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.NightSDL.html">NightSDL</a></dt>
      <dd><p>Provides direct access to some SDL3 functions using SDL3-CS bindings.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.Sprite.html">Sprite</a></dt>
      <dd><p>Represents a 2D sprite, typically an image loaded into a texture.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.System.html">System</a></dt>
      <dd><p>Provides access to system-level information and functions.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.Timer.html">Timer</a></dt>
      <dd><p>Provides high-resolution timing functionality.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.VersionInfo.html">VersionInfo</a></dt>
      <dd><p>Provides information about the Night library, such as its version.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.Window.html">Window</a></dt>
      <dd><p>Provides an interface for modifying and retrieving information about the program's window.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.WindowConfig.html">WindowConfig</a></dt>
      <dd><p>Configuration settings for the game window.</p>
</dd>
    </dl>
    <h3 id="structs">
Structs
</h3>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.Color.html">Color</a></dt>
      <dd><p>Represents a color with Red, Green, Blue, and Alpha components.
Each component is a byte value ranging from 0 (no intensity) to 255 (full intensity).
The Alpha component controls the transparency of the color, where 0 is fully transparent and 255 is fully opaque.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.PointF.html">PointF</a></dt>
      <dd><p>Represents a 2D point with floating-point coordinates.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.Rectangle.html">Rectangle</a></dt>
      <dd><p>Represents a rectangle with position (X, Y) and dimensions (Width, Height).</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.WindowMode.html">WindowMode</a></dt>
      <dd><p>Represents the display mode of a window, including width, height, and other properties.</p>
</dd>
    </dl>
    <h3 id="interfaces">
Interfaces
</h3>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.IGame.html">IGame</a></dt>
      <dd><p>Interface for a game that can be run by the Night Engine.
Game developers will implement this interface in their main game class.</p>
</dd>
    </dl>
    <h3 id="enums">
Enums
</h3>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.DrawMode.html">DrawMode</a></dt>
      <dd><p>Specifies whether a shape should be drawn filled or as an outline.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.FileMode.html">FileMode</a></dt>
      <dd><p>Represents the different modes you can open a File in.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.FileType.html">FileType</a></dt>
      <dd><p>Represents the type of a file system object.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.FullscreenType.html">FullscreenType</a></dt>
      <dd><p>Types of fullscreen modes.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.KeyCode.html">KeyCode</a></dt>
      <dd><p>Represents keyboard scancodes. Values correspond to SDL_Scancode.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.KeySymbol.html">KeySymbol</a></dt>
      <dd><p>Represents logical key symbols. Values correspond to SDL_Keycode.</p>
</dd>
    </dl>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.MouseButton.html">MouseButton</a></dt>
      <dd><p>Represents mouse buttons. Values correspond to SDL_MouseButtonFlags/
SDL3.SDL.Button* constants.
(e.g., Left is 1, Middle is 2, etc.)</p>
</dd>
    </dl>
    <h3 id="delegates">
Delegates
</h3>
    <dl class="jumplist">
      <dt><a class="xref" href="Night.ErrorHandlerDelegate.html">ErrorHandlerDelegate</a></dt>
      <dd><p>Defines the delegate for handling unhandled exceptions from game code.
The error handler function will be called when an unhandled exception occurs
within the game's Load, Update, Draw, or input callback methods.</p>
</dd>
    </dl>


</article>

        <div class="contribution d-print-none">
        </div>


      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/index.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Night Engine API Documentation | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Night Engine API Documentation | nightengine ">
      
      
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/blob/dev/site/api/index.md/#L1">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="">
<h1 id="night-engine-api-documentation">Night Engine API Documentation</h1>

<p>Welcome to the API documentation for Night Engine.</p>
<p>Use the navigation to explore the available namespaces and classes.</p>

</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/site/api/index.md/#L1" class="edit-link">Edit this page</a>
        </div>

        <div class="next-article d-print-none border-top" id="nextArticle"></div>

      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/api/toc.html
================================================

<div id="sidetoggle">
  <div>
    <div class="sidefilter">
      <form class="toc-filter">
        <span class="glyphicon glyphicon-filter filter-icon"></span>
        <span class="glyphicon glyphicon-remove clear-icon" id="toc_filter_clear"></span>
        <input type="text" id="toc_filter_input" placeholder="Filter by title" onkeypress="if(event.keyCode==13) {return false;}">
      </form>
    </div>
    <div class="sidetoc">
      <div class="toc" id="toc">

          <ul class="nav level1">
                <li>
                    <span class="expand-stub"></span>
                    <a href="Night.html" name="" title="Night">Night</a>

                    <ul class="nav level2">
                          <li>
                              <a href="Night.AudioConfig.html" name="" title="AudioConfig">AudioConfig</a>
                          </li>
                          <li>
                              <a href="Night.Color.html" name="" title="Color">Color</a>
                          </li>
                          <li>
                              <a href="Night.ConfigurationManager.html" name="" title="ConfigurationManager">ConfigurationManager</a>
                          </li>
                          <li>
                              <a href="Night.DrawMode.html" name="" title="DrawMode">DrawMode</a>
                          </li>
                          <li>
                              <a href="Night.Error.html" name="" title="Error">Error</a>
                          </li>
                          <li>
                              <a href="Night.ErrorHandlerDelegate.html" name="" title="ErrorHandlerDelegate">ErrorHandlerDelegate</a>
                          </li>
                          <li>
                              <a href="Night.FileMode.html" name="" title="FileMode">FileMode</a>
                          </li>
                          <li>
                              <a href="Night.FileSystemInfo.html" name="" title="FileSystemInfo">FileSystemInfo</a>
                          </li>
                          <li>
                              <a href="Night.FileType.html" name="" title="FileType">FileType</a>
                          </li>
                          <li>
                              <a href="Night.Filesystem.html" name="" title="Filesystem">Filesystem</a>
                          </li>
                          <li>
                              <a href="Night.Framework.html" name="" title="Framework">Framework</a>
                          </li>
                          <li>
                              <a href="Night.FullscreenType.html" name="" title="FullscreenType">FullscreenType</a>
                          </li>
                          <li>
                              <a href="Night.GameConfig.html" name="" title="GameConfig">GameConfig</a>
                          </li>
                          <li>
                              <a href="Night.Graphics.html" name="" title="Graphics">Graphics</a>
                          </li>
                          <li>
                              <a href="Night.IGame.html" name="" title="IGame">IGame</a>
                          </li>
                          <li>
                              <a href="Night.KeyCode.html" name="" title="KeyCode">KeyCode</a>
                          </li>
                          <li>
                              <a href="Night.KeySymbol.html" name="" title="KeySymbol">KeySymbol</a>
                          </li>
                          <li>
                              <a href="Night.Keyboard.html" name="" title="Keyboard">Keyboard</a>
                          </li>
                          <li>
                              <a href="Night.ModulesConfig.html" name="" title="ModulesConfig">ModulesConfig</a>
                          </li>
                          <li>
                              <a href="Night.Mouse.html" name="" title="Mouse">Mouse</a>
                          </li>
                          <li>
                              <a href="Night.MouseButton.html" name="" title="MouseButton">MouseButton</a>
                          </li>
                          <li>
                              <a href="Night.NightSDL.html" name="" title="NightSDL">NightSDL</a>
                          </li>
                          <li>
                              <a href="Night.PointF.html" name="" title="PointF">PointF</a>
                          </li>
                          <li>
                              <a href="Night.Rectangle.html" name="" title="Rectangle">Rectangle</a>
                          </li>
                          <li>
                              <a href="Night.Sprite.html" name="" title="Sprite">Sprite</a>
                          </li>
                          <li>
                              <a href="Night.System.html" name="" title="System">System</a>
                          </li>
                          <li>
                              <a href="Night.Timer.html" name="" title="Timer">Timer</a>
                          </li>
                          <li>
                              <a href="Night.VersionInfo.html" name="" title="VersionInfo">VersionInfo</a>
                          </li>
                          <li>
                              <a href="Night.Window.html" name="" title="Window">Window</a>
                          </li>
                          <li>
                              <a href="Night.WindowConfig.html" name="" title="WindowConfig">WindowConfig</a>
                          </li>
                          <li>
                              <a href="Night.WindowMode.html" name="" title="WindowMode">WindowMode</a>
                          </li>
                    </ul>
                </li>
                <li>
                    <span class="expand-stub"></span>
                    <a href="Night.SampleGame.html" name="" title="Night.SampleGame">Night.SampleGame</a>

                    <ul class="nav level2">
                          <li>
                              <a href="Night.SampleGame.Game.html" name="" title="Game">Game</a>
                          </li>
                          <li>
                              <a href="Night.SampleGame.Platformer.html" name="" title="Platformer">Platformer</a>
                          </li>
                          <li>
                              <a href="Night.SampleGame.PlatformerGame.html" name="" title="PlatformerGame">PlatformerGame</a>
                          </li>
                          <li>
                              <a href="Night.SampleGame.Player.html" name="" title="Player">Player</a>
                          </li>
                          <li>
                              <a href="Night.SampleGame.Program.html" name="" title="Program">Program</a>
                          </li>
                    </ul>
                </li>
          </ul>
      </div>
    </div>
  </div>
</div>



================================================
File: site/_site/api/toc.json
================================================

{"items":[{"name":"Night","href":"Night.html","topicHref":"Night.html","topicUid":"Night","type":"Namespace","items":[{"name":"AudioConfig","href":"Night.AudioConfig.html","topicHref":"Night.AudioConfig.html","topicUid":"Night.AudioConfig","type":"Class"},{"name":"Color","href":"Night.Color.html","topicHref":"Night.Color.html","topicUid":"Night.Color","type":"Struct"},{"name":"ConfigurationManager","href":"Night.ConfigurationManager.html","topicHref":"Night.ConfigurationManager.html","topicUid":"Night.ConfigurationManager","type":"Class"},{"name":"DrawMode","href":"Night.DrawMode.html","topicHref":"Night.DrawMode.html","topicUid":"Night.DrawMode","type":"Enum"},{"name":"Error","href":"Night.Error.html","topicHref":"Night.Error.html","topicUid":"Night.Error","type":"Class"},{"name":"ErrorHandlerDelegate","href":"Night.ErrorHandlerDelegate.html","topicHref":"Night.ErrorHandlerDelegate.html","topicUid":"Night.ErrorHandlerDelegate","type":"Delegate"},{"name":"FileMode","href":"Night.FileMode.html","topicHref":"Night.FileMode.html","topicUid":"Night.FileMode","type":"Enum"},{"name":"FileSystemInfo","href":"Night.FileSystemInfo.html","topicHref":"Night.FileSystemInfo.html","topicUid":"Night.FileSystemInfo","type":"Class"},{"name":"FileType","href":"Night.FileType.html","topicHref":"Night.FileType.html","topicUid":"Night.FileType","type":"Enum"},{"name":"Filesystem","href":"Night.Filesystem.html","topicHref":"Night.Filesystem.html","topicUid":"Night.Filesystem","type":"Class"},{"name":"Framework","href":"Night.Framework.html","topicHref":"Night.Framework.html","topicUid":"Night.Framework","type":"Class"},{"name":"FullscreenType","href":"Night.FullscreenType.html","topicHref":"Night.FullscreenType.html","topicUid":"Night.FullscreenType","type":"Enum"},{"name":"GameConfig","href":"Night.GameConfig.html","topicHref":"Night.GameConfig.html","topicUid":"Night.GameConfig","type":"Class"},{"name":"Graphics","href":"Night.Graphics.html","topicHref":"Night.Graphics.html","topicUid":"Night.Graphics","type":"Class"},{"name":"IGame","href":"Night.IGame.html","topicHref":"Night.IGame.html","topicUid":"Night.IGame","type":"Interface"},{"name":"KeyCode","href":"Night.KeyCode.html","topicHref":"Night.KeyCode.html","topicUid":"Night.KeyCode","type":"Enum"},{"name":"KeySymbol","href":"Night.KeySymbol.html","topicHref":"Night.KeySymbol.html","topicUid":"Night.KeySymbol","type":"Enum"},{"name":"Keyboard","href":"Night.Keyboard.html","topicHref":"Night.Keyboard.html","topicUid":"Night.Keyboard","type":"Class"},{"name":"ModulesConfig","href":"Night.ModulesConfig.html","topicHref":"Night.ModulesConfig.html","topicUid":"Night.ModulesConfig","type":"Class"},{"name":"Mouse","href":"Night.Mouse.html","topicHref":"Night.Mouse.html","topicUid":"Night.Mouse","type":"Class"},{"name":"MouseButton","href":"Night.MouseButton.html","topicHref":"Night.MouseButton.html","topicUid":"Night.MouseButton","type":"Enum"},{"name":"NightSDL","href":"Night.NightSDL.html","topicHref":"Night.NightSDL.html","topicUid":"Night.NightSDL","type":"Class"},{"name":"PointF","href":"Night.PointF.html","topicHref":"Night.PointF.html","topicUid":"Night.PointF","type":"Struct"},{"name":"Rectangle","href":"Night.Rectangle.html","topicHref":"Night.Rectangle.html","topicUid":"Night.Rectangle","type":"Struct"},{"name":"Sprite","href":"Night.Sprite.html","topicHref":"Night.Sprite.html","topicUid":"Night.Sprite","type":"Class"},{"name":"System","href":"Night.System.html","topicHref":"Night.System.html","topicUid":"Night.System","type":"Class"},{"name":"Timer","href":"Night.Timer.html","topicHref":"Night.Timer.html","topicUid":"Night.Timer","type":"Class"},{"name":"VersionInfo","href":"Night.VersionInfo.html","topicHref":"Night.VersionInfo.html","topicUid":"Night.VersionInfo","type":"Class"},{"name":"Window","href":"Night.Window.html","topicHref":"Night.Window.html","topicUid":"Night.Window","type":"Class"},{"name":"WindowConfig","href":"Night.WindowConfig.html","topicHref":"Night.WindowConfig.html","topicUid":"Night.WindowConfig","type":"Class"},{"name":"WindowMode","href":"Night.WindowMode.html","topicHref":"Night.WindowMode.html","topicUid":"Night.WindowMode","type":"Struct"}]},{"name":"Night.SampleGame","href":"Night.SampleGame.html","topicHref":"Night.SampleGame.html","topicUid":"Night.SampleGame","type":"Namespace","items":[{"name":"Game","href":"Night.SampleGame.Game.html","topicHref":"Night.SampleGame.Game.html","topicUid":"Night.SampleGame.Game","type":"Class"},{"name":"Platformer","href":"Night.SampleGame.Platformer.html","topicHref":"Night.SampleGame.Platformer.html","topicUid":"Night.SampleGame.Platformer","type":"Class"},{"name":"PlatformerGame","href":"Night.SampleGame.PlatformerGame.html","topicHref":"Night.SampleGame.PlatformerGame.html","topicUid":"Night.SampleGame.PlatformerGame","type":"Class"},{"name":"Player","href":"Night.SampleGame.Player.html","topicHref":"Night.SampleGame.Player.html","topicUid":"Night.SampleGame.Player","type":"Class"},{"name":"Program","href":"Night.SampleGame.Program.html","topicHref":"Night.SampleGame.Program.html","topicUid":"Night.SampleGame.Program","type":"Class"}]}],"memberLayout":"SamePage","pdf":false}



================================================
File: site/_site/docs/getting-started.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Getting Started | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Getting Started | nightengine ">
      
      
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/blob/dev/site/docs/getting-started.md/#L1">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="">
<h1 id="getting-started">Getting Started</h1>


</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/site/docs/getting-started.md/#L1" class="edit-link">Edit this page</a>
        </div>

        <div class="next-article d-print-none border-top" id="nextArticle"></div>

      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/docs/index.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Articles | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Articles | nightengine ">
      
      
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/blob/dev/site/docs/index.md/#L1">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="">
<h1 id="articles">Articles</h1>

<p>This section contains conceptual articles about Night Engine.</p>

</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/site/docs/index.md/#L1" class="edit-link">Edit this page</a>
        </div>

        <div class="next-article d-print-none border-top" id="nextArticle"></div>

      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/docs/introduction.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
      <title>Introduction | nightengine </title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="title" content="Introduction | nightengine ">
      
      
      <link rel="icon" href="../favicon.ico">
      <link rel="stylesheet" href="../public/docfx.min.css">
      <link rel="stylesheet" href="../public/main.css">
      <meta name="docfx:navrel" content="../toc.html">
      <meta name="docfx:tocrel" content="toc.html">
      
      <meta name="docfx:rel" content="../">
      
      
      <meta name="docfx:docurl" content="https://github.com/nightconcept/any2/blob/dev/site/docs/introduction.md/#L1">
      <meta name="loc:inThisArticle" content="In this article">
      <meta name="loc:searchResultsCount" content="{count} results for &quot;{query}&quot;">
      <meta name="loc:searchNoResults" content="No results for &quot;{query}&quot;">
      <meta name="loc:tocFilter" content="Filter by title">
      <meta name="loc:nextArticle" content="Next">
      <meta name="loc:prevArticle" content="Previous">
      <meta name="loc:themeLight" content="Light">
      <meta name="loc:themeDark" content="Dark">
      <meta name="loc:themeAuto" content="Auto">
      <meta name="loc:changeTheme" content="Change theme">
      <meta name="loc:copy" content="Copy">
      <meta name="loc:downloadPdf" content="Download PDF">

      <script type="module" src="./../public/docfx.min.js"></script>

      <script>
        const theme = localStorage.getItem('theme') || 'auto'
        document.documentElement.setAttribute('data-bs-theme', theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme)
      </script>

  </head>

  <body class="tex2jax_ignore" data-layout="" data-yaml-mime="">
    <header class="bg-body border-bottom">
      <nav id="autocollapse" class="navbar navbar-expand-md" role="navigation">
        <div class="container-xxl flex-nowrap">
          <a class="navbar-brand" href="../index.html">
            <img id="logo" class="svg" src="../logo.svg" alt="nightengine">
            nightengine
          </a>
          <button class="btn btn-lg d-md-none border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navpanel" aria-controls="navpanel" aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-three-dots"></i>
          </button>
          <div class="collapse navbar-collapse" id="navpanel">
            <div id="navbar">
              <form class="search" role="search" id="search">
                <i class="bi bi-search"></i>
                <input class="form-control" id="search-query" type="search" disabled placeholder="Search" autocomplete="off" aria-label="Search">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <main class="container-xxl">
      <div class="toc-offcanvas">
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="tocOffcanvas" aria-labelledby="tocOffcanvasLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="tocOffcanvasLabel">Table of Contents</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#tocOffcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <nav class="toc" id="toc"></nav>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="actionbar">
          <button class="btn btn-lg border-0 d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#tocOffcanvas" aria-controls="tocOffcanvas" aria-expanded="false" aria-label="Show table of contents">
            <i class="bi bi-list"></i>
          </button>

          <nav id="breadcrumb"></nav>
        </div>

        <article data-uid="">
<h1 id="introduction">Introduction</h1>


</article>

        <div class="contribution d-print-none">
          <a href="https://github.com/nightconcept/any2/blob/dev/site/docs/introduction.md/#L1" class="edit-link">Edit this page</a>
        </div>

        <div class="next-article d-print-none border-top" id="nextArticle"></div>

      </div>

      <div class="affix">
        <nav id="affix"></nav>
      </div>
    </main>

    <div class="container-xxl search-results" id="search-results"></div>

    <footer class="border-top text-secondary">
      <div class="container-xxl">
        <div class="flex-fill">
          <span>Made with <a href="https://dotnet.github.io/docfx">docfx</a></span>
        </div>
      </div>
    </footer>
  </body>
</html>



================================================
File: site/_site/docs/toc.html
================================================

<div id="sidetoggle">
  <div>
    <div class="sidefilter">
      <form class="toc-filter">
        <span class="glyphicon glyphicon-filter filter-icon"></span>
        <span class="glyphicon glyphicon-remove clear-icon" id="toc_filter_clear"></span>
        <input type="text" id="toc_filter_input" placeholder="Filter by title" onkeypress="if(event.keyCode==13) {return false;}">
      </form>
    </div>
    <div class="sidetoc">
      <div class="toc" id="toc">

          <ul class="nav level1">
                <li>
                    <a href="index.html" name="" title="Introduction">Introduction</a>
                </li>
                <li>
                    <a href="getting-started.html" name="" title="Getting Started">Getting Started</a>
                </li>
          </ul>
      </div>
    </div>
  </div>
</div>



================================================
File: site/_site/docs/toc.json
================================================

{"items":[{"name":"Introduction","href":"index.html","topicHref":"index.html"},{"name":"Getting Started","href":"getting-started.html","topicHref":"getting-started.html"}],"pdf":false}



================================================
File: site/_site/public/bootstrap-icons-OCU552PF.woff
================================================
[Non-text file]


================================================
File: site/_site/public/bootstrap-icons-X6UQXWUS.woff2
================================================
[Non-text file]


================================================
File: site/_site/public/main.css
================================================



================================================
File: site/_site/public/main.js
================================================
export default {}



================================================
File: site/api/Night.AudioConfig.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.AudioConfig
  commentId: T:Night.AudioConfig
  id: AudioConfig
  parent: Night
  children:
  - Night.AudioConfig.Mic
  - Night.AudioConfig.MixWithSystem
  langs:
  - csharp
  - vb
  name: AudioConfig
  nameWithType: AudioConfig
  fullName: Night.AudioConfig
  type: Class
  source:
    remote:
      path: src/Night/Configuration/AudioConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: AudioConfig
    path: ../src/Night/Configuration/AudioConfig.cs
    startLine: 29
  assemblies:
  - Night
  namespace: Night
  summary: Configuration settings for the audio module.
  example: []
  syntax:
    content: public class AudioConfig
    content.vb: Public Class AudioConfig
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Night.AudioConfig.Mic
  commentId: P:Night.AudioConfig.Mic
  id: Mic
  parent: Night.AudioConfig
  langs:
  - csharp
  - vb
  name: Mic
  nameWithType: AudioConfig.Mic
  fullName: Night.AudioConfig.Mic
  type: Property
  source:
    remote:
      path: src/Night/Configuration/AudioConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Mic
    path: ../src/Night/Configuration/AudioConfig.cs
    startLine: 34
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the microphone should be enabled.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("mic")]

      public bool Mic { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("mic")>

      Public Property Mic As Boolean
  overload: Night.AudioConfig.Mic*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: mic
- uid: Night.AudioConfig.MixWithSystem
  commentId: P:Night.AudioConfig.MixWithSystem
  id: MixWithSystem
  parent: Night.AudioConfig
  langs:
  - csharp
  - vb
  name: MixWithSystem
  nameWithType: AudioConfig.MixWithSystem
  fullName: Night.AudioConfig.MixWithSystem
  type: Property
  source:
    remote:
      path: src/Night/Configuration/AudioConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: MixWithSystem
    path: ../src/Night/Configuration/AudioConfig.cs
    startLine: 40
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the game's audio should mix with system audio.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("mixwithsystem")]

      public bool MixWithSystem { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("mixwithsystem")>

      Public Property MixWithSystem As Boolean
  overload: Night.AudioConfig.MixWithSystem*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: mixwithsystem
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Night.AudioConfig.Mic*
  commentId: Overload:Night.AudioConfig.Mic
  href: Night.AudioConfig.html#Night_AudioConfig_Mic
  name: Mic
  nameWithType: AudioConfig.Mic
  fullName: Night.AudioConfig.Mic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Night.AudioConfig.MixWithSystem*
  commentId: Overload:Night.AudioConfig.MixWithSystem
  href: Night.AudioConfig.html#Night_AudioConfig_MixWithSystem
  name: MixWithSystem
  nameWithType: AudioConfig.MixWithSystem
  fullName: Night.AudioConfig.MixWithSystem



================================================
File: site/api/Night.Color.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.Color
  commentId: T:Night.Color
  id: Color
  parent: Night
  children:
  - Night.Color.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)
  - Night.Color.A
  - Night.Color.B
  - Night.Color.Black
  - Night.Color.Blue
  - Night.Color.Cyan
  - Night.Color.G
  - Night.Color.Green
  - Night.Color.Magenta
  - Night.Color.R
  - Night.Color.Red
  - Night.Color.Transparent
  - Night.Color.White
  - Night.Color.Yellow
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: Color
  fullName: Night.Color
  type: Struct
  source:
    remote:
      path: src/Night/Graphics/Color.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Color
    path: ../src/Night/Graphics/Color.cs
    startLine: 31
  assemblies:
  - Night
  namespace: Night
  summary: >-
    Represents a color with Red, Green, Blue, and Alpha components.

    Each component is a byte value ranging from 0 (no intensity) to 255 (full intensity).

    The Alpha component controls the transparency of the color, where 0 is fully transparent and 255 is fully opaque.
  example: []
  syntax:
    content: public struct Color
    content.vb: Public Structure Color
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Night.Color.Black
  commentId: F:Night.Color.Black
  id: Black
  parent: Night.Color
  langs:
  - csharp
  - vb
  name: Black
  nameWithType: Color.Black
  fullName: Night.Color.Black
  type: Field
  source:
    remote:
      path: src/Night/Graphics/Color.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Black
    path: ../src/Night/Graphics/Color.cs
    startLine: 36
  assemblies:
  - Night
  namespace: Night
  summary: Represents the color black.
  example: []
  syntax:
    content: public static readonly Color Black
    return:
      type: Night.Color
    content.vb: Public Shared ReadOnly Black As Color
- uid: Night.Color.White
  commentId: F:Night.Color.White
  id: White
  parent: Night.Color
  langs:
  - csharp
  - vb
  name: White
  nameWithType: Color.White
  fullName: Night.Color.White
  type: Field
  source:
    remote:
      path: src/Night/Graphics/Color.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: White
    path: ../src/Night/Graphics/Color.cs
    startLine: 39
  assemblies:
  - Night
  namespace: Night
  summary: Represents the color white.
  example: []
  syntax:
    content: public static readonly Color White
    return:
      type: Night.Color
    content.vb: Public Shared ReadOnly White As Color
- uid: Night.Color.Red
  commentId: F:Night.Color.Red
  id: Red
  parent: Night.Color
  langs:
  - csharp
  - vb
  name: Red
  nameWithType: Color.Red
  fullName: Night.Color.Red
  type: Field
  source:
    remote:
      path: src/Night/Graphics/Color.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Red
    path: ../src/Night/Graphics/Color.cs
    startLine: 42
  assemblies:
  - Night
  namespace: Night
  summary: Represents the color red.
  example: []
  syntax:
    content: public static readonly Color Red
    return:
      type: Night.Color
    content.vb: Public Shared ReadOnly Red As Color
- uid: Night.Color.Green
  commentId: F:Night.Color.Green
  id: Green
  parent: Night.Color
  langs:
  - csharp
  - vb
  name: Green
  nameWithType: Color.Green
  fullName: Night.Color.Green
  type: Field
  source:
    remote:
      path: src/Night/Graphics/Color.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Green
    path: ../src/Night/Graphics/Color.cs
    startLine: 45
  assemblies:
  - Night
  namespace: Night
  summary: Represents the color green.
  example: []
  syntax:
    content: public static readonly Color Green
    return:
      type: Night.Color
    content.vb: Public Shared ReadOnly Green As Color
- uid: Night.Color.Blue
  commentId: F:Night.Color.Blue
  id: Blue
  parent: Night.Color
  langs:
  - csharp
  - vb
  name: Blue
  nameWithType: Color.Blue
  fullName: Night.Color.Blue
  type: Field
  source:
    remote:
      path: src/Night/Graphics/Color.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Blue
    path: ../src/Night/Graphics/Color.cs
    startLine: 48
  assemblies:
  - Night
  namespace: Night
  summary: Represents the color blue.
  example: []
  syntax:
    content: public static readonly Color Blue
    return:
      type: Night.Color
    content.vb: Public Shared ReadOnly Blue As Color
- uid: Night.Color.Yellow
  commentId: F:Night.Color.Yellow
  id: Yellow
  parent: Night.Color
  langs:
  - csharp
  - vb
  name: Yellow
  nameWithType: Color.Yellow
  fullName: Night.Color.Yellow
  type: Field
  source:
    remote:
      path: src/Night/Graphics/Color.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Yellow
    path: ../src/Night/Graphics/Color.cs
    startLine: 51
  assemblies:
  - Night
  namespace: Night
  summary: Represents the color yellow.
  example: []
  syntax:
    content: public static readonly Color Yellow
    return:
      type: Night.Color
    content.vb: Public Shared ReadOnly Yellow As Color
- uid: Night.Color.Magenta
  commentId: F:Night.Color.Magenta
  id: Magenta
  parent: Night.Color
  langs:
  - csharp
  - vb
  name: Magenta
  nameWithType: Color.Magenta
  fullName: Night.Color.Magenta
  type: Field
  source:
    remote:
      path: src/Night/Graphics/Color.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Magenta
    path: ../src/Night/Graphics/Color.cs
    startLine: 54
  assemblies:
  - Night
  namespace: Night
  summary: Represents the color magenta.
  example: []
  syntax:
    content: public static readonly Color Magenta
    return:
      type: Night.Color
    content.vb: Public Shared ReadOnly Magenta As Color
- uid: Night.Color.Cyan
  commentId: F:Night.Color.Cyan
  id: Cyan
  parent: Night.Color
  langs:
  - csharp
  - vb
  name: Cyan
  nameWithType: Color.Cyan
  fullName: Night.Color.Cyan
  type: Field
  source:
    remote:
      path: src/Night/Graphics/Color.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Cyan
    path: ../src/Night/Graphics/Color.cs
    startLine: 57
  assemblies:
  - Night
  namespace: Night
  summary: Represents the color cyan.
  example: []
  syntax:
    content: public static readonly Color Cyan
    return:
      type: Night.Color
    content.vb: Public Shared ReadOnly Cyan As Color
- uid: Night.Color.Transparent
  commentId: F:Night.Color.Transparent
  id: Transparent
  parent: Night.Color
  langs:
  - csharp
  - vb
  name: Transparent
  nameWithType: Color.Transparent
  fullName: Night.Color.Transparent
  type: Field
  source:
    remote:
      path: src/Night/Graphics/Color.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Transparent
    path: ../src/Night/Graphics/Color.cs
    startLine: 60
  assemblies:
  - Night
  namespace: Night
  summary: Represents a fully transparent color.
  example: []
  syntax:
    content: public static readonly Color Transparent
    return:
      type: Night.Color
    content.vb: Public Shared ReadOnly Transparent As Color
- uid: Night.Color.R
  commentId: F:Night.Color.R
  id: R
  parent: Night.Color
  langs:
  - csharp
  - vb
  name: R
  nameWithType: Color.R
  fullName: Night.Color.R
  type: Field
  source:
    remote:
      path: src/Night/Graphics/Color.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: R
    path: ../src/Night/Graphics/Color.cs
    startLine: 65
  assemblies:
  - Night
  namespace: Night
  summary: The red component of the color.
  example: []
  syntax:
    content: public byte R
    return:
      type: System.Byte
    content.vb: Public R As Byte
- uid: Night.Color.G
  commentId: F:Night.Color.G
  id: G
  parent: Night.Color
  langs:
  - csharp
  - vb
  name: G
  nameWithType: Color.G
  fullName: Night.Color.G
  type: Field
  source:
    remote:
      path: src/Night/Graphics/Color.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: G
    path: ../src/Night/Graphics/Color.cs
    startLine: 70
  assemblies:
  - Night
  namespace: Night
  summary: The green component of the color.
  example: []
  syntax:
    content: public byte G
    return:
      type: System.Byte
    content.vb: Public G As Byte
- uid: Night.Color.B
  commentId: F:Night.Color.B
  id: B
  parent: Night.Color
  langs:
  - csharp
  - vb
  name: B
  nameWithType: Color.B
  fullName: Night.Color.B
  type: Field
  source:
    remote:
      path: src/Night/Graphics/Color.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: B
    path: ../src/Night/Graphics/Color.cs
    startLine: 75
  assemblies:
  - Night
  namespace: Night
  summary: The blue component of the color.
  example: []
  syntax:
    content: public byte B
    return:
      type: System.Byte
    content.vb: Public B As Byte
- uid: Night.Color.A
  commentId: F:Night.Color.A
  id: A
  parent: Night.Color
  langs:
  - csharp
  - vb
  name: A
  nameWithType: Color.A
  fullName: Night.Color.A
  type: Field
  source:
    remote:
      path: src/Night/Graphics/Color.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: A
    path: ../src/Night/Graphics/Color.cs
    startLine: 80
  assemblies:
  - Night
  namespace: Night
  summary: The alpha (transparency) component of the color.
  example: []
  syntax:
    content: public byte A
    return:
      type: System.Byte
    content.vb: Public A As Byte
- uid: Night.Color.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)
  commentId: M:Night.Color.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)
  id: '#ctor(System.Byte,System.Byte,System.Byte,System.Byte)'
  parent: Night.Color
  langs:
  - csharp
  - vb
  name: Color(byte, byte, byte, byte)
  nameWithType: Color.Color(byte, byte, byte, byte)
  fullName: Night.Color.Color(byte, byte, byte, byte)
  type: Constructor
  source:
    remote:
      path: src/Night/Graphics/Color.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: .ctor
    path: ../src/Night/Graphics/Color.cs
    startLine: 89
  assemblies:
  - Night
  namespace: Night
  summary: Initializes a new instance of the <xref href="Night.Color" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Color(byte r, byte g, byte b, byte a = 255)
    parameters:
    - id: r
      type: System.Byte
      description: The red component (0-255).
    - id: g
      type: System.Byte
      description: The green component (0-255).
    - id: b
      type: System.Byte
      description: The blue component (0-255).
    - id: a
      type: System.Byte
      description: The alpha component (0-255). Defaults to 255 (fully opaque).
    content.vb: Public Sub New(r As Byte, g As Byte, b As Byte, a As Byte = 255)
  overload: Night.Color.#ctor*
  nameWithType.vb: Color.New(Byte, Byte, Byte, Byte)
  fullName.vb: Night.Color.New(Byte, Byte, Byte, Byte)
  name.vb: New(Byte, Byte, Byte, Byte)
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Night.Color
  commentId: T:Night.Color
  parent: Night
  href: Night.Color.html
  name: Color
  nameWithType: Color
  fullName: Night.Color
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: Night.Color.#ctor*
  commentId: Overload:Night.Color.#ctor
  href: Night.Color.html#Night_Color__ctor_System_Byte_System_Byte_System_Byte_System_Byte_
  name: Color
  nameWithType: Color.Color
  fullName: Night.Color.Color
  nameWithType.vb: Color.New
  fullName.vb: Night.Color.New
  name.vb: New



================================================
File: site/api/Night.ConfigurationManager.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.ConfigurationManager
  commentId: T:Night.ConfigurationManager
  id: ConfigurationManager
  parent: Night
  children:
  - Night.ConfigurationManager.CurrentConfig
  - Night.ConfigurationManager.IsLoaded
  - Night.ConfigurationManager.LoadConfig(System.String)
  langs:
  - csharp
  - vb
  name: ConfigurationManager
  nameWithType: ConfigurationManager
  fullName: Night.ConfigurationManager
  type: Class
  source:
    remote:
      path: src/Night/Configuration/ConfigurationManager.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: ConfigurationManager
    path: ../src/Night/Configuration/ConfigurationManager.cs
    startLine: 33
  assemblies:
  - Night
  namespace: Night
  summary: Manages the loading and accessing of game configuration settings.
  example: []
  syntax:
    content: public static class ConfigurationManager
    content.vb: Public Module ConfigurationManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Night.ConfigurationManager.CurrentConfig
  commentId: P:Night.ConfigurationManager.CurrentConfig
  id: CurrentConfig
  parent: Night.ConfigurationManager
  langs:
  - csharp
  - vb
  name: CurrentConfig
  nameWithType: ConfigurationManager.CurrentConfig
  fullName: Night.ConfigurationManager.CurrentConfig
  type: Property
  source:
    remote:
      path: src/Night/Configuration/ConfigurationManager.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: CurrentConfig
    path: ../src/Night/Configuration/ConfigurationManager.cs
    startLine: 42
  assemblies:
  - Night
  namespace: Night
  summary: Gets the currently loaded game configuration. If no configuration has been loaded, returns the default configuration.
  example: []
  syntax:
    content: public static GameConfig CurrentConfig { get; }
    parameters: []
    return:
      type: Night.GameConfig
    content.vb: Public Shared ReadOnly Property CurrentConfig As GameConfig
  overload: Night.ConfigurationManager.CurrentConfig*
- uid: Night.ConfigurationManager.IsLoaded
  commentId: P:Night.ConfigurationManager.IsLoaded
  id: IsLoaded
  parent: Night.ConfigurationManager
  langs:
  - csharp
  - vb
  name: IsLoaded
  nameWithType: ConfigurationManager.IsLoaded
  fullName: Night.ConfigurationManager.IsLoaded
  type: Property
  source:
    remote:
      path: src/Night/Configuration/ConfigurationManager.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: IsLoaded
    path: ../src/Night/Configuration/ConfigurationManager.cs
    startLine: 47
  assemblies:
  - Night
  namespace: Night
  summary: Gets a value indicating whether the configuration has been loaded.
  example: []
  syntax:
    content: public static bool IsLoaded { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsLoaded As Boolean
  overload: Night.ConfigurationManager.IsLoaded*
- uid: Night.ConfigurationManager.LoadConfig(System.String)
  commentId: M:Night.ConfigurationManager.LoadConfig(System.String)
  id: LoadConfig(System.String)
  parent: Night.ConfigurationManager
  langs:
  - csharp
  - vb
  name: LoadConfig(string?)
  nameWithType: ConfigurationManager.LoadConfig(string?)
  fullName: Night.ConfigurationManager.LoadConfig(string?)
  type: Method
  source:
    remote:
      path: src/Night/Configuration/ConfigurationManager.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: LoadConfig
    path: ../src/Night/Configuration/ConfigurationManager.cs
    startLine: 55
  assemblies:
  - Night
  namespace: Night
  summary: >-
    Loads the game configuration from a 'config.json' file.

    If the file is not found, or if an error occurs during loading or parsing, default settings are used.

    The configuration is loaded only once; subsequent calls will not reload the configuration.
  example: []
  syntax:
    content: public static void LoadConfig(string? gameDirectory = null)
    parameters:
    - id: gameDirectory
      type: System.String
      description: The directory to search for 'config.json'. If null, the application's base directory is used.
    content.vb: Public Shared Sub LoadConfig(gameDirectory As String = Nothing)
  overload: Night.ConfigurationManager.LoadConfig*
  nameWithType.vb: ConfigurationManager.LoadConfig(String)
  fullName.vb: Night.ConfigurationManager.LoadConfig(String)
  name.vb: LoadConfig(String)
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Night.ConfigurationManager.CurrentConfig*
  commentId: Overload:Night.ConfigurationManager.CurrentConfig
  href: Night.ConfigurationManager.html#Night_ConfigurationManager_CurrentConfig
  name: CurrentConfig
  nameWithType: ConfigurationManager.CurrentConfig
  fullName: Night.ConfigurationManager.CurrentConfig
- uid: Night.GameConfig
  commentId: T:Night.GameConfig
  parent: Night
  href: Night.GameConfig.html
  name: GameConfig
  nameWithType: GameConfig
  fullName: Night.GameConfig
- uid: Night.ConfigurationManager.IsLoaded*
  commentId: Overload:Night.ConfigurationManager.IsLoaded
  href: Night.ConfigurationManager.html#Night_ConfigurationManager_IsLoaded
  name: IsLoaded
  nameWithType: ConfigurationManager.IsLoaded
  fullName: Night.ConfigurationManager.IsLoaded
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Night.ConfigurationManager.LoadConfig*
  commentId: Overload:Night.ConfigurationManager.LoadConfig
  href: Night.ConfigurationManager.html#Night_ConfigurationManager_LoadConfig_System_String_
  name: LoadConfig
  nameWithType: ConfigurationManager.LoadConfig
  fullName: Night.ConfigurationManager.LoadConfig
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String



================================================
File: site/api/Night.DrawMode.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.DrawMode
  commentId: T:Night.DrawMode
  id: DrawMode
  parent: Night
  children:
  - Night.DrawMode.Fill
  - Night.DrawMode.Line
  langs:
  - csharp
  - vb
  name: DrawMode
  nameWithType: DrawMode
  fullName: Night.DrawMode
  type: Enum
  source:
    remote:
      path: src/Night/Graphics/DrawMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: DrawMode
    path: ../src/Night/Graphics/DrawMode.cs
    startLine: 29
  assemblies:
  - Night
  namespace: Night
  summary: Specifies whether a shape should be drawn filled or as an outline.
  example: []
  syntax:
    content: public enum DrawMode
    content.vb: Public Enum DrawMode
- uid: Night.DrawMode.Fill
  commentId: F:Night.DrawMode.Fill
  id: Fill
  parent: Night.DrawMode
  langs:
  - csharp
  - vb
  name: Fill
  nameWithType: DrawMode.Fill
  fullName: Night.DrawMode.Fill
  type: Field
  source:
    remote:
      path: src/Night/Graphics/DrawMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Fill
    path: ../src/Night/Graphics/DrawMode.cs
    startLine: 34
  assemblies:
  - Night
  namespace: Night
  summary: Draw the shape filled.
  example: []
  syntax:
    content: Fill = 0
    return:
      type: Night.DrawMode
- uid: Night.DrawMode.Line
  commentId: F:Night.DrawMode.Line
  id: Line
  parent: Night.DrawMode
  langs:
  - csharp
  - vb
  name: Line
  nameWithType: DrawMode.Line
  fullName: Night.DrawMode.Line
  type: Field
  source:
    remote:
      path: src/Night/Graphics/DrawMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Line
    path: ../src/Night/Graphics/DrawMode.cs
    startLine: 39
  assemblies:
  - Night
  namespace: Night
  summary: Draw the shape as an outline.
  example: []
  syntax:
    content: Line = 1
    return:
      type: Night.DrawMode
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: Night.DrawMode
  commentId: T:Night.DrawMode
  parent: Night
  href: Night.DrawMode.html
  name: DrawMode
  nameWithType: DrawMode
  fullName: Night.DrawMode



================================================
File: site/api/Night.Error.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.Error
  commentId: T:Night.Error
  id: Error
  parent: Night
  children:
  - Night.Error.SetHandler(Night.ErrorHandlerDelegate)
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: Error
  fullName: Night.Error
  type: Class
  source:
    remote:
      path: src/Night/Error.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Error
    path: ../src/Night/Error.cs
    startLine: 38
  assemblies:
  - Night
  namespace: Night
  summary: Manages the user-defined error handler.
  example: []
  syntax:
    content: public static class Error
    content.vb: Public Module [Error]
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Night.Error.SetHandler(Night.ErrorHandlerDelegate)
  commentId: M:Night.Error.SetHandler(Night.ErrorHandlerDelegate)
  id: SetHandler(Night.ErrorHandlerDelegate)
  parent: Night.Error
  langs:
  - csharp
  - vb
  name: SetHandler(ErrorHandlerDelegate)
  nameWithType: Error.SetHandler(ErrorHandlerDelegate)
  fullName: Night.Error.SetHandler(Night.ErrorHandlerDelegate)
  type: Method
  source:
    remote:
      path: src/Night/Error.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: SetHandler
    path: ../src/Night/Error.cs
    startLine: 50
  assemblies:
  - Night
  namespace: Night
  summary: Sets a custom function to be called when an unhandled error occurs in game code.
  example: []
  syntax:
    content: public static void SetHandler(ErrorHandlerDelegate handler)
    parameters:
    - id: handler
      type: Night.ErrorHandlerDelegate
      description: The delegate to handle errors.
    content.vb: Public Shared Sub SetHandler(handler As ErrorHandlerDelegate)
  overload: Night.Error.SetHandler*
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Night.Error.SetHandler*
  commentId: Overload:Night.Error.SetHandler
  href: Night.Error.html#Night_Error_SetHandler_Night_ErrorHandlerDelegate_
  name: SetHandler
  nameWithType: Error.SetHandler
  fullName: Night.Error.SetHandler
- uid: Night.ErrorHandlerDelegate
  commentId: T:Night.ErrorHandlerDelegate
  parent: Night
  href: Night.ErrorHandlerDelegate.html
  name: ErrorHandlerDelegate
  nameWithType: ErrorHandlerDelegate
  fullName: Night.ErrorHandlerDelegate



================================================
File: site/api/Night.ErrorHandlerDelegate.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.ErrorHandlerDelegate
  commentId: T:Night.ErrorHandlerDelegate
  id: ErrorHandlerDelegate
  parent: Night
  children: []
  langs:
  - csharp
  - vb
  name: ErrorHandlerDelegate
  nameWithType: ErrorHandlerDelegate
  fullName: Night.ErrorHandlerDelegate
  type: Delegate
  source:
    remote:
      path: src/Night/Error.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: ErrorHandlerDelegate
    path: ../src/Night/Error.cs
    startLine: 33
  assemblies:
  - Night
  namespace: Night
  summary: >-
    Defines the delegate for handling unhandled exceptions from game code.

    The error handler function will be called when an unhandled exception occurs

    within the game's Load, Update, Draw, or input callback methods.
  example: []
  syntax:
    content: public delegate void ErrorHandlerDelegate(Exception e)
    parameters:
    - id: e
      type: System.Exception
      description: The exception that occurred.
    content.vb: Public Delegate Sub ErrorHandlerDelegate(e As Exception)
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System



================================================
File: site/api/Night.FileMode.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.FileMode
  commentId: T:Night.FileMode
  id: FileMode
  parent: Night
  children:
  - Night.FileMode.A
  - Night.FileMode.Append
  - Night.FileMode.C
  - Night.FileMode.Close
  - Night.FileMode.R
  - Night.FileMode.Read
  - Night.FileMode.W
  - Night.FileMode.Write
  langs:
  - csharp
  - vb
  name: FileMode
  nameWithType: FileMode
  fullName: Night.FileMode
  type: Enum
  source:
    remote:
      path: src/Night/Filesystem/FileMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: FileMode
    path: ../src/Night/Filesystem/FileMode.cs
    startLine: 29
  assemblies:
  - Night
  namespace: Night
  summary: Represents the different modes you can open a File in.
  example: []
  syntax:
    content: public enum FileMode
    content.vb: Public Enum FileMode
- uid: Night.FileMode.Read
  commentId: F:Night.FileMode.Read
  id: Read
  parent: Night.FileMode
  langs:
  - csharp
  - vb
  name: Read
  nameWithType: FileMode.Read
  fullName: Night.FileMode.Read
  type: Field
  source:
    remote:
      path: src/Night/Filesystem/FileMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Read
    path: ../src/Night/Filesystem/FileMode.cs
    startLine: 34
  assemblies:
  - Night
  namespace: Night
  summary: Open a file for read.
  example: []
  syntax:
    content: Read = 0
    return:
      type: Night.FileMode
- uid: Night.FileMode.Write
  commentId: F:Night.FileMode.Write
  id: Write
  parent: Night.FileMode
  langs:
  - csharp
  - vb
  name: Write
  nameWithType: FileMode.Write
  fullName: Night.FileMode.Write
  type: Field
  source:
    remote:
      path: src/Night/Filesystem/FileMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Write
    path: ../src/Night/Filesystem/FileMode.cs
    startLine: 39
  assemblies:
  - Night
  namespace: Night
  summary: Open a file for write.
  example: []
  syntax:
    content: Write = 1
    return:
      type: Night.FileMode
- uid: Night.FileMode.Append
  commentId: F:Night.FileMode.Append
  id: Append
  parent: Night.FileMode
  langs:
  - csharp
  - vb
  name: Append
  nameWithType: FileMode.Append
  fullName: Night.FileMode.Append
  type: Field
  source:
    remote:
      path: src/Night/Filesystem/FileMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Append
    path: ../src/Night/Filesystem/FileMode.cs
    startLine: 44
  assemblies:
  - Night
  namespace: Night
  summary: Open a file for append.
  example: []
  syntax:
    content: Append = 2
    return:
      type: Night.FileMode
- uid: Night.FileMode.Close
  commentId: F:Night.FileMode.Close
  id: Close
  parent: Night.FileMode
  langs:
  - csharp
  - vb
  name: Close
  nameWithType: FileMode.Close
  fullName: Night.FileMode.Close
  type: Field
  source:
    remote:
      path: src/Night/Filesystem/FileMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Close
    path: ../src/Night/Filesystem/FileMode.cs
    startLine: 49
  assemblies:
  - Night
  namespace: Night
  summary: Do not open a file (represents a closed file.)
  example: []
  syntax:
    content: Close = 3
    return:
      type: Night.FileMode
- uid: Night.FileMode.W
  commentId: F:Night.FileMode.W
  id: W
  parent: Night.FileMode
  langs:
  - csharp
  - vb
  name: W
  nameWithType: FileMode.W
  fullName: Night.FileMode.W
  type: Field
  source:
    remote:
      path: src/Night/Filesystem/FileMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: W
    path: ../src/Night/Filesystem/FileMode.cs
    startLine: 54
  assemblies:
  - Night
  namespace: Night
  summary: Open a file for write.
  example: []
  syntax:
    content: W = 1
    return:
      type: Night.FileMode
- uid: Night.FileMode.R
  commentId: F:Night.FileMode.R
  id: R
  parent: Night.FileMode
  langs:
  - csharp
  - vb
  name: R
  nameWithType: FileMode.R
  fullName: Night.FileMode.R
  type: Field
  source:
    remote:
      path: src/Night/Filesystem/FileMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: R
    path: ../src/Night/Filesystem/FileMode.cs
    startLine: 59
  assemblies:
  - Night
  namespace: Night
  summary: Open a file for read.
  example: []
  syntax:
    content: R = 0
    return:
      type: Night.FileMode
- uid: Night.FileMode.A
  commentId: F:Night.FileMode.A
  id: A
  parent: Night.FileMode
  langs:
  - csharp
  - vb
  name: A
  nameWithType: FileMode.A
  fullName: Night.FileMode.A
  type: Field
  source:
    remote:
      path: src/Night/Filesystem/FileMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: A
    path: ../src/Night/Filesystem/FileMode.cs
    startLine: 64
  assemblies:
  - Night
  namespace: Night
  summary: Open a file for append.
  example: []
  syntax:
    content: A = 2
    return:
      type: Night.FileMode
- uid: Night.FileMode.C
  commentId: F:Night.FileMode.C
  id: C
  parent: Night.FileMode
  langs:
  - csharp
  - vb
  name: C
  nameWithType: FileMode.C
  fullName: Night.FileMode.C
  type: Field
  source:
    remote:
      path: src/Night/Filesystem/FileMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: C
    path: ../src/Night/Filesystem/FileMode.cs
    startLine: 69
  assemblies:
  - Night
  namespace: Night
  summary: Do not open a file (represents a closed file.)
  example: []
  syntax:
    content: C = 3
    return:
      type: Night.FileMode
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: Night.FileMode
  commentId: T:Night.FileMode
  parent: Night
  href: Night.FileMode.html
  name: FileMode
  nameWithType: FileMode
  fullName: Night.FileMode



================================================
File: site/api/Night.FileSystemInfo.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.FileSystemInfo
  commentId: T:Night.FileSystemInfo
  id: FileSystemInfo
  parent: Night
  children:
  - Night.FileSystemInfo.#ctor
  - Night.FileSystemInfo.#ctor(Night.FileType,System.Nullable{System.Int64},System.Nullable{System.Int64})
  - Night.FileSystemInfo.ModTime
  - Night.FileSystemInfo.Size
  - Night.FileSystemInfo.Type
  langs:
  - csharp
  - vb
  name: FileSystemInfo
  nameWithType: FileSystemInfo
  fullName: Night.FileSystemInfo
  type: Class
  source:
    remote:
      path: src/Night/Filesystem/FileSystemInfo.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: FileSystemInfo
    path: ../src/Night/Filesystem/FileSystemInfo.cs
    startLine: 29
  assemblies:
  - Night
  namespace: Night
  summary: Contains information about a file or directory.
  example: []
  syntax:
    content: public class FileSystemInfo
    content.vb: Public Class FileSystemInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Night.FileSystemInfo.#ctor
  commentId: M:Night.FileSystemInfo.#ctor
  id: '#ctor'
  parent: Night.FileSystemInfo
  langs:
  - csharp
  - vb
  name: FileSystemInfo()
  nameWithType: FileSystemInfo.FileSystemInfo()
  fullName: Night.FileSystemInfo.FileSystemInfo()
  type: Constructor
  source:
    remote:
      path: src/Night/Filesystem/FileSystemInfo.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: .ctor
    path: ../src/Night/Filesystem/FileSystemInfo.cs
    startLine: 34
  assemblies:
  - Night
  namespace: Night
  summary: Initializes a new instance of the <xref href="Night.FileSystemInfo" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public FileSystemInfo()
    content.vb: Public Sub New()
  overload: Night.FileSystemInfo.#ctor*
  nameWithType.vb: FileSystemInfo.New()
  fullName.vb: Night.FileSystemInfo.New()
  name.vb: New()
- uid: Night.FileSystemInfo.#ctor(Night.FileType,System.Nullable{System.Int64},System.Nullable{System.Int64})
  commentId: M:Night.FileSystemInfo.#ctor(Night.FileType,System.Nullable{System.Int64},System.Nullable{System.Int64})
  id: '#ctor(Night.FileType,System.Nullable{System.Int64},System.Nullable{System.Int64})'
  parent: Night.FileSystemInfo
  langs:
  - csharp
  - vb
  name: FileSystemInfo(FileType, long?, long?)
  nameWithType: FileSystemInfo.FileSystemInfo(FileType, long?, long?)
  fullName: Night.FileSystemInfo.FileSystemInfo(Night.FileType, long?, long?)
  type: Constructor
  source:
    remote:
      path: src/Night/Filesystem/FileSystemInfo.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: .ctor
    path: ../src/Night/Filesystem/FileSystemInfo.cs
    startLine: 44
  assemblies:
  - Night
  namespace: Night
  summary: Initializes a new instance of the <xref href="Night.FileSystemInfo" data-throw-if-not-resolved="false"></xref> class with specified values.
  example: []
  syntax:
    content: public FileSystemInfo(FileType type, long? size, long? modTime)
    parameters:
    - id: type
      type: Night.FileType
      description: The type of the file system object.
    - id: size
      type: System.Nullable{System.Int64}
      description: The size of the file in bytes.
    - id: modTime
      type: System.Nullable{System.Int64}
      description: The last modification time in Unix epoch seconds.
    content.vb: Public Sub New(type As FileType, size As Long?, modTime As Long?)
  overload: Night.FileSystemInfo.#ctor*
  nameWithType.vb: FileSystemInfo.New(FileType, Long?, Long?)
  fullName.vb: Night.FileSystemInfo.New(Night.FileType, Long?, Long?)
  name.vb: New(FileType, Long?, Long?)
- uid: Night.FileSystemInfo.Type
  commentId: P:Night.FileSystemInfo.Type
  id: Type
  parent: Night.FileSystemInfo
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: FileSystemInfo.Type
  fullName: Night.FileSystemInfo.Type
  type: Property
  source:
    remote:
      path: src/Night/Filesystem/FileSystemInfo.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Type
    path: ../src/Night/Filesystem/FileSystemInfo.cs
    startLine: 55
  assemblies:
  - Night
  namespace: Night
  summary: >-
    Gets or sets the type of the object at the path (file, directory, symlink, etc.).

    Default is None.
  example: []
  syntax:
    content: public FileType Type { get; set; }
    parameters: []
    return:
      type: Night.FileType
    content.vb: Public Property Type As FileType
  overload: Night.FileSystemInfo.Type*
- uid: Night.FileSystemInfo.Size
  commentId: P:Night.FileSystemInfo.Size
  id: Size
  parent: Night.FileSystemInfo
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: FileSystemInfo.Size
  fullName: Night.FileSystemInfo.Size
  type: Property
  source:
    remote:
      path: src/Night/Filesystem/FileSystemInfo.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Size
    path: ../src/Night/Filesystem/FileSystemInfo.cs
    startLine: 60
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the size in bytes of the file, or null if it can't be determined or not applicable (e.g. for a directory).
  example: []
  syntax:
    content: public long? Size { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Property Size As Long?
  overload: Night.FileSystemInfo.Size*
- uid: Night.FileSystemInfo.ModTime
  commentId: P:Night.FileSystemInfo.ModTime
  id: ModTime
  parent: Night.FileSystemInfo
  langs:
  - csharp
  - vb
  name: ModTime
  nameWithType: FileSystemInfo.ModTime
  fullName: Night.FileSystemInfo.ModTime
  type: Property
  source:
    remote:
      path: src/Night/Filesystem/FileSystemInfo.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: ModTime
    path: ../src/Night/Filesystem/FileSystemInfo.cs
    startLine: 65
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the file's last modification time in seconds since the Unix epoch, or null if it can't be determined.
  example: []
  syntax:
    content: public long? ModTime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Property ModTime As Long?
  overload: Night.FileSystemInfo.ModTime*
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Night.FileSystemInfo
  commentId: T:Night.FileSystemInfo
  parent: Night
  href: Night.FileSystemInfo.html
  name: FileSystemInfo
  nameWithType: FileSystemInfo
  fullName: Night.FileSystemInfo
- uid: Night.FileSystemInfo.#ctor*
  commentId: Overload:Night.FileSystemInfo.#ctor
  href: Night.FileSystemInfo.html#Night_FileSystemInfo__ctor
  name: FileSystemInfo
  nameWithType: FileSystemInfo.FileSystemInfo
  fullName: Night.FileSystemInfo.FileSystemInfo
  nameWithType.vb: FileSystemInfo.New
  fullName.vb: Night.FileSystemInfo.New
  name.vb: New
- uid: Night.FileType
  commentId: T:Night.FileType
  parent: Night
  href: Night.FileType.html
  name: FileType
  nameWithType: FileType
  fullName: Night.FileType
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long?
  nameWithType: long?
  fullName: long?
  nameWithType.vb: Long?
  fullName.vb: Long?
  name.vb: Long?
  spec.csharp:
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '?'
  spec.vb:
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Night.FileSystemInfo.Type*
  commentId: Overload:Night.FileSystemInfo.Type
  href: Night.FileSystemInfo.html#Night_FileSystemInfo_Type
  name: Type
  nameWithType: FileSystemInfo.Type
  fullName: Night.FileSystemInfo.Type
- uid: Night.FileSystemInfo.Size*
  commentId: Overload:Night.FileSystemInfo.Size
  href: Night.FileSystemInfo.html#Night_FileSystemInfo_Size
  name: Size
  nameWithType: FileSystemInfo.Size
  fullName: Night.FileSystemInfo.Size
- uid: Night.FileSystemInfo.ModTime*
  commentId: Overload:Night.FileSystemInfo.ModTime
  href: Night.FileSystemInfo.html#Night_FileSystemInfo_ModTime
  name: ModTime
  nameWithType: FileSystemInfo.ModTime
  fullName: Night.FileSystemInfo.ModTime



================================================
File: site/api/Night.FileType.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.FileType
  commentId: T:Night.FileType
  id: FileType
  parent: Night
  children:
  - Night.FileType.Directory
  - Night.FileType.File
  - Night.FileType.None
  - Night.FileType.Other
  - Night.FileType.Symlink
  langs:
  - csharp
  - vb
  name: FileType
  nameWithType: FileType
  fullName: Night.FileType
  type: Enum
  source:
    remote:
      path: src/Night/Filesystem/FileType.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: FileType
    path: ../src/Night/Filesystem/FileType.cs
    startLine: 29
  assemblies:
  - Night
  namespace: Night
  summary: Represents the type of a file system object.
  example: []
  syntax:
    content: public enum FileType
    content.vb: Public Enum FileType
- uid: Night.FileType.File
  commentId: F:Night.FileType.File
  id: File
  parent: Night.FileType
  langs:
  - csharp
  - vb
  name: File
  nameWithType: FileType.File
  fullName: Night.FileType.File
  type: Field
  source:
    remote:
      path: src/Night/Filesystem/FileType.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: File
    path: ../src/Night/Filesystem/FileType.cs
    startLine: 34
  assemblies:
  - Night
  namespace: Night
  summary: A regular file.
  example: []
  syntax:
    content: File = 0
    return:
      type: Night.FileType
- uid: Night.FileType.Directory
  commentId: F:Night.FileType.Directory
  id: Directory
  parent: Night.FileType
  langs:
  - csharp
  - vb
  name: Directory
  nameWithType: FileType.Directory
  fullName: Night.FileType.Directory
  type: Field
  source:
    remote:
      path: src/Night/Filesystem/FileType.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Directory
    path: ../src/Night/Filesystem/FileType.cs
    startLine: 39
  assemblies:
  - Night
  namespace: Night
  summary: A directory.
  example: []
  syntax:
    content: Directory = 1
    return:
      type: Night.FileType
- uid: Night.FileType.Symlink
  commentId: F:Night.FileType.Symlink
  id: Symlink
  parent: Night.FileType
  langs:
  - csharp
  - vb
  name: Symlink
  nameWithType: FileType.Symlink
  fullName: Night.FileType.Symlink
  type: Field
  source:
    remote:
      path: src/Night/Filesystem/FileType.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Symlink
    path: ../src/Night/Filesystem/FileType.cs
    startLine: 44
  assemblies:
  - Night
  namespace: Night
  summary: A symbolic link.
  example: []
  syntax:
    content: Symlink = 2
    return:
      type: Night.FileType
- uid: Night.FileType.Other
  commentId: F:Night.FileType.Other
  id: Other
  parent: Night.FileType
  langs:
  - csharp
  - vb
  name: Other
  nameWithType: FileType.Other
  fullName: Night.FileType.Other
  type: Field
  source:
    remote:
      path: src/Night/Filesystem/FileType.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Other
    path: ../src/Night/Filesystem/FileType.cs
    startLine: 49
  assemblies:
  - Night
  namespace: Night
  summary: Other type (e.g., device, pipe).
  example: []
  syntax:
    content: Other = 3
    return:
      type: Night.FileType
- uid: Night.FileType.None
  commentId: F:Night.FileType.None
  id: None
  parent: Night.FileType
  langs:
  - csharp
  - vb
  name: None
  nameWithType: FileType.None
  fullName: Night.FileType.None
  type: Field
  source:
    remote:
      path: src/Night/Filesystem/FileType.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: None
    path: ../src/Night/Filesystem/FileType.cs
    startLine: 54
  assemblies:
  - Night
  namespace: Night
  summary: The path does not exist or its type cannot be determined.
  example: []
  syntax:
    content: None = 4
    return:
      type: Night.FileType
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: Night.FileType
  commentId: T:Night.FileType
  parent: Night
  href: Night.FileType.html
  name: FileType
  nameWithType: FileType
  fullName: Night.FileType



================================================
File: site/api/Night.Filesystem.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.Filesystem
  commentId: T:Night.Filesystem
  id: Filesystem
  parent: Night
  children:
  - Night.Filesystem.GetInfo(System.String,Night.FileSystemInfo)
  - Night.Filesystem.GetInfo(System.String,Night.FileType,Night.FileSystemInfo)
  - Night.Filesystem.GetInfo(System.String,System.Nullable{Night.FileType})
  - Night.Filesystem.ReadBytes(System.String)
  - Night.Filesystem.ReadText(System.String)
  langs:
  - csharp
  - vb
  name: Filesystem
  nameWithType: Filesystem
  fullName: Night.Filesystem
  type: Class
  source:
    remote:
      path: src/Night/Filesystem/Filesystem.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Filesystem
    path: ../src/Night/Filesystem/Filesystem.cs
    startLine: 31
  assemblies:
  - Night
  namespace: Night
  summary: >-
    Provides basic file system operations.

    Inspired by Love2D's love.filesystem module.
  example: []
  syntax:
    content: public static class Filesystem
    content.vb: Public Module Filesystem
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Night.Filesystem.GetInfo(System.String,System.Nullable{Night.FileType})
  commentId: M:Night.Filesystem.GetInfo(System.String,System.Nullable{Night.FileType})
  id: GetInfo(System.String,System.Nullable{Night.FileType})
  parent: Night.Filesystem
  langs:
  - csharp
  - vb
  name: GetInfo(string, FileType?)
  nameWithType: Filesystem.GetInfo(string, FileType?)
  fullName: Night.Filesystem.GetInfo(string, Night.FileType?)
  type: Method
  source:
    remote:
      path: src/Night/Filesystem/Filesystem.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: GetInfo
    path: ../src/Night/Filesystem/Filesystem.cs
    startLine: 39
  assemblies:
  - Night
  namespace: Night
  summary: Gets information about the specified file or directory.
  example: []
  syntax:
    content: public static FileSystemInfo? GetInfo(string path, FileType? filterType = null)
    parameters:
    - id: path
      type: System.String
      description: The file or directory path to check.
    - id: filterType
      type: System.Nullable{Night.FileType}
      description: If supplied, this parameter causes getInfo to only return the info table if the item at the given path matches the specified file type.
    return:
      type: Night.FileSystemInfo
      description: A FileSystemInfo object containing information about the specified path, or null if nothing exists at the path or if it doesn't match the filterType.
    content.vb: Public Shared Function GetInfo(path As String, filterType As FileType? = Nothing) As FileSystemInfo
  overload: Night.Filesystem.GetInfo*
  nameWithType.vb: Filesystem.GetInfo(String, FileType?)
  fullName.vb: Night.Filesystem.GetInfo(String, Night.FileType?)
  name.vb: GetInfo(String, FileType?)
- uid: Night.Filesystem.GetInfo(System.String,Night.FileSystemInfo)
  commentId: M:Night.Filesystem.GetInfo(System.String,Night.FileSystemInfo)
  id: GetInfo(System.String,Night.FileSystemInfo)
  parent: Night.Filesystem
  langs:
  - csharp
  - vb
  name: GetInfo(string, FileSystemInfo)
  nameWithType: Filesystem.GetInfo(string, FileSystemInfo)
  fullName: Night.Filesystem.GetInfo(string, Night.FileSystemInfo)
  type: Method
  source:
    remote:
      path: src/Night/Filesystem/Filesystem.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: GetInfo
    path: ../src/Night/Filesystem/Filesystem.cs
    startLine: 104
  assemblies:
  - Night
  namespace: Night
  summary: Gets information about the specified file or directory and populates an existing FileSystemInfo object.
  example: []
  syntax:
    content: public static FileSystemInfo? GetInfo(string path, FileSystemInfo info)
    parameters:
    - id: path
      type: System.String
      description: The file or directory path to check.
    - id: info
      type: Night.FileSystemInfo
      description: A FileSystemInfo object which will be filled in.
    return:
      type: Night.FileSystemInfo
      description: The FileSystemInfo object given as an argument, filled with information, or null if nothing exists at the path.
    content.vb: Public Shared Function GetInfo(path As String, info As FileSystemInfo) As FileSystemInfo
  overload: Night.Filesystem.GetInfo*
  nameWithType.vb: Filesystem.GetInfo(String, FileSystemInfo)
  fullName.vb: Night.Filesystem.GetInfo(String, Night.FileSystemInfo)
  name.vb: GetInfo(String, FileSystemInfo)
- uid: Night.Filesystem.GetInfo(System.String,Night.FileType,Night.FileSystemInfo)
  commentId: M:Night.Filesystem.GetInfo(System.String,Night.FileType,Night.FileSystemInfo)
  id: GetInfo(System.String,Night.FileType,Night.FileSystemInfo)
  parent: Night.Filesystem
  langs:
  - csharp
  - vb
  name: GetInfo(string, FileType, FileSystemInfo)
  nameWithType: Filesystem.GetInfo(string, FileType, FileSystemInfo)
  fullName: Night.Filesystem.GetInfo(string, Night.FileType, Night.FileSystemInfo)
  type: Method
  source:
    remote:
      path: src/Night/Filesystem/Filesystem.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: GetInfo
    path: ../src/Night/Filesystem/Filesystem.cs
    startLine: 130
  assemblies:
  - Night
  namespace: Night
  summary: Gets information about the specified file or directory, filtered by type, and populates an existing FileSystemInfo object.
  example: []
  syntax:
    content: public static FileSystemInfo? GetInfo(string path, FileType filterType, FileSystemInfo info)
    parameters:
    - id: path
      type: System.String
      description: The file or directory path to check.
    - id: filterType
      type: Night.FileType
      description: Causes getInfo to only return the info table if the item at the given path matches the specified file type.
    - id: info
      type: Night.FileSystemInfo
      description: A FileSystemInfo object which will be filled in.
    return:
      type: Night.FileSystemInfo
      description: The FileSystemInfo object given as an argument, filled with information, or null if nothing exists at the path or if it doesn't match the filterType.
    content.vb: Public Shared Function GetInfo(path As String, filterType As FileType, info As FileSystemInfo) As FileSystemInfo
  overload: Night.Filesystem.GetInfo*
  nameWithType.vb: Filesystem.GetInfo(String, FileType, FileSystemInfo)
  fullName.vb: Night.Filesystem.GetInfo(String, Night.FileType, Night.FileSystemInfo)
  name.vb: GetInfo(String, FileType, FileSystemInfo)
- uid: Night.Filesystem.ReadBytes(System.String)
  commentId: M:Night.Filesystem.ReadBytes(System.String)
  id: ReadBytes(System.String)
  parent: Night.Filesystem
  langs:
  - csharp
  - vb
  name: ReadBytes(string)
  nameWithType: Filesystem.ReadBytes(string)
  fullName: Night.Filesystem.ReadBytes(string)
  type: Method
  source:
    remote:
      path: src/Night/Filesystem/Filesystem.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: ReadBytes
    path: ../src/Night/Filesystem/Filesystem.cs
    startLine: 155
  assemblies:
  - Night
  namespace: Night
  summary: Reads the entire content of a file into a byte array.
  example: []
  syntax:
    content: public static byte[] ReadBytes(string path)
    parameters:
    - id: path
      type: System.String
      description: The path to the file to read.
    return:
      type: System.Byte[]
      description: A byte array containing the contents of the file.
    content.vb: Public Shared Function ReadBytes(path As String) As Byte()
  overload: Night.Filesystem.ReadBytes*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: Thrown if the file is not found.
  nameWithType.vb: Filesystem.ReadBytes(String)
  fullName.vb: Night.Filesystem.ReadBytes(String)
  name.vb: ReadBytes(String)
- uid: Night.Filesystem.ReadText(System.String)
  commentId: M:Night.Filesystem.ReadText(System.String)
  id: ReadText(System.String)
  parent: Night.Filesystem
  langs:
  - csharp
  - vb
  name: ReadText(string)
  nameWithType: Filesystem.ReadText(string)
  fullName: Night.Filesystem.ReadText(string)
  type: Method
  source:
    remote:
      path: src/Night/Filesystem/Filesystem.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: ReadText
    path: ../src/Night/Filesystem/Filesystem.cs
    startLine: 166
  assemblies:
  - Night
  namespace: Night
  summary: Reads the entire content of a file into a string.
  example: []
  syntax:
    content: public static string ReadText(string path)
    parameters:
    - id: path
      type: System.String
      description: The path to the file to read.
    return:
      type: System.String
      description: A string containing the contents of the file.
    content.vb: Public Shared Function ReadText(path As String) As String
  overload: Night.Filesystem.ReadText*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: Thrown if the file is not found.
  nameWithType.vb: Filesystem.ReadText(String)
  fullName.vb: Night.Filesystem.ReadText(String)
  name.vb: ReadText(String)
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Night.Filesystem.GetInfo*
  commentId: Overload:Night.Filesystem.GetInfo
  href: Night.Filesystem.html#Night_Filesystem_GetInfo_System_String_System_Nullable_Night_FileType__
  name: GetInfo
  nameWithType: Filesystem.GetInfo
  fullName: Night.Filesystem.GetInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Nullable{Night.FileType}
  commentId: T:System.Nullable{Night.FileType}
  parent: System
  definition: System.Nullable`1
  href: Night.FileType.html
  name: FileType?
  nameWithType: FileType?
  fullName: Night.FileType?
  spec.csharp:
  - uid: Night.FileType
    name: FileType
    href: Night.FileType.html
  - name: '?'
  spec.vb:
  - uid: Night.FileType
    name: FileType
    href: Night.FileType.html
  - name: '?'
- uid: Night.FileSystemInfo
  commentId: T:Night.FileSystemInfo
  parent: Night
  href: Night.FileSystemInfo.html
  name: FileSystemInfo
  nameWithType: FileSystemInfo
  fullName: Night.FileSystemInfo
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Night.FileType
  commentId: T:Night.FileType
  parent: Night
  href: Night.FileType.html
  name: FileType
  nameWithType: FileType
  fullName: Night.FileType
- uid: System.IO.FileNotFoundException
  commentId: T:System.IO.FileNotFoundException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.filenotfoundexception
  name: FileNotFoundException
  nameWithType: FileNotFoundException
  fullName: System.IO.FileNotFoundException
- uid: Night.Filesystem.ReadBytes*
  commentId: Overload:Night.Filesystem.ReadBytes
  href: Night.Filesystem.html#Night_Filesystem_ReadBytes_System_String_
  name: ReadBytes
  nameWithType: Filesystem.ReadBytes
  fullName: Night.Filesystem.ReadBytes
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: Night.Filesystem.ReadText*
  commentId: Overload:Night.Filesystem.ReadText
  href: Night.Filesystem.html#Night_Filesystem_ReadText_System_String_
  name: ReadText
  nameWithType: Filesystem.ReadText
  fullName: Night.Filesystem.ReadText



================================================
File: site/api/Night.Framework.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.Framework
  commentId: T:Night.Framework
  id: Framework
  parent: Night
  children:
  - Night.Framework.IsInputInitialized
  - Night.Framework.Run(Night.IGame)
  langs:
  - csharp
  - vb
  name: Framework
  nameWithType: Framework
  fullName: Night.Framework
  type: Class
  source:
    remote:
      path: src/Night/Framework.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Framework
    path: ../src/Night/Framework.cs
    startLine: 38
  assemblies:
  - Night
  namespace: Night
  summary: >-
    Manages the main game loop and coordination of game states.

    Provides the main entry point to run a game.
  example: []
  syntax:
    content: public static class Framework
    content.vb: Public Module Framework
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Night.Framework.IsInputInitialized
  commentId: P:Night.Framework.IsInputInitialized
  id: IsInputInitialized
  parent: Night.Framework
  langs:
  - csharp
  - vb
  name: IsInputInitialized
  nameWithType: Framework.IsInputInitialized
  fullName: Night.Framework.IsInputInitialized
  type: Property
  source:
    remote:
      path: src/Night/Framework.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: IsInputInitialized
    path: ../src/Night/Framework.cs
    startLine: 55
  assemblies:
  - Night
  namespace: Night
  summary: >-
    Gets a value indicating whether a flag indicating whether the core SDL systems, particularly for input,

    have been successfully initialized by this Framework's Run method.
  example: []
  syntax:
    content: public static bool IsInputInitialized { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property IsInputInitialized As Boolean
  overload: Night.Framework.IsInputInitialized*
- uid: Night.Framework.Run(Night.IGame)
  commentId: M:Night.Framework.Run(Night.IGame)
  id: Run(Night.IGame)
  parent: Night.Framework
  langs:
  - csharp
  - vb
  name: Run(IGame)
  nameWithType: Framework.Run(IGame)
  fullName: Night.Framework.Run(Night.IGame)
  type: Method
  source:
    remote:
      path: src/Night/Framework.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Run
    path: ../src/Night/Framework.cs
    startLine: 64
  assemblies:
  - Night
  namespace: Night
  summary: >-
    Runs the game instance.

    The game loop will internally call Load, Update, and Draw methods

    on the provided game logic.

    This method will initialize and shut down required SDL subsystems.
  example: []
  syntax:
    content: public static void Run(IGame game)
    parameters:
    - id: game
      type: Night.IGame
      description: The game interface to run. Must implement <xref href="Night.IGame" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Sub Run(game As IGame)
  overload: Night.Framework.Run*
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Night.Framework.IsInputInitialized*
  commentId: Overload:Night.Framework.IsInputInitialized
  href: Night.Framework.html#Night_Framework_IsInputInitialized
  name: IsInputInitialized
  nameWithType: Framework.IsInputInitialized
  fullName: Night.Framework.IsInputInitialized
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Night.IGame
  commentId: T:Night.IGame
  parent: Night
  href: Night.IGame.html
  name: IGame
  nameWithType: IGame
  fullName: Night.IGame
- uid: Night.Framework.Run*
  commentId: Overload:Night.Framework.Run
  href: Night.Framework.html#Night_Framework_Run_Night_IGame_
  name: Run
  nameWithType: Framework.Run
  fullName: Night.Framework.Run



================================================
File: site/api/Night.FullscreenType.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.FullscreenType
  commentId: T:Night.FullscreenType
  id: FullscreenType
  parent: Night
  children:
  - Night.FullscreenType.Desktop
  - Night.FullscreenType.Exclusive
  langs:
  - csharp
  - vb
  name: FullscreenType
  nameWithType: FullscreenType
  fullName: Night.FullscreenType
  type: Enum
  source:
    remote:
      path: src/Night/Window/FullscreenType.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: FullscreenType
    path: ../src/Night/Window/FullscreenType.cs
    startLine: 29
  assemblies:
  - Night
  namespace: Night
  summary: Types of fullscreen modes.
  example: []
  syntax:
    content: public enum FullscreenType
    content.vb: Public Enum FullscreenType
- uid: Night.FullscreenType.Exclusive
  commentId: F:Night.FullscreenType.Exclusive
  id: Exclusive
  parent: Night.FullscreenType
  langs:
  - csharp
  - vb
  name: Exclusive
  nameWithType: FullscreenType.Exclusive
  fullName: Night.FullscreenType.Exclusive
  type: Field
  source:
    remote:
      path: src/Night/Window/FullscreenType.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Exclusive
    path: ../src/Night/Window/FullscreenType.cs
    startLine: 34
  assemblies:
  - Night
  namespace: Night
  summary: Standard exclusive-fullscreen mode. Changes the display mode (actual resolution) of the monitor.
  example: []
  syntax:
    content: Exclusive = 0
    return:
      type: Night.FullscreenType
- uid: Night.FullscreenType.Desktop
  commentId: F:Night.FullscreenType.Desktop
  id: Desktop
  parent: Night.FullscreenType
  langs:
  - csharp
  - vb
  name: Desktop
  nameWithType: FullscreenType.Desktop
  fullName: Night.FullscreenType.Desktop
  type: Field
  source:
    remote:
      path: src/Night/Window/FullscreenType.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Desktop
    path: ../src/Night/Window/FullscreenType.cs
    startLine: 40
  assemblies:
  - Night
  namespace: Night
  summary: >-
    Borderless fullscreen windowed mode. A borderless screen-sized window is created which sits on top of all desktop UI elements.

    The window is automatically resized to match the dimensions of the desktop, and its size cannot be changed.
  example: []
  syntax:
    content: Desktop = 1
    return:
      type: Night.FullscreenType
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: Night.FullscreenType
  commentId: T:Night.FullscreenType
  parent: Night
  href: Night.FullscreenType.html
  name: FullscreenType
  nameWithType: FullscreenType
  fullName: Night.FullscreenType



================================================
File: site/api/Night.GameConfig.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.GameConfig
  commentId: T:Night.GameConfig
  id: GameConfig
  parent: Night
  children:
  - Night.GameConfig.AccelerometerJoystick
  - Night.GameConfig.AppendIdentity
  - Night.GameConfig.Audio
  - Night.GameConfig.Console
  - Night.GameConfig.ExternalStorage
  - Night.GameConfig.GammaCorrect
  - Night.GameConfig.Identity
  - Night.GameConfig.Modules
  - Night.GameConfig.Version
  - Night.GameConfig.Window
  langs:
  - csharp
  - vb
  name: GameConfig
  nameWithType: GameConfig
  fullName: Night.GameConfig
  type: Class
  source:
    remote:
      path: src/Night/Configuration/GameConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: GameConfig
    path: ../src/Night/Configuration/GameConfig.cs
    startLine: 29
  assemblies:
  - Night
  namespace: Night
  summary: Represents the overall game configuration settings, typically loaded from a config.json file.
  example: []
  syntax:
    content: public class GameConfig
    content.vb: Public Class GameConfig
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Night.GameConfig.Identity
  commentId: P:Night.GameConfig.Identity
  id: Identity
  parent: Night.GameConfig
  langs:
  - csharp
  - vb
  name: Identity
  nameWithType: GameConfig.Identity
  fullName: Night.GameConfig.Identity
  type: Property
  source:
    remote:
      path: src/Night/Configuration/GameConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Identity
    path: ../src/Night/Configuration/GameConfig.cs
    startLine: 34
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the identity of the game. This is used for the save directory.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("identity")]

      public string? Identity { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("identity")>

      Public Property Identity As String
  overload: Night.GameConfig.Identity*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: identity
- uid: Night.GameConfig.AppendIdentity
  commentId: P:Night.GameConfig.AppendIdentity
  id: AppendIdentity
  parent: Night.GameConfig
  langs:
  - csharp
  - vb
  name: AppendIdentity
  nameWithType: GameConfig.AppendIdentity
  fullName: Night.GameConfig.AppendIdentity
  type: Property
  source:
    remote:
      path: src/Night/Configuration/GameConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: AppendIdentity
    path: ../src/Night/Configuration/GameConfig.cs
    startLine: 40
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the game identity should be appended to the save directory path.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("appendidentity")]

      public bool AppendIdentity { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("appendidentity")>

      Public Property AppendIdentity As Boolean
  overload: Night.GameConfig.AppendIdentity*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: appendidentity
- uid: Night.GameConfig.Version
  commentId: P:Night.GameConfig.Version
  id: Version
  parent: Night.GameConfig
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: GameConfig.Version
  fullName: Night.GameConfig.Version
  type: Property
  source:
    remote:
      path: src/Night/Configuration/GameConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Version
    path: ../src/Night/Configuration/GameConfig.cs
    startLine: 46
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the LÖVE version this game targets. Currently informational.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("version")]

      public string Version { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("version")>

      Public Property Version As String
  overload: Night.GameConfig.Version*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: version
- uid: Night.GameConfig.Console
  commentId: P:Night.GameConfig.Console
  id: Console
  parent: Night.GameConfig
  langs:
  - csharp
  - vb
  name: Console
  nameWithType: GameConfig.Console
  fullName: Night.GameConfig.Console
  type: Property
  source:
    remote:
      path: src/Night/Configuration/GameConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Console
    path: ../src/Night/Configuration/GameConfig.cs
    startLine: 52
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether a console window should be attached (Windows only, currently placeholder).
  example: []
  syntax:
    content: >-
      [JsonPropertyName("console")]

      public bool Console { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("console")>

      Public Property Console As Boolean
  overload: Night.GameConfig.Console*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: console
- uid: Night.GameConfig.AccelerometerJoystick
  commentId: P:Night.GameConfig.AccelerometerJoystick
  id: AccelerometerJoystick
  parent: Night.GameConfig
  langs:
  - csharp
  - vb
  name: AccelerometerJoystick
  nameWithType: GameConfig.AccelerometerJoystick
  fullName: Night.GameConfig.AccelerometerJoystick
  type: Property
  source:
    remote:
      path: src/Night/Configuration/GameConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: AccelerometerJoystick
    path: ../src/Night/Configuration/GameConfig.cs
    startLine: 58
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the accelerometer should be used as a joystick.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("accelerometerjoystick")]

      public bool AccelerometerJoystick { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("accelerometerjoystick")>

      Public Property AccelerometerJoystick As Boolean
  overload: Night.GameConfig.AccelerometerJoystick*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: accelerometerjoystick
- uid: Night.GameConfig.ExternalStorage
  commentId: P:Night.GameConfig.ExternalStorage
  id: ExternalStorage
  parent: Night.GameConfig
  langs:
  - csharp
  - vb
  name: ExternalStorage
  nameWithType: GameConfig.ExternalStorage
  fullName: Night.GameConfig.ExternalStorage
  type: Property
  source:
    remote:
      path: src/Night/Configuration/GameConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: ExternalStorage
    path: ../src/Night/Configuration/GameConfig.cs
    startLine: 64
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether to request external storage access (Android only, currently placeholder).
  example: []
  syntax:
    content: >-
      [JsonPropertyName("externalstorage")]

      public bool ExternalStorage { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("externalstorage")>

      Public Property ExternalStorage As Boolean
  overload: Night.GameConfig.ExternalStorage*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: externalstorage
- uid: Night.GameConfig.GammaCorrect
  commentId: P:Night.GameConfig.GammaCorrect
  id: GammaCorrect
  parent: Night.GameConfig
  langs:
  - csharp
  - vb
  name: GammaCorrect
  nameWithType: GameConfig.GammaCorrect
  fullName: Night.GameConfig.GammaCorrect
  type: Property
  source:
    remote:
      path: src/Night/Configuration/GameConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: GammaCorrect
    path: ../src/Night/Configuration/GameConfig.cs
    startLine: 70
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether gamma correction should be enabled.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("gammacorrect")]

      public bool GammaCorrect { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("gammacorrect")>

      Public Property GammaCorrect As Boolean
  overload: Night.GameConfig.GammaCorrect*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: gammacorrect
- uid: Night.GameConfig.Audio
  commentId: P:Night.GameConfig.Audio
  id: Audio
  parent: Night.GameConfig
  langs:
  - csharp
  - vb
  name: Audio
  nameWithType: GameConfig.Audio
  fullName: Night.GameConfig.Audio
  type: Property
  source:
    remote:
      path: src/Night/Configuration/GameConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Audio
    path: ../src/Night/Configuration/GameConfig.cs
    startLine: 76
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the audio module configuration.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("audio")]

      public AudioConfig Audio { get; set; }
    parameters: []
    return:
      type: Night.AudioConfig
    content.vb: >-
      <JsonPropertyName("audio")>

      Public Property Audio As AudioConfig
  overload: Night.GameConfig.Audio*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: audio
- uid: Night.GameConfig.Window
  commentId: P:Night.GameConfig.Window
  id: Window
  parent: Night.GameConfig
  langs:
  - csharp
  - vb
  name: Window
  nameWithType: GameConfig.Window
  fullName: Night.GameConfig.Window
  type: Property
  source:
    remote:
      path: src/Night/Configuration/GameConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Window
    path: ../src/Night/Configuration/GameConfig.cs
    startLine: 82
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the window module configuration.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("window")]

      public WindowConfig Window { get; set; }
    parameters: []
    return:
      type: Night.WindowConfig
    content.vb: >-
      <JsonPropertyName("window")>

      Public Property Window As WindowConfig
  overload: Night.GameConfig.Window*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: window
- uid: Night.GameConfig.Modules
  commentId: P:Night.GameConfig.Modules
  id: Modules
  parent: Night.GameConfig
  langs:
  - csharp
  - vb
  name: Modules
  nameWithType: GameConfig.Modules
  fullName: Night.GameConfig.Modules
  type: Property
  source:
    remote:
      path: src/Night/Configuration/GameConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Modules
    path: ../src/Night/Configuration/GameConfig.cs
    startLine: 88
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the configuration for enabling/disabling engine modules.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("modules")]

      public ModulesConfig Modules { get; set; }
    parameters: []
    return:
      type: Night.ModulesConfig
    content.vb: >-
      <JsonPropertyName("modules")>

      Public Property Modules As ModulesConfig
  overload: Night.GameConfig.Modules*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: modules
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Night.GameConfig.Identity*
  commentId: Overload:Night.GameConfig.Identity
  href: Night.GameConfig.html#Night_GameConfig_Identity
  name: Identity
  nameWithType: GameConfig.Identity
  fullName: Night.GameConfig.Identity
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Night.GameConfig.AppendIdentity*
  commentId: Overload:Night.GameConfig.AppendIdentity
  href: Night.GameConfig.html#Night_GameConfig_AppendIdentity
  name: AppendIdentity
  nameWithType: GameConfig.AppendIdentity
  fullName: Night.GameConfig.AppendIdentity
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Night.GameConfig.Version*
  commentId: Overload:Night.GameConfig.Version
  href: Night.GameConfig.html#Night_GameConfig_Version
  name: Version
  nameWithType: GameConfig.Version
  fullName: Night.GameConfig.Version
- uid: Night.GameConfig.Console*
  commentId: Overload:Night.GameConfig.Console
  href: Night.GameConfig.html#Night_GameConfig_Console
  name: Console
  nameWithType: GameConfig.Console
  fullName: Night.GameConfig.Console
- uid: Night.GameConfig.AccelerometerJoystick*
  commentId: Overload:Night.GameConfig.AccelerometerJoystick
  href: Night.GameConfig.html#Night_GameConfig_AccelerometerJoystick
  name: AccelerometerJoystick
  nameWithType: GameConfig.AccelerometerJoystick
  fullName: Night.GameConfig.AccelerometerJoystick
- uid: Night.GameConfig.ExternalStorage*
  commentId: Overload:Night.GameConfig.ExternalStorage
  href: Night.GameConfig.html#Night_GameConfig_ExternalStorage
  name: ExternalStorage
  nameWithType: GameConfig.ExternalStorage
  fullName: Night.GameConfig.ExternalStorage
- uid: Night.GameConfig.GammaCorrect*
  commentId: Overload:Night.GameConfig.GammaCorrect
  href: Night.GameConfig.html#Night_GameConfig_GammaCorrect
  name: GammaCorrect
  nameWithType: GameConfig.GammaCorrect
  fullName: Night.GameConfig.GammaCorrect
- uid: Night.GameConfig.Audio*
  commentId: Overload:Night.GameConfig.Audio
  href: Night.GameConfig.html#Night_GameConfig_Audio
  name: Audio
  nameWithType: GameConfig.Audio
  fullName: Night.GameConfig.Audio
- uid: Night.AudioConfig
  commentId: T:Night.AudioConfig
  parent: Night
  href: Night.AudioConfig.html
  name: AudioConfig
  nameWithType: AudioConfig
  fullName: Night.AudioConfig
- uid: Night.GameConfig.Window*
  commentId: Overload:Night.GameConfig.Window
  href: Night.GameConfig.html#Night_GameConfig_Window
  name: Window
  nameWithType: GameConfig.Window
  fullName: Night.GameConfig.Window
- uid: Night.WindowConfig
  commentId: T:Night.WindowConfig
  parent: Night
  href: Night.WindowConfig.html
  name: WindowConfig
  nameWithType: WindowConfig
  fullName: Night.WindowConfig
- uid: Night.GameConfig.Modules*
  commentId: Overload:Night.GameConfig.Modules
  href: Night.GameConfig.html#Night_GameConfig_Modules
  name: Modules
  nameWithType: GameConfig.Modules
  fullName: Night.GameConfig.Modules
- uid: Night.ModulesConfig
  commentId: T:Night.ModulesConfig
  parent: Night
  href: Night.ModulesConfig.html
  name: ModulesConfig
  nameWithType: ModulesConfig
  fullName: Night.ModulesConfig



================================================
File: site/api/Night.Graphics.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.Graphics
  commentId: T:Night.Graphics
  id: Graphics
  parent: Night
  children:
  - Night.Graphics.Circle(Night.DrawMode,System.Single,System.Single,System.Single,System.Int32)
  - Night.Graphics.Clear(Night.Color)
  - Night.Graphics.Draw(Night.Sprite,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - Night.Graphics.Line(Night.PointF[])
  - Night.Graphics.Line(System.Single,System.Single,System.Single,System.Single)
  - Night.Graphics.NewImage(System.String)
  - Night.Graphics.Polygon(Night.DrawMode,Night.PointF[])
  - Night.Graphics.Present
  - Night.Graphics.Rectangle(Night.DrawMode,System.Single,System.Single,System.Single,System.Single)
  - Night.Graphics.SetColor(Night.Color)
  - Night.Graphics.SetColor(System.Byte,System.Byte,System.Byte,System.Byte)
  langs:
  - csharp
  - vb
  name: Graphics
  nameWithType: Graphics
  fullName: Night.Graphics
  type: Class
  source:
    remote:
      path: src/Night/Graphics/Graphics.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Graphics
    path: ../src/Night/Graphics/Graphics.cs
    startLine: 36
  assemblies:
  - Night
  namespace: Night
  summary: >-
    Provides functionality for drawing graphics.

    Mimics Love2D's love.graphics module.
  example: []
  syntax:
    content: public static class Graphics
    content.vb: Public Module Graphics
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Night.Graphics.NewImage(System.String)
  commentId: M:Night.Graphics.NewImage(System.String)
  id: NewImage(System.String)
  parent: Night.Graphics
  langs:
  - csharp
  - vb
  name: NewImage(string)
  nameWithType: Graphics.NewImage(string)
  fullName: Night.Graphics.NewImage(string)
  type: Method
  source:
    remote:
      path: src/Night/Graphics/Graphics.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: NewImage
    path: ../src/Night/Graphics/Graphics.cs
    startLine: 43
  assemblies:
  - Night
  namespace: Night
  summary: Creates a new image (Sprite) from a file.
  example: []
  syntax:
    content: public static Sprite? NewImage(string filePath)
    parameters:
    - id: filePath
      type: System.String
      description: The path to the image file.
    return:
      type: Night.Sprite
      description: A new Sprite object.
    content.vb: Public Shared Function NewImage(filePath As String) As Sprite
  overload: Night.Graphics.NewImage*
  nameWithType.vb: Graphics.NewImage(String)
  fullName.vb: Night.Graphics.NewImage(String)
  name.vb: NewImage(String)
- uid: Night.Graphics.SetColor(Night.Color)
  commentId: M:Night.Graphics.SetColor(Night.Color)
  id: SetColor(Night.Color)
  parent: Night.Graphics
  langs:
  - csharp
  - vb
  name: SetColor(Color)
  nameWithType: Graphics.SetColor(Color)
  fullName: Night.Graphics.SetColor(Night.Color)
  type: Method
  source:
    remote:
      path: src/Night/Graphics/Graphics.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: SetColor
    path: ../src/Night/Graphics/Graphics.cs
    startLine: 95
  assemblies:
  - Night
  namespace: Night
  summary: Sets the active color for drawing operations.
  example: []
  syntax:
    content: public static void SetColor(Color color)
    parameters:
    - id: color
      type: Night.Color
      description: The color to set.
    content.vb: Public Shared Sub SetColor(color As Color)
  overload: Night.Graphics.SetColor*
- uid: Night.Graphics.SetColor(System.Byte,System.Byte,System.Byte,System.Byte)
  commentId: M:Night.Graphics.SetColor(System.Byte,System.Byte,System.Byte,System.Byte)
  id: SetColor(System.Byte,System.Byte,System.Byte,System.Byte)
  parent: Night.Graphics
  langs:
  - csharp
  - vb
  name: SetColor(byte, byte, byte, byte)
  nameWithType: Graphics.SetColor(byte, byte, byte, byte)
  fullName: Night.Graphics.SetColor(byte, byte, byte, byte)
  type: Method
  source:
    remote:
      path: src/Night/Graphics/Graphics.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: SetColor
    path: ../src/Night/Graphics/Graphics.cs
    startLine: 118
  assemblies:
  - Night
  namespace: Night
  summary: Sets the active color for drawing operations using individual RGBA components.
  example: []
  syntax:
    content: public static void SetColor(byte r, byte g, byte b, byte a = 255)
    parameters:
    - id: r
      type: System.Byte
      description: The red component (0-255).
    - id: g
      type: System.Byte
      description: The green component (0-255).
    - id: b
      type: System.Byte
      description: The blue component (0-255).
    - id: a
      type: System.Byte
      description: The alpha component (0-255), defaults to 255 (opaque).
    content.vb: Public Shared Sub SetColor(r As Byte, g As Byte, b As Byte, a As Byte = 255)
  overload: Night.Graphics.SetColor*
  nameWithType.vb: Graphics.SetColor(Byte, Byte, Byte, Byte)
  fullName.vb: Night.Graphics.SetColor(Byte, Byte, Byte, Byte)
  name.vb: SetColor(Byte, Byte, Byte, Byte)
- uid: Night.Graphics.Rectangle(Night.DrawMode,System.Single,System.Single,System.Single,System.Single)
  commentId: M:Night.Graphics.Rectangle(Night.DrawMode,System.Single,System.Single,System.Single,System.Single)
  id: Rectangle(Night.DrawMode,System.Single,System.Single,System.Single,System.Single)
  parent: Night.Graphics
  langs:
  - csharp
  - vb
  name: Rectangle(DrawMode, float, float, float, float)
  nameWithType: Graphics.Rectangle(DrawMode, float, float, float, float)
  fullName: Night.Graphics.Rectangle(Night.DrawMode, float, float, float, float)
  type: Method
  source:
    remote:
      path: src/Night/Graphics/Graphics.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Rectangle
    path: ../src/Night/Graphics/Graphics.cs
    startLine: 131
  assemblies:
  - Night
  namespace: Night
  summary: Draws a rectangle.
  example: []
  syntax:
    content: public static void Rectangle(DrawMode mode, float x, float y, float width, float height)
    parameters:
    - id: mode
      type: Night.DrawMode
      description: The drawing mode (Fill or Line).
    - id: x
      type: System.Single
      description: The x-coordinate of the top-left corner.
    - id: y
      type: System.Single
      description: The y-coordinate of the top-left corner.
    - id: width
      type: System.Single
      description: The width of the rectangle.
    - id: height
      type: System.Single
      description: The height of the rectangle.
    content.vb: Public Shared Sub Rectangle(mode As DrawMode, x As Single, y As Single, width As Single, height As Single)
  overload: Night.Graphics.Rectangle*
  nameWithType.vb: Graphics.Rectangle(DrawMode, Single, Single, Single, Single)
  fullName.vb: Night.Graphics.Rectangle(Night.DrawMode, Single, Single, Single, Single)
  name.vb: Rectangle(DrawMode, Single, Single, Single, Single)
- uid: Night.Graphics.Line(System.Single,System.Single,System.Single,System.Single)
  commentId: M:Night.Graphics.Line(System.Single,System.Single,System.Single,System.Single)
  id: Line(System.Single,System.Single,System.Single,System.Single)
  parent: Night.Graphics
  langs:
  - csharp
  - vb
  name: Line(float, float, float, float)
  nameWithType: Graphics.Line(float, float, float, float)
  fullName: Night.Graphics.Line(float, float, float, float)
  type: Method
  source:
    remote:
      path: src/Night/Graphics/Graphics.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Line
    path: ../src/Night/Graphics/Graphics.cs
    startLine: 241
  assemblies:
  - Night
  namespace: Night
  summary: Draws a line segment between two points.
  example: []
  syntax:
    content: public static void Line(float x1, float y1, float x2, float y2)
    parameters:
    - id: x1
      type: System.Single
      description: The x-coordinate of the first point.
    - id: y1
      type: System.Single
      description: The y-coordinate of the first point.
    - id: x2
      type: System.Single
      description: The x-coordinate of the second point.
    - id: y2
      type: System.Single
      description: The y-coordinate of the second point.
    content.vb: Public Shared Sub Line(x1 As Single, y1 As Single, x2 As Single, y2 As Single)
  overload: Night.Graphics.Line*
  nameWithType.vb: Graphics.Line(Single, Single, Single, Single)
  fullName.vb: Night.Graphics.Line(Single, Single, Single, Single)
  name.vb: Line(Single, Single, Single, Single)
- uid: Night.Graphics.Line(Night.PointF[])
  commentId: M:Night.Graphics.Line(Night.PointF[])
  id: Line(Night.PointF[])
  parent: Night.Graphics
  langs:
  - csharp
  - vb
  name: Line(PointF[])
  nameWithType: Graphics.Line(PointF[])
  fullName: Night.Graphics.Line(Night.PointF[])
  type: Method
  source:
    remote:
      path: src/Night/Graphics/Graphics.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Line
    path: ../src/Night/Graphics/Graphics.cs
    startLine: 261
  assemblies:
  - Night
  namespace: Night
  summary: Draws a sequence of connected line segments.
  example: []
  syntax:
    content: public static void Line(PointF[] points)
    parameters:
    - id: points
      type: Night.PointF[]
      description: An array of points to connect.
    content.vb: Public Shared Sub Line(points As PointF())
  overload: Night.Graphics.Line*
  nameWithType.vb: Graphics.Line(PointF())
  fullName.vb: Night.Graphics.Line(Night.PointF())
  name.vb: Line(PointF())
- uid: Night.Graphics.Polygon(Night.DrawMode,Night.PointF[])
  commentId: M:Night.Graphics.Polygon(Night.DrawMode,Night.PointF[])
  id: Polygon(Night.DrawMode,Night.PointF[])
  parent: Night.Graphics
  langs:
  - csharp
  - vb
  name: Polygon(DrawMode, PointF[])
  nameWithType: Graphics.Polygon(DrawMode, PointF[])
  fullName: Night.Graphics.Polygon(Night.DrawMode, Night.PointF[])
  type: Method
  source:
    remote:
      path: src/Night/Graphics/Graphics.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Polygon
    path: ../src/Night/Graphics/Graphics.cs
    startLine: 294
  assemblies:
  - Night
  namespace: Night
  summary: Draws a polygon.
  example: []
  syntax:
    content: public static void Polygon(DrawMode mode, PointF[] vertices)
    parameters:
    - id: mode
      type: Night.DrawMode
      description: The drawing mode (Fill or Line).
    - id: vertices
      type: Night.PointF[]
      description: An array of points representing the polygon's vertices.
    content.vb: Public Shared Sub Polygon(mode As DrawMode, vertices As PointF())
  overload: Night.Graphics.Polygon*
  nameWithType.vb: Graphics.Polygon(DrawMode, PointF())
  fullName.vb: Night.Graphics.Polygon(Night.DrawMode, Night.PointF())
  name.vb: Polygon(DrawMode, PointF())
- uid: Night.Graphics.Circle(Night.DrawMode,System.Single,System.Single,System.Single,System.Int32)
  commentId: M:Night.Graphics.Circle(Night.DrawMode,System.Single,System.Single,System.Single,System.Int32)
  id: Circle(Night.DrawMode,System.Single,System.Single,System.Single,System.Int32)
  parent: Night.Graphics
  langs:
  - csharp
  - vb
  name: Circle(DrawMode, float, float, float, int)
  nameWithType: Graphics.Circle(DrawMode, float, float, float, int)
  fullName: Night.Graphics.Circle(Night.DrawMode, float, float, float, int)
  type: Method
  source:
    remote:
      path: src/Night/Graphics/Graphics.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Circle
    path: ../src/Night/Graphics/Graphics.cs
    startLine: 415
  assemblies:
  - Night
  namespace: Night
  summary: Draws a circle.
  example: []
  syntax:
    content: public static void Circle(DrawMode mode, float x, float y, float radius, int segments = 12)
    parameters:
    - id: mode
      type: Night.DrawMode
      description: The drawing mode (Fill or Line).
    - id: x
      type: System.Single
      description: The x-coordinate of the circle's center.
    - id: y
      type: System.Single
      description: The y-coordinate of the circle's center.
    - id: radius
      type: System.Single
      description: The radius of the circle.
    - id: segments
      type: System.Int32
      description: The number of segments used to draw the circle (more segments means a smoother circle).
    content.vb: Public Shared Sub Circle(mode As DrawMode, x As Single, y As Single, radius As Single, segments As Integer = 12)
  overload: Night.Graphics.Circle*
  nameWithType.vb: Graphics.Circle(DrawMode, Single, Single, Single, Integer)
  fullName.vb: Night.Graphics.Circle(Night.DrawMode, Single, Single, Single, Integer)
  name.vb: Circle(DrawMode, Single, Single, Single, Integer)
- uid: Night.Graphics.Draw(Night.Sprite,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:Night.Graphics.Draw(Night.Sprite,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: Draw(Night.Sprite,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: Night.Graphics
  langs:
  - csharp
  - vb
  name: Draw(Sprite, float, float, float, float, float, float, float)
  nameWithType: Graphics.Draw(Sprite, float, float, float, float, float, float, float)
  fullName: Night.Graphics.Draw(Night.Sprite, float, float, float, float, float, float, float)
  type: Method
  source:
    remote:
      path: src/Night/Graphics/Graphics.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Draw
    path: ../src/Night/Graphics/Graphics.cs
    startLine: 490
  assemblies:
  - Night
  namespace: Night
  summary: Draws a sprite to the screen.
  example: []
  syntax:
    content: public static void Draw(Sprite sprite, float x, float y, float rotation = 0, float scaleX = 1, float scaleY = 1, float offsetX = 0, float offsetY = 0)
    parameters:
    - id: sprite
      type: Night.Sprite
      description: The sprite to draw.
    - id: x
      type: System.Single
      description: The x-coordinate to draw the sprite at.
    - id: y
      type: System.Single
      description: The y-coordinate to draw the sprite at.
    - id: rotation
      type: System.Single
      description: The rotation of the sprite (in radians).
    - id: scaleX
      type: System.Single
      description: The horizontal scale factor.
    - id: scaleY
      type: System.Single
      description: The vertical scale factor.
    - id: offsetX
      type: System.Single
      description: The x-offset for the sprite's origin.
    - id: offsetY
      type: System.Single
      description: The y-offset for the sprite's origin.
    content.vb: Public Shared Sub Draw(sprite As Sprite, x As Single, y As Single, rotation As Single = 0, scaleX As Single = 1, scaleY As Single = 1, offsetX As Single = 0, offsetY As Single = 0)
  overload: Night.Graphics.Draw*
  nameWithType.vb: Graphics.Draw(Sprite, Single, Single, Single, Single, Single, Single, Single)
  fullName.vb: Night.Graphics.Draw(Night.Sprite, Single, Single, Single, Single, Single, Single, Single)
  name.vb: Draw(Sprite, Single, Single, Single, Single, Single, Single, Single)
- uid: Night.Graphics.Clear(Night.Color)
  commentId: M:Night.Graphics.Clear(Night.Color)
  id: Clear(Night.Color)
  parent: Night.Graphics
  langs:
  - csharp
  - vb
  name: Clear(Color)
  nameWithType: Graphics.Clear(Color)
  fullName: Night.Graphics.Clear(Night.Color)
  type: Method
  source:
    remote:
      path: src/Night/Graphics/Graphics.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Clear
    path: ../src/Night/Graphics/Graphics.cs
    startLine: 571
  assemblies:
  - Night
  namespace: Night
  summary: Clears the screen to a specific color.
  example: []
  syntax:
    content: public static void Clear(Color color)
    parameters:
    - id: color
      type: Night.Color
      description: The color to clear the screen with.
    content.vb: Public Shared Sub Clear(color As Color)
  overload: Night.Graphics.Clear*
- uid: Night.Graphics.Present
  commentId: M:Night.Graphics.Present
  id: Present
  parent: Night.Graphics
  langs:
  - csharp
  - vb
  name: Present()
  nameWithType: Graphics.Present()
  fullName: Night.Graphics.Present()
  type: Method
  source:
    remote:
      path: src/Night/Graphics/Graphics.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Present
    path: ../src/Night/Graphics/Graphics.cs
    startLine: 598
  assemblies:
  - Night
  namespace: Night
  summary: Presents the drawn graphics to the screen (swaps buffers).
  example: []
  syntax:
    content: public static void Present()
    content.vb: Public Shared Sub Present()
  overload: Night.Graphics.Present*
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Night.Graphics.NewImage*
  commentId: Overload:Night.Graphics.NewImage
  href: Night.Graphics.html#Night_Graphics_NewImage_System_String_
  name: NewImage
  nameWithType: Graphics.NewImage
  fullName: Night.Graphics.NewImage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Night.Sprite
  commentId: T:Night.Sprite
  parent: Night
  href: Night.Sprite.html
  name: Sprite
  nameWithType: Sprite
  fullName: Night.Sprite
- uid: Night.Graphics.SetColor*
  commentId: Overload:Night.Graphics.SetColor
  href: Night.Graphics.html#Night_Graphics_SetColor_Night_Color_
  name: SetColor
  nameWithType: Graphics.SetColor
  fullName: Night.Graphics.SetColor
- uid: Night.Color
  commentId: T:Night.Color
  parent: Night
  href: Night.Color.html
  name: Color
  nameWithType: Color
  fullName: Night.Color
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: Night.Graphics.Rectangle*
  commentId: Overload:Night.Graphics.Rectangle
  href: Night.Graphics.html#Night_Graphics_Rectangle_Night_DrawMode_System_Single_System_Single_System_Single_System_Single_
  name: Rectangle
  nameWithType: Graphics.Rectangle
  fullName: Night.Graphics.Rectangle
- uid: Night.DrawMode
  commentId: T:Night.DrawMode
  parent: Night
  href: Night.DrawMode.html
  name: DrawMode
  nameWithType: DrawMode
  fullName: Night.DrawMode
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Night.Graphics.Line*
  commentId: Overload:Night.Graphics.Line
  href: Night.Graphics.html#Night_Graphics_Line_System_Single_System_Single_System_Single_System_Single_
  name: Line
  nameWithType: Graphics.Line
  fullName: Night.Graphics.Line
- uid: Night.PointF[]
  isExternal: true
  href: Night.PointF.html
  name: PointF[]
  nameWithType: PointF[]
  fullName: Night.PointF[]
  nameWithType.vb: PointF()
  fullName.vb: Night.PointF()
  name.vb: PointF()
  spec.csharp:
  - uid: Night.PointF
    name: PointF
    href: Night.PointF.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Night.PointF
    name: PointF
    href: Night.PointF.html
  - name: (
  - name: )
- uid: Night.Graphics.Polygon*
  commentId: Overload:Night.Graphics.Polygon
  href: Night.Graphics.html#Night_Graphics_Polygon_Night_DrawMode_Night_PointF___
  name: Polygon
  nameWithType: Graphics.Polygon
  fullName: Night.Graphics.Polygon
- uid: Night.Graphics.Circle*
  commentId: Overload:Night.Graphics.Circle
  href: Night.Graphics.html#Night_Graphics_Circle_Night_DrawMode_System_Single_System_Single_System_Single_System_Int32_
  name: Circle
  nameWithType: Graphics.Circle
  fullName: Night.Graphics.Circle
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Night.Graphics.Draw*
  commentId: Overload:Night.Graphics.Draw
  href: Night.Graphics.html#Night_Graphics_Draw_Night_Sprite_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_
  name: Draw
  nameWithType: Graphics.Draw
  fullName: Night.Graphics.Draw
- uid: Night.Graphics.Clear*
  commentId: Overload:Night.Graphics.Clear
  href: Night.Graphics.html#Night_Graphics_Clear_Night_Color_
  name: Clear
  nameWithType: Graphics.Clear
  fullName: Night.Graphics.Clear
- uid: Night.Graphics.Present*
  commentId: Overload:Night.Graphics.Present
  href: Night.Graphics.html#Night_Graphics_Present
  name: Present
  nameWithType: Graphics.Present
  fullName: Night.Graphics.Present



================================================
File: site/api/Night.IGame.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.IGame
  commentId: T:Night.IGame
  id: IGame
  parent: Night
  children:
  - Night.IGame.Draw
  - Night.IGame.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
  - Night.IGame.KeyReleased(Night.KeySymbol,Night.KeyCode)
  - Night.IGame.Load
  - Night.IGame.MousePressed(System.Int32,System.Int32,Night.MouseButton,System.Boolean,System.Int32)
  - Night.IGame.MouseReleased(System.Int32,System.Int32,Night.MouseButton,System.Boolean,System.Int32)
  - Night.IGame.Update(System.Double)
  langs:
  - csharp
  - vb
  name: IGame
  nameWithType: IGame
  fullName: Night.IGame
  type: Interface
  source:
    remote:
      path: src/Night/IGame.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: IGame
    path: ../src/Night/IGame.cs
    startLine: 30
  assemblies:
  - Night
  namespace: Night
  summary: >-
    Interface for a game that can be run by the Night Engine.

    Game developers will implement this interface in their main game class.
  example: []
  syntax:
    content: public interface IGame
    content.vb: Public Interface IGame
- uid: Night.IGame.Load
  commentId: M:Night.IGame.Load
  id: Load
  parent: Night.IGame
  langs:
  - csharp
  - vb
  name: Load()
  nameWithType: IGame.Load()
  fullName: Night.IGame.Load()
  type: Method
  source:
    remote:
      path: src/Night/IGame.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Load
    path: ../src/Night/IGame.cs
    startLine: 35
  assemblies:
  - Night
  namespace: Night
  summary: Called exactly once when the game starts for loading resources.
  example: []
  syntax:
    content: void Load()
    content.vb: Sub Load()
  overload: Night.IGame.Load*
- uid: Night.IGame.Update(System.Double)
  commentId: M:Night.IGame.Update(System.Double)
  id: Update(System.Double)
  parent: Night.IGame
  langs:
  - csharp
  - vb
  name: Update(double)
  nameWithType: IGame.Update(double)
  fullName: Night.IGame.Update(double)
  type: Method
  source:
    remote:
      path: src/Night/IGame.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Update
    path: ../src/Night/IGame.cs
    startLine: 41
  assemblies:
  - Night
  namespace: Night
  summary: Callback function used to update the state of the game every frame.
  example: []
  syntax:
    content: void Update(double deltaTime)
    parameters:
    - id: deltaTime
      type: System.Double
      description: The time elapsed since the last frame, in seconds.
    content.vb: Sub Update(deltaTime As Double)
  overload: Night.IGame.Update*
  nameWithType.vb: IGame.Update(Double)
  fullName.vb: Night.IGame.Update(Double)
  name.vb: Update(Double)
- uid: Night.IGame.Draw
  commentId: M:Night.IGame.Draw
  id: Draw
  parent: Night.IGame
  langs:
  - csharp
  - vb
  name: Draw()
  nameWithType: IGame.Draw()
  fullName: Night.IGame.Draw()
  type: Method
  source:
    remote:
      path: src/Night/IGame.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Draw
    path: ../src/Night/IGame.cs
    startLine: 46
  assemblies:
  - Night
  namespace: Night
  summary: Callback function used to draw on the screen every frame.
  example: []
  syntax:
    content: void Draw()
    content.vb: Sub Draw()
  overload: Night.IGame.Draw*
- uid: Night.IGame.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
  commentId: M:Night.IGame.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
  id: KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
  parent: Night.IGame
  langs:
  - csharp
  - vb
  name: KeyPressed(KeySymbol, KeyCode, bool)
  nameWithType: IGame.KeyPressed(KeySymbol, KeyCode, bool)
  fullName: Night.IGame.KeyPressed(Night.KeySymbol, Night.KeyCode, bool)
  type: Method
  source:
    remote:
      path: src/Night/IGame.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: KeyPressed
    path: ../src/Night/IGame.cs
    startLine: 54
  assemblies:
  - Night
  namespace: Night
  summary: Callback function triggered when a key is pressed.
  example: []
  syntax:
    content: void KeyPressed(KeySymbol key, KeyCode scancode, bool isRepeat)
    parameters:
    - id: key
      type: Night.KeySymbol
      description: The logical key symbol that was pressed.
    - id: scancode
      type: Night.KeyCode
      description: The physical key (scancode) that was pressed.
    - id: isRepeat
      type: System.Boolean
      description: True if this is a key repeat event, false otherwise.
    content.vb: Sub KeyPressed(key As KeySymbol, scancode As KeyCode, isRepeat As Boolean)
  overload: Night.IGame.KeyPressed*
  nameWithType.vb: IGame.KeyPressed(KeySymbol, KeyCode, Boolean)
  fullName.vb: Night.IGame.KeyPressed(Night.KeySymbol, Night.KeyCode, Boolean)
  name.vb: KeyPressed(KeySymbol, KeyCode, Boolean)
- uid: Night.IGame.KeyReleased(Night.KeySymbol,Night.KeyCode)
  commentId: M:Night.IGame.KeyReleased(Night.KeySymbol,Night.KeyCode)
  id: KeyReleased(Night.KeySymbol,Night.KeyCode)
  parent: Night.IGame
  langs:
  - csharp
  - vb
  name: KeyReleased(KeySymbol, KeyCode)
  nameWithType: IGame.KeyReleased(KeySymbol, KeyCode)
  fullName: Night.IGame.KeyReleased(Night.KeySymbol, Night.KeyCode)
  type: Method
  source:
    remote:
      path: src/Night/IGame.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: KeyReleased
    path: ../src/Night/IGame.cs
    startLine: 61
  assemblies:
  - Night
  namespace: Night
  summary: Callback function triggered when a key is released.
  example: []
  syntax:
    content: void KeyReleased(KeySymbol key, KeyCode scancode)
    parameters:
    - id: key
      type: Night.KeySymbol
      description: The logical key symbol that was released.
    - id: scancode
      type: Night.KeyCode
      description: The physical key (scancode) that was released.
    content.vb: Sub KeyReleased(key As KeySymbol, scancode As KeyCode)
  overload: Night.IGame.KeyReleased*
- uid: Night.IGame.MousePressed(System.Int32,System.Int32,Night.MouseButton,System.Boolean,System.Int32)
  commentId: M:Night.IGame.MousePressed(System.Int32,System.Int32,Night.MouseButton,System.Boolean,System.Int32)
  id: MousePressed(System.Int32,System.Int32,Night.MouseButton,System.Boolean,System.Int32)
  parent: Night.IGame
  langs:
  - csharp
  - vb
  name: MousePressed(int, int, MouseButton, bool, int)
  nameWithType: IGame.MousePressed(int, int, MouseButton, bool, int)
  fullName: Night.IGame.MousePressed(int, int, Night.MouseButton, bool, int)
  type: Method
  source:
    remote:
      path: src/Night/IGame.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: MousePressed
    path: ../src/Night/IGame.cs
    startLine: 73
  assemblies:
  - Night
  namespace: Night
  summary: Callback function triggered when a mouse button is pressed.
  example: []
  syntax:
    content: void MousePressed(int x, int y, MouseButton button, bool istouch, int presses)
    parameters:
    - id: x
      type: System.Int32
      description: The x-coordinate of the mouse cursor relative to the window.
    - id: y
      type: System.Int32
      description: The y-coordinate of the mouse cursor relative to the window.
    - id: button
      type: Night.MouseButton
      description: The mouse button that was pressed.
    - id: istouch
      type: System.Boolean
      description: True if the event was generated by a touch input device, false otherwise.
    - id: presses
      type: System.Int32
      description: The number of clicks (1 for single-click, 2 for double-click, etc.).
    content.vb: Sub MousePressed(x As Integer, y As Integer, button As MouseButton, istouch As Boolean, presses As Integer)
  overload: Night.IGame.MousePressed*
  nameWithType.vb: IGame.MousePressed(Integer, Integer, MouseButton, Boolean, Integer)
  fullName.vb: Night.IGame.MousePressed(Integer, Integer, Night.MouseButton, Boolean, Integer)
  name.vb: MousePressed(Integer, Integer, MouseButton, Boolean, Integer)
- uid: Night.IGame.MouseReleased(System.Int32,System.Int32,Night.MouseButton,System.Boolean,System.Int32)
  commentId: M:Night.IGame.MouseReleased(System.Int32,System.Int32,Night.MouseButton,System.Boolean,System.Int32)
  id: MouseReleased(System.Int32,System.Int32,Night.MouseButton,System.Boolean,System.Int32)
  parent: Night.IGame
  langs:
  - csharp
  - vb
  name: MouseReleased(int, int, MouseButton, bool, int)
  nameWithType: IGame.MouseReleased(int, int, MouseButton, bool, int)
  fullName: Night.IGame.MouseReleased(int, int, Night.MouseButton, bool, int)
  type: Method
  source:
    remote:
      path: src/Night/IGame.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: MouseReleased
    path: ../src/Night/IGame.cs
    startLine: 85
  assemblies:
  - Night
  namespace: Night
  summary: Callback function triggered when a mouse button is released.
  example: []
  syntax:
    content: void MouseReleased(int x, int y, MouseButton button, bool istouch, int presses)
    parameters:
    - id: x
      type: System.Int32
      description: The x-coordinate of the mouse cursor relative to the window.
    - id: y
      type: System.Int32
      description: The y-coordinate of the mouse cursor relative to the window.
    - id: button
      type: Night.MouseButton
      description: The mouse button that was released.
    - id: istouch
      type: System.Boolean
      description: True if the event was generated by a touch input device, false otherwise.
    - id: presses
      type: System.Int32
      description: The number of clicks (typically 1 for release, but may vary).
    content.vb: Sub MouseReleased(x As Integer, y As Integer, button As MouseButton, istouch As Boolean, presses As Integer)
  overload: Night.IGame.MouseReleased*
  nameWithType.vb: IGame.MouseReleased(Integer, Integer, MouseButton, Boolean, Integer)
  fullName.vb: Night.IGame.MouseReleased(Integer, Integer, Night.MouseButton, Boolean, Integer)
  name.vb: MouseReleased(Integer, Integer, MouseButton, Boolean, Integer)
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: Night.IGame.Load*
  commentId: Overload:Night.IGame.Load
  href: Night.IGame.html#Night_IGame_Load
  name: Load
  nameWithType: IGame.Load
  fullName: Night.IGame.Load
- uid: Night.IGame.Update*
  commentId: Overload:Night.IGame.Update
  href: Night.IGame.html#Night_IGame_Update_System_Double_
  name: Update
  nameWithType: IGame.Update
  fullName: Night.IGame.Update
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Night.IGame.Draw*
  commentId: Overload:Night.IGame.Draw
  href: Night.IGame.html#Night_IGame_Draw
  name: Draw
  nameWithType: IGame.Draw
  fullName: Night.IGame.Draw
- uid: Night.IGame.KeyPressed*
  commentId: Overload:Night.IGame.KeyPressed
  href: Night.IGame.html#Night_IGame_KeyPressed_Night_KeySymbol_Night_KeyCode_System_Boolean_
  name: KeyPressed
  nameWithType: IGame.KeyPressed
  fullName: Night.IGame.KeyPressed
- uid: Night.KeySymbol
  commentId: T:Night.KeySymbol
  parent: Night
  href: Night.KeySymbol.html
  name: KeySymbol
  nameWithType: KeySymbol
  fullName: Night.KeySymbol
- uid: Night.KeyCode
  commentId: T:Night.KeyCode
  parent: Night
  href: Night.KeyCode.html
  name: KeyCode
  nameWithType: KeyCode
  fullName: Night.KeyCode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Night.IGame.KeyReleased*
  commentId: Overload:Night.IGame.KeyReleased
  href: Night.IGame.html#Night_IGame_KeyReleased_Night_KeySymbol_Night_KeyCode_
  name: KeyReleased
  nameWithType: IGame.KeyReleased
  fullName: Night.IGame.KeyReleased
- uid: Night.IGame.MousePressed*
  commentId: Overload:Night.IGame.MousePressed
  href: Night.IGame.html#Night_IGame_MousePressed_System_Int32_System_Int32_Night_MouseButton_System_Boolean_System_Int32_
  name: MousePressed
  nameWithType: IGame.MousePressed
  fullName: Night.IGame.MousePressed
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Night.MouseButton
  commentId: T:Night.MouseButton
  parent: Night
  href: Night.MouseButton.html
  name: MouseButton
  nameWithType: MouseButton
  fullName: Night.MouseButton
- uid: Night.IGame.MouseReleased*
  commentId: Overload:Night.IGame.MouseReleased
  href: Night.IGame.html#Night_IGame_MouseReleased_System_Int32_System_Int32_Night_MouseButton_System_Boolean_System_Int32_
  name: MouseReleased
  nameWithType: IGame.MouseReleased
  fullName: Night.IGame.MouseReleased



================================================
File: site/api/Night.KeyCode.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.KeyCode
  commentId: T:Night.KeyCode
  id: KeyCode
  parent: Night
  children:
  - Night.KeyCode.A
  - Night.KeyCode.Again
  - Night.KeyCode.Alpha0
  - Night.KeyCode.Alpha1
  - Night.KeyCode.Alpha2
  - Night.KeyCode.Alpha3
  - Night.KeyCode.Alpha4
  - Night.KeyCode.Alpha5
  - Night.KeyCode.Alpha6
  - Night.KeyCode.Alpha7
  - Night.KeyCode.Alpha8
  - Night.KeyCode.Alpha9
  - Night.KeyCode.Apostrophe
  - Night.KeyCode.AppBack
  - Night.KeyCode.AppBookmarks
  - Night.KeyCode.AppForward
  - Night.KeyCode.AppHome
  - Night.KeyCode.AppRefresh
  - Night.KeyCode.AppSearch
  - Night.KeyCode.AppStop
  - Night.KeyCode.Application
  - Night.KeyCode.B
  - Night.KeyCode.Backslash
  - Night.KeyCode.Backspace
  - Night.KeyCode.C
  - Night.KeyCode.Capslock
  - Night.KeyCode.Comma
  - Night.KeyCode.Copy
  - Night.KeyCode.Cut
  - Night.KeyCode.D
  - Night.KeyCode.Delete
  - Night.KeyCode.Down
  - Night.KeyCode.E
  - Night.KeyCode.End
  - Night.KeyCode.Equals
  - Night.KeyCode.Escape
  - Night.KeyCode.Execute
  - Night.KeyCode.F
  - Night.KeyCode.F1
  - Night.KeyCode.F10
  - Night.KeyCode.F11
  - Night.KeyCode.F12
  - Night.KeyCode.F13
  - Night.KeyCode.F14
  - Night.KeyCode.F15
  - Night.KeyCode.F16
  - Night.KeyCode.F17
  - Night.KeyCode.F18
  - Night.KeyCode.F19
  - Night.KeyCode.F2
  - Night.KeyCode.F20
  - Night.KeyCode.F21
  - Night.KeyCode.F22
  - Night.KeyCode.F23
  - Night.KeyCode.F24
  - Night.KeyCode.F3
  - Night.KeyCode.F4
  - Night.KeyCode.F5
  - Night.KeyCode.F6
  - Night.KeyCode.F7
  - Night.KeyCode.F8
  - Night.KeyCode.F9
  - Night.KeyCode.Find
  - Night.KeyCode.G
  - Night.KeyCode.Grave
  - Night.KeyCode.H
  - Night.KeyCode.Help
  - Night.KeyCode.Home
  - Night.KeyCode.I
  - Night.KeyCode.Insert
  - Night.KeyCode.J
  - Night.KeyCode.K
  - Night.KeyCode.Kp0
  - Night.KeyCode.Kp1
  - Night.KeyCode.Kp2
  - Night.KeyCode.Kp3
  - Night.KeyCode.Kp4
  - Night.KeyCode.Kp5
  - Night.KeyCode.Kp6
  - Night.KeyCode.Kp7
  - Night.KeyCode.Kp8
  - Night.KeyCode.Kp9
  - Night.KeyCode.KpComma
  - Night.KeyCode.KpDivide
  - Night.KeyCode.KpEnter
  - Night.KeyCode.KpEquals
  - Night.KeyCode.KpMinus
  - Night.KeyCode.KpMultiply
  - Night.KeyCode.KpPeriod
  - Night.KeyCode.KpPlus
  - Night.KeyCode.L
  - Night.KeyCode.LAlt
  - Night.KeyCode.LCtrl
  - Night.KeyCode.LGUI
  - Night.KeyCode.LShift
  - Night.KeyCode.Left
  - Night.KeyCode.Leftbracket
  - Night.KeyCode.M
  - Night.KeyCode.MediaEject
  - Night.KeyCode.MediaFastForward
  - Night.KeyCode.MediaNextTrack
  - Night.KeyCode.MediaPause
  - Night.KeyCode.MediaPlay
  - Night.KeyCode.MediaPlayPause
  - Night.KeyCode.MediaPreviousTrack
  - Night.KeyCode.MediaRecord
  - Night.KeyCode.MediaRewind
  - Night.KeyCode.MediaSelect
  - Night.KeyCode.MediaStop
  - Night.KeyCode.Menu
  - Night.KeyCode.Minus
  - Night.KeyCode.Mode
  - Night.KeyCode.Mute
  - Night.KeyCode.N
  - Night.KeyCode.NonUsbackslash
  - Night.KeyCode.NonUshash
  - Night.KeyCode.NumlockClear
  - Night.KeyCode.O
  - Night.KeyCode.P
  - Night.KeyCode.Pagedown
  - Night.KeyCode.Pageup
  - Night.KeyCode.Paste
  - Night.KeyCode.Pause
  - Night.KeyCode.Period
  - Night.KeyCode.Power
  - Night.KeyCode.Printscreen
  - Night.KeyCode.Q
  - Night.KeyCode.R
  - Night.KeyCode.RAlt
  - Night.KeyCode.RCtrl
  - Night.KeyCode.RGUI
  - Night.KeyCode.RShift
  - Night.KeyCode.Return
  - Night.KeyCode.Right
  - Night.KeyCode.Rightbracket
  - Night.KeyCode.S
  - Night.KeyCode.Scrolllock
  - Night.KeyCode.Select
  - Night.KeyCode.Semicolon
  - Night.KeyCode.Slash
  - Night.KeyCode.Space
  - Night.KeyCode.Stop
  - Night.KeyCode.T
  - Night.KeyCode.Tab
  - Night.KeyCode.U
  - Night.KeyCode.Undo
  - Night.KeyCode.Unknown
  - Night.KeyCode.Up
  - Night.KeyCode.V
  - Night.KeyCode.VolumeDown
  - Night.KeyCode.VolumeUp
  - Night.KeyCode.W
  - Night.KeyCode.X
  - Night.KeyCode.Y
  - Night.KeyCode.Z
  langs:
  - csharp
  - vb
  name: KeyCode
  nameWithType: KeyCode
  fullName: Night.KeyCode
  type: Enum
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: KeyCode
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 31
  assemblies:
  - Night
  namespace: Night
  summary: Represents keyboard scancodes. Values correspond to SDL_Scancode.
  remarks: >-
    See SDL_scancode.h for the full list of SDL_Scancode values.

    This enum maps directly to SDL_Scancode values, representing the physical key on the keyboard.
  example: []
  syntax:
    content: public enum KeyCode
    content.vb: Public Enum KeyCode
- uid: Night.KeyCode.Unknown
  commentId: F:Night.KeyCode.Unknown
  id: Unknown
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Unknown
  nameWithType: KeyCode.Unknown
  fullName: Night.KeyCode.Unknown
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Unknown
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 34
  assemblies:
  - Night
  namespace: Night
  summary: An unknown scancode.
  example: []
  syntax:
    content: Unknown = 0
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.A
  commentId: F:Night.KeyCode.A
  id: A
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: A
  nameWithType: KeyCode.A
  fullName: Night.KeyCode.A
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: A
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 39
  assemblies:
  - Night
  namespace: Night
  summary: The 'A' key.
  example: []
  syntax:
    content: A = 4
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.B
  commentId: F:Night.KeyCode.B
  id: B
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: B
  nameWithType: KeyCode.B
  fullName: Night.KeyCode.B
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: B
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 42
  assemblies:
  - Night
  namespace: Night
  summary: The 'B' key.
  example: []
  syntax:
    content: B = 5
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.C
  commentId: F:Night.KeyCode.C
  id: C
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: C
  nameWithType: KeyCode.C
  fullName: Night.KeyCode.C
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: C
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 45
  assemblies:
  - Night
  namespace: Night
  summary: The 'C' key.
  example: []
  syntax:
    content: C = 6
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.D
  commentId: F:Night.KeyCode.D
  id: D
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: D
  nameWithType: KeyCode.D
  fullName: Night.KeyCode.D
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: D
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 48
  assemblies:
  - Night
  namespace: Night
  summary: The 'D' key.
  example: []
  syntax:
    content: D = 7
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.E
  commentId: F:Night.KeyCode.E
  id: E
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: E
  nameWithType: KeyCode.E
  fullName: Night.KeyCode.E
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: E
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 51
  assemblies:
  - Night
  namespace: Night
  summary: The 'E' key.
  example: []
  syntax:
    content: E = 8
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.F
  commentId: F:Night.KeyCode.F
  id: F
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: F
  nameWithType: KeyCode.F
  fullName: Night.KeyCode.F
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 54
  assemblies:
  - Night
  namespace: Night
  summary: The 'F' key.
  example: []
  syntax:
    content: F = 9
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.G
  commentId: F:Night.KeyCode.G
  id: G
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: G
  nameWithType: KeyCode.G
  fullName: Night.KeyCode.G
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: G
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 57
  assemblies:
  - Night
  namespace: Night
  summary: The 'G' key.
  example: []
  syntax:
    content: G = 10
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.H
  commentId: F:Night.KeyCode.H
  id: H
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: H
  nameWithType: KeyCode.H
  fullName: Night.KeyCode.H
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: H
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 60
  assemblies:
  - Night
  namespace: Night
  summary: The 'H' key.
  example: []
  syntax:
    content: H = 11
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.I
  commentId: F:Night.KeyCode.I
  id: I
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: I
  nameWithType: KeyCode.I
  fullName: Night.KeyCode.I
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: I
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 63
  assemblies:
  - Night
  namespace: Night
  summary: The 'I' key.
  example: []
  syntax:
    content: I = 12
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.J
  commentId: F:Night.KeyCode.J
  id: J
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: J
  nameWithType: KeyCode.J
  fullName: Night.KeyCode.J
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: J
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 66
  assemblies:
  - Night
  namespace: Night
  summary: The 'J' key.
  example: []
  syntax:
    content: J = 13
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.K
  commentId: F:Night.KeyCode.K
  id: K
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: K
  nameWithType: KeyCode.K
  fullName: Night.KeyCode.K
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: K
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 69
  assemblies:
  - Night
  namespace: Night
  summary: The 'K' key.
  example: []
  syntax:
    content: K = 14
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.L
  commentId: F:Night.KeyCode.L
  id: L
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: L
  nameWithType: KeyCode.L
  fullName: Night.KeyCode.L
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: L
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 72
  assemblies:
  - Night
  namespace: Night
  summary: The 'L' key.
  example: []
  syntax:
    content: L = 15
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.M
  commentId: F:Night.KeyCode.M
  id: M
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: M
  nameWithType: KeyCode.M
  fullName: Night.KeyCode.M
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: M
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 75
  assemblies:
  - Night
  namespace: Night
  summary: The 'M' key.
  example: []
  syntax:
    content: M = 16
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.N
  commentId: F:Night.KeyCode.N
  id: N
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: N
  nameWithType: KeyCode.N
  fullName: Night.KeyCode.N
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: N
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 78
  assemblies:
  - Night
  namespace: Night
  summary: The 'N' key.
  example: []
  syntax:
    content: N = 17
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.O
  commentId: F:Night.KeyCode.O
  id: O
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: O
  nameWithType: KeyCode.O
  fullName: Night.KeyCode.O
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: O
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 81
  assemblies:
  - Night
  namespace: Night
  summary: The 'O' key.
  example: []
  syntax:
    content: O = 18
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.P
  commentId: F:Night.KeyCode.P
  id: P
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: P
  nameWithType: KeyCode.P
  fullName: Night.KeyCode.P
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: P
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 84
  assemblies:
  - Night
  namespace: Night
  summary: The 'P' key.
  example: []
  syntax:
    content: P = 19
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Q
  commentId: F:Night.KeyCode.Q
  id: Q
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Q
  nameWithType: KeyCode.Q
  fullName: Night.KeyCode.Q
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Q
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 87
  assemblies:
  - Night
  namespace: Night
  summary: The 'Q' key.
  example: []
  syntax:
    content: Q = 20
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.R
  commentId: F:Night.KeyCode.R
  id: R
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: R
  nameWithType: KeyCode.R
  fullName: Night.KeyCode.R
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: R
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 90
  assemblies:
  - Night
  namespace: Night
  summary: The 'R' key.
  example: []
  syntax:
    content: R = 21
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.S
  commentId: F:Night.KeyCode.S
  id: S
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: S
  nameWithType: KeyCode.S
  fullName: Night.KeyCode.S
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: S
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 93
  assemblies:
  - Night
  namespace: Night
  summary: The 'S' key.
  example: []
  syntax:
    content: S = 22
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.T
  commentId: F:Night.KeyCode.T
  id: T
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: T
  nameWithType: KeyCode.T
  fullName: Night.KeyCode.T
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: T
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 96
  assemblies:
  - Night
  namespace: Night
  summary: The 'T' key.
  example: []
  syntax:
    content: T = 23
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.U
  commentId: F:Night.KeyCode.U
  id: U
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: U
  nameWithType: KeyCode.U
  fullName: Night.KeyCode.U
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: U
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 99
  assemblies:
  - Night
  namespace: Night
  summary: The 'U' key.
  example: []
  syntax:
    content: U = 24
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.V
  commentId: F:Night.KeyCode.V
  id: V
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: V
  nameWithType: KeyCode.V
  fullName: Night.KeyCode.V
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: V
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 102
  assemblies:
  - Night
  namespace: Night
  summary: The 'V' key.
  example: []
  syntax:
    content: V = 25
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.W
  commentId: F:Night.KeyCode.W
  id: W
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: W
  nameWithType: KeyCode.W
  fullName: Night.KeyCode.W
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: W
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 105
  assemblies:
  - Night
  namespace: Night
  summary: The 'W' key.
  example: []
  syntax:
    content: W = 26
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.X
  commentId: F:Night.KeyCode.X
  id: X
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: X
  nameWithType: KeyCode.X
  fullName: Night.KeyCode.X
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: X
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 108
  assemblies:
  - Night
  namespace: Night
  summary: The 'X' key.
  example: []
  syntax:
    content: X = 27
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Y
  commentId: F:Night.KeyCode.Y
  id: Y
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: KeyCode.Y
  fullName: Night.KeyCode.Y
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Y
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 111
  assemblies:
  - Night
  namespace: Night
  summary: The 'Y' key.
  example: []
  syntax:
    content: Y = 28
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Z
  commentId: F:Night.KeyCode.Z
  id: Z
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: KeyCode.Z
  fullName: Night.KeyCode.Z
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Z
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 114
  assemblies:
  - Night
  namespace: Night
  summary: The 'Z' key.
  example: []
  syntax:
    content: Z = 29
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Alpha1
  commentId: F:Night.KeyCode.Alpha1
  id: Alpha1
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Alpha1
  nameWithType: KeyCode.Alpha1
  fullName: Night.KeyCode.Alpha1
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Alpha1
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 119
  assemblies:
  - Night
  namespace: Night
  summary: The '1' key.
  example: []
  syntax:
    content: Alpha1 = 30
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Alpha2
  commentId: F:Night.KeyCode.Alpha2
  id: Alpha2
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Alpha2
  nameWithType: KeyCode.Alpha2
  fullName: Night.KeyCode.Alpha2
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Alpha2
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 122
  assemblies:
  - Night
  namespace: Night
  summary: The '2' key.
  example: []
  syntax:
    content: Alpha2 = 31
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Alpha3
  commentId: F:Night.KeyCode.Alpha3
  id: Alpha3
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Alpha3
  nameWithType: KeyCode.Alpha3
  fullName: Night.KeyCode.Alpha3
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Alpha3
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 125
  assemblies:
  - Night
  namespace: Night
  summary: The '3' key.
  example: []
  syntax:
    content: Alpha3 = 32
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Alpha4
  commentId: F:Night.KeyCode.Alpha4
  id: Alpha4
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Alpha4
  nameWithType: KeyCode.Alpha4
  fullName: Night.KeyCode.Alpha4
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Alpha4
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 128
  assemblies:
  - Night
  namespace: Night
  summary: The '4' key.
  example: []
  syntax:
    content: Alpha4 = 33
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Alpha5
  commentId: F:Night.KeyCode.Alpha5
  id: Alpha5
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Alpha5
  nameWithType: KeyCode.Alpha5
  fullName: Night.KeyCode.Alpha5
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Alpha5
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 131
  assemblies:
  - Night
  namespace: Night
  summary: The '5' key.
  example: []
  syntax:
    content: Alpha5 = 34
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Alpha6
  commentId: F:Night.KeyCode.Alpha6
  id: Alpha6
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Alpha6
  nameWithType: KeyCode.Alpha6
  fullName: Night.KeyCode.Alpha6
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Alpha6
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 134
  assemblies:
  - Night
  namespace: Night
  summary: The '6' key.
  example: []
  syntax:
    content: Alpha6 = 35
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Alpha7
  commentId: F:Night.KeyCode.Alpha7
  id: Alpha7
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Alpha7
  nameWithType: KeyCode.Alpha7
  fullName: Night.KeyCode.Alpha7
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Alpha7
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 137
  assemblies:
  - Night
  namespace: Night
  summary: The '7' key.
  example: []
  syntax:
    content: Alpha7 = 36
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Alpha8
  commentId: F:Night.KeyCode.Alpha8
  id: Alpha8
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Alpha8
  nameWithType: KeyCode.Alpha8
  fullName: Night.KeyCode.Alpha8
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Alpha8
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 140
  assemblies:
  - Night
  namespace: Night
  summary: The '8' key.
  example: []
  syntax:
    content: Alpha8 = 37
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Alpha9
  commentId: F:Night.KeyCode.Alpha9
  id: Alpha9
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Alpha9
  nameWithType: KeyCode.Alpha9
  fullName: Night.KeyCode.Alpha9
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Alpha9
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 143
  assemblies:
  - Night
  namespace: Night
  summary: The '9' key.
  example: []
  syntax:
    content: Alpha9 = 38
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Alpha0
  commentId: F:Night.KeyCode.Alpha0
  id: Alpha0
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Alpha0
  nameWithType: KeyCode.Alpha0
  fullName: Night.KeyCode.Alpha0
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Alpha0
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 146
  assemblies:
  - Night
  namespace: Night
  summary: The '0' key.
  example: []
  syntax:
    content: Alpha0 = 39
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Return
  commentId: F:Night.KeyCode.Return
  id: Return
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Return
  nameWithType: KeyCode.Return
  fullName: Night.KeyCode.Return
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Return
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 151
  assemblies:
  - Night
  namespace: Night
  summary: The Return/Enter key.
  example: []
  syntax:
    content: Return = 40
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Escape
  commentId: F:Night.KeyCode.Escape
  id: Escape
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Escape
  nameWithType: KeyCode.Escape
  fullName: Night.KeyCode.Escape
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Escape
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 154
  assemblies:
  - Night
  namespace: Night
  summary: The Escape key.
  example: []
  syntax:
    content: Escape = 41
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Backspace
  commentId: F:Night.KeyCode.Backspace
  id: Backspace
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Backspace
  nameWithType: KeyCode.Backspace
  fullName: Night.KeyCode.Backspace
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Backspace
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 157
  assemblies:
  - Night
  namespace: Night
  summary: The Backspace key.
  example: []
  syntax:
    content: Backspace = 42
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Tab
  commentId: F:Night.KeyCode.Tab
  id: Tab
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Tab
  nameWithType: KeyCode.Tab
  fullName: Night.KeyCode.Tab
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Tab
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 160
  assemblies:
  - Night
  namespace: Night
  summary: The Tab key.
  example: []
  syntax:
    content: Tab = 43
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Space
  commentId: F:Night.KeyCode.Space
  id: Space
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Space
  nameWithType: KeyCode.Space
  fullName: Night.KeyCode.Space
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Space
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 163
  assemblies:
  - Night
  namespace: Night
  summary: The Space bar.
  example: []
  syntax:
    content: Space = 44
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Minus
  commentId: F:Night.KeyCode.Minus
  id: Minus
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Minus
  nameWithType: KeyCode.Minus
  fullName: Night.KeyCode.Minus
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Minus
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 166
  assemblies:
  - Night
  namespace: Night
  summary: The Minus '-' key.
  example: []
  syntax:
    content: Minus = 45
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Equals
  commentId: F:Night.KeyCode.Equals
  id: Equals
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Equals
  nameWithType: KeyCode.Equals
  fullName: Night.KeyCode.Equals
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Equals
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 169
  assemblies:
  - Night
  namespace: Night
  summary: The Equals '=' key.
  example: []
  syntax:
    content: Equals = 46
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Leftbracket
  commentId: F:Night.KeyCode.Leftbracket
  id: Leftbracket
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Leftbracket
  nameWithType: KeyCode.Leftbracket
  fullName: Night.KeyCode.Leftbracket
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Leftbracket
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 172
  assemblies:
  - Night
  namespace: Night
  summary: The Left Bracket '[' key.
  example: []
  syntax:
    content: Leftbracket = 47
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Rightbracket
  commentId: F:Night.KeyCode.Rightbracket
  id: Rightbracket
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Rightbracket
  nameWithType: KeyCode.Rightbracket
  fullName: Night.KeyCode.Rightbracket
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Rightbracket
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 175
  assemblies:
  - Night
  namespace: Night
  summary: The Right Bracket ']' key.
  example: []
  syntax:
    content: Rightbracket = 48
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Backslash
  commentId: F:Night.KeyCode.Backslash
  id: Backslash
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Backslash
  nameWithType: KeyCode.Backslash
  fullName: Night.KeyCode.Backslash
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Backslash
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 178
  assemblies:
  - Night
  namespace: Night
  summary: The Backslash '' key.
  example: []
  syntax:
    content: Backslash = 49
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.NonUshash
  commentId: F:Night.KeyCode.NonUshash
  id: NonUshash
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: NonUshash
  nameWithType: KeyCode.NonUshash
  fullName: Night.KeyCode.NonUshash
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: NonUshash
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 181
  assemblies:
  - Night
  namespace: Night
  summary: The Non-US Hash key (e.g., UK pound sign).
  example: []
  syntax:
    content: NonUshash = 50
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Semicolon
  commentId: F:Night.KeyCode.Semicolon
  id: Semicolon
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Semicolon
  nameWithType: KeyCode.Semicolon
  fullName: Night.KeyCode.Semicolon
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Semicolon
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 184
  assemblies:
  - Night
  namespace: Night
  summary: The Semicolon ';' key.
  example: []
  syntax:
    content: Semicolon = 51
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Apostrophe
  commentId: F:Night.KeyCode.Apostrophe
  id: Apostrophe
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Apostrophe
  nameWithType: KeyCode.Apostrophe
  fullName: Night.KeyCode.Apostrophe
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Apostrophe
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 187
  assemblies:
  - Night
  namespace: Night
  summary: The Apostrophe ''' key.
  example: []
  syntax:
    content: Apostrophe = 52
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Grave
  commentId: F:Night.KeyCode.Grave
  id: Grave
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Grave
  nameWithType: KeyCode.Grave
  fullName: Night.KeyCode.Grave
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Grave
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 190
  assemblies:
  - Night
  namespace: Night
  summary: The Grave Accent (Backtick) '`' key.
  example: []
  syntax:
    content: Grave = 53
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Comma
  commentId: F:Night.KeyCode.Comma
  id: Comma
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Comma
  nameWithType: KeyCode.Comma
  fullName: Night.KeyCode.Comma
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Comma
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 193
  assemblies:
  - Night
  namespace: Night
  summary: The Comma ',' key.
  example: []
  syntax:
    content: Comma = 54
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Period
  commentId: F:Night.KeyCode.Period
  id: Period
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Period
  nameWithType: KeyCode.Period
  fullName: Night.KeyCode.Period
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Period
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 196
  assemblies:
  - Night
  namespace: Night
  summary: The Period '.' key.
  example: []
  syntax:
    content: Period = 55
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Slash
  commentId: F:Night.KeyCode.Slash
  id: Slash
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Slash
  nameWithType: KeyCode.Slash
  fullName: Night.KeyCode.Slash
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Slash
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 199
  assemblies:
  - Night
  namespace: Night
  summary: The Slash '/' key.
  example: []
  syntax:
    content: Slash = 56
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Capslock
  commentId: F:Night.KeyCode.Capslock
  id: Capslock
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Capslock
  nameWithType: KeyCode.Capslock
  fullName: Night.KeyCode.Capslock
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Capslock
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 202
  assemblies:
  - Night
  namespace: Night
  summary: The Caps Lock key.
  example: []
  syntax:
    content: Capslock = 57
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.F1
  commentId: F:Night.KeyCode.F1
  id: F1
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: F1
  nameWithType: KeyCode.F1
  fullName: Night.KeyCode.F1
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F1
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 207
  assemblies:
  - Night
  namespace: Night
  summary: The F1 key.
  example: []
  syntax:
    content: F1 = 58
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.F2
  commentId: F:Night.KeyCode.F2
  id: F2
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: F2
  nameWithType: KeyCode.F2
  fullName: Night.KeyCode.F2
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F2
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 210
  assemblies:
  - Night
  namespace: Night
  summary: The F2 key.
  example: []
  syntax:
    content: F2 = 59
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.F3
  commentId: F:Night.KeyCode.F3
  id: F3
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: F3
  nameWithType: KeyCode.F3
  fullName: Night.KeyCode.F3
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F3
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 213
  assemblies:
  - Night
  namespace: Night
  summary: The F3 key.
  example: []
  syntax:
    content: F3 = 60
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.F4
  commentId: F:Night.KeyCode.F4
  id: F4
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: F4
  nameWithType: KeyCode.F4
  fullName: Night.KeyCode.F4
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F4
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 216
  assemblies:
  - Night
  namespace: Night
  summary: The F4 key.
  example: []
  syntax:
    content: F4 = 61
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.F5
  commentId: F:Night.KeyCode.F5
  id: F5
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: F5
  nameWithType: KeyCode.F5
  fullName: Night.KeyCode.F5
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F5
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 219
  assemblies:
  - Night
  namespace: Night
  summary: The F5 key.
  example: []
  syntax:
    content: F5 = 62
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.F6
  commentId: F:Night.KeyCode.F6
  id: F6
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: F6
  nameWithType: KeyCode.F6
  fullName: Night.KeyCode.F6
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F6
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 222
  assemblies:
  - Night
  namespace: Night
  summary: The F6 key.
  example: []
  syntax:
    content: F6 = 63
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.F7
  commentId: F:Night.KeyCode.F7
  id: F7
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: F7
  nameWithType: KeyCode.F7
  fullName: Night.KeyCode.F7
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F7
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 225
  assemblies:
  - Night
  namespace: Night
  summary: The F7 key.
  example: []
  syntax:
    content: F7 = 64
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.F8
  commentId: F:Night.KeyCode.F8
  id: F8
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: F8
  nameWithType: KeyCode.F8
  fullName: Night.KeyCode.F8
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F8
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 228
  assemblies:
  - Night
  namespace: Night
  summary: The F8 key.
  example: []
  syntax:
    content: F8 = 65
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.F9
  commentId: F:Night.KeyCode.F9
  id: F9
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: F9
  nameWithType: KeyCode.F9
  fullName: Night.KeyCode.F9
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F9
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 231
  assemblies:
  - Night
  namespace: Night
  summary: The F9 key.
  example: []
  syntax:
    content: F9 = 66
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.F10
  commentId: F:Night.KeyCode.F10
  id: F10
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: F10
  nameWithType: KeyCode.F10
  fullName: Night.KeyCode.F10
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F10
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 234
  assemblies:
  - Night
  namespace: Night
  summary: The F10 key.
  example: []
  syntax:
    content: F10 = 67
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.F11
  commentId: F:Night.KeyCode.F11
  id: F11
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: F11
  nameWithType: KeyCode.F11
  fullName: Night.KeyCode.F11
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F11
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 237
  assemblies:
  - Night
  namespace: Night
  summary: The F11 key.
  example: []
  syntax:
    content: F11 = 68
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.F12
  commentId: F:Night.KeyCode.F12
  id: F12
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: F12
  nameWithType: KeyCode.F12
  fullName: Night.KeyCode.F12
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F12
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 240
  assemblies:
  - Night
  namespace: Night
  summary: The F12 key.
  example: []
  syntax:
    content: F12 = 69
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Printscreen
  commentId: F:Night.KeyCode.Printscreen
  id: Printscreen
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Printscreen
  nameWithType: KeyCode.Printscreen
  fullName: Night.KeyCode.Printscreen
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Printscreen
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 243
  assemblies:
  - Night
  namespace: Night
  summary: The Print Screen key.
  example: []
  syntax:
    content: Printscreen = 70
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Scrolllock
  commentId: F:Night.KeyCode.Scrolllock
  id: Scrolllock
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Scrolllock
  nameWithType: KeyCode.Scrolllock
  fullName: Night.KeyCode.Scrolllock
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Scrolllock
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 246
  assemblies:
  - Night
  namespace: Night
  summary: The Scroll Lock key.
  example: []
  syntax:
    content: Scrolllock = 71
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Pause
  commentId: F:Night.KeyCode.Pause
  id: Pause
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Pause
  nameWithType: KeyCode.Pause
  fullName: Night.KeyCode.Pause
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Pause
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 249
  assemblies:
  - Night
  namespace: Night
  summary: The Pause key.
  example: []
  syntax:
    content: Pause = 72
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Insert
  commentId: F:Night.KeyCode.Insert
  id: Insert
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Insert
  nameWithType: KeyCode.Insert
  fullName: Night.KeyCode.Insert
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Insert
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 252
  assemblies:
  - Night
  namespace: Night
  summary: The Insert key.
  example: []
  syntax:
    content: Insert = 73
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Home
  commentId: F:Night.KeyCode.Home
  id: Home
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Home
  nameWithType: KeyCode.Home
  fullName: Night.KeyCode.Home
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Home
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 255
  assemblies:
  - Night
  namespace: Night
  summary: The Home key.
  example: []
  syntax:
    content: Home = 74
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Pageup
  commentId: F:Night.KeyCode.Pageup
  id: Pageup
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Pageup
  nameWithType: KeyCode.Pageup
  fullName: Night.KeyCode.Pageup
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Pageup
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 258
  assemblies:
  - Night
  namespace: Night
  summary: The Page Up key.
  example: []
  syntax:
    content: Pageup = 75
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Delete
  commentId: F:Night.KeyCode.Delete
  id: Delete
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Delete
  nameWithType: KeyCode.Delete
  fullName: Night.KeyCode.Delete
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Delete
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 261
  assemblies:
  - Night
  namespace: Night
  summary: The Delete key.
  example: []
  syntax:
    content: Delete = 76
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.End
  commentId: F:Night.KeyCode.End
  id: End
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: End
  nameWithType: KeyCode.End
  fullName: Night.KeyCode.End
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: End
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 264
  assemblies:
  - Night
  namespace: Night
  summary: The End key.
  example: []
  syntax:
    content: End = 77
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Pagedown
  commentId: F:Night.KeyCode.Pagedown
  id: Pagedown
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Pagedown
  nameWithType: KeyCode.Pagedown
  fullName: Night.KeyCode.Pagedown
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Pagedown
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 267
  assemblies:
  - Night
  namespace: Night
  summary: The Page Down key.
  example: []
  syntax:
    content: Pagedown = 78
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Right
  commentId: F:Night.KeyCode.Right
  id: Right
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: KeyCode.Right
  fullName: Night.KeyCode.Right
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Right
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 272
  assemblies:
  - Night
  namespace: Night
  summary: The Right Arrow key.
  example: []
  syntax:
    content: Right = 79
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Left
  commentId: F:Night.KeyCode.Left
  id: Left
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: KeyCode.Left
  fullName: Night.KeyCode.Left
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Left
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 275
  assemblies:
  - Night
  namespace: Night
  summary: The Left Arrow key.
  example: []
  syntax:
    content: Left = 80
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Down
  commentId: F:Night.KeyCode.Down
  id: Down
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Down
  nameWithType: KeyCode.Down
  fullName: Night.KeyCode.Down
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Down
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 278
  assemblies:
  - Night
  namespace: Night
  summary: The Down Arrow key.
  example: []
  syntax:
    content: Down = 81
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Up
  commentId: F:Night.KeyCode.Up
  id: Up
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Up
  nameWithType: KeyCode.Up
  fullName: Night.KeyCode.Up
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Up
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 281
  assemblies:
  - Night
  namespace: Night
  summary: The Up Arrow key.
  example: []
  syntax:
    content: Up = 82
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.NumlockClear
  commentId: F:Night.KeyCode.NumlockClear
  id: NumlockClear
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: NumlockClear
  nameWithType: KeyCode.NumlockClear
  fullName: Night.KeyCode.NumlockClear
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: NumlockClear
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 284
  assemblies:
  - Night
  namespace: Night
  summary: The Num Lock or Clear key.
  example: []
  syntax:
    content: NumlockClear = 83
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.KpDivide
  commentId: F:Night.KeyCode.KpDivide
  id: KpDivide
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: KpDivide
  nameWithType: KeyCode.KpDivide
  fullName: Night.KeyCode.KpDivide
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: KpDivide
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 289
  assemblies:
  - Night
  namespace: Night
  summary: The Keypad Divide '/' key.
  example: []
  syntax:
    content: KpDivide = 84
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.KpMultiply
  commentId: F:Night.KeyCode.KpMultiply
  id: KpMultiply
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: KpMultiply
  nameWithType: KeyCode.KpMultiply
  fullName: Night.KeyCode.KpMultiply
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: KpMultiply
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 292
  assemblies:
  - Night
  namespace: Night
  summary: The Keypad Multiply '*' key.
  example: []
  syntax:
    content: KpMultiply = 85
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.KpMinus
  commentId: F:Night.KeyCode.KpMinus
  id: KpMinus
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: KpMinus
  nameWithType: KeyCode.KpMinus
  fullName: Night.KeyCode.KpMinus
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: KpMinus
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 295
  assemblies:
  - Night
  namespace: Night
  summary: The Keypad Minus '-' key.
  example: []
  syntax:
    content: KpMinus = 86
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.KpPlus
  commentId: F:Night.KeyCode.KpPlus
  id: KpPlus
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: KpPlus
  nameWithType: KeyCode.KpPlus
  fullName: Night.KeyCode.KpPlus
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: KpPlus
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 298
  assemblies:
  - Night
  namespace: Night
  summary: The Keypad Plus '+' key.
  example: []
  syntax:
    content: KpPlus = 87
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.KpEnter
  commentId: F:Night.KeyCode.KpEnter
  id: KpEnter
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: KpEnter
  nameWithType: KeyCode.KpEnter
  fullName: Night.KeyCode.KpEnter
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: KpEnter
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 301
  assemblies:
  - Night
  namespace: Night
  summary: The Keypad Enter key.
  example: []
  syntax:
    content: KpEnter = 88
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Kp1
  commentId: F:Night.KeyCode.Kp1
  id: Kp1
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Kp1
  nameWithType: KeyCode.Kp1
  fullName: Night.KeyCode.Kp1
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Kp1
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 304
  assemblies:
  - Night
  namespace: Night
  summary: The Keypad '1' key.
  example: []
  syntax:
    content: Kp1 = 89
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Kp2
  commentId: F:Night.KeyCode.Kp2
  id: Kp2
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Kp2
  nameWithType: KeyCode.Kp2
  fullName: Night.KeyCode.Kp2
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Kp2
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 307
  assemblies:
  - Night
  namespace: Night
  summary: The Keypad '2' key.
  example: []
  syntax:
    content: Kp2 = 90
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Kp3
  commentId: F:Night.KeyCode.Kp3
  id: Kp3
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Kp3
  nameWithType: KeyCode.Kp3
  fullName: Night.KeyCode.Kp3
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Kp3
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 310
  assemblies:
  - Night
  namespace: Night
  summary: The Keypad '3' key.
  example: []
  syntax:
    content: Kp3 = 91
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Kp4
  commentId: F:Night.KeyCode.Kp4
  id: Kp4
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Kp4
  nameWithType: KeyCode.Kp4
  fullName: Night.KeyCode.Kp4
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Kp4
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 313
  assemblies:
  - Night
  namespace: Night
  summary: The Keypad '4' key.
  example: []
  syntax:
    content: Kp4 = 92
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Kp5
  commentId: F:Night.KeyCode.Kp5
  id: Kp5
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Kp5
  nameWithType: KeyCode.Kp5
  fullName: Night.KeyCode.Kp5
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Kp5
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 316
  assemblies:
  - Night
  namespace: Night
  summary: The Keypad '5' key.
  example: []
  syntax:
    content: Kp5 = 93
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Kp6
  commentId: F:Night.KeyCode.Kp6
  id: Kp6
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Kp6
  nameWithType: KeyCode.Kp6
  fullName: Night.KeyCode.Kp6
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Kp6
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 319
  assemblies:
  - Night
  namespace: Night
  summary: The Keypad '6' key.
  example: []
  syntax:
    content: Kp6 = 94
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Kp7
  commentId: F:Night.KeyCode.Kp7
  id: Kp7
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Kp7
  nameWithType: KeyCode.Kp7
  fullName: Night.KeyCode.Kp7
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Kp7
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 322
  assemblies:
  - Night
  namespace: Night
  summary: The Keypad '7' key.
  example: []
  syntax:
    content: Kp7 = 95
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Kp8
  commentId: F:Night.KeyCode.Kp8
  id: Kp8
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Kp8
  nameWithType: KeyCode.Kp8
  fullName: Night.KeyCode.Kp8
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Kp8
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 325
  assemblies:
  - Night
  namespace: Night
  summary: The Keypad '8' key.
  example: []
  syntax:
    content: Kp8 = 96
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Kp9
  commentId: F:Night.KeyCode.Kp9
  id: Kp9
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Kp9
  nameWithType: KeyCode.Kp9
  fullName: Night.KeyCode.Kp9
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Kp9
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 328
  assemblies:
  - Night
  namespace: Night
  summary: The Keypad '9' key.
  example: []
  syntax:
    content: Kp9 = 97
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Kp0
  commentId: F:Night.KeyCode.Kp0
  id: Kp0
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Kp0
  nameWithType: KeyCode.Kp0
  fullName: Night.KeyCode.Kp0
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Kp0
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 331
  assemblies:
  - Night
  namespace: Night
  summary: The Keypad '0' key.
  example: []
  syntax:
    content: Kp0 = 98
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.KpPeriod
  commentId: F:Night.KeyCode.KpPeriod
  id: KpPeriod
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: KpPeriod
  nameWithType: KeyCode.KpPeriod
  fullName: Night.KeyCode.KpPeriod
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: KpPeriod
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 334
  assemblies:
  - Night
  namespace: Night
  summary: The Keypad Period '.' key.
  example: []
  syntax:
    content: KpPeriod = 99
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.NonUsbackslash
  commentId: F:Night.KeyCode.NonUsbackslash
  id: NonUsbackslash
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: NonUsbackslash
  nameWithType: KeyCode.NonUsbackslash
  fullName: Night.KeyCode.NonUsbackslash
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: NonUsbackslash
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 337
  assemblies:
  - Night
  namespace: Night
  summary: The Non-US Backslash key.
  example: []
  syntax:
    content: NonUsbackslash = 100
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Application
  commentId: F:Night.KeyCode.Application
  id: Application
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Application
  nameWithType: KeyCode.Application
  fullName: Night.KeyCode.Application
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Application
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 340
  assemblies:
  - Night
  namespace: Night
  summary: The Application key (context menu).
  example: []
  syntax:
    content: Application = 101
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Power
  commentId: F:Night.KeyCode.Power
  id: Power
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Power
  nameWithType: KeyCode.Power
  fullName: Night.KeyCode.Power
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Power
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 343
  assemblies:
  - Night
  namespace: Night
  summary: The Power key.
  example: []
  syntax:
    content: Power = 102
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.KpEquals
  commentId: F:Night.KeyCode.KpEquals
  id: KpEquals
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: KpEquals
  nameWithType: KeyCode.KpEquals
  fullName: Night.KeyCode.KpEquals
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: KpEquals
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 346
  assemblies:
  - Night
  namespace: Night
  summary: The Keypad Equals '=' key.
  example: []
  syntax:
    content: KpEquals = 103
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.F13
  commentId: F:Night.KeyCode.F13
  id: F13
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: F13
  nameWithType: KeyCode.F13
  fullName: Night.KeyCode.F13
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F13
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 349
  assemblies:
  - Night
  namespace: Night
  summary: The F13 key.
  example: []
  syntax:
    content: F13 = 104
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.F14
  commentId: F:Night.KeyCode.F14
  id: F14
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: F14
  nameWithType: KeyCode.F14
  fullName: Night.KeyCode.F14
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F14
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 352
  assemblies:
  - Night
  namespace: Night
  summary: The F14 key.
  example: []
  syntax:
    content: F14 = 105
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.F15
  commentId: F:Night.KeyCode.F15
  id: F15
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: F15
  nameWithType: KeyCode.F15
  fullName: Night.KeyCode.F15
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F15
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 355
  assemblies:
  - Night
  namespace: Night
  summary: The F15 key.
  example: []
  syntax:
    content: F15 = 106
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.F16
  commentId: F:Night.KeyCode.F16
  id: F16
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: F16
  nameWithType: KeyCode.F16
  fullName: Night.KeyCode.F16
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F16
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 358
  assemblies:
  - Night
  namespace: Night
  summary: The F16 key.
  example: []
  syntax:
    content: F16 = 107
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.F17
  commentId: F:Night.KeyCode.F17
  id: F17
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: F17
  nameWithType: KeyCode.F17
  fullName: Night.KeyCode.F17
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F17
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 361
  assemblies:
  - Night
  namespace: Night
  summary: The F17 key.
  example: []
  syntax:
    content: F17 = 108
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.F18
  commentId: F:Night.KeyCode.F18
  id: F18
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: F18
  nameWithType: KeyCode.F18
  fullName: Night.KeyCode.F18
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F18
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 364
  assemblies:
  - Night
  namespace: Night
  summary: The F18 key.
  example: []
  syntax:
    content: F18 = 109
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.F19
  commentId: F:Night.KeyCode.F19
  id: F19
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: F19
  nameWithType: KeyCode.F19
  fullName: Night.KeyCode.F19
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F19
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 367
  assemblies:
  - Night
  namespace: Night
  summary: The F19 key.
  example: []
  syntax:
    content: F19 = 110
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.F20
  commentId: F:Night.KeyCode.F20
  id: F20
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: F20
  nameWithType: KeyCode.F20
  fullName: Night.KeyCode.F20
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F20
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 370
  assemblies:
  - Night
  namespace: Night
  summary: The F20 key.
  example: []
  syntax:
    content: F20 = 111
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.F21
  commentId: F:Night.KeyCode.F21
  id: F21
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: F21
  nameWithType: KeyCode.F21
  fullName: Night.KeyCode.F21
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F21
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 373
  assemblies:
  - Night
  namespace: Night
  summary: The F21 key.
  example: []
  syntax:
    content: F21 = 112
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.F22
  commentId: F:Night.KeyCode.F22
  id: F22
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: F22
  nameWithType: KeyCode.F22
  fullName: Night.KeyCode.F22
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F22
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 376
  assemblies:
  - Night
  namespace: Night
  summary: The F22 key.
  example: []
  syntax:
    content: F22 = 113
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.F23
  commentId: F:Night.KeyCode.F23
  id: F23
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: F23
  nameWithType: KeyCode.F23
  fullName: Night.KeyCode.F23
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F23
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 379
  assemblies:
  - Night
  namespace: Night
  summary: The F23 key.
  example: []
  syntax:
    content: F23 = 114
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.F24
  commentId: F:Night.KeyCode.F24
  id: F24
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: F24
  nameWithType: KeyCode.F24
  fullName: Night.KeyCode.F24
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F24
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 382
  assemblies:
  - Night
  namespace: Night
  summary: The F24 key.
  example: []
  syntax:
    content: F24 = 115
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Execute
  commentId: F:Night.KeyCode.Execute
  id: Execute
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Execute
  nameWithType: KeyCode.Execute
  fullName: Night.KeyCode.Execute
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Execute
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 385
  assemblies:
  - Night
  namespace: Night
  summary: The Execute key.
  example: []
  syntax:
    content: Execute = 116
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Help
  commentId: F:Night.KeyCode.Help
  id: Help
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Help
  nameWithType: KeyCode.Help
  fullName: Night.KeyCode.Help
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Help
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 388
  assemblies:
  - Night
  namespace: Night
  summary: The Help key.
  example: []
  syntax:
    content: Help = 117
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Menu
  commentId: F:Night.KeyCode.Menu
  id: Menu
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Menu
  nameWithType: KeyCode.Menu
  fullName: Night.KeyCode.Menu
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Menu
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 391
  assemblies:
  - Night
  namespace: Night
  summary: The Menu key.
  example: []
  syntax:
    content: Menu = 118
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Select
  commentId: F:Night.KeyCode.Select
  id: Select
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Select
  nameWithType: KeyCode.Select
  fullName: Night.KeyCode.Select
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Select
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 394
  assemblies:
  - Night
  namespace: Night
  summary: The Select key.
  example: []
  syntax:
    content: Select = 119
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Stop
  commentId: F:Night.KeyCode.Stop
  id: Stop
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Stop
  nameWithType: KeyCode.Stop
  fullName: Night.KeyCode.Stop
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Stop
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 397
  assemblies:
  - Night
  namespace: Night
  summary: The Stop key.
  example: []
  syntax:
    content: Stop = 120
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Again
  commentId: F:Night.KeyCode.Again
  id: Again
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Again
  nameWithType: KeyCode.Again
  fullName: Night.KeyCode.Again
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Again
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 400
  assemblies:
  - Night
  namespace: Night
  summary: The Again key.
  example: []
  syntax:
    content: Again = 121
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Undo
  commentId: F:Night.KeyCode.Undo
  id: Undo
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Undo
  nameWithType: KeyCode.Undo
  fullName: Night.KeyCode.Undo
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Undo
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 403
  assemblies:
  - Night
  namespace: Night
  summary: The Undo key.
  example: []
  syntax:
    content: Undo = 122
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Cut
  commentId: F:Night.KeyCode.Cut
  id: Cut
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Cut
  nameWithType: KeyCode.Cut
  fullName: Night.KeyCode.Cut
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Cut
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 406
  assemblies:
  - Night
  namespace: Night
  summary: The Cut key.
  example: []
  syntax:
    content: Cut = 123
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Copy
  commentId: F:Night.KeyCode.Copy
  id: Copy
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Copy
  nameWithType: KeyCode.Copy
  fullName: Night.KeyCode.Copy
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Copy
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 409
  assemblies:
  - Night
  namespace: Night
  summary: The Copy key.
  example: []
  syntax:
    content: Copy = 124
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Paste
  commentId: F:Night.KeyCode.Paste
  id: Paste
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Paste
  nameWithType: KeyCode.Paste
  fullName: Night.KeyCode.Paste
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Paste
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 412
  assemblies:
  - Night
  namespace: Night
  summary: The Paste key.
  example: []
  syntax:
    content: Paste = 125
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Find
  commentId: F:Night.KeyCode.Find
  id: Find
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Find
  nameWithType: KeyCode.Find
  fullName: Night.KeyCode.Find
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Find
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 415
  assemblies:
  - Night
  namespace: Night
  summary: The Find key.
  example: []
  syntax:
    content: Find = 126
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Mute
  commentId: F:Night.KeyCode.Mute
  id: Mute
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Mute
  nameWithType: KeyCode.Mute
  fullName: Night.KeyCode.Mute
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Mute
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 418
  assemblies:
  - Night
  namespace: Night
  summary: The Mute key.
  example: []
  syntax:
    content: Mute = 127
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.VolumeUp
  commentId: F:Night.KeyCode.VolumeUp
  id: VolumeUp
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: VolumeUp
  nameWithType: KeyCode.VolumeUp
  fullName: Night.KeyCode.VolumeUp
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: VolumeUp
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 421
  assemblies:
  - Night
  namespace: Night
  summary: The Volume Up key.
  example: []
  syntax:
    content: VolumeUp = 128
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.VolumeDown
  commentId: F:Night.KeyCode.VolumeDown
  id: VolumeDown
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: VolumeDown
  nameWithType: KeyCode.VolumeDown
  fullName: Night.KeyCode.VolumeDown
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: VolumeDown
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 424
  assemblies:
  - Night
  namespace: Night
  summary: The Volume Down key.
  example: []
  syntax:
    content: VolumeDown = 129
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.KpComma
  commentId: F:Night.KeyCode.KpComma
  id: KpComma
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: KpComma
  nameWithType: KeyCode.KpComma
  fullName: Night.KeyCode.KpComma
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: KpComma
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 427
  assemblies:
  - Night
  namespace: Night
  summary: The Keypad Comma ',' key.
  example: []
  syntax:
    content: KpComma = 133
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.LCtrl
  commentId: F:Night.KeyCode.LCtrl
  id: LCtrl
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: LCtrl
  nameWithType: KeyCode.LCtrl
  fullName: Night.KeyCode.LCtrl
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: LCtrl
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 432
  assemblies:
  - Night
  namespace: Night
  summary: The Left Control key.
  example: []
  syntax:
    content: LCtrl = 224
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.LShift
  commentId: F:Night.KeyCode.LShift
  id: LShift
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: LShift
  nameWithType: KeyCode.LShift
  fullName: Night.KeyCode.LShift
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: LShift
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 435
  assemblies:
  - Night
  namespace: Night
  summary: The Left Shift key.
  example: []
  syntax:
    content: LShift = 225
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.LAlt
  commentId: F:Night.KeyCode.LAlt
  id: LAlt
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: LAlt
  nameWithType: KeyCode.LAlt
  fullName: Night.KeyCode.LAlt
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: LAlt
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 438
  assemblies:
  - Night
  namespace: Night
  summary: The Left Alt key.
  example: []
  syntax:
    content: LAlt = 226
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.LGUI
  commentId: F:Night.KeyCode.LGUI
  id: LGUI
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: LGUI
  nameWithType: KeyCode.LGUI
  fullName: Night.KeyCode.LGUI
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: LGUI
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 441
  assemblies:
  - Night
  namespace: Night
  summary: The Left GUI key (Windows/Command/Meta key).
  example: []
  syntax:
    content: LGUI = 227
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.RCtrl
  commentId: F:Night.KeyCode.RCtrl
  id: RCtrl
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: RCtrl
  nameWithType: KeyCode.RCtrl
  fullName: Night.KeyCode.RCtrl
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: RCtrl
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 444
  assemblies:
  - Night
  namespace: Night
  summary: The Right Control key.
  example: []
  syntax:
    content: RCtrl = 228
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.RShift
  commentId: F:Night.KeyCode.RShift
  id: RShift
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: RShift
  nameWithType: KeyCode.RShift
  fullName: Night.KeyCode.RShift
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: RShift
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 447
  assemblies:
  - Night
  namespace: Night
  summary: The Right Shift key.
  example: []
  syntax:
    content: RShift = 229
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.RAlt
  commentId: F:Night.KeyCode.RAlt
  id: RAlt
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: RAlt
  nameWithType: KeyCode.RAlt
  fullName: Night.KeyCode.RAlt
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: RAlt
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 450
  assemblies:
  - Night
  namespace: Night
  summary: The Right Alt key.
  example: []
  syntax:
    content: RAlt = 230
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.RGUI
  commentId: F:Night.KeyCode.RGUI
  id: RGUI
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: RGUI
  nameWithType: KeyCode.RGUI
  fullName: Night.KeyCode.RGUI
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: RGUI
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 453
  assemblies:
  - Night
  namespace: Night
  summary: The Right GUI key (Windows/Command/Meta key).
  example: []
  syntax:
    content: RGUI = 231
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.Mode
  commentId: F:Night.KeyCode.Mode
  id: Mode
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: KeyCode.Mode
  fullName: Night.KeyCode.Mode
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Mode
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 456
  assemblies:
  - Night
  namespace: Night
  summary: The Mode Switch key.
  example: []
  syntax:
    content: Mode = 257
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.MediaPlay
  commentId: F:Night.KeyCode.MediaPlay
  id: MediaPlay
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: MediaPlay
  nameWithType: KeyCode.MediaPlay
  fullName: Night.KeyCode.MediaPlay
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: MediaPlay
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 461
  assemblies:
  - Night
  namespace: Night
  summary: The Media Play key.
  example: []
  syntax:
    content: MediaPlay = 262
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.MediaPause
  commentId: F:Night.KeyCode.MediaPause
  id: MediaPause
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: MediaPause
  nameWithType: KeyCode.MediaPause
  fullName: Night.KeyCode.MediaPause
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: MediaPause
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 464
  assemblies:
  - Night
  namespace: Night
  summary: The Media Pause key.
  example: []
  syntax:
    content: MediaPause = 263
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.MediaRecord
  commentId: F:Night.KeyCode.MediaRecord
  id: MediaRecord
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: MediaRecord
  nameWithType: KeyCode.MediaRecord
  fullName: Night.KeyCode.MediaRecord
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: MediaRecord
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 467
  assemblies:
  - Night
  namespace: Night
  summary: The Media Record key.
  example: []
  syntax:
    content: MediaRecord = 264
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.MediaFastForward
  commentId: F:Night.KeyCode.MediaFastForward
  id: MediaFastForward
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: MediaFastForward
  nameWithType: KeyCode.MediaFastForward
  fullName: Night.KeyCode.MediaFastForward
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: MediaFastForward
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 470
  assemblies:
  - Night
  namespace: Night
  summary: The Media Fast Forward key.
  example: []
  syntax:
    content: MediaFastForward = 265
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.MediaRewind
  commentId: F:Night.KeyCode.MediaRewind
  id: MediaRewind
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: MediaRewind
  nameWithType: KeyCode.MediaRewind
  fullName: Night.KeyCode.MediaRewind
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: MediaRewind
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 473
  assemblies:
  - Night
  namespace: Night
  summary: The Media Rewind key.
  example: []
  syntax:
    content: MediaRewind = 266
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.MediaNextTrack
  commentId: F:Night.KeyCode.MediaNextTrack
  id: MediaNextTrack
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: MediaNextTrack
  nameWithType: KeyCode.MediaNextTrack
  fullName: Night.KeyCode.MediaNextTrack
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: MediaNextTrack
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 476
  assemblies:
  - Night
  namespace: Night
  summary: The Media Next Track key.
  example: []
  syntax:
    content: MediaNextTrack = 267
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.MediaPreviousTrack
  commentId: F:Night.KeyCode.MediaPreviousTrack
  id: MediaPreviousTrack
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: MediaPreviousTrack
  nameWithType: KeyCode.MediaPreviousTrack
  fullName: Night.KeyCode.MediaPreviousTrack
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: MediaPreviousTrack
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 479
  assemblies:
  - Night
  namespace: Night
  summary: The Media Previous Track key.
  example: []
  syntax:
    content: MediaPreviousTrack = 268
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.MediaStop
  commentId: F:Night.KeyCode.MediaStop
  id: MediaStop
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: MediaStop
  nameWithType: KeyCode.MediaStop
  fullName: Night.KeyCode.MediaStop
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: MediaStop
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 482
  assemblies:
  - Night
  namespace: Night
  summary: The Media Stop key.
  example: []
  syntax:
    content: MediaStop = 269
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.MediaEject
  commentId: F:Night.KeyCode.MediaEject
  id: MediaEject
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: MediaEject
  nameWithType: KeyCode.MediaEject
  fullName: Night.KeyCode.MediaEject
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: MediaEject
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 485
  assemblies:
  - Night
  namespace: Night
  summary: The Media Eject key.
  example: []
  syntax:
    content: MediaEject = 270
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.MediaPlayPause
  commentId: F:Night.KeyCode.MediaPlayPause
  id: MediaPlayPause
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: MediaPlayPause
  nameWithType: KeyCode.MediaPlayPause
  fullName: Night.KeyCode.MediaPlayPause
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: MediaPlayPause
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 488
  assemblies:
  - Night
  namespace: Night
  summary: The Media Play/Pause key.
  example: []
  syntax:
    content: MediaPlayPause = 271
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.MediaSelect
  commentId: F:Night.KeyCode.MediaSelect
  id: MediaSelect
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: MediaSelect
  nameWithType: KeyCode.MediaSelect
  fullName: Night.KeyCode.MediaSelect
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: MediaSelect
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 491
  assemblies:
  - Night
  namespace: Night
  summary: The Media Select key.
  example: []
  syntax:
    content: MediaSelect = 272
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.AppSearch
  commentId: F:Night.KeyCode.AppSearch
  id: AppSearch
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: AppSearch
  nameWithType: KeyCode.AppSearch
  fullName: Night.KeyCode.AppSearch
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: AppSearch
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 496
  assemblies:
  - Night
  namespace: Night
  summary: The Application Search key.
  example: []
  syntax:
    content: AppSearch = 280
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.AppHome
  commentId: F:Night.KeyCode.AppHome
  id: AppHome
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: AppHome
  nameWithType: KeyCode.AppHome
  fullName: Night.KeyCode.AppHome
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: AppHome
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 499
  assemblies:
  - Night
  namespace: Night
  summary: The Application Home key.
  example: []
  syntax:
    content: AppHome = 281
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.AppBack
  commentId: F:Night.KeyCode.AppBack
  id: AppBack
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: AppBack
  nameWithType: KeyCode.AppBack
  fullName: Night.KeyCode.AppBack
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: AppBack
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 502
  assemblies:
  - Night
  namespace: Night
  summary: The Application Back key.
  example: []
  syntax:
    content: AppBack = 282
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.AppForward
  commentId: F:Night.KeyCode.AppForward
  id: AppForward
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: AppForward
  nameWithType: KeyCode.AppForward
  fullName: Night.KeyCode.AppForward
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: AppForward
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 505
  assemblies:
  - Night
  namespace: Night
  summary: The Application Forward key.
  example: []
  syntax:
    content: AppForward = 283
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.AppStop
  commentId: F:Night.KeyCode.AppStop
  id: AppStop
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: AppStop
  nameWithType: KeyCode.AppStop
  fullName: Night.KeyCode.AppStop
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: AppStop
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 508
  assemblies:
  - Night
  namespace: Night
  summary: The Application Stop key.
  example: []
  syntax:
    content: AppStop = 284
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.AppRefresh
  commentId: F:Night.KeyCode.AppRefresh
  id: AppRefresh
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: AppRefresh
  nameWithType: KeyCode.AppRefresh
  fullName: Night.KeyCode.AppRefresh
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: AppRefresh
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 511
  assemblies:
  - Night
  namespace: Night
  summary: The Application Refresh key.
  example: []
  syntax:
    content: AppRefresh = 285
    return:
      type: Night.KeyCode
- uid: Night.KeyCode.AppBookmarks
  commentId: F:Night.KeyCode.AppBookmarks
  id: AppBookmarks
  parent: Night.KeyCode
  langs:
  - csharp
  - vb
  name: AppBookmarks
  nameWithType: KeyCode.AppBookmarks
  fullName: Night.KeyCode.AppBookmarks
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeyCode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: AppBookmarks
    path: ../src/Night/Keyboard/KeyCode.cs
    startLine: 514
  assemblies:
  - Night
  namespace: Night
  summary: The Application Bookmarks key.
  example: []
  syntax:
    content: AppBookmarks = 286
    return:
      type: Night.KeyCode
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: Night.KeyCode
  commentId: T:Night.KeyCode
  parent: Night
  href: Night.KeyCode.html
  name: KeyCode
  nameWithType: KeyCode
  fullName: Night.KeyCode



================================================
File: site/api/Night.KeySymbol.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.KeySymbol
  commentId: T:Night.KeySymbol
  id: KeySymbol
  parent: Night
  children:
  - Night.KeySymbol.A
  - Night.KeySymbol.Alpha0
  - Night.KeySymbol.Alpha1
  - Night.KeySymbol.Alpha2
  - Night.KeySymbol.Alpha3
  - Night.KeySymbol.Alpha4
  - Night.KeySymbol.Alpha5
  - Night.KeySymbol.Alpha6
  - Night.KeySymbol.Alpha7
  - Night.KeySymbol.Alpha8
  - Night.KeySymbol.Alpha9
  - Night.KeySymbol.Apostrophe
  - Night.KeySymbol.B
  - Night.KeySymbol.Backslash
  - Night.KeySymbol.Backspace
  - Night.KeySymbol.C
  - Night.KeySymbol.Comma
  - Night.KeySymbol.D
  - Night.KeySymbol.Down
  - Night.KeySymbol.E
  - Night.KeySymbol.Equals
  - Night.KeySymbol.Escape
  - Night.KeySymbol.F
  - Night.KeySymbol.F1
  - Night.KeySymbol.F10
  - Night.KeySymbol.F11
  - Night.KeySymbol.F12
  - Night.KeySymbol.F2
  - Night.KeySymbol.F3
  - Night.KeySymbol.F4
  - Night.KeySymbol.F5
  - Night.KeySymbol.F6
  - Night.KeySymbol.F7
  - Night.KeySymbol.F8
  - Night.KeySymbol.F9
  - Night.KeySymbol.G
  - Night.KeySymbol.Grave
  - Night.KeySymbol.H
  - Night.KeySymbol.I
  - Night.KeySymbol.J
  - Night.KeySymbol.K
  - Night.KeySymbol.L
  - Night.KeySymbol.LAlt
  - Night.KeySymbol.LCtrl
  - Night.KeySymbol.LGUI
  - Night.KeySymbol.LShift
  - Night.KeySymbol.Left
  - Night.KeySymbol.Leftbracket
  - Night.KeySymbol.M
  - Night.KeySymbol.Minus
  - Night.KeySymbol.N
  - Night.KeySymbol.O
  - Night.KeySymbol.P
  - Night.KeySymbol.Period
  - Night.KeySymbol.Q
  - Night.KeySymbol.R
  - Night.KeySymbol.RAlt
  - Night.KeySymbol.RCtrl
  - Night.KeySymbol.RGUI
  - Night.KeySymbol.RShift
  - Night.KeySymbol.Return
  - Night.KeySymbol.Right
  - Night.KeySymbol.Rightbracket
  - Night.KeySymbol.S
  - Night.KeySymbol.Semicolon
  - Night.KeySymbol.Slash
  - Night.KeySymbol.Space
  - Night.KeySymbol.T
  - Night.KeySymbol.Tab
  - Night.KeySymbol.U
  - Night.KeySymbol.Unknown
  - Night.KeySymbol.Up
  - Night.KeySymbol.V
  - Night.KeySymbol.W
  - Night.KeySymbol.X
  - Night.KeySymbol.Y
  - Night.KeySymbol.Z
  langs:
  - csharp
  - vb
  name: KeySymbol
  nameWithType: KeySymbol
  fullName: Night.KeySymbol
  type: Enum
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: KeySymbol
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 33
  assemblies:
  - Night
  namespace: Night
  summary: Represents logical key symbols. Values correspond to SDL_Keycode.
  remarks: >-
    This enum maps to SDL_Keycode values, representing the symbol produced by a key press

    under the current keyboard layout.
  example: []
  syntax:
    content: 'public enum KeySymbol : uint'
    content.vb: Public Enum KeySymbol As UInteger
- uid: Night.KeySymbol.Unknown
  commentId: F:Night.KeySymbol.Unknown
  id: Unknown
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Unknown
  nameWithType: KeySymbol.Unknown
  fullName: Night.KeySymbol.Unknown
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Unknown
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 36
  assemblies:
  - Night
  namespace: Night
  summary: An unknown key symbol.
  example: []
  syntax:
    content: Unknown = 0
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.A
  commentId: F:Night.KeySymbol.A
  id: A
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: A
  nameWithType: KeySymbol.A
  fullName: Night.KeySymbol.A
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: A
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 41
  assemblies:
  - Night
  namespace: Night
  summary: The 'A' symbol.
  example: []
  syntax:
    content: A = 97
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.B
  commentId: F:Night.KeySymbol.B
  id: B
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: B
  nameWithType: KeySymbol.B
  fullName: Night.KeySymbol.B
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: B
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 44
  assemblies:
  - Night
  namespace: Night
  summary: The 'B' symbol.
  example: []
  syntax:
    content: B = 98
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.C
  commentId: F:Night.KeySymbol.C
  id: C
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: C
  nameWithType: KeySymbol.C
  fullName: Night.KeySymbol.C
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: C
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 47
  assemblies:
  - Night
  namespace: Night
  summary: The 'C' symbol.
  example: []
  syntax:
    content: C = 99
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.D
  commentId: F:Night.KeySymbol.D
  id: D
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: D
  nameWithType: KeySymbol.D
  fullName: Night.KeySymbol.D
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: D
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 50
  assemblies:
  - Night
  namespace: Night
  summary: The 'D' symbol.
  example: []
  syntax:
    content: D = 100
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.E
  commentId: F:Night.KeySymbol.E
  id: E
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: E
  nameWithType: KeySymbol.E
  fullName: Night.KeySymbol.E
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: E
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 53
  assemblies:
  - Night
  namespace: Night
  summary: The 'E' symbol.
  example: []
  syntax:
    content: E = 101
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.F
  commentId: F:Night.KeySymbol.F
  id: F
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: F
  nameWithType: KeySymbol.F
  fullName: Night.KeySymbol.F
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 56
  assemblies:
  - Night
  namespace: Night
  summary: The 'F' symbol.
  example: []
  syntax:
    content: F = 102
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.G
  commentId: F:Night.KeySymbol.G
  id: G
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: G
  nameWithType: KeySymbol.G
  fullName: Night.KeySymbol.G
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: G
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 59
  assemblies:
  - Night
  namespace: Night
  summary: The 'G' symbol.
  example: []
  syntax:
    content: G = 103
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.H
  commentId: F:Night.KeySymbol.H
  id: H
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: H
  nameWithType: KeySymbol.H
  fullName: Night.KeySymbol.H
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: H
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 62
  assemblies:
  - Night
  namespace: Night
  summary: The 'H' symbol.
  example: []
  syntax:
    content: H = 104
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.I
  commentId: F:Night.KeySymbol.I
  id: I
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: I
  nameWithType: KeySymbol.I
  fullName: Night.KeySymbol.I
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: I
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 65
  assemblies:
  - Night
  namespace: Night
  summary: The 'I' symbol.
  example: []
  syntax:
    content: I = 105
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.J
  commentId: F:Night.KeySymbol.J
  id: J
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: J
  nameWithType: KeySymbol.J
  fullName: Night.KeySymbol.J
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: J
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 68
  assemblies:
  - Night
  namespace: Night
  summary: The 'J' symbol.
  example: []
  syntax:
    content: J = 106
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.K
  commentId: F:Night.KeySymbol.K
  id: K
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: K
  nameWithType: KeySymbol.K
  fullName: Night.KeySymbol.K
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: K
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 71
  assemblies:
  - Night
  namespace: Night
  summary: The 'K' symbol.
  example: []
  syntax:
    content: K = 107
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.L
  commentId: F:Night.KeySymbol.L
  id: L
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: L
  nameWithType: KeySymbol.L
  fullName: Night.KeySymbol.L
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: L
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 74
  assemblies:
  - Night
  namespace: Night
  summary: The 'L' symbol.
  example: []
  syntax:
    content: L = 108
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.M
  commentId: F:Night.KeySymbol.M
  id: M
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: M
  nameWithType: KeySymbol.M
  fullName: Night.KeySymbol.M
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: M
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 77
  assemblies:
  - Night
  namespace: Night
  summary: The 'M' symbol.
  example: []
  syntax:
    content: M = 109
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.N
  commentId: F:Night.KeySymbol.N
  id: N
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: N
  nameWithType: KeySymbol.N
  fullName: Night.KeySymbol.N
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: N
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 80
  assemblies:
  - Night
  namespace: Night
  summary: The 'N' symbol.
  example: []
  syntax:
    content: N = 110
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.O
  commentId: F:Night.KeySymbol.O
  id: O
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: O
  nameWithType: KeySymbol.O
  fullName: Night.KeySymbol.O
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: O
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 83
  assemblies:
  - Night
  namespace: Night
  summary: The 'O' symbol.
  example: []
  syntax:
    content: O = 111
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.P
  commentId: F:Night.KeySymbol.P
  id: P
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: P
  nameWithType: KeySymbol.P
  fullName: Night.KeySymbol.P
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: P
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 86
  assemblies:
  - Night
  namespace: Night
  summary: The 'P' symbol.
  example: []
  syntax:
    content: P = 112
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Q
  commentId: F:Night.KeySymbol.Q
  id: Q
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Q
  nameWithType: KeySymbol.Q
  fullName: Night.KeySymbol.Q
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Q
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 89
  assemblies:
  - Night
  namespace: Night
  summary: The 'Q' symbol.
  example: []
  syntax:
    content: Q = 113
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.R
  commentId: F:Night.KeySymbol.R
  id: R
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: R
  nameWithType: KeySymbol.R
  fullName: Night.KeySymbol.R
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: R
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 92
  assemblies:
  - Night
  namespace: Night
  summary: The 'R' symbol.
  example: []
  syntax:
    content: R = 114
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.S
  commentId: F:Night.KeySymbol.S
  id: S
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: S
  nameWithType: KeySymbol.S
  fullName: Night.KeySymbol.S
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: S
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 95
  assemblies:
  - Night
  namespace: Night
  summary: The 'S' symbol.
  example: []
  syntax:
    content: S = 115
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.T
  commentId: F:Night.KeySymbol.T
  id: T
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: T
  nameWithType: KeySymbol.T
  fullName: Night.KeySymbol.T
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: T
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 98
  assemblies:
  - Night
  namespace: Night
  summary: The 'T' symbol.
  example: []
  syntax:
    content: T = 116
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.U
  commentId: F:Night.KeySymbol.U
  id: U
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: U
  nameWithType: KeySymbol.U
  fullName: Night.KeySymbol.U
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: U
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 101
  assemblies:
  - Night
  namespace: Night
  summary: The 'U' symbol.
  example: []
  syntax:
    content: U = 117
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.V
  commentId: F:Night.KeySymbol.V
  id: V
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: V
  nameWithType: KeySymbol.V
  fullName: Night.KeySymbol.V
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: V
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 104
  assemblies:
  - Night
  namespace: Night
  summary: The 'V' symbol.
  example: []
  syntax:
    content: V = 118
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.W
  commentId: F:Night.KeySymbol.W
  id: W
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: W
  nameWithType: KeySymbol.W
  fullName: Night.KeySymbol.W
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: W
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 107
  assemblies:
  - Night
  namespace: Night
  summary: The 'W' symbol.
  example: []
  syntax:
    content: W = 119
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.X
  commentId: F:Night.KeySymbol.X
  id: X
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: X
  nameWithType: KeySymbol.X
  fullName: Night.KeySymbol.X
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: X
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 110
  assemblies:
  - Night
  namespace: Night
  summary: The 'X' symbol.
  example: []
  syntax:
    content: X = 120
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Y
  commentId: F:Night.KeySymbol.Y
  id: Y
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: KeySymbol.Y
  fullName: Night.KeySymbol.Y
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Y
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 113
  assemblies:
  - Night
  namespace: Night
  summary: The 'Y' symbol.
  example: []
  syntax:
    content: Y = 121
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Z
  commentId: F:Night.KeySymbol.Z
  id: Z
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: KeySymbol.Z
  fullName: Night.KeySymbol.Z
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Z
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 116
  assemblies:
  - Night
  namespace: Night
  summary: The 'Z' symbol.
  example: []
  syntax:
    content: Z = 122
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Alpha0
  commentId: F:Night.KeySymbol.Alpha0
  id: Alpha0
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Alpha0
  nameWithType: KeySymbol.Alpha0
  fullName: Night.KeySymbol.Alpha0
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Alpha0
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 121
  assemblies:
  - Night
  namespace: Night
  summary: The '0' symbol.
  example: []
  syntax:
    content: Alpha0 = 48
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Alpha1
  commentId: F:Night.KeySymbol.Alpha1
  id: Alpha1
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Alpha1
  nameWithType: KeySymbol.Alpha1
  fullName: Night.KeySymbol.Alpha1
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Alpha1
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 124
  assemblies:
  - Night
  namespace: Night
  summary: The '1' symbol.
  example: []
  syntax:
    content: Alpha1 = 49
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Alpha2
  commentId: F:Night.KeySymbol.Alpha2
  id: Alpha2
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Alpha2
  nameWithType: KeySymbol.Alpha2
  fullName: Night.KeySymbol.Alpha2
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Alpha2
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 127
  assemblies:
  - Night
  namespace: Night
  summary: The '2' symbol.
  example: []
  syntax:
    content: Alpha2 = 50
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Alpha3
  commentId: F:Night.KeySymbol.Alpha3
  id: Alpha3
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Alpha3
  nameWithType: KeySymbol.Alpha3
  fullName: Night.KeySymbol.Alpha3
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Alpha3
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 130
  assemblies:
  - Night
  namespace: Night
  summary: The '3' symbol.
  example: []
  syntax:
    content: Alpha3 = 51
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Alpha4
  commentId: F:Night.KeySymbol.Alpha4
  id: Alpha4
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Alpha4
  nameWithType: KeySymbol.Alpha4
  fullName: Night.KeySymbol.Alpha4
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Alpha4
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 133
  assemblies:
  - Night
  namespace: Night
  summary: The '4' symbol.
  example: []
  syntax:
    content: Alpha4 = 52
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Alpha5
  commentId: F:Night.KeySymbol.Alpha5
  id: Alpha5
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Alpha5
  nameWithType: KeySymbol.Alpha5
  fullName: Night.KeySymbol.Alpha5
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Alpha5
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 136
  assemblies:
  - Night
  namespace: Night
  summary: The '5' symbol.
  example: []
  syntax:
    content: Alpha5 = 53
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Alpha6
  commentId: F:Night.KeySymbol.Alpha6
  id: Alpha6
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Alpha6
  nameWithType: KeySymbol.Alpha6
  fullName: Night.KeySymbol.Alpha6
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Alpha6
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 139
  assemblies:
  - Night
  namespace: Night
  summary: The '6' symbol.
  example: []
  syntax:
    content: Alpha6 = 54
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Alpha7
  commentId: F:Night.KeySymbol.Alpha7
  id: Alpha7
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Alpha7
  nameWithType: KeySymbol.Alpha7
  fullName: Night.KeySymbol.Alpha7
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Alpha7
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 142
  assemblies:
  - Night
  namespace: Night
  summary: The '7' symbol.
  example: []
  syntax:
    content: Alpha7 = 55
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Alpha8
  commentId: F:Night.KeySymbol.Alpha8
  id: Alpha8
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Alpha8
  nameWithType: KeySymbol.Alpha8
  fullName: Night.KeySymbol.Alpha8
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Alpha8
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 145
  assemblies:
  - Night
  namespace: Night
  summary: The '8' symbol.
  example: []
  syntax:
    content: Alpha8 = 56
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Alpha9
  commentId: F:Night.KeySymbol.Alpha9
  id: Alpha9
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Alpha9
  nameWithType: KeySymbol.Alpha9
  fullName: Night.KeySymbol.Alpha9
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Alpha9
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 148
  assemblies:
  - Night
  namespace: Night
  summary: The '9' symbol.
  example: []
  syntax:
    content: Alpha9 = 57
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Return
  commentId: F:Night.KeySymbol.Return
  id: Return
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Return
  nameWithType: KeySymbol.Return
  fullName: Night.KeySymbol.Return
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Return
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 153
  assemblies:
  - Night
  namespace: Night
  summary: The Return/Enter symbol.
  example: []
  syntax:
    content: Return = 13
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Escape
  commentId: F:Night.KeySymbol.Escape
  id: Escape
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Escape
  nameWithType: KeySymbol.Escape
  fullName: Night.KeySymbol.Escape
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Escape
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 156
  assemblies:
  - Night
  namespace: Night
  summary: The Escape symbol.
  example: []
  syntax:
    content: Escape = 27
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Backspace
  commentId: F:Night.KeySymbol.Backspace
  id: Backspace
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Backspace
  nameWithType: KeySymbol.Backspace
  fullName: Night.KeySymbol.Backspace
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Backspace
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 159
  assemblies:
  - Night
  namespace: Night
  summary: The Backspace symbol.
  example: []
  syntax:
    content: Backspace = 8
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Tab
  commentId: F:Night.KeySymbol.Tab
  id: Tab
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Tab
  nameWithType: KeySymbol.Tab
  fullName: Night.KeySymbol.Tab
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Tab
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 162
  assemblies:
  - Night
  namespace: Night
  summary: The Tab symbol.
  example: []
  syntax:
    content: Tab = 9
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Space
  commentId: F:Night.KeySymbol.Space
  id: Space
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Space
  nameWithType: KeySymbol.Space
  fullName: Night.KeySymbol.Space
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Space
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 165
  assemblies:
  - Night
  namespace: Night
  summary: The Space symbol.
  example: []
  syntax:
    content: Space = 32
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Minus
  commentId: F:Night.KeySymbol.Minus
  id: Minus
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Minus
  nameWithType: KeySymbol.Minus
  fullName: Night.KeySymbol.Minus
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Minus
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 170
  assemblies:
  - Night
  namespace: Night
  summary: The Minus '-' symbol.
  example: []
  syntax:
    content: Minus = 45
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Equals
  commentId: F:Night.KeySymbol.Equals
  id: Equals
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Equals
  nameWithType: KeySymbol.Equals
  fullName: Night.KeySymbol.Equals
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Equals
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 173
  assemblies:
  - Night
  namespace: Night
  summary: The Equals '=' symbol.
  example: []
  syntax:
    content: Equals = 61
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Leftbracket
  commentId: F:Night.KeySymbol.Leftbracket
  id: Leftbracket
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Leftbracket
  nameWithType: KeySymbol.Leftbracket
  fullName: Night.KeySymbol.Leftbracket
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Leftbracket
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 176
  assemblies:
  - Night
  namespace: Night
  summary: The Left Bracket '[' symbol.
  example: []
  syntax:
    content: Leftbracket = 91
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Rightbracket
  commentId: F:Night.KeySymbol.Rightbracket
  id: Rightbracket
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Rightbracket
  nameWithType: KeySymbol.Rightbracket
  fullName: Night.KeySymbol.Rightbracket
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Rightbracket
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 179
  assemblies:
  - Night
  namespace: Night
  summary: The Right Bracket ']' symbol.
  example: []
  syntax:
    content: Rightbracket = 93
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Backslash
  commentId: F:Night.KeySymbol.Backslash
  id: Backslash
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Backslash
  nameWithType: KeySymbol.Backslash
  fullName: Night.KeySymbol.Backslash
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Backslash
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 182
  assemblies:
  - Night
  namespace: Night
  summary: The Backslash '' symbol.
  example: []
  syntax:
    content: Backslash = 92
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Semicolon
  commentId: F:Night.KeySymbol.Semicolon
  id: Semicolon
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Semicolon
  nameWithType: KeySymbol.Semicolon
  fullName: Night.KeySymbol.Semicolon
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Semicolon
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 185
  assemblies:
  - Night
  namespace: Night
  summary: The Semicolon ';' symbol.
  example: []
  syntax:
    content: Semicolon = 59
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Apostrophe
  commentId: F:Night.KeySymbol.Apostrophe
  id: Apostrophe
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Apostrophe
  nameWithType: KeySymbol.Apostrophe
  fullName: Night.KeySymbol.Apostrophe
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Apostrophe
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 188
  assemblies:
  - Night
  namespace: Night
  summary: The Apostrophe ''' symbol.
  example: []
  syntax:
    content: Apostrophe = 39
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Grave
  commentId: F:Night.KeySymbol.Grave
  id: Grave
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Grave
  nameWithType: KeySymbol.Grave
  fullName: Night.KeySymbol.Grave
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Grave
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 191
  assemblies:
  - Night
  namespace: Night
  summary: The Grave Accent (Backtick) '`' symbol.
  example: []
  syntax:
    content: Grave = 96
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Comma
  commentId: F:Night.KeySymbol.Comma
  id: Comma
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Comma
  nameWithType: KeySymbol.Comma
  fullName: Night.KeySymbol.Comma
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Comma
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 194
  assemblies:
  - Night
  namespace: Night
  summary: The Comma ',' symbol.
  example: []
  syntax:
    content: Comma = 44
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Period
  commentId: F:Night.KeySymbol.Period
  id: Period
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Period
  nameWithType: KeySymbol.Period
  fullName: Night.KeySymbol.Period
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Period
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 197
  assemblies:
  - Night
  namespace: Night
  summary: The Period '.' symbol.
  example: []
  syntax:
    content: Period = 46
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Slash
  commentId: F:Night.KeySymbol.Slash
  id: Slash
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Slash
  nameWithType: KeySymbol.Slash
  fullName: Night.KeySymbol.Slash
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Slash
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 200
  assemblies:
  - Night
  namespace: Night
  summary: The Slash '/' symbol.
  example: []
  syntax:
    content: Slash = 47
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.F1
  commentId: F:Night.KeySymbol.F1
  id: F1
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: F1
  nameWithType: KeySymbol.F1
  fullName: Night.KeySymbol.F1
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F1
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 205
  assemblies:
  - Night
  namespace: Night
  summary: The F1 symbol.
  example: []
  syntax:
    content: F1 = 1073741882
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.F2
  commentId: F:Night.KeySymbol.F2
  id: F2
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: F2
  nameWithType: KeySymbol.F2
  fullName: Night.KeySymbol.F2
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F2
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 208
  assemblies:
  - Night
  namespace: Night
  summary: The F2 symbol.
  example: []
  syntax:
    content: F2 = 1073741883
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.F3
  commentId: F:Night.KeySymbol.F3
  id: F3
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: F3
  nameWithType: KeySymbol.F3
  fullName: Night.KeySymbol.F3
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F3
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 211
  assemblies:
  - Night
  namespace: Night
  summary: The F3 symbol.
  example: []
  syntax:
    content: F3 = 1073741884
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.F4
  commentId: F:Night.KeySymbol.F4
  id: F4
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: F4
  nameWithType: KeySymbol.F4
  fullName: Night.KeySymbol.F4
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F4
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 214
  assemblies:
  - Night
  namespace: Night
  summary: The F4 symbol.
  example: []
  syntax:
    content: F4 = 1073741885
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.F5
  commentId: F:Night.KeySymbol.F5
  id: F5
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: F5
  nameWithType: KeySymbol.F5
  fullName: Night.KeySymbol.F5
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F5
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 217
  assemblies:
  - Night
  namespace: Night
  summary: The F5 symbol.
  example: []
  syntax:
    content: F5 = 1073741886
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.F6
  commentId: F:Night.KeySymbol.F6
  id: F6
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: F6
  nameWithType: KeySymbol.F6
  fullName: Night.KeySymbol.F6
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F6
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 220
  assemblies:
  - Night
  namespace: Night
  summary: The F6 symbol.
  example: []
  syntax:
    content: F6 = 1073741887
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.F7
  commentId: F:Night.KeySymbol.F7
  id: F7
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: F7
  nameWithType: KeySymbol.F7
  fullName: Night.KeySymbol.F7
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F7
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 223
  assemblies:
  - Night
  namespace: Night
  summary: The F7 symbol.
  example: []
  syntax:
    content: F7 = 1073741888
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.F8
  commentId: F:Night.KeySymbol.F8
  id: F8
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: F8
  nameWithType: KeySymbol.F8
  fullName: Night.KeySymbol.F8
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F8
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 226
  assemblies:
  - Night
  namespace: Night
  summary: The F8 symbol.
  example: []
  syntax:
    content: F8 = 1073741889
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.F9
  commentId: F:Night.KeySymbol.F9
  id: F9
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: F9
  nameWithType: KeySymbol.F9
  fullName: Night.KeySymbol.F9
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F9
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 229
  assemblies:
  - Night
  namespace: Night
  summary: The F9 symbol.
  example: []
  syntax:
    content: F9 = 1073741890
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.F10
  commentId: F:Night.KeySymbol.F10
  id: F10
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: F10
  nameWithType: KeySymbol.F10
  fullName: Night.KeySymbol.F10
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F10
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 232
  assemblies:
  - Night
  namespace: Night
  summary: The F10 symbol.
  example: []
  syntax:
    content: F10 = 1073741891
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.F11
  commentId: F:Night.KeySymbol.F11
  id: F11
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: F11
  nameWithType: KeySymbol.F11
  fullName: Night.KeySymbol.F11
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F11
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 235
  assemblies:
  - Night
  namespace: Night
  summary: The F11 symbol.
  example: []
  syntax:
    content: F11 = 1073741892
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.F12
  commentId: F:Night.KeySymbol.F12
  id: F12
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: F12
  nameWithType: KeySymbol.F12
  fullName: Night.KeySymbol.F12
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: F12
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 238
  assemblies:
  - Night
  namespace: Night
  summary: The F12 symbol.
  example: []
  syntax:
    content: F12 = 1073741893
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Right
  commentId: F:Night.KeySymbol.Right
  id: Right
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: KeySymbol.Right
  fullName: Night.KeySymbol.Right
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Right
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 243
  assemblies:
  - Night
  namespace: Night
  summary: The Right Arrow symbol.
  example: []
  syntax:
    content: Right = 1073741903
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Left
  commentId: F:Night.KeySymbol.Left
  id: Left
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: KeySymbol.Left
  fullName: Night.KeySymbol.Left
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Left
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 246
  assemblies:
  - Night
  namespace: Night
  summary: The Left Arrow symbol.
  example: []
  syntax:
    content: Left = 1073741904
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Down
  commentId: F:Night.KeySymbol.Down
  id: Down
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Down
  nameWithType: KeySymbol.Down
  fullName: Night.KeySymbol.Down
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Down
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 249
  assemblies:
  - Night
  namespace: Night
  summary: The Down Arrow symbol.
  example: []
  syntax:
    content: Down = 1073741905
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.Up
  commentId: F:Night.KeySymbol.Up
  id: Up
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: Up
  nameWithType: KeySymbol.Up
  fullName: Night.KeySymbol.Up
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Up
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 252
  assemblies:
  - Night
  namespace: Night
  summary: The Up Arrow symbol.
  example: []
  syntax:
    content: Up = 1073741906
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.LCtrl
  commentId: F:Night.KeySymbol.LCtrl
  id: LCtrl
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: LCtrl
  nameWithType: KeySymbol.LCtrl
  fullName: Night.KeySymbol.LCtrl
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: LCtrl
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 257
  assemblies:
  - Night
  namespace: Night
  summary: The Left Control symbol.
  example: []
  syntax:
    content: LCtrl = 1073742048
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.LShift
  commentId: F:Night.KeySymbol.LShift
  id: LShift
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: LShift
  nameWithType: KeySymbol.LShift
  fullName: Night.KeySymbol.LShift
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: LShift
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 260
  assemblies:
  - Night
  namespace: Night
  summary: The Left Shift symbol.
  example: []
  syntax:
    content: LShift = 1073742049
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.LAlt
  commentId: F:Night.KeySymbol.LAlt
  id: LAlt
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: LAlt
  nameWithType: KeySymbol.LAlt
  fullName: Night.KeySymbol.LAlt
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: LAlt
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 263
  assemblies:
  - Night
  namespace: Night
  summary: The Left Alt symbol.
  example: []
  syntax:
    content: LAlt = 1073742050
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.LGUI
  commentId: F:Night.KeySymbol.LGUI
  id: LGUI
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: LGUI
  nameWithType: KeySymbol.LGUI
  fullName: Night.KeySymbol.LGUI
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: LGUI
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 266
  assemblies:
  - Night
  namespace: Night
  summary: The Left GUI symbol (Windows/Command/Meta key).
  example: []
  syntax:
    content: LGUI = 1073742051
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.RCtrl
  commentId: F:Night.KeySymbol.RCtrl
  id: RCtrl
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: RCtrl
  nameWithType: KeySymbol.RCtrl
  fullName: Night.KeySymbol.RCtrl
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: RCtrl
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 269
  assemblies:
  - Night
  namespace: Night
  summary: The Right Control symbol.
  example: []
  syntax:
    content: RCtrl = 1073742052
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.RShift
  commentId: F:Night.KeySymbol.RShift
  id: RShift
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: RShift
  nameWithType: KeySymbol.RShift
  fullName: Night.KeySymbol.RShift
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: RShift
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 272
  assemblies:
  - Night
  namespace: Night
  summary: The Right Shift symbol.
  example: []
  syntax:
    content: RShift = 1073742053
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.RAlt
  commentId: F:Night.KeySymbol.RAlt
  id: RAlt
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: RAlt
  nameWithType: KeySymbol.RAlt
  fullName: Night.KeySymbol.RAlt
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: RAlt
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 275
  assemblies:
  - Night
  namespace: Night
  summary: The Right Alt symbol.
  example: []
  syntax:
    content: RAlt = 1073742054
    return:
      type: Night.KeySymbol
- uid: Night.KeySymbol.RGUI
  commentId: F:Night.KeySymbol.RGUI
  id: RGUI
  parent: Night.KeySymbol
  langs:
  - csharp
  - vb
  name: RGUI
  nameWithType: KeySymbol.RGUI
  fullName: Night.KeySymbol.RGUI
  type: Field
  source:
    remote:
      path: src/Night/Keyboard/KeySymbol.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: RGUI
    path: ../src/Night/Keyboard/KeySymbol.cs
    startLine: 278
  assemblies:
  - Night
  namespace: Night
  summary: The Right GUI symbol (Windows/Command/Meta key).
  example: []
  syntax:
    content: RGUI = 1073742055
    return:
      type: Night.KeySymbol
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: Night.KeySymbol
  commentId: T:Night.KeySymbol
  parent: Night
  href: Night.KeySymbol.html
  name: KeySymbol
  nameWithType: KeySymbol
  fullName: Night.KeySymbol



================================================
File: site/api/Night.Keyboard.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.Keyboard
  commentId: T:Night.Keyboard
  id: Keyboard
  parent: Night
  children:
  - Night.Keyboard.IsDown(Night.KeyCode)
  langs:
  - csharp
  - vb
  name: Keyboard
  nameWithType: Keyboard
  fullName: Night.Keyboard
  type: Class
  source:
    remote:
      path: src/Night/Keyboard/Keyboard.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Keyboard
    path: ../src/Night/Keyboard/Keyboard.cs
    startLine: 34
  assemblies:
  - Night
  namespace: Night
  summary: Provides an interface to the user's keyboard.
  example: []
  syntax:
    content: public static class Keyboard
    content.vb: Public Module Keyboard
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Night.Keyboard.IsDown(Night.KeyCode)
  commentId: M:Night.Keyboard.IsDown(Night.KeyCode)
  id: IsDown(Night.KeyCode)
  parent: Night.Keyboard
  langs:
  - csharp
  - vb
  name: IsDown(KeyCode)
  nameWithType: Keyboard.IsDown(KeyCode)
  fullName: Night.Keyboard.IsDown(Night.KeyCode)
  type: Method
  source:
    remote:
      path: src/Night/Keyboard/Keyboard.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: IsDown
    path: ../src/Night/Keyboard/Keyboard.cs
    startLine: 41
  assemblies:
  - Night
  namespace: Night
  summary: Checks whether a certain key is down.
  example: []
  syntax:
    content: public static bool IsDown(KeyCode key)
    parameters:
    - id: key
      type: Night.KeyCode
      description: The key to check.
    return:
      type: System.Boolean
      description: True if the key is down, false otherwise.
    content.vb: Public Shared Function IsDown(key As KeyCode) As Boolean
  overload: Night.Keyboard.IsDown*
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Night.Keyboard.IsDown*
  commentId: Overload:Night.Keyboard.IsDown
  href: Night.Keyboard.html#Night_Keyboard_IsDown_Night_KeyCode_
  name: IsDown
  nameWithType: Keyboard.IsDown
  fullName: Night.Keyboard.IsDown
- uid: Night.KeyCode
  commentId: T:Night.KeyCode
  parent: Night
  href: Night.KeyCode.html
  name: KeyCode
  nameWithType: KeyCode
  fullName: Night.KeyCode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean



================================================
File: site/api/Night.ModulesConfig.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.ModulesConfig
  commentId: T:Night.ModulesConfig
  id: ModulesConfig
  parent: Night
  children:
  - Night.ModulesConfig.Audio
  - Night.ModulesConfig.Data
  - Night.ModulesConfig.Event
  - Night.ModulesConfig.Font
  - Night.ModulesConfig.Graphics
  - Night.ModulesConfig.Image
  - Night.ModulesConfig.Joystick
  - Night.ModulesConfig.Keyboard
  - Night.ModulesConfig.Math
  - Night.ModulesConfig.Mouse
  - Night.ModulesConfig.Physics
  - Night.ModulesConfig.Sound
  - Night.ModulesConfig.System
  - Night.ModulesConfig.Thread
  - Night.ModulesConfig.Timer
  - Night.ModulesConfig.Touch
  - Night.ModulesConfig.Video
  - Night.ModulesConfig.Window
  langs:
  - csharp
  - vb
  name: ModulesConfig
  nameWithType: ModulesConfig
  fullName: Night.ModulesConfig
  type: Class
  source:
    remote:
      path: src/Night/Configuration/ModulesConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: ModulesConfig
    path: ../src/Night/Configuration/ModulesConfig.cs
    startLine: 30
  assemblies:
  - Night
  namespace: Night
  summary: >-
    Configuration for enabling or disabling specific engine modules.

    Note: Currently, these are placeholders and do not disable module functionality.
  example: []
  syntax:
    content: public class ModulesConfig
    content.vb: Public Class ModulesConfig
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Night.ModulesConfig.Audio
  commentId: P:Night.ModulesConfig.Audio
  id: Audio
  parent: Night.ModulesConfig
  langs:
  - csharp
  - vb
  name: Audio
  nameWithType: ModulesConfig.Audio
  fullName: Night.ModulesConfig.Audio
  type: Property
  source:
    remote:
      path: src/Night/Configuration/ModulesConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Audio
    path: ../src/Night/Configuration/ModulesConfig.cs
    startLine: 39
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the Audio module is enabled.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("audio")]

      public bool Audio { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("audio")>

      Public Property Audio As Boolean
  overload: Night.ModulesConfig.Audio*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: audio
- uid: Night.ModulesConfig.Data
  commentId: P:Night.ModulesConfig.Data
  id: Data
  parent: Night.ModulesConfig
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: ModulesConfig.Data
  fullName: Night.ModulesConfig.Data
  type: Property
  source:
    remote:
      path: src/Night/Configuration/ModulesConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Data
    path: ../src/Night/Configuration/ModulesConfig.cs
    startLine: 45
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the Data module is enabled (Mandatory in LÖVE).
  example: []
  syntax:
    content: >-
      [JsonPropertyName("data")]

      public bool Data { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("data")>

      Public Property Data As Boolean
  overload: Night.ModulesConfig.Data*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: data
- uid: Night.ModulesConfig.Event
  commentId: P:Night.ModulesConfig.Event
  id: Event
  parent: Night.ModulesConfig
  langs:
  - csharp
  - vb
  name: Event
  nameWithType: ModulesConfig.Event
  fullName: Night.ModulesConfig.Event
  type: Property
  source:
    remote:
      path: src/Night/Configuration/ModulesConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Event
    path: ../src/Night/Configuration/ModulesConfig.cs
    startLine: 51
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the Event module is enabled.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("event")]

      public bool Event { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("event")>

      Public Property [Event] As Boolean
  overload: Night.ModulesConfig.Event*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: event
- uid: Night.ModulesConfig.Font
  commentId: P:Night.ModulesConfig.Font
  id: Font
  parent: Night.ModulesConfig
  langs:
  - csharp
  - vb
  name: Font
  nameWithType: ModulesConfig.Font
  fullName: Night.ModulesConfig.Font
  type: Property
  source:
    remote:
      path: src/Night/Configuration/ModulesConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Font
    path: ../src/Night/Configuration/ModulesConfig.cs
    startLine: 57
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the Font module is enabled.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("font")]

      public bool Font { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("font")>

      Public Property Font As Boolean
  overload: Night.ModulesConfig.Font*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: font
- uid: Night.ModulesConfig.Graphics
  commentId: P:Night.ModulesConfig.Graphics
  id: Graphics
  parent: Night.ModulesConfig
  langs:
  - csharp
  - vb
  name: Graphics
  nameWithType: ModulesConfig.Graphics
  fullName: Night.ModulesConfig.Graphics
  type: Property
  source:
    remote:
      path: src/Night/Configuration/ModulesConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Graphics
    path: ../src/Night/Configuration/ModulesConfig.cs
    startLine: 63
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the Graphics module is enabled (Needs Window module).
  example: []
  syntax:
    content: >-
      [JsonPropertyName("graphics")]

      public bool Graphics { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("graphics")>

      Public Property Graphics As Boolean
  overload: Night.ModulesConfig.Graphics*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: graphics
- uid: Night.ModulesConfig.Image
  commentId: P:Night.ModulesConfig.Image
  id: Image
  parent: Night.ModulesConfig
  langs:
  - csharp
  - vb
  name: Image
  nameWithType: ModulesConfig.Image
  fullName: Night.ModulesConfig.Image
  type: Property
  source:
    remote:
      path: src/Night/Configuration/ModulesConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Image
    path: ../src/Night/Configuration/ModulesConfig.cs
    startLine: 69
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the Image module is enabled.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("image")]

      public bool Image { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("image")>

      Public Property Image As Boolean
  overload: Night.ModulesConfig.Image*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: image
- uid: Night.ModulesConfig.Joystick
  commentId: P:Night.ModulesConfig.Joystick
  id: Joystick
  parent: Night.ModulesConfig
  langs:
  - csharp
  - vb
  name: Joystick
  nameWithType: ModulesConfig.Joystick
  fullName: Night.ModulesConfig.Joystick
  type: Property
  source:
    remote:
      path: src/Night/Configuration/ModulesConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Joystick
    path: ../src/Night/Configuration/ModulesConfig.cs
    startLine: 75
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the Joystick module is enabled.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("joystick")]

      public bool Joystick { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("joystick")>

      Public Property Joystick As Boolean
  overload: Night.ModulesConfig.Joystick*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: joystick
- uid: Night.ModulesConfig.Keyboard
  commentId: P:Night.ModulesConfig.Keyboard
  id: Keyboard
  parent: Night.ModulesConfig
  langs:
  - csharp
  - vb
  name: Keyboard
  nameWithType: ModulesConfig.Keyboard
  fullName: Night.ModulesConfig.Keyboard
  type: Property
  source:
    remote:
      path: src/Night/Configuration/ModulesConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Keyboard
    path: ../src/Night/Configuration/ModulesConfig.cs
    startLine: 81
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the Keyboard module is enabled.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("keyboard")]

      public bool Keyboard { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("keyboard")>

      Public Property Keyboard As Boolean
  overload: Night.ModulesConfig.Keyboard*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: keyboard
- uid: Night.ModulesConfig.Math
  commentId: P:Night.ModulesConfig.Math
  id: Math
  parent: Night.ModulesConfig
  langs:
  - csharp
  - vb
  name: Math
  nameWithType: ModulesConfig.Math
  fullName: Night.ModulesConfig.Math
  type: Property
  source:
    remote:
      path: src/Night/Configuration/ModulesConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Math
    path: ../src/Night/Configuration/ModulesConfig.cs
    startLine: 87
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the Math module is enabled.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("math")]

      public bool Math { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("math")>

      Public Property Math As Boolean
  overload: Night.ModulesConfig.Math*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: math
- uid: Night.ModulesConfig.Mouse
  commentId: P:Night.ModulesConfig.Mouse
  id: Mouse
  parent: Night.ModulesConfig
  langs:
  - csharp
  - vb
  name: Mouse
  nameWithType: ModulesConfig.Mouse
  fullName: Night.ModulesConfig.Mouse
  type: Property
  source:
    remote:
      path: src/Night/Configuration/ModulesConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Mouse
    path: ../src/Night/Configuration/ModulesConfig.cs
    startLine: 93
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the Mouse module is enabled.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("mouse")]

      public bool Mouse { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("mouse")>

      Public Property Mouse As Boolean
  overload: Night.ModulesConfig.Mouse*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: mouse
- uid: Night.ModulesConfig.Physics
  commentId: P:Night.ModulesConfig.Physics
  id: Physics
  parent: Night.ModulesConfig
  langs:
  - csharp
  - vb
  name: Physics
  nameWithType: ModulesConfig.Physics
  fullName: Night.ModulesConfig.Physics
  type: Property
  source:
    remote:
      path: src/Night/Configuration/ModulesConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Physics
    path: ../src/Night/Configuration/ModulesConfig.cs
    startLine: 99
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the Physics module is enabled.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("physics")]

      public bool Physics { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("physics")>

      Public Property Physics As Boolean
  overload: Night.ModulesConfig.Physics*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: physics
- uid: Night.ModulesConfig.Sound
  commentId: P:Night.ModulesConfig.Sound
  id: Sound
  parent: Night.ModulesConfig
  langs:
  - csharp
  - vb
  name: Sound
  nameWithType: ModulesConfig.Sound
  fullName: Night.ModulesConfig.Sound
  type: Property
  source:
    remote:
      path: src/Night/Configuration/ModulesConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Sound
    path: ../src/Night/Configuration/ModulesConfig.cs
    startLine: 105
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the Sound module is enabled.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("sound")]

      public bool Sound { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("sound")>

      Public Property Sound As Boolean
  overload: Night.ModulesConfig.Sound*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: sound
- uid: Night.ModulesConfig.System
  commentId: P:Night.ModulesConfig.System
  id: System
  parent: Night.ModulesConfig
  langs:
  - csharp
  - vb
  name: System
  nameWithType: ModulesConfig.System
  fullName: Night.ModulesConfig.System
  type: Property
  source:
    remote:
      path: src/Night/Configuration/ModulesConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: System
    path: ../src/Night/Configuration/ModulesConfig.cs
    startLine: 111
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the System module is enabled.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("system")]

      public bool System { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("system")>

      Public Property System As Boolean
  overload: Night.ModulesConfig.System*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: system
- uid: Night.ModulesConfig.Thread
  commentId: P:Night.ModulesConfig.Thread
  id: Thread
  parent: Night.ModulesConfig
  langs:
  - csharp
  - vb
  name: Thread
  nameWithType: ModulesConfig.Thread
  fullName: Night.ModulesConfig.Thread
  type: Property
  source:
    remote:
      path: src/Night/Configuration/ModulesConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Thread
    path: ../src/Night/Configuration/ModulesConfig.cs
    startLine: 117
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the Thread module is enabled.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("thread")]

      public bool Thread { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("thread")>

      Public Property Thread As Boolean
  overload: Night.ModulesConfig.Thread*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: thread
- uid: Night.ModulesConfig.Timer
  commentId: P:Night.ModulesConfig.Timer
  id: Timer
  parent: Night.ModulesConfig
  langs:
  - csharp
  - vb
  name: Timer
  nameWithType: ModulesConfig.Timer
  fullName: Night.ModulesConfig.Timer
  type: Property
  source:
    remote:
      path: src/Night/Configuration/ModulesConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Timer
    path: ../src/Night/Configuration/ModulesConfig.cs
    startLine: 123
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the Timer module is enabled.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("timer")]

      public bool Timer { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("timer")>

      Public Property Timer As Boolean
  overload: Night.ModulesConfig.Timer*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: timer
- uid: Night.ModulesConfig.Touch
  commentId: P:Night.ModulesConfig.Touch
  id: Touch
  parent: Night.ModulesConfig
  langs:
  - csharp
  - vb
  name: Touch
  nameWithType: ModulesConfig.Touch
  fullName: Night.ModulesConfig.Touch
  type: Property
  source:
    remote:
      path: src/Night/Configuration/ModulesConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Touch
    path: ../src/Night/Configuration/ModulesConfig.cs
    startLine: 129
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the Touch module is enabled.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("touch")]

      public bool Touch { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("touch")>

      Public Property Touch As Boolean
  overload: Night.ModulesConfig.Touch*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: touch
- uid: Night.ModulesConfig.Video
  commentId: P:Night.ModulesConfig.Video
  id: Video
  parent: Night.ModulesConfig
  langs:
  - csharp
  - vb
  name: Video
  nameWithType: ModulesConfig.Video
  fullName: Night.ModulesConfig.Video
  type: Property
  source:
    remote:
      path: src/Night/Configuration/ModulesConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Video
    path: ../src/Night/Configuration/ModulesConfig.cs
    startLine: 135
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the Video module is enabled.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("video")]

      public bool Video { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("video")>

      Public Property Video As Boolean
  overload: Night.ModulesConfig.Video*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: video
- uid: Night.ModulesConfig.Window
  commentId: P:Night.ModulesConfig.Window
  id: Window
  parent: Night.ModulesConfig
  langs:
  - csharp
  - vb
  name: Window
  nameWithType: ModulesConfig.Window
  fullName: Night.ModulesConfig.Window
  type: Property
  source:
    remote:
      path: src/Night/Configuration/ModulesConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Window
    path: ../src/Night/Configuration/ModulesConfig.cs
    startLine: 141
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the Window module is enabled (Mandatory for Graphics module).
  example: []
  syntax:
    content: >-
      [JsonPropertyName("window")]

      public bool Window { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("window")>

      Public Property Window As Boolean
  overload: Night.ModulesConfig.Window*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: window
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Night.ModulesConfig.Audio*
  commentId: Overload:Night.ModulesConfig.Audio
  href: Night.ModulesConfig.html#Night_ModulesConfig_Audio
  name: Audio
  nameWithType: ModulesConfig.Audio
  fullName: Night.ModulesConfig.Audio
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Night.ModulesConfig.Data*
  commentId: Overload:Night.ModulesConfig.Data
  href: Night.ModulesConfig.html#Night_ModulesConfig_Data
  name: Data
  nameWithType: ModulesConfig.Data
  fullName: Night.ModulesConfig.Data
- uid: Night.ModulesConfig.Event*
  commentId: Overload:Night.ModulesConfig.Event
  href: Night.ModulesConfig.html#Night_ModulesConfig_Event
  name: Event
  nameWithType: ModulesConfig.Event
  fullName: Night.ModulesConfig.Event
- uid: Night.ModulesConfig.Font*
  commentId: Overload:Night.ModulesConfig.Font
  href: Night.ModulesConfig.html#Night_ModulesConfig_Font
  name: Font
  nameWithType: ModulesConfig.Font
  fullName: Night.ModulesConfig.Font
- uid: Night.ModulesConfig.Graphics*
  commentId: Overload:Night.ModulesConfig.Graphics
  href: Night.ModulesConfig.html#Night_ModulesConfig_Graphics
  name: Graphics
  nameWithType: ModulesConfig.Graphics
  fullName: Night.ModulesConfig.Graphics
- uid: Night.ModulesConfig.Image*
  commentId: Overload:Night.ModulesConfig.Image
  href: Night.ModulesConfig.html#Night_ModulesConfig_Image
  name: Image
  nameWithType: ModulesConfig.Image
  fullName: Night.ModulesConfig.Image
- uid: Night.ModulesConfig.Joystick*
  commentId: Overload:Night.ModulesConfig.Joystick
  href: Night.ModulesConfig.html#Night_ModulesConfig_Joystick
  name: Joystick
  nameWithType: ModulesConfig.Joystick
  fullName: Night.ModulesConfig.Joystick
- uid: Night.ModulesConfig.Keyboard*
  commentId: Overload:Night.ModulesConfig.Keyboard
  href: Night.ModulesConfig.html#Night_ModulesConfig_Keyboard
  name: Keyboard
  nameWithType: ModulesConfig.Keyboard
  fullName: Night.ModulesConfig.Keyboard
- uid: Night.ModulesConfig.Math*
  commentId: Overload:Night.ModulesConfig.Math
  href: Night.ModulesConfig.html#Night_ModulesConfig_Math
  name: Math
  nameWithType: ModulesConfig.Math
  fullName: Night.ModulesConfig.Math
- uid: Night.ModulesConfig.Mouse*
  commentId: Overload:Night.ModulesConfig.Mouse
  href: Night.ModulesConfig.html#Night_ModulesConfig_Mouse
  name: Mouse
  nameWithType: ModulesConfig.Mouse
  fullName: Night.ModulesConfig.Mouse
- uid: Night.ModulesConfig.Physics*
  commentId: Overload:Night.ModulesConfig.Physics
  href: Night.ModulesConfig.html#Night_ModulesConfig_Physics
  name: Physics
  nameWithType: ModulesConfig.Physics
  fullName: Night.ModulesConfig.Physics
- uid: Night.ModulesConfig.Sound*
  commentId: Overload:Night.ModulesConfig.Sound
  href: Night.ModulesConfig.html#Night_ModulesConfig_Sound
  name: Sound
  nameWithType: ModulesConfig.Sound
  fullName: Night.ModulesConfig.Sound
- uid: Night.ModulesConfig.System*
  commentId: Overload:Night.ModulesConfig.System
  href: Night.ModulesConfig.html#Night_ModulesConfig_System
  name: System
  nameWithType: ModulesConfig.System
  fullName: Night.ModulesConfig.System
- uid: Night.ModulesConfig.Thread*
  commentId: Overload:Night.ModulesConfig.Thread
  href: Night.ModulesConfig.html#Night_ModulesConfig_Thread
  name: Thread
  nameWithType: ModulesConfig.Thread
  fullName: Night.ModulesConfig.Thread
- uid: Night.ModulesConfig.Timer*
  commentId: Overload:Night.ModulesConfig.Timer
  href: Night.ModulesConfig.html#Night_ModulesConfig_Timer
  name: Timer
  nameWithType: ModulesConfig.Timer
  fullName: Night.ModulesConfig.Timer
- uid: Night.ModulesConfig.Touch*
  commentId: Overload:Night.ModulesConfig.Touch
  href: Night.ModulesConfig.html#Night_ModulesConfig_Touch
  name: Touch
  nameWithType: ModulesConfig.Touch
  fullName: Night.ModulesConfig.Touch
- uid: Night.ModulesConfig.Video*
  commentId: Overload:Night.ModulesConfig.Video
  href: Night.ModulesConfig.html#Night_ModulesConfig_Video
  name: Video
  nameWithType: ModulesConfig.Video
  fullName: Night.ModulesConfig.Video
- uid: Night.ModulesConfig.Window*
  commentId: Overload:Night.ModulesConfig.Window
  href: Night.ModulesConfig.html#Night_ModulesConfig_Window
  name: Window
  nameWithType: ModulesConfig.Window
  fullName: Night.ModulesConfig.Window



================================================
File: site/api/Night.Mouse.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.Mouse
  commentId: T:Night.Mouse
  id: Mouse
  parent: Night
  children:
  - Night.Mouse.GetPosition
  - Night.Mouse.IsDown(Night.MouseButton)
  - Night.Mouse.SetGrabbed(System.Boolean)
  - Night.Mouse.SetRelativeMode(System.Boolean)
  - Night.Mouse.SetVisible(System.Boolean)
  langs:
  - csharp
  - vb
  name: Mouse
  nameWithType: Mouse
  fullName: Night.Mouse
  type: Class
  source:
    remote:
      path: src/Night/Mouse/Mouse.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Mouse
    path: ../src/Night/Mouse/Mouse.cs
    startLine: 33
  assemblies:
  - Night
  namespace: Night
  summary: Provides an interface to the user's mouse.
  example: []
  syntax:
    content: public static class Mouse
    content.vb: Public Module Mouse
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Night.Mouse.IsDown(Night.MouseButton)
  commentId: M:Night.Mouse.IsDown(Night.MouseButton)
  id: IsDown(Night.MouseButton)
  parent: Night.Mouse
  langs:
  - csharp
  - vb
  name: IsDown(MouseButton)
  nameWithType: Mouse.IsDown(MouseButton)
  fullName: Night.Mouse.IsDown(Night.MouseButton)
  type: Method
  source:
    remote:
      path: src/Night/Mouse/Mouse.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: IsDown
    path: ../src/Night/Mouse/Mouse.cs
    startLine: 41
  assemblies:
  - Night
  namespace: Night
  summary: >-
    Checks whether a certain mouse button is down.

    This function does not detect mouse wheel scrolling.
  example: []
  syntax:
    content: public static bool IsDown(MouseButton button)
    parameters:
    - id: button
      type: Night.MouseButton
      description: The index of a button to check. 1 is the primary mouse button, 2 is the secondary mouse button, 3 is the middle button, 4 is the X1 button (typically "back"), and 5 is the X2 button (typically "forward").
    return:
      type: System.Boolean
      description: True if the button is down, false otherwise.
    content.vb: Public Shared Function IsDown(button As MouseButton) As Boolean
  overload: Night.Mouse.IsDown*
- uid: Night.Mouse.GetPosition
  commentId: M:Night.Mouse.GetPosition
  id: GetPosition
  parent: Night.Mouse
  langs:
  - csharp
  - vb
  name: GetPosition()
  nameWithType: Mouse.GetPosition()
  fullName: Night.Mouse.GetPosition()
  type: Method
  source:
    remote:
      path: src/Night/Mouse/Mouse.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: GetPosition
    path: ../src/Night/Mouse/Mouse.cs
    startLine: 81
  assemblies:
  - Night
  namespace: Night
  summary: Gets the current position of the mouse cursor in the window.
  example: []
  syntax:
    content: public static (int X, int Y) GetPosition()
    return:
      type: System.ValueTuple{System.Int32,System.Int32}
      description: A tuple (int X, int Y) representing the mouse cursor coordinates.
    content.vb: Public Shared Function GetPosition() As (X As Integer, Y As Integer)
  overload: Night.Mouse.GetPosition*
- uid: Night.Mouse.SetVisible(System.Boolean)
  commentId: M:Night.Mouse.SetVisible(System.Boolean)
  id: SetVisible(System.Boolean)
  parent: Night.Mouse
  langs:
  - csharp
  - vb
  name: SetVisible(bool)
  nameWithType: Mouse.SetVisible(bool)
  fullName: Night.Mouse.SetVisible(bool)
  type: Method
  source:
    remote:
      path: src/Night/Mouse/Mouse.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: SetVisible
    path: ../src/Night/Mouse/Mouse.cs
    startLine: 98
  assemblies:
  - Night
  namespace: Night
  summary: Sets the visibility of the mouse cursor.
  example: []
  syntax:
    content: public static void SetVisible(bool visible)
    parameters:
    - id: visible
      type: System.Boolean
      description: True to show the cursor, false to hide it.
    content.vb: Public Shared Sub SetVisible(visible As Boolean)
  overload: Night.Mouse.SetVisible*
  nameWithType.vb: Mouse.SetVisible(Boolean)
  fullName.vb: Night.Mouse.SetVisible(Boolean)
  name.vb: SetVisible(Boolean)
- uid: Night.Mouse.SetGrabbed(System.Boolean)
  commentId: M:Night.Mouse.SetGrabbed(System.Boolean)
  id: SetGrabbed(System.Boolean)
  parent: Night.Mouse
  langs:
  - csharp
  - vb
  name: SetGrabbed(bool)
  nameWithType: Mouse.SetGrabbed(bool)
  fullName: Night.Mouse.SetGrabbed(bool)
  type: Method
  source:
    remote:
      path: src/Night/Mouse/Mouse.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: SetGrabbed
    path: ../src/Night/Mouse/Mouse.cs
    startLine: 119
  assemblies:
  - Night
  namespace: Night
  summary: Grabs the mouse, confining it to the window.
  example: []
  syntax:
    content: public static void SetGrabbed(bool grabbed)
    parameters:
    - id: grabbed
      type: System.Boolean
      description: True to grab the mouse, false to release it.
    content.vb: Public Shared Sub SetGrabbed(grabbed As Boolean)
  overload: Night.Mouse.SetGrabbed*
  nameWithType.vb: Mouse.SetGrabbed(Boolean)
  fullName.vb: Night.Mouse.SetGrabbed(Boolean)
  name.vb: SetGrabbed(Boolean)
- uid: Night.Mouse.SetRelativeMode(System.Boolean)
  commentId: M:Night.Mouse.SetRelativeMode(System.Boolean)
  id: SetRelativeMode(System.Boolean)
  parent: Night.Mouse
  langs:
  - csharp
  - vb
  name: SetRelativeMode(bool)
  nameWithType: Mouse.SetRelativeMode(bool)
  fullName: Night.Mouse.SetRelativeMode(bool)
  type: Method
  source:
    remote:
      path: src/Night/Mouse/Mouse.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: SetRelativeMode
    path: ../src/Night/Mouse/Mouse.cs
    startLine: 134
  assemblies:
  - Night
  namespace: Night
  summary: >-
    Sets whether relative mouse mode is enabled for the current window.

    In relative mode, the cursor is hidden and mouse motion is reported as relative to the last position.
  example: []
  syntax:
    content: public static void SetRelativeMode(bool enabled)
    parameters:
    - id: enabled
      type: System.Boolean
      description: True to enable relative mode, false to disable it.
    content.vb: Public Shared Sub SetRelativeMode(enabled As Boolean)
  overload: Night.Mouse.SetRelativeMode*
  nameWithType.vb: Mouse.SetRelativeMode(Boolean)
  fullName.vb: Night.Mouse.SetRelativeMode(Boolean)
  name.vb: SetRelativeMode(Boolean)
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Night.Mouse.IsDown*
  commentId: Overload:Night.Mouse.IsDown
  href: Night.Mouse.html#Night_Mouse_IsDown_Night_MouseButton_
  name: IsDown
  nameWithType: Mouse.IsDown
  fullName: Night.Mouse.IsDown
- uid: Night.MouseButton
  commentId: T:Night.MouseButton
  parent: Night
  href: Night.MouseButton.html
  name: MouseButton
  nameWithType: MouseButton
  fullName: Night.MouseButton
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Night.Mouse.GetPosition*
  commentId: Overload:Night.Mouse.GetPosition
  href: Night.Mouse.html#Night_Mouse_GetPosition
  name: GetPosition
  nameWithType: Mouse.GetPosition
  fullName: Night.Mouse.GetPosition
- uid: System.ValueTuple{System.Int32,System.Int32}
  commentId: T:System.ValueTuple{System.Int32,System.Int32}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: (int X, int Y)
  nameWithType: (int X, int Y)
  fullName: (int X, int Y)
  nameWithType.vb: (X As Integer, Y As Integer)
  fullName.vb: (X As Integer, Y As Integer)
  name.vb: (X As Integer, Y As Integer)
  spec.csharp:
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.X
    name: X
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.x
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.Y
    name: Y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.y
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Int32,System.Int32}.X
    name: X
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.x
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.Y
    name: Y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.y
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Night.Mouse.SetVisible*
  commentId: Overload:Night.Mouse.SetVisible
  href: Night.Mouse.html#Night_Mouse_SetVisible_System_Boolean_
  name: SetVisible
  nameWithType: Mouse.SetVisible
  fullName: Night.Mouse.SetVisible
- uid: Night.Mouse.SetGrabbed*
  commentId: Overload:Night.Mouse.SetGrabbed
  href: Night.Mouse.html#Night_Mouse_SetGrabbed_System_Boolean_
  name: SetGrabbed
  nameWithType: Mouse.SetGrabbed
  fullName: Night.Mouse.SetGrabbed
- uid: Night.Mouse.SetRelativeMode*
  commentId: Overload:Night.Mouse.SetRelativeMode
  href: Night.Mouse.html#Night_Mouse_SetRelativeMode_System_Boolean_
  name: SetRelativeMode
  nameWithType: Mouse.SetRelativeMode
  fullName: Night.Mouse.SetRelativeMode



================================================
File: site/api/Night.MouseButton.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.MouseButton
  commentId: T:Night.MouseButton
  id: MouseButton
  parent: Night
  children:
  - Night.MouseButton.Left
  - Night.MouseButton.Middle
  - Night.MouseButton.Right
  - Night.MouseButton.Unknown
  - Night.MouseButton.X1
  - Night.MouseButton.X2
  langs:
  - csharp
  - vb
  name: MouseButton
  nameWithType: MouseButton
  fullName: Night.MouseButton
  type: Enum
  source:
    remote:
      path: src/Night/Mouse/MouseButton.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: MouseButton
    path: ../src/Night/Mouse/MouseButton.cs
    startLine: 31
  assemblies:
  - Night
  namespace: Night
  summary: >-
    Represents mouse buttons. Values correspond to SDL_MouseButtonFlags/

    SDL3.SDL.Button* constants.

    (e.g., Left is 1, Middle is 2, etc.)
  example: []
  syntax:
    content: public enum MouseButton
    content.vb: Public Enum MouseButton
- uid: Night.MouseButton.Unknown
  commentId: F:Night.MouseButton.Unknown
  id: Unknown
  parent: Night.MouseButton
  langs:
  - csharp
  - vb
  name: Unknown
  nameWithType: MouseButton.Unknown
  fullName: Night.MouseButton.Unknown
  type: Field
  source:
    remote:
      path: src/Night/Mouse/MouseButton.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Unknown
    path: ../src/Night/Mouse/MouseButton.cs
    startLine: 36
  assemblies:
  - Night
  namespace: Night
  summary: An unknown or unspecified mouse button.
  example: []
  syntax:
    content: Unknown = 0
    return:
      type: Night.MouseButton
- uid: Night.MouseButton.Left
  commentId: F:Night.MouseButton.Left
  id: Left
  parent: Night.MouseButton
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: MouseButton.Left
  fullName: Night.MouseButton.Left
  type: Field
  source:
    remote:
      path: src/Night/Mouse/MouseButton.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Left
    path: ../src/Night/Mouse/MouseButton.cs
    startLine: 41
  assemblies:
  - Night
  namespace: Night
  summary: The left mouse button.
  example: []
  syntax:
    content: Left = 1
    return:
      type: Night.MouseButton
- uid: Night.MouseButton.Middle
  commentId: F:Night.MouseButton.Middle
  id: Middle
  parent: Night.MouseButton
  langs:
  - csharp
  - vb
  name: Middle
  nameWithType: MouseButton.Middle
  fullName: Night.MouseButton.Middle
  type: Field
  source:
    remote:
      path: src/Night/Mouse/MouseButton.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Middle
    path: ../src/Night/Mouse/MouseButton.cs
    startLine: 46
  assemblies:
  - Night
  namespace: Night
  summary: The middle mouse button.
  example: []
  syntax:
    content: Middle = 2
    return:
      type: Night.MouseButton
- uid: Night.MouseButton.Right
  commentId: F:Night.MouseButton.Right
  id: Right
  parent: Night.MouseButton
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: MouseButton.Right
  fullName: Night.MouseButton.Right
  type: Field
  source:
    remote:
      path: src/Night/Mouse/MouseButton.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Right
    path: ../src/Night/Mouse/MouseButton.cs
    startLine: 51
  assemblies:
  - Night
  namespace: Night
  summary: The right mouse button.
  example: []
  syntax:
    content: Right = 3
    return:
      type: Night.MouseButton
- uid: Night.MouseButton.X1
  commentId: F:Night.MouseButton.X1
  id: X1
  parent: Night.MouseButton
  langs:
  - csharp
  - vb
  name: X1
  nameWithType: MouseButton.X1
  fullName: Night.MouseButton.X1
  type: Field
  source:
    remote:
      path: src/Night/Mouse/MouseButton.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: X1
    path: ../src/Night/Mouse/MouseButton.cs
    startLine: 56
  assemblies:
  - Night
  namespace: Night
  summary: The first extra mouse button (often "back").
  example: []
  syntax:
    content: X1 = 4
    return:
      type: Night.MouseButton
- uid: Night.MouseButton.X2
  commentId: F:Night.MouseButton.X2
  id: X2
  parent: Night.MouseButton
  langs:
  - csharp
  - vb
  name: X2
  nameWithType: MouseButton.X2
  fullName: Night.MouseButton.X2
  type: Field
  source:
    remote:
      path: src/Night/Mouse/MouseButton.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: X2
    path: ../src/Night/Mouse/MouseButton.cs
    startLine: 61
  assemblies:
  - Night
  namespace: Night
  summary: The second extra mouse button (often "forward").
  example: []
  syntax:
    content: X2 = 5
    return:
      type: Night.MouseButton
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: Night.MouseButton
  commentId: T:Night.MouseButton
  parent: Night
  href: Night.MouseButton.html
  name: MouseButton
  nameWithType: MouseButton
  fullName: Night.MouseButton



================================================
File: site/api/Night.NightSDL.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.NightSDL
  commentId: T:Night.NightSDL
  id: NightSDL
  parent: Night
  children:
  - Night.NightSDL.GetError
  - Night.NightSDL.GetVersion
  langs:
  - csharp
  - vb
  name: NightSDL
  nameWithType: NightSDL
  fullName: Night.NightSDL
  type: Class
  source:
    remote:
      path: src/Night/SDL/NightSDL.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: NightSDL
    path: ../src/Night/SDL/NightSDL.cs
    startLine: 31
  assemblies:
  - Night
  namespace: Night
  summary: Provides direct access to some SDL3 functions using SDL3-CS bindings.
  example: []
  syntax:
    content: public static class NightSDL
    content.vb: Public Module NightSDL
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Night.NightSDL.GetVersion
  commentId: M:Night.NightSDL.GetVersion
  id: GetVersion
  parent: Night.NightSDL
  langs:
  - csharp
  - vb
  name: GetVersion()
  nameWithType: NightSDL.GetVersion()
  fullName: Night.NightSDL.GetVersion()
  type: Method
  source:
    remote:
      path: src/Night/SDL/NightSDL.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: GetVersion
    path: ../src/Night/SDL/NightSDL.cs
    startLine: 39
  assemblies:
  - Night
  namespace: Night
  summary: >-
    Get the version of SDL that is linked against the Night Engine.

    Calls the SDL3-CS binding for SDL_GetVersion() and returns a packed int.

    https://wiki.libsdl.org/SDL3/SDL_GetVersion.
  example: []
  syntax:
    content: public static string GetVersion()
    return:
      type: System.String
      description: A string representing the SDL version "major.minor.patch".
    content.vb: Public Shared Function GetVersion() As String
  overload: Night.NightSDL.GetVersion*
- uid: Night.NightSDL.GetError
  commentId: M:Night.NightSDL.GetError
  id: GetError
  parent: Night.NightSDL
  langs:
  - csharp
  - vb
  name: GetError()
  nameWithType: NightSDL.GetError()
  fullName: Night.NightSDL.GetError()
  type: Method
  source:
    remote:
      path: src/Night/SDL/NightSDL.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: GetError
    path: ../src/Night/SDL/NightSDL.cs
    startLine: 54
  assemblies:
  - Night
  namespace: Night
  summary: >-
    Retrieve a message about the last error that occurred on the current thread.

    Calls the SDL3-CS binding for SDL_GetError() and returns a string.

    https://wiki.libsdl.org/SDL3/SDL_GetError.
  example: []
  syntax:
    content: public static string GetError()
    return:
      type: System.String
      description: Returns a message with information about the specific error that occurred, or an empty string if there hasn't been an error message set since the last call to SDL_ClearError().
    content.vb: Public Shared Function GetError() As String
  overload: Night.NightSDL.GetError*
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Night.NightSDL.GetVersion*
  commentId: Overload:Night.NightSDL.GetVersion
  href: Night.NightSDL.html#Night_NightSDL_GetVersion
  name: GetVersion
  nameWithType: NightSDL.GetVersion
  fullName: Night.NightSDL.GetVersion
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Night.NightSDL.GetError*
  commentId: Overload:Night.NightSDL.GetError
  href: Night.NightSDL.html#Night_NightSDL_GetError
  name: GetError
  nameWithType: NightSDL.GetError
  fullName: Night.NightSDL.GetError



================================================
File: site/api/Night.PointF.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.PointF
  commentId: T:Night.PointF
  id: PointF
  parent: Night
  children:
  - Night.PointF.#ctor(System.Single,System.Single)
  - Night.PointF.X
  - Night.PointF.Y
  langs:
  - csharp
  - vb
  name: PointF
  nameWithType: PointF
  fullName: Night.PointF
  type: Struct
  source:
    remote:
      path: src/Night/Graphics/PointF.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: PointF
    path: ../src/Night/Graphics/PointF.cs
    startLine: 29
  assemblies:
  - Night
  namespace: Night
  summary: Represents a 2D point with floating-point coordinates.
  example: []
  syntax:
    content: public struct PointF
    content.vb: Public Structure PointF
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Night.PointF.X
  commentId: F:Night.PointF.X
  id: X
  parent: Night.PointF
  langs:
  - csharp
  - vb
  name: X
  nameWithType: PointF.X
  fullName: Night.PointF.X
  type: Field
  source:
    remote:
      path: src/Night/Graphics/PointF.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: X
    path: ../src/Night/Graphics/PointF.cs
    startLine: 34
  assemblies:
  - Night
  namespace: Night
  summary: The X-coordinate of the point.
  example: []
  syntax:
    content: public float X
    return:
      type: System.Single
    content.vb: Public X As Single
- uid: Night.PointF.Y
  commentId: F:Night.PointF.Y
  id: Y
  parent: Night.PointF
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: PointF.Y
  fullName: Night.PointF.Y
  type: Field
  source:
    remote:
      path: src/Night/Graphics/PointF.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Y
    path: ../src/Night/Graphics/PointF.cs
    startLine: 39
  assemblies:
  - Night
  namespace: Night
  summary: The Y-coordinate of the point.
  example: []
  syntax:
    content: public float Y
    return:
      type: System.Single
    content.vb: Public Y As Single
- uid: Night.PointF.#ctor(System.Single,System.Single)
  commentId: M:Night.PointF.#ctor(System.Single,System.Single)
  id: '#ctor(System.Single,System.Single)'
  parent: Night.PointF
  langs:
  - csharp
  - vb
  name: PointF(float, float)
  nameWithType: PointF.PointF(float, float)
  fullName: Night.PointF.PointF(float, float)
  type: Constructor
  source:
    remote:
      path: src/Night/Graphics/PointF.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: .ctor
    path: ../src/Night/Graphics/PointF.cs
    startLine: 46
  assemblies:
  - Night
  namespace: Night
  summary: Initializes a new instance of the <xref href="Night.PointF" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public PointF(float x, float y)
    parameters:
    - id: x
      type: System.Single
      description: The X-coordinate.
    - id: y
      type: System.Single
      description: The Y-coordinate.
    content.vb: Public Sub New(x As Single, y As Single)
  overload: Night.PointF.#ctor*
  nameWithType.vb: PointF.New(Single, Single)
  fullName.vb: Night.PointF.New(Single, Single)
  name.vb: New(Single, Single)
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Night.PointF
  commentId: T:Night.PointF
  href: Night.PointF.html
  name: PointF
  nameWithType: PointF
  fullName: Night.PointF
- uid: Night.PointF.#ctor*
  commentId: Overload:Night.PointF.#ctor
  href: Night.PointF.html#Night_PointF__ctor_System_Single_System_Single_
  name: PointF
  nameWithType: PointF.PointF
  fullName: Night.PointF.PointF
  nameWithType.vb: PointF.New
  fullName.vb: Night.PointF.New
  name.vb: New



================================================
File: site/api/Night.Rectangle.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.Rectangle
  commentId: T:Night.Rectangle
  id: Rectangle
  parent: Night
  children:
  - Night.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  - Night.Rectangle.Height
  - Night.Rectangle.Width
  - Night.Rectangle.X
  - Night.Rectangle.Y
  langs:
  - csharp
  - vb
  name: Rectangle
  nameWithType: Rectangle
  fullName: Night.Rectangle
  type: Struct
  source:
    remote:
      path: src/Night/Graphics/Rectangle.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Rectangle
    path: ../src/Night/Graphics/Rectangle.cs
    startLine: 29
  assemblies:
  - Night
  namespace: Night
  summary: Represents a rectangle with position (X, Y) and dimensions (Width, Height).
  example: []
  syntax:
    content: public struct Rectangle
    content.vb: Public Structure Rectangle
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Night.Rectangle.X
  commentId: F:Night.Rectangle.X
  id: X
  parent: Night.Rectangle
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Rectangle.X
  fullName: Night.Rectangle.X
  type: Field
  source:
    remote:
      path: src/Night/Graphics/Rectangle.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: X
    path: ../src/Night/Graphics/Rectangle.cs
    startLine: 34
  assemblies:
  - Night
  namespace: Night
  summary: The X-coordinate of the top-left corner of the rectangle.
  example: []
  syntax:
    content: public int X
    return:
      type: System.Int32
    content.vb: Public X As Integer
- uid: Night.Rectangle.Y
  commentId: F:Night.Rectangle.Y
  id: Y
  parent: Night.Rectangle
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Rectangle.Y
  fullName: Night.Rectangle.Y
  type: Field
  source:
    remote:
      path: src/Night/Graphics/Rectangle.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Y
    path: ../src/Night/Graphics/Rectangle.cs
    startLine: 39
  assemblies:
  - Night
  namespace: Night
  summary: The Y-coordinate of the top-left corner of the rectangle.
  example: []
  syntax:
    content: public int Y
    return:
      type: System.Int32
    content.vb: Public Y As Integer
- uid: Night.Rectangle.Width
  commentId: F:Night.Rectangle.Width
  id: Width
  parent: Night.Rectangle
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: Rectangle.Width
  fullName: Night.Rectangle.Width
  type: Field
  source:
    remote:
      path: src/Night/Graphics/Rectangle.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Width
    path: ../src/Night/Graphics/Rectangle.cs
    startLine: 44
  assemblies:
  - Night
  namespace: Night
  summary: The width of the rectangle.
  example: []
  syntax:
    content: public int Width
    return:
      type: System.Int32
    content.vb: Public Width As Integer
- uid: Night.Rectangle.Height
  commentId: F:Night.Rectangle.Height
  id: Height
  parent: Night.Rectangle
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: Rectangle.Height
  fullName: Night.Rectangle.Height
  type: Field
  source:
    remote:
      path: src/Night/Graphics/Rectangle.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Height
    path: ../src/Night/Graphics/Rectangle.cs
    startLine: 49
  assemblies:
  - Night
  namespace: Night
  summary: The height of the rectangle.
  example: []
  syntax:
    content: public int Height
    return:
      type: System.Int32
    content.vb: Public Height As Integer
- uid: Night.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Night.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: Night.Rectangle
  langs:
  - csharp
  - vb
  name: Rectangle(int, int, int, int)
  nameWithType: Rectangle.Rectangle(int, int, int, int)
  fullName: Night.Rectangle.Rectangle(int, int, int, int)
  type: Constructor
  source:
    remote:
      path: src/Night/Graphics/Rectangle.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: .ctor
    path: ../src/Night/Graphics/Rectangle.cs
    startLine: 58
  assemblies:
  - Night
  namespace: Night
  summary: Initializes a new instance of the <xref href="Night.Rectangle" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Rectangle(int x, int y, int width, int height)
    parameters:
    - id: x
      type: System.Int32
      description: The X-coordinate of the top-left corner.
    - id: y
      type: System.Int32
      description: The Y-coordinate of the top-left corner.
    - id: width
      type: System.Int32
      description: The width of the rectangle.
    - id: height
      type: System.Int32
      description: The height of the rectangle.
    content.vb: Public Sub New(x As Integer, y As Integer, width As Integer, height As Integer)
  overload: Night.Rectangle.#ctor*
  nameWithType.vb: Rectangle.New(Integer, Integer, Integer, Integer)
  fullName.vb: Night.Rectangle.New(Integer, Integer, Integer, Integer)
  name.vb: New(Integer, Integer, Integer, Integer)
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Night.Rectangle
  commentId: T:Night.Rectangle
  href: Night.Rectangle.html
  name: Rectangle
  nameWithType: Rectangle
  fullName: Night.Rectangle
- uid: Night.Rectangle.#ctor*
  commentId: Overload:Night.Rectangle.#ctor
  href: Night.Rectangle.html#Night_Rectangle__ctor_System_Int32_System_Int32_System_Int32_System_Int32_
  name: Rectangle
  nameWithType: Rectangle.Rectangle
  fullName: Night.Rectangle.Rectangle
  nameWithType.vb: Rectangle.New
  fullName.vb: Night.Rectangle.New
  name.vb: New



================================================
File: site/api/Night.SampleGame.Game.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.SampleGame.Game
  commentId: T:Night.SampleGame.Game
  id: Game
  parent: Night.SampleGame
  children:
  - Night.SampleGame.Game.#ctor
  - Night.SampleGame.Game.Draw
  - Night.SampleGame.Game.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
  - Night.SampleGame.Game.Load
  - Night.SampleGame.Game.Update(System.Double)
  langs:
  - csharp
  - vb
  name: Game
  nameWithType: Game
  fullName: Night.SampleGame.Game
  type: Class
  source:
    remote:
      path: src/SampleGame/Game.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Game
    path: ../src/SampleGame/Game.cs
    startLine: 36
  assemblies:
  - Night.SampleGame
  namespace: Night.SampleGame
  summary: >-
    Main game class for the platformer sample.

    Implements the <xref href="Night.IGame" data-throw-if-not-resolved="false"></xref> interface for Night.Engine integration.
  example: []
  syntax:
    content: 'public class Game : IGame'
    content.vb: Public Class Game Implements IGame
  inheritance:
  - System.Object
  implements:
  - Night.IGame
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Night.SampleGame.Game.#ctor
  commentId: M:Night.SampleGame.Game.#ctor
  id: '#ctor'
  parent: Night.SampleGame.Game
  langs:
  - csharp
  - vb
  name: Game()
  nameWithType: Game.Game()
  fullName: Night.SampleGame.Game.Game()
  type: Constructor
  source:
    remote:
      path: src/SampleGame/Game.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: .ctor
    path: ../src/SampleGame/Game.cs
    startLine: 47
  assemblies:
  - Night.SampleGame
  namespace: Night.SampleGame
  summary: Initializes a new instance of the <xref href="Night.SampleGame.Game" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public Game()
    content.vb: Public Sub New()
  overload: Night.SampleGame.Game.#ctor*
  nameWithType.vb: Game.New()
  fullName.vb: Night.SampleGame.Game.New()
  name.vb: New()
- uid: Night.SampleGame.Game.Load
  commentId: M:Night.SampleGame.Game.Load
  id: Load
  parent: Night.SampleGame.Game
  langs:
  - csharp
  - vb
  name: Load()
  nameWithType: Game.Load()
  fullName: Night.SampleGame.Game.Load()
  type: Method
  source:
    remote:
      path: src/SampleGame/Game.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Load
    path: ../src/SampleGame/Game.cs
    startLine: 57
  assemblies:
  - Night.SampleGame
  namespace: Night.SampleGame
  summary: >-
    Loads game assets and initializes game state.

    Called once at the start of the game by the Night.Engine.
  example: []
  syntax:
    content: public void Load()
    content.vb: Public Sub Load()
  overload: Night.SampleGame.Game.Load*
  implements:
  - Night.IGame.Load
- uid: Night.SampleGame.Game.Update(System.Double)
  commentId: M:Night.SampleGame.Game.Update(System.Double)
  id: Update(System.Double)
  parent: Night.SampleGame.Game
  langs:
  - csharp
  - vb
  name: Update(double)
  nameWithType: Game.Update(double)
  fullName: Night.SampleGame.Game.Update(double)
  type: Method
  source:
    remote:
      path: src/SampleGame/Game.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Update
    path: ../src/SampleGame/Game.cs
    startLine: 87
  assemblies:
  - Night.SampleGame
  namespace: Night.SampleGame
  summary: >-
    Updates the game state.

    Called every frame by the Night.Engine.
  example: []
  syntax:
    content: public void Update(double deltaTime)
    parameters:
    - id: deltaTime
      type: System.Double
      description: The time elapsed since the last frame, in seconds.
    content.vb: Public Sub Update(deltaTime As Double)
  overload: Night.SampleGame.Game.Update*
  implements:
  - Night.IGame.Update(System.Double)
  nameWithType.vb: Game.Update(Double)
  fullName.vb: Night.SampleGame.Game.Update(Double)
  name.vb: Update(Double)
- uid: Night.SampleGame.Game.Draw
  commentId: M:Night.SampleGame.Game.Draw
  id: Draw
  parent: Night.SampleGame.Game
  langs:
  - csharp
  - vb
  name: Draw()
  nameWithType: Game.Draw()
  fullName: Night.SampleGame.Game.Draw()
  type: Method
  source:
    remote:
      path: src/SampleGame/Game.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Draw
    path: ../src/SampleGame/Game.cs
    startLine: 111
  assemblies:
  - Night.SampleGame
  namespace: Night.SampleGame
  summary: >-
    Draws the game scene.

    Called every frame by the Night.Engine after Update.
  example: []
  syntax:
    content: public void Draw()
    content.vb: Public Sub Draw()
  overload: Night.SampleGame.Game.Draw*
  implements:
  - Night.IGame.Draw
- uid: Night.SampleGame.Game.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
  commentId: M:Night.SampleGame.Game.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
  id: KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
  parent: Night.SampleGame.Game
  langs:
  - csharp
  - vb
  name: KeyPressed(KeySymbol, KeyCode, bool)
  nameWithType: Game.KeyPressed(KeySymbol, KeyCode, bool)
  fullName: Night.SampleGame.Game.KeyPressed(Night.KeySymbol, Night.KeyCode, bool)
  type: Method
  source:
    remote:
      path: src/SampleGame/Game.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: KeyPressed
    path: ../src/SampleGame/Game.cs
    startLine: 227
  assemblies:
  - Night.SampleGame
  namespace: Night.SampleGame
  summary: >-
    Handles key press events.

    Called by Night.Engine when a key is pressed.
  example: []
  syntax:
    content: public void KeyPressed(KeySymbol key, KeyCode scancode, bool isRepeat)
    parameters:
    - id: key
      type: Night.KeySymbol
      description: The <xref href="Night.KeySymbol" data-throw-if-not-resolved="false"></xref> of the pressed key.
    - id: scancode
      type: Night.KeyCode
      description: The <xref href="Night.KeyCode" data-throw-if-not-resolved="false"></xref> (physical key code) of the pressed key.
    - id: isRepeat
      type: System.Boolean
      description: True if this is a repeat key event, false otherwise.
    content.vb: Public Sub KeyPressed(key As KeySymbol, scancode As KeyCode, isRepeat As Boolean)
  overload: Night.SampleGame.Game.KeyPressed*
  implements:
  - Night.IGame.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
  nameWithType.vb: Game.KeyPressed(KeySymbol, KeyCode, Boolean)
  fullName.vb: Night.SampleGame.Game.KeyPressed(Night.KeySymbol, Night.KeyCode, Boolean)
  name.vb: KeyPressed(KeySymbol, KeyCode, Boolean)
references:
- uid: Night.IGame
  commentId: T:Night.IGame
  parent: Night
  href: Night.IGame.html
  name: IGame
  nameWithType: IGame
  fullName: Night.IGame
- uid: Night.SampleGame
  commentId: N:Night.SampleGame
  href: Night.html
  name: Night.SampleGame
  nameWithType: Night.SampleGame
  fullName: Night.SampleGame
  spec.csharp:
  - uid: Night
    name: Night
    href: Night.html
  - name: .
  - uid: Night.SampleGame
    name: SampleGame
    href: Night.SampleGame.html
  spec.vb:
  - uid: Night
    name: Night
    href: Night.html
  - name: .
  - uid: Night.SampleGame
    name: SampleGame
    href: Night.SampleGame.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Night.SampleGame.Game
  commentId: T:Night.SampleGame.Game
  href: Night.SampleGame.Game.html
  name: Game
  nameWithType: Game
  fullName: Night.SampleGame.Game
- uid: Night.SampleGame.Game.#ctor*
  commentId: Overload:Night.SampleGame.Game.#ctor
  href: Night.SampleGame.Game.html#Night_SampleGame_Game__ctor
  name: Game
  nameWithType: Game.Game
  fullName: Night.SampleGame.Game.Game
  nameWithType.vb: Game.New
  fullName.vb: Night.SampleGame.Game.New
  name.vb: New
- uid: Night.SampleGame.Game.Load*
  commentId: Overload:Night.SampleGame.Game.Load
  href: Night.SampleGame.Game.html#Night_SampleGame_Game_Load
  name: Load
  nameWithType: Game.Load
  fullName: Night.SampleGame.Game.Load
- uid: Night.IGame.Load
  commentId: M:Night.IGame.Load
  parent: Night.IGame
  href: Night.IGame.html#Night_IGame_Load
  name: Load()
  nameWithType: IGame.Load()
  fullName: Night.IGame.Load()
  spec.csharp:
  - uid: Night.IGame.Load
    name: Load
    href: Night.IGame.html#Night_IGame_Load
  - name: (
  - name: )
  spec.vb:
  - uid: Night.IGame.Load
    name: Load
    href: Night.IGame.html#Night_IGame_Load
  - name: (
  - name: )
- uid: Night.SampleGame.Game.Update*
  commentId: Overload:Night.SampleGame.Game.Update
  href: Night.SampleGame.Game.html#Night_SampleGame_Game_Update_System_Double_
  name: Update
  nameWithType: Game.Update
  fullName: Night.SampleGame.Game.Update
- uid: Night.IGame.Update(System.Double)
  commentId: M:Night.IGame.Update(System.Double)
  parent: Night.IGame
  isExternal: true
  href: Night.IGame.html#Night_IGame_Update_System_Double_
  name: Update(double)
  nameWithType: IGame.Update(double)
  fullName: Night.IGame.Update(double)
  nameWithType.vb: IGame.Update(Double)
  fullName.vb: Night.IGame.Update(Double)
  name.vb: Update(Double)
  spec.csharp:
  - uid: Night.IGame.Update(System.Double)
    name: Update
    href: Night.IGame.html#Night_IGame_Update_System_Double_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: Night.IGame.Update(System.Double)
    name: Update
    href: Night.IGame.html#Night_IGame_Update_System_Double_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Night.SampleGame.Game.Draw*
  commentId: Overload:Night.SampleGame.Game.Draw
  href: Night.SampleGame.Game.html#Night_SampleGame_Game_Draw
  name: Draw
  nameWithType: Game.Draw
  fullName: Night.SampleGame.Game.Draw
- uid: Night.IGame.Draw
  commentId: M:Night.IGame.Draw
  parent: Night.IGame
  href: Night.IGame.html#Night_IGame_Draw
  name: Draw()
  nameWithType: IGame.Draw()
  fullName: Night.IGame.Draw()
  spec.csharp:
  - uid: Night.IGame.Draw
    name: Draw
    href: Night.IGame.html#Night_IGame_Draw
  - name: (
  - name: )
  spec.vb:
  - uid: Night.IGame.Draw
    name: Draw
    href: Night.IGame.html#Night_IGame_Draw
  - name: (
  - name: )
- uid: Night.KeySymbol
  commentId: T:Night.KeySymbol
  parent: Night
  href: Night.KeySymbol.html
  name: KeySymbol
  nameWithType: KeySymbol
  fullName: Night.KeySymbol
- uid: Night.KeyCode
  commentId: T:Night.KeyCode
  parent: Night
  href: Night.KeyCode.html
  name: KeyCode
  nameWithType: KeyCode
  fullName: Night.KeyCode
- uid: Night.SampleGame.Game.KeyPressed*
  commentId: Overload:Night.SampleGame.Game.KeyPressed
  href: Night.SampleGame.Game.html#Night_SampleGame_Game_KeyPressed_Night_KeySymbol_Night_KeyCode_System_Boolean_
  name: KeyPressed
  nameWithType: Game.KeyPressed
  fullName: Night.SampleGame.Game.KeyPressed
- uid: Night.IGame.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
  commentId: M:Night.IGame.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
  parent: Night.IGame
  isExternal: true
  href: Night.IGame.html#Night_IGame_KeyPressed_Night_KeySymbol_Night_KeyCode_System_Boolean_
  name: KeyPressed(KeySymbol, KeyCode, bool)
  nameWithType: IGame.KeyPressed(KeySymbol, KeyCode, bool)
  fullName: Night.IGame.KeyPressed(Night.KeySymbol, Night.KeyCode, bool)
  nameWithType.vb: IGame.KeyPressed(KeySymbol, KeyCode, Boolean)
  fullName.vb: Night.IGame.KeyPressed(Night.KeySymbol, Night.KeyCode, Boolean)
  name.vb: KeyPressed(KeySymbol, KeyCode, Boolean)
  spec.csharp:
  - uid: Night.IGame.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
    name: KeyPressed
    href: Night.IGame.html#Night_IGame_KeyPressed_Night_KeySymbol_Night_KeyCode_System_Boolean_
  - name: (
  - uid: Night.KeySymbol
    name: KeySymbol
    href: Night.KeySymbol.html
  - name: ','
  - name: " "
  - uid: Night.KeyCode
    name: KeyCode
    href: Night.KeyCode.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Night.IGame.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
    name: KeyPressed
    href: Night.IGame.html#Night_IGame_KeyPressed_Night_KeySymbol_Night_KeyCode_System_Boolean_
  - name: (
  - uid: Night.KeySymbol
    name: KeySymbol
    href: Night.KeySymbol.html
  - name: ','
  - name: " "
  - uid: Night.KeyCode
    name: KeyCode
    href: Night.KeyCode.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean



================================================
File: site/api/Night.SampleGame.Platformer.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.SampleGame.Platformer
  commentId: T:Night.SampleGame.Platformer
  id: Platformer
  parent: Night.SampleGame
  children:
  - Night.SampleGame.Platformer.#ctor
  - Night.SampleGame.Platformer.Draw
  - Night.SampleGame.Platformer.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
  - Night.SampleGame.Platformer.Load
  - Night.SampleGame.Platformer.Update(System.Double)
  langs:
  - csharp
  - vb
  name: Platformer
  nameWithType: Platformer
  fullName: Night.SampleGame.Platformer
  type: Class
  source:
    remote:
      path: src/SampleGame/Samples/Platformer.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Platformer
    path: ../src/SampleGame/Samples/Platformer.cs
    startLine: 36
  assemblies:
  - Night.SampleGame
  namespace: Night.SampleGame
  summary: >-
    A sample platformer game implementation using the Night engine.

    Implements the <xref href="Night.IGame" data-throw-if-not-resolved="false"></xref> interface for Night.Engine integration.
  example: []
  syntax:
    content: 'public class Platformer : IGame'
    content.vb: Public Class Platformer Implements IGame
  inheritance:
  - System.Object
  implements:
  - Night.IGame
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Night.SampleGame.Platformer.#ctor
  commentId: M:Night.SampleGame.Platformer.#ctor
  id: '#ctor'
  parent: Night.SampleGame.Platformer
  langs:
  - csharp
  - vb
  name: Platformer()
  nameWithType: Platformer.Platformer()
  fullName: Night.SampleGame.Platformer.Platformer()
  type: Constructor
  source:
    remote:
      path: src/SampleGame/Samples/Platformer.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: .ctor
    path: ../src/SampleGame/Samples/Platformer.cs
    startLine: 47
  assemblies:
  - Night.SampleGame
  namespace: Night.SampleGame
  summary: Initializes a new instance of the <xref href="Night.SampleGame.Platformer" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public Platformer()
    content.vb: Public Sub New()
  overload: Night.SampleGame.Platformer.#ctor*
  nameWithType.vb: Platformer.New()
  fullName.vb: Night.SampleGame.Platformer.New()
  name.vb: New()
- uid: Night.SampleGame.Platformer.Load
  commentId: M:Night.SampleGame.Platformer.Load
  id: Load
  parent: Night.SampleGame.Platformer
  langs:
  - csharp
  - vb
  name: Load()
  nameWithType: Platformer.Load()
  fullName: Night.SampleGame.Platformer.Load()
  type: Method
  source:
    remote:
      path: src/SampleGame/Samples/Platformer.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Load
    path: ../src/SampleGame/Samples/Platformer.cs
    startLine: 57
  assemblies:
  - Night.SampleGame
  namespace: Night.SampleGame
  summary: >-
    Loads game assets and initializes game state for the platformer.

    Called once at the start of the game by the Night.Engine.
  example: []
  syntax:
    content: public void Load()
    content.vb: Public Sub Load()
  overload: Night.SampleGame.Platformer.Load*
  implements:
  - Night.IGame.Load
- uid: Night.SampleGame.Platformer.Update(System.Double)
  commentId: M:Night.SampleGame.Platformer.Update(System.Double)
  id: Update(System.Double)
  parent: Night.SampleGame.Platformer
  langs:
  - csharp
  - vb
  name: Update(double)
  nameWithType: Platformer.Update(double)
  fullName: Night.SampleGame.Platformer.Update(double)
  type: Method
  source:
    remote:
      path: src/SampleGame/Samples/Platformer.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Update
    path: ../src/SampleGame/Samples/Platformer.cs
    startLine: 85
  assemblies:
  - Night.SampleGame
  namespace: Night.SampleGame
  summary: >-
    Updates the platformer game state.

    Called every frame by the Night.Engine.
  example: []
  syntax:
    content: public void Update(double deltaTime)
    parameters:
    - id: deltaTime
      type: System.Double
      description: The time elapsed since the last frame, in seconds.
    content.vb: Public Sub Update(deltaTime As Double)
  overload: Night.SampleGame.Platformer.Update*
  implements:
  - Night.IGame.Update(System.Double)
  nameWithType.vb: Platformer.Update(Double)
  fullName.vb: Night.SampleGame.Platformer.Update(Double)
  name.vb: Update(Double)
- uid: Night.SampleGame.Platformer.Draw
  commentId: M:Night.SampleGame.Platformer.Draw
  id: Draw
  parent: Night.SampleGame.Platformer
  langs:
  - csharp
  - vb
  name: Draw()
  nameWithType: Platformer.Draw()
  fullName: Night.SampleGame.Platformer.Draw()
  type: Method
  source:
    remote:
      path: src/SampleGame/Samples/Platformer.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Draw
    path: ../src/SampleGame/Samples/Platformer.cs
    startLine: 102
  assemblies:
  - Night.SampleGame
  namespace: Night.SampleGame
  summary: >-
    Draws the platformer game scene.

    Called every frame by the Night.Engine after Update.
  example: []
  syntax:
    content: public void Draw()
    content.vb: Public Sub Draw()
  overload: Night.SampleGame.Platformer.Draw*
  implements:
  - Night.IGame.Draw
- uid: Night.SampleGame.Platformer.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
  commentId: M:Night.SampleGame.Platformer.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
  id: KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
  parent: Night.SampleGame.Platformer
  langs:
  - csharp
  - vb
  name: KeyPressed(KeySymbol, KeyCode, bool)
  nameWithType: Platformer.KeyPressed(KeySymbol, KeyCode, bool)
  fullName: Night.SampleGame.Platformer.KeyPressed(Night.KeySymbol, Night.KeyCode, bool)
  type: Method
  source:
    remote:
      path: src/SampleGame/Samples/Platformer.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: KeyPressed
    path: ../src/SampleGame/Samples/Platformer.cs
    startLine: 134
  assemblies:
  - Night.SampleGame
  namespace: Night.SampleGame
  summary: >-
    Handles key press events for the platformer game.

    Called by Night.Engine when a key is pressed.
  example: []
  syntax:
    content: public void KeyPressed(KeySymbol key, KeyCode scancode, bool isRepeat)
    parameters:
    - id: key
      type: Night.KeySymbol
      description: The <xref href="Night.KeySymbol" data-throw-if-not-resolved="false"></xref> of the pressed key.
    - id: scancode
      type: Night.KeyCode
      description: The <xref href="Night.KeyCode" data-throw-if-not-resolved="false"></xref> (physical key code) of the pressed key.
    - id: isRepeat
      type: System.Boolean
      description: True if this is a repeat key event, false otherwise.
    content.vb: Public Sub KeyPressed(key As KeySymbol, scancode As KeyCode, isRepeat As Boolean)
  overload: Night.SampleGame.Platformer.KeyPressed*
  implements:
  - Night.IGame.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
  nameWithType.vb: Platformer.KeyPressed(KeySymbol, KeyCode, Boolean)
  fullName.vb: Night.SampleGame.Platformer.KeyPressed(Night.KeySymbol, Night.KeyCode, Boolean)
  name.vb: KeyPressed(KeySymbol, KeyCode, Boolean)
references:
- uid: Night.IGame
  commentId: T:Night.IGame
  parent: Night
  href: Night.IGame.html
  name: IGame
  nameWithType: IGame
  fullName: Night.IGame
- uid: Night.SampleGame
  commentId: N:Night.SampleGame
  href: Night.html
  name: Night.SampleGame
  nameWithType: Night.SampleGame
  fullName: Night.SampleGame
  spec.csharp:
  - uid: Night
    name: Night
    href: Night.html
  - name: .
  - uid: Night.SampleGame
    name: SampleGame
    href: Night.SampleGame.html
  spec.vb:
  - uid: Night
    name: Night
    href: Night.html
  - name: .
  - uid: Night.SampleGame
    name: SampleGame
    href: Night.SampleGame.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Night.SampleGame.Platformer
  commentId: T:Night.SampleGame.Platformer
  href: Night.SampleGame.Platformer.html
  name: Platformer
  nameWithType: Platformer
  fullName: Night.SampleGame.Platformer
- uid: Night.SampleGame.Platformer.#ctor*
  commentId: Overload:Night.SampleGame.Platformer.#ctor
  href: Night.SampleGame.Platformer.html#Night_SampleGame_Platformer__ctor
  name: Platformer
  nameWithType: Platformer.Platformer
  fullName: Night.SampleGame.Platformer.Platformer
  nameWithType.vb: Platformer.New
  fullName.vb: Night.SampleGame.Platformer.New
  name.vb: New
- uid: Night.SampleGame.Platformer.Load*
  commentId: Overload:Night.SampleGame.Platformer.Load
  href: Night.SampleGame.Platformer.html#Night_SampleGame_Platformer_Load
  name: Load
  nameWithType: Platformer.Load
  fullName: Night.SampleGame.Platformer.Load
- uid: Night.IGame.Load
  commentId: M:Night.IGame.Load
  parent: Night.IGame
  href: Night.IGame.html#Night_IGame_Load
  name: Load()
  nameWithType: IGame.Load()
  fullName: Night.IGame.Load()
  spec.csharp:
  - uid: Night.IGame.Load
    name: Load
    href: Night.IGame.html#Night_IGame_Load
  - name: (
  - name: )
  spec.vb:
  - uid: Night.IGame.Load
    name: Load
    href: Night.IGame.html#Night_IGame_Load
  - name: (
  - name: )
- uid: Night.SampleGame.Platformer.Update*
  commentId: Overload:Night.SampleGame.Platformer.Update
  href: Night.SampleGame.Platformer.html#Night_SampleGame_Platformer_Update_System_Double_
  name: Update
  nameWithType: Platformer.Update
  fullName: Night.SampleGame.Platformer.Update
- uid: Night.IGame.Update(System.Double)
  commentId: M:Night.IGame.Update(System.Double)
  parent: Night.IGame
  isExternal: true
  href: Night.IGame.html#Night_IGame_Update_System_Double_
  name: Update(double)
  nameWithType: IGame.Update(double)
  fullName: Night.IGame.Update(double)
  nameWithType.vb: IGame.Update(Double)
  fullName.vb: Night.IGame.Update(Double)
  name.vb: Update(Double)
  spec.csharp:
  - uid: Night.IGame.Update(System.Double)
    name: Update
    href: Night.IGame.html#Night_IGame_Update_System_Double_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: Night.IGame.Update(System.Double)
    name: Update
    href: Night.IGame.html#Night_IGame_Update_System_Double_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Night.SampleGame.Platformer.Draw*
  commentId: Overload:Night.SampleGame.Platformer.Draw
  href: Night.SampleGame.Platformer.html#Night_SampleGame_Platformer_Draw
  name: Draw
  nameWithType: Platformer.Draw
  fullName: Night.SampleGame.Platformer.Draw
- uid: Night.IGame.Draw
  commentId: M:Night.IGame.Draw
  parent: Night.IGame
  href: Night.IGame.html#Night_IGame_Draw
  name: Draw()
  nameWithType: IGame.Draw()
  fullName: Night.IGame.Draw()
  spec.csharp:
  - uid: Night.IGame.Draw
    name: Draw
    href: Night.IGame.html#Night_IGame_Draw
  - name: (
  - name: )
  spec.vb:
  - uid: Night.IGame.Draw
    name: Draw
    href: Night.IGame.html#Night_IGame_Draw
  - name: (
  - name: )
- uid: Night.KeySymbol
  commentId: T:Night.KeySymbol
  parent: Night
  href: Night.KeySymbol.html
  name: KeySymbol
  nameWithType: KeySymbol
  fullName: Night.KeySymbol
- uid: Night.KeyCode
  commentId: T:Night.KeyCode
  parent: Night
  href: Night.KeyCode.html
  name: KeyCode
  nameWithType: KeyCode
  fullName: Night.KeyCode
- uid: Night.SampleGame.Platformer.KeyPressed*
  commentId: Overload:Night.SampleGame.Platformer.KeyPressed
  href: Night.SampleGame.Platformer.html#Night_SampleGame_Platformer_KeyPressed_Night_KeySymbol_Night_KeyCode_System_Boolean_
  name: KeyPressed
  nameWithType: Platformer.KeyPressed
  fullName: Night.SampleGame.Platformer.KeyPressed
- uid: Night.IGame.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
  commentId: M:Night.IGame.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
  parent: Night.IGame
  isExternal: true
  href: Night.IGame.html#Night_IGame_KeyPressed_Night_KeySymbol_Night_KeyCode_System_Boolean_
  name: KeyPressed(KeySymbol, KeyCode, bool)
  nameWithType: IGame.KeyPressed(KeySymbol, KeyCode, bool)
  fullName: Night.IGame.KeyPressed(Night.KeySymbol, Night.KeyCode, bool)
  nameWithType.vb: IGame.KeyPressed(KeySymbol, KeyCode, Boolean)
  fullName.vb: Night.IGame.KeyPressed(Night.KeySymbol, Night.KeyCode, Boolean)
  name.vb: KeyPressed(KeySymbol, KeyCode, Boolean)
  spec.csharp:
  - uid: Night.IGame.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
    name: KeyPressed
    href: Night.IGame.html#Night_IGame_KeyPressed_Night_KeySymbol_Night_KeyCode_System_Boolean_
  - name: (
  - uid: Night.KeySymbol
    name: KeySymbol
    href: Night.KeySymbol.html
  - name: ','
  - name: " "
  - uid: Night.KeyCode
    name: KeyCode
    href: Night.KeyCode.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Night.IGame.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)
    name: KeyPressed
    href: Night.IGame.html#Night_IGame_KeyPressed_Night_KeySymbol_Night_KeyCode_System_Boolean_
  - name: (
  - uid: Night.KeySymbol
    name: KeySymbol
    href: Night.KeySymbol.html
  - name: ','
  - name: " "
  - uid: Night.KeyCode
    name: KeyCode
    href: Night.KeyCode.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean



================================================
File: site/api/Night.SampleGame.PlatformerGame.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.SampleGame.PlatformerGame
  commentId: T:Night.SampleGame.PlatformerGame
  id: PlatformerGame
  parent: Night.SampleGame
  children:
  - Night.SampleGame.PlatformerGame.PlatformerGameMain
  langs:
  - csharp
  - vb
  name: PlatformerGame
  nameWithType: PlatformerGame
  fullName: Night.SampleGame.PlatformerGame
  type: Class
  source:
    remote:
      path: src/SampleGame/Samples/PlatformerGame.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: PlatformerGame
    path: ../src/SampleGame/Samples/PlatformerGame.cs
    startLine: 29
  assemblies:
  - Night.SampleGame
  namespace: Night.SampleGame
  summary: Provides an entry point to run the Platformer sample game.
  example: []
  syntax:
    content: public class PlatformerGame
    content.vb: Public Class PlatformerGame
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Night.SampleGame.PlatformerGame.PlatformerGameMain
  commentId: M:Night.SampleGame.PlatformerGame.PlatformerGameMain
  id: PlatformerGameMain
  parent: Night.SampleGame.PlatformerGame
  langs:
  - csharp
  - vb
  name: PlatformerGameMain()
  nameWithType: PlatformerGame.PlatformerGameMain()
  fullName: Night.SampleGame.PlatformerGame.PlatformerGameMain()
  type: Method
  source:
    remote:
      path: src/SampleGame/Samples/PlatformerGame.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: PlatformerGameMain
    path: ../src/SampleGame/Samples/PlatformerGame.cs
    startLine: 34
  assemblies:
  - Night.SampleGame
  namespace: Night.SampleGame
  summary: Main method to initialize and run the Platformer game.
  example: []
  syntax:
    content: public static void PlatformerGameMain()
    content.vb: Public Shared Sub PlatformerGameMain()
  overload: Night.SampleGame.PlatformerGame.PlatformerGameMain*
references:
- uid: Night.SampleGame
  commentId: N:Night.SampleGame
  href: Night.html
  name: Night.SampleGame
  nameWithType: Night.SampleGame
  fullName: Night.SampleGame
  spec.csharp:
  - uid: Night
    name: Night
    href: Night.html
  - name: .
  - uid: Night.SampleGame
    name: SampleGame
    href: Night.SampleGame.html
  spec.vb:
  - uid: Night
    name: Night
    href: Night.html
  - name: .
  - uid: Night.SampleGame
    name: SampleGame
    href: Night.SampleGame.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Night.SampleGame.PlatformerGame.PlatformerGameMain*
  commentId: Overload:Night.SampleGame.PlatformerGame.PlatformerGameMain
  href: Night.SampleGame.PlatformerGame.html#Night_SampleGame_PlatformerGame_PlatformerGameMain
  name: PlatformerGameMain
  nameWithType: PlatformerGame.PlatformerGameMain
  fullName: Night.SampleGame.PlatformerGame.PlatformerGameMain



================================================
File: site/api/Night.SampleGame.Player.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.SampleGame.Player
  commentId: T:Night.SampleGame.Player
  id: Player
  parent: Night.SampleGame
  children:
  - Night.SampleGame.Player.#ctor
  - Night.SampleGame.Player.Draw
  - Night.SampleGame.Player.Height
  - Night.SampleGame.Player.Load
  - Night.SampleGame.Player.Update(System.Double,System.Collections.Generic.List{Night.Rectangle})
  - Night.SampleGame.Player.Width
  - Night.SampleGame.Player.X
  - Night.SampleGame.Player.Y
  langs:
  - csharp
  - vb
  name: Player
  nameWithType: Player
  fullName: Night.SampleGame.Player
  type: Class
  source:
    remote:
      path: src/SampleGame/Player.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Player
    path: ../src/SampleGame/Player.cs
    startLine: 34
  assemblies:
  - Night.SampleGame
  namespace: Night.SampleGame
  summary: >-
    Represents the player character in the game.

    Handles player movement, physics, and rendering.
  example: []
  syntax:
    content: public class Player
    content.vb: Public Class Player
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Night.SampleGame.Player.#ctor
  commentId: M:Night.SampleGame.Player.#ctor
  id: '#ctor'
  parent: Night.SampleGame.Player
  langs:
  - csharp
  - vb
  name: Player()
  nameWithType: Player.Player()
  fullName: Night.SampleGame.Player.Player()
  type: Constructor
  source:
    remote:
      path: src/SampleGame/Player.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: .ctor
    path: ../src/SampleGame/Player.cs
    startLine: 48
  assemblies:
  - Night.SampleGame
  namespace: Night.SampleGame
  summary: Initializes a new instance of the <xref href="Night.SampleGame.Player" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public Player()
    content.vb: Public Sub New()
  overload: Night.SampleGame.Player.#ctor*
  nameWithType.vb: Player.New()
  fullName.vb: Night.SampleGame.Player.New()
  name.vb: New()
- uid: Night.SampleGame.Player.X
  commentId: P:Night.SampleGame.Player.X
  id: X
  parent: Night.SampleGame.Player
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Player.X
  fullName: Night.SampleGame.Player.X
  type: Property
  source:
    remote:
      path: src/SampleGame/Player.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: X
    path: ../src/SampleGame/Player.cs
    startLine: 57
  assemblies:
  - Night.SampleGame
  namespace: Night.SampleGame
  summary: Gets the player's current X-coordinate (left edge).
  example: []
  syntax:
    content: public float X { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property X As Single
  overload: Night.SampleGame.Player.X*
- uid: Night.SampleGame.Player.Y
  commentId: P:Night.SampleGame.Player.Y
  id: Y
  parent: Night.SampleGame.Player
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Player.Y
  fullName: Night.SampleGame.Player.Y
  type: Property
  source:
    remote:
      path: src/SampleGame/Player.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Y
    path: ../src/SampleGame/Player.cs
    startLine: 62
  assemblies:
  - Night.SampleGame
  namespace: Night.SampleGame
  summary: Gets the player's current Y-coordinate (top edge).
  example: []
  syntax:
    content: public float Y { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Y As Single
  overload: Night.SampleGame.Player.Y*
- uid: Night.SampleGame.Player.Width
  commentId: P:Night.SampleGame.Player.Width
  id: Width
  parent: Night.SampleGame.Player
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: Player.Width
  fullName: Night.SampleGame.Player.Width
  type: Property
  source:
    remote:
      path: src/SampleGame/Player.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Width
    path: ../src/SampleGame/Player.cs
    startLine: 67
  assemblies:
  - Night.SampleGame
  namespace: Night.SampleGame
  summary: Gets the width of the player.
  example: []
  syntax:
    content: public int Width { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Width As Integer
  overload: Night.SampleGame.Player.Width*
- uid: Night.SampleGame.Player.Height
  commentId: P:Night.SampleGame.Player.Height
  id: Height
  parent: Night.SampleGame.Player
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: Player.Height
  fullName: Night.SampleGame.Player.Height
  type: Property
  source:
    remote:
      path: src/SampleGame/Player.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Height
    path: ../src/SampleGame/Player.cs
    startLine: 72
  assemblies:
  - Night.SampleGame
  namespace: Night.SampleGame
  summary: Gets the height of the player.
  example: []
  syntax:
    content: public int Height { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Height As Integer
  overload: Night.SampleGame.Player.Height*
- uid: Night.SampleGame.Player.Load
  commentId: M:Night.SampleGame.Player.Load
  id: Load
  parent: Night.SampleGame.Player
  langs:
  - csharp
  - vb
  name: Load()
  nameWithType: Player.Load()
  fullName: Night.SampleGame.Player.Load()
  type: Method
  source:
    remote:
      path: src/SampleGame/Player.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Load
    path: ../src/SampleGame/Player.cs
    startLine: 77
  assemblies:
  - Night.SampleGame
  namespace: Night.SampleGame
  summary: Loads player assets and initializes player state (position, size, sprite).
  example: []
  syntax:
    content: public void Load()
    content.vb: Public Sub Load()
  overload: Night.SampleGame.Player.Load*
- uid: Night.SampleGame.Player.Update(System.Double,System.Collections.Generic.List{Night.Rectangle})
  commentId: M:Night.SampleGame.Player.Update(System.Double,System.Collections.Generic.List{Night.Rectangle})
  id: Update(System.Double,System.Collections.Generic.List{Night.Rectangle})
  parent: Night.SampleGame.Player
  langs:
  - csharp
  - vb
  name: Update(double, List<Rectangle>)
  nameWithType: Player.Update(double, List<Rectangle>)
  fullName: Night.SampleGame.Player.Update(double, System.Collections.Generic.List<Night.Rectangle>)
  type: Method
  source:
    remote:
      path: src/SampleGame/Player.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Update
    path: ../src/SampleGame/Player.cs
    startLine: 121
  assemblies:
  - Night.SampleGame
  namespace: Night.SampleGame
  summary: Updates the player's state, including handling input, physics, and collisions.
  example: []
  syntax:
    content: public void Update(double deltaTime, List<Rectangle> platforms)
    parameters:
    - id: deltaTime
      type: System.Double
      description: The time elapsed since the last frame, in seconds.
    - id: platforms
      type: System.Collections.Generic.List{Night.Rectangle}
      description: A list of <xref href="Night.Rectangle" data-throw-if-not-resolved="false"></xref> objects representing solid platforms.
    content.vb: Public Sub Update(deltaTime As Double, platforms As List(Of Rectangle))
  overload: Night.SampleGame.Player.Update*
  nameWithType.vb: Player.Update(Double, List(Of Rectangle))
  fullName.vb: Night.SampleGame.Player.Update(Double, System.Collections.Generic.List(Of Night.Rectangle))
  name.vb: Update(Double, List(Of Rectangle))
- uid: Night.SampleGame.Player.Draw
  commentId: M:Night.SampleGame.Player.Draw
  id: Draw
  parent: Night.SampleGame.Player
  langs:
  - csharp
  - vb
  name: Draw()
  nameWithType: Player.Draw()
  fullName: Night.SampleGame.Player.Draw()
  type: Method
  source:
    remote:
      path: src/SampleGame/Player.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Draw
    path: ../src/SampleGame/Player.cs
    startLine: 287
  assemblies:
  - Night.SampleGame
  namespace: Night.SampleGame
  summary: Draws the player on the screen.
  example: []
  syntax:
    content: public void Draw()
    content.vb: Public Sub Draw()
  overload: Night.SampleGame.Player.Draw*
references:
- uid: Night.SampleGame
  commentId: N:Night.SampleGame
  href: Night.html
  name: Night.SampleGame
  nameWithType: Night.SampleGame
  fullName: Night.SampleGame
  spec.csharp:
  - uid: Night
    name: Night
    href: Night.html
  - name: .
  - uid: Night.SampleGame
    name: SampleGame
    href: Night.SampleGame.html
  spec.vb:
  - uid: Night
    name: Night
    href: Night.html
  - name: .
  - uid: Night.SampleGame
    name: SampleGame
    href: Night.SampleGame.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Night.SampleGame.Player
  commentId: T:Night.SampleGame.Player
  href: Night.SampleGame.Player.html
  name: Player
  nameWithType: Player
  fullName: Night.SampleGame.Player
- uid: Night.SampleGame.Player.#ctor*
  commentId: Overload:Night.SampleGame.Player.#ctor
  href: Night.SampleGame.Player.html#Night_SampleGame_Player__ctor
  name: Player
  nameWithType: Player.Player
  fullName: Night.SampleGame.Player.Player
  nameWithType.vb: Player.New
  fullName.vb: Night.SampleGame.Player.New
  name.vb: New
- uid: Night.SampleGame.Player.X*
  commentId: Overload:Night.SampleGame.Player.X
  href: Night.SampleGame.Player.html#Night_SampleGame_Player_X
  name: X
  nameWithType: Player.X
  fullName: Night.SampleGame.Player.X
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Night.SampleGame.Player.Y*
  commentId: Overload:Night.SampleGame.Player.Y
  href: Night.SampleGame.Player.html#Night_SampleGame_Player_Y
  name: Y
  nameWithType: Player.Y
  fullName: Night.SampleGame.Player.Y
- uid: Night.SampleGame.Player.Width*
  commentId: Overload:Night.SampleGame.Player.Width
  href: Night.SampleGame.Player.html#Night_SampleGame_Player_Width
  name: Width
  nameWithType: Player.Width
  fullName: Night.SampleGame.Player.Width
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Night.SampleGame.Player.Height*
  commentId: Overload:Night.SampleGame.Player.Height
  href: Night.SampleGame.Player.html#Night_SampleGame_Player_Height
  name: Height
  nameWithType: Player.Height
  fullName: Night.SampleGame.Player.Height
- uid: Night.SampleGame.Player.Load*
  commentId: Overload:Night.SampleGame.Player.Load
  href: Night.SampleGame.Player.html#Night_SampleGame_Player_Load
  name: Load
  nameWithType: Player.Load
  fullName: Night.SampleGame.Player.Load
- uid: Night.Rectangle
  commentId: T:Night.Rectangle
  href: Night.Rectangle.html
  name: Rectangle
  nameWithType: Rectangle
  fullName: Night.Rectangle
- uid: Night.SampleGame.Player.Update*
  commentId: Overload:Night.SampleGame.Player.Update
  href: Night.SampleGame.Player.html#Night_SampleGame_Player_Update_System_Double_System_Collections_Generic_List_Night_Rectangle__
  name: Update
  nameWithType: Player.Update
  fullName: Night.SampleGame.Player.Update
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.Collections.Generic.List{Night.Rectangle}
  commentId: T:System.Collections.Generic.List{Night.Rectangle}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Rectangle>
  nameWithType: List<Rectangle>
  fullName: System.Collections.Generic.List<Night.Rectangle>
  nameWithType.vb: List(Of Rectangle)
  fullName.vb: System.Collections.Generic.List(Of Night.Rectangle)
  name.vb: List(Of Rectangle)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Night.Rectangle
    name: Rectangle
    href: Night.Rectangle.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Night.Rectangle
    name: Rectangle
    href: Night.Rectangle.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Night.SampleGame.Player.Draw*
  commentId: Overload:Night.SampleGame.Player.Draw
  href: Night.SampleGame.Player.html#Night_SampleGame_Player_Draw
  name: Draw
  nameWithType: Player.Draw
  fullName: Night.SampleGame.Player.Draw



================================================
File: site/api/Night.SampleGame.Program.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.SampleGame.Program
  commentId: T:Night.SampleGame.Program
  id: Program
  parent: Night.SampleGame
  children:
  - Night.SampleGame.Program.Main
  langs:
  - csharp
  - vb
  name: Program
  nameWithType: Program
  fullName: Night.SampleGame.Program
  type: Class
  source:
    remote:
      path: src/SampleGame/Program.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Program
    path: ../src/SampleGame/Program.cs
    startLine: 28
  assemblies:
  - Night.SampleGame
  namespace: Night.SampleGame
  summary: >-
    Main program class for the SampleGame.

    Contains the entry point of the application.
  example: []
  syntax:
    content: public class Program
    content.vb: Public Class Program
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Night.SampleGame.Program.Main
  commentId: M:Night.SampleGame.Program.Main
  id: Main
  parent: Night.SampleGame.Program
  langs:
  - csharp
  - vb
  name: Main()
  nameWithType: Program.Main()
  fullName: Night.SampleGame.Program.Main()
  type: Method
  source:
    remote:
      path: src/SampleGame/Program.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Main
    path: ../src/SampleGame/Program.cs
    startLine: 34
  assemblies:
  - Night.SampleGame
  namespace: Night.SampleGame
  summary: >-
    The main entry point for the application.

    Initializes and runs the game using the Night.Framework.
  example: []
  syntax:
    content: public static void Main()
    content.vb: Public Shared Sub Main()
  overload: Night.SampleGame.Program.Main*
references:
- uid: Night.SampleGame
  commentId: N:Night.SampleGame
  href: Night.html
  name: Night.SampleGame
  nameWithType: Night.SampleGame
  fullName: Night.SampleGame
  spec.csharp:
  - uid: Night
    name: Night
    href: Night.html
  - name: .
  - uid: Night.SampleGame
    name: SampleGame
    href: Night.SampleGame.html
  spec.vb:
  - uid: Night
    name: Night
    href: Night.html
  - name: .
  - uid: Night.SampleGame
    name: SampleGame
    href: Night.SampleGame.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Night.SampleGame.Program.Main*
  commentId: Overload:Night.SampleGame.Program.Main
  href: Night.SampleGame.Program.html#Night_SampleGame_Program_Main
  name: Main
  nameWithType: Program.Main
  fullName: Night.SampleGame.Program.Main



================================================
File: site/api/Night.SampleGame.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.SampleGame
  commentId: N:Night.SampleGame
  id: Night.SampleGame
  children:
  - Night.SampleGame.Game
  - Night.SampleGame.Platformer
  - Night.SampleGame.PlatformerGame
  - Night.SampleGame.Player
  - Night.SampleGame.Program
  langs:
  - csharp
  - vb
  name: Night.SampleGame
  nameWithType: Night.SampleGame
  fullName: Night.SampleGame
  type: Namespace
  assemblies:
  - Night.SampleGame
references:
- uid: Night.SampleGame.Game
  commentId: T:Night.SampleGame.Game
  href: Night.SampleGame.Game.html
  name: Game
  nameWithType: Game
  fullName: Night.SampleGame.Game
- uid: Night.SampleGame.Player
  commentId: T:Night.SampleGame.Player
  href: Night.SampleGame.Player.html
  name: Player
  nameWithType: Player
  fullName: Night.SampleGame.Player
- uid: Night.SampleGame.Program
  commentId: T:Night.SampleGame.Program
  href: Night.SampleGame.Program.html
  name: Program
  nameWithType: Program
  fullName: Night.SampleGame.Program
- uid: Night.SampleGame.Platformer
  commentId: T:Night.SampleGame.Platformer
  href: Night.SampleGame.Platformer.html
  name: Platformer
  nameWithType: Platformer
  fullName: Night.SampleGame.Platformer
- uid: Night.SampleGame.PlatformerGame
  commentId: T:Night.SampleGame.PlatformerGame
  href: Night.SampleGame.PlatformerGame.html
  name: PlatformerGame
  nameWithType: PlatformerGame
  fullName: Night.SampleGame.PlatformerGame



================================================
File: site/api/Night.Sprite.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.Sprite
  commentId: T:Night.Sprite
  id: Sprite
  parent: Night
  children:
  - Night.Sprite.#ctor(System.IntPtr,System.Int32,System.Int32)
  - Night.Sprite.Height
  - Night.Sprite.Texture
  - Night.Sprite.Width
  langs:
  - csharp
  - vb
  name: Sprite
  nameWithType: Sprite
  fullName: Night.Sprite
  type: Class
  source:
    remote:
      path: src/Night/Graphics/Sprite.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Sprite
    path: ../src/Night/Graphics/Sprite.cs
    startLine: 29
  assemblies:
  - Night
  namespace: Night
  summary: Represents a 2D sprite, typically an image loaded into a texture.
  example: []
  syntax:
    content: public class Sprite
    content.vb: Public Class Sprite
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Night.Sprite.#ctor(System.IntPtr,System.Int32,System.Int32)
  commentId: M:Night.Sprite.#ctor(System.IntPtr,System.Int32,System.Int32)
  id: '#ctor(System.IntPtr,System.Int32,System.Int32)'
  parent: Night.Sprite
  langs:
  - csharp
  - vb
  name: Sprite(nint, int, int)
  nameWithType: Sprite.Sprite(nint, int, int)
  fullName: Night.Sprite.Sprite(nint, int, int)
  type: Constructor
  source:
    remote:
      path: src/Night/Graphics/Sprite.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: .ctor
    path: ../src/Night/Graphics/Sprite.cs
    startLine: 37
  assemblies:
  - Night
  namespace: Night
  summary: Initializes a new instance of the <xref href="Night.Sprite" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public Sprite(nint texture, int width, int height)
    parameters:
    - id: texture
      type: System.IntPtr
      description: The SDL texture handle.
    - id: width
      type: System.Int32
      description: The width of the texture.
    - id: height
      type: System.Int32
      description: The height of the texture.
    content.vb: Public Sub New(texture As IntPtr, width As Integer, height As Integer)
  overload: Night.Sprite.#ctor*
  nameWithType.vb: Sprite.New(IntPtr, Integer, Integer)
  fullName.vb: Night.Sprite.New(System.IntPtr, Integer, Integer)
  name.vb: New(IntPtr, Integer, Integer)
- uid: Night.Sprite.Texture
  commentId: P:Night.Sprite.Texture
  id: Texture
  parent: Night.Sprite
  langs:
  - csharp
  - vb
  name: Texture
  nameWithType: Sprite.Texture
  fullName: Night.Sprite.Texture
  type: Property
  source:
    remote:
      path: src/Night/Graphics/Sprite.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Texture
    path: ../src/Night/Graphics/Sprite.cs
    startLine: 47
  assemblies:
  - Night
  namespace: Night
  summary: Gets the SDL texture handle.
  example: []
  syntax:
    content: public nint Texture { get; }
    parameters: []
    return:
      type: System.IntPtr
    content.vb: Public ReadOnly Property Texture As IntPtr
  overload: Night.Sprite.Texture*
- uid: Night.Sprite.Width
  commentId: P:Night.Sprite.Width
  id: Width
  parent: Night.Sprite
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: Sprite.Width
  fullName: Night.Sprite.Width
  type: Property
  source:
    remote:
      path: src/Night/Graphics/Sprite.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Width
    path: ../src/Night/Graphics/Sprite.cs
    startLine: 52
  assemblies:
  - Night
  namespace: Night
  summary: Gets the width of the sprite in pixels.
  example: []
  syntax:
    content: public int Width { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Width As Integer
  overload: Night.Sprite.Width*
- uid: Night.Sprite.Height
  commentId: P:Night.Sprite.Height
  id: Height
  parent: Night.Sprite
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: Sprite.Height
  fullName: Night.Sprite.Height
  type: Property
  source:
    remote:
      path: src/Night/Graphics/Sprite.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Height
    path: ../src/Night/Graphics/Sprite.cs
    startLine: 57
  assemblies:
  - Night
  namespace: Night
  summary: Gets the height of the sprite in pixels.
  example: []
  syntax:
    content: public int Height { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Height As Integer
  overload: Night.Sprite.Height*
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Night.Sprite
  commentId: T:Night.Sprite
  parent: Night
  href: Night.Sprite.html
  name: Sprite
  nameWithType: Sprite
  fullName: Night.Sprite
- uid: Night.Sprite.#ctor*
  commentId: Overload:Night.Sprite.#ctor
  href: Night.Sprite.html#Night_Sprite__ctor_System_IntPtr_System_Int32_System_Int32_
  name: Sprite
  nameWithType: Sprite.Sprite
  fullName: Night.Sprite.Sprite
  nameWithType.vb: Sprite.New
  fullName.vb: Night.Sprite.New
  name.vb: New
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: nint
  nameWithType: nint
  fullName: nint
  nameWithType.vb: IntPtr
  fullName.vb: System.IntPtr
  name.vb: IntPtr
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Night.Sprite.Texture*
  commentId: Overload:Night.Sprite.Texture
  href: Night.Sprite.html#Night_Sprite_Texture
  name: Texture
  nameWithType: Sprite.Texture
  fullName: Night.Sprite.Texture
- uid: Night.Sprite.Width*
  commentId: Overload:Night.Sprite.Width
  href: Night.Sprite.html#Night_Sprite_Width
  name: Width
  nameWithType: Sprite.Width
  fullName: Night.Sprite.Width
- uid: Night.Sprite.Height*
  commentId: Overload:Night.Sprite.Height
  href: Night.Sprite.html#Night_Sprite_Height
  name: Height
  nameWithType: Sprite.Height
  fullName: Night.Sprite.Height



================================================
File: site/api/Night.System.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.System
  commentId: T:Night.System
  id: System
  parent: Night
  children:
  - Night.System.SetClipboardText(System.String)
  langs:
  - csharp
  - vb
  name: System
  nameWithType: System
  fullName: Night.System
  type: Class
  source:
    remote:
      path: src/Night/System/System.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: System
    path: ../src/Night/System/System.cs
    startLine: 29
  assemblies:
  - Night
  namespace: Night
  summary: Provides access to system-level information and functions.
  example: []
  syntax:
    content: public static class System
    content.vb: Public Module System
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Night.System.SetClipboardText(System.String)
  commentId: M:Night.System.SetClipboardText(System.String)
  id: SetClipboardText(System.String)
  parent: Night.System
  langs:
  - csharp
  - vb
  name: SetClipboardText(string)
  nameWithType: System.SetClipboardText(string)
  fullName: Night.System.SetClipboardText(string)
  type: Method
  source:
    remote:
      path: src/Night/System/System.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: SetClipboardText
    path: ../src/Night/System/System.cs
    startLine: 36
  assemblies:
  - Night
  namespace: Night
  summary: Puts text in the system's clipboard.
  example: []
  syntax:
    content: public static bool SetClipboardText(string text)
    parameters:
    - id: text
      type: System.String
      description: The new text to hold in the system's clipboard.
    return:
      type: System.Boolean
      description: True if the operation was successful, false otherwise.
    content.vb: Public Shared Function SetClipboardText(text As String) As Boolean
  overload: Night.System.SetClipboardText*
  nameWithType.vb: System.SetClipboardText(String)
  fullName.vb: Night.System.SetClipboardText(String)
  name.vb: SetClipboardText(String)
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Night.System.SetClipboardText*
  commentId: Overload:Night.System.SetClipboardText
  href: Night.System.html#Night_System_SetClipboardText_System_String_
  name: SetClipboardText
  nameWithType: System.SetClipboardText
  fullName: Night.System.SetClipboardText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean



================================================
File: site/api/Night.Timer.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.Timer
  commentId: T:Night.Timer
  id: Timer
  parent: Night
  children:
  - Night.Timer.GetAverageDelta
  - Night.Timer.GetDelta
  - Night.Timer.GetFPS
  - Night.Timer.GetTime
  - Night.Timer.Sleep(System.Double)
  - Night.Timer.Step
  langs:
  - csharp
  - vb
  name: Timer
  nameWithType: Timer
  fullName: Night.Timer
  type: Class
  source:
    remote:
      path: src/Night/Timer/Timer.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Timer
    path: ../src/Night/Timer/Timer.cs
    startLine: 32
  assemblies:
  - Night
  namespace: Night
  summary: Provides high-resolution timing functionality.
  example: []
  syntax:
    content: public static class Timer
    content.vb: Public Module Timer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Night.Timer.GetTime
  commentId: M:Night.Timer.GetTime
  id: GetTime
  parent: Night.Timer
  langs:
  - csharp
  - vb
  name: GetTime()
  nameWithType: Timer.GetTime()
  fullName: Night.Timer.GetTime()
  type: Method
  source:
    remote:
      path: src/Night/Timer/Timer.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: GetTime
    path: ../src/Night/Timer/Timer.cs
    startLine: 66
  assemblies:
  - Night
  namespace: Night
  summary: Gets the time elapsed since the Timer module was loaded, in seconds.
  example: []
  syntax:
    content: public static double GetTime()
    return:
      type: System.Double
      description: The time in seconds. Given as a decimal, accurate to the microsecond.
    content.vb: Public Shared Function GetTime() As Double
  overload: Night.Timer.GetTime*
- uid: Night.Timer.GetFPS
  commentId: M:Night.Timer.GetFPS
  id: GetFPS
  parent: Night.Timer
  langs:
  - csharp
  - vb
  name: GetFPS()
  nameWithType: Timer.GetFPS()
  fullName: Night.Timer.GetFPS()
  type: Method
  source:
    remote:
      path: src/Night/Timer/Timer.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: GetFPS
    path: ../src/Night/Timer/Timer.cs
    startLine: 81
  assemblies:
  - Night
  namespace: Night
  summary: Gets the current frames per second (FPS).
  example: []
  syntax:
    content: public static int GetFPS()
    return:
      type: System.Int32
      description: The current FPS.
    content.vb: Public Shared Function GetFPS() As Integer
  overload: Night.Timer.GetFPS*
- uid: Night.Timer.GetDelta
  commentId: M:Night.Timer.GetDelta
  id: GetDelta
  parent: Night.Timer
  langs:
  - csharp
  - vb
  name: GetDelta()
  nameWithType: Timer.GetDelta()
  fullName: Night.Timer.GetDelta()
  type: Method
  source:
    remote:
      path: src/Night/Timer/Timer.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: GetDelta
    path: ../src/Night/Timer/Timer.cs
    startLine: 91
  assemblies:
  - Night
  namespace: Night
  summary: >-
    Gets the time elapsed since the last frame, in seconds.

    This is the same value passed to. <pre><code class="lang-csharp">IGame.Update(float deltaTime)</code></pre>.
  example: []
  syntax:
    content: public static float GetDelta()
    return:
      type: System.Single
      description: The delta time in seconds.
    content.vb: Public Shared Function GetDelta() As Single
  overload: Night.Timer.GetDelta*
- uid: Night.Timer.GetAverageDelta
  commentId: M:Night.Timer.GetAverageDelta
  id: GetAverageDelta
  parent: Night.Timer
  langs:
  - csharp
  - vb
  name: GetAverageDelta()
  nameWithType: Timer.GetAverageDelta()
  fullName: Night.Timer.GetAverageDelta()
  type: Method
  source:
    remote:
      path: src/Night/Timer/Timer.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: GetAverageDelta
    path: ../src/Night/Timer/Timer.cs
    startLine: 100
  assemblies:
  - Night
  namespace: Night
  summary: Returns the average delta time (seconds per frame) over the last second.
  example: []
  syntax:
    content: public static double GetAverageDelta()
    return:
      type: System.Double
      description: The average delta time over the last second.
    content.vb: Public Shared Function GetAverageDelta() As Double
  overload: Night.Timer.GetAverageDelta*
- uid: Night.Timer.Sleep(System.Double)
  commentId: M:Night.Timer.Sleep(System.Double)
  id: Sleep(System.Double)
  parent: Night.Timer
  langs:
  - csharp
  - vb
  name: Sleep(double)
  nameWithType: Timer.Sleep(double)
  fullName: Night.Timer.Sleep(double)
  type: Method
  source:
    remote:
      path: src/Night/Timer/Timer.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Sleep
    path: ../src/Night/Timer/Timer.cs
    startLine: 112
  assemblies:
  - Night
  namespace: Night
  summary: >-
    Pauses the current thread for the specified amount of time.

    This function causes the entire thread to pause. Graphics will not draw,

    input events will not trigger, code will not run, and the window will

    be unresponsive if you use this in the main game thread.
  example: []
  syntax:
    content: public static void Sleep(double seconds)
    parameters:
    - id: seconds
      type: System.Double
      description: Seconds to sleep for.
    content.vb: Public Shared Sub Sleep(seconds As Double)
  overload: Night.Timer.Sleep*
  nameWithType.vb: Timer.Sleep(Double)
  fullName.vb: Night.Timer.Sleep(Double)
  name.vb: Sleep(Double)
- uid: Night.Timer.Step
  commentId: M:Night.Timer.Step
  id: Step
  parent: Night.Timer
  langs:
  - csharp
  - vb
  name: Step()
  nameWithType: Timer.Step()
  fullName: Night.Timer.Step()
  type: Method
  source:
    remote:
      path: src/Night/Timer/Timer.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Step
    path: ../src/Night/Timer/Timer.cs
    startLine: 128
  assemblies:
  - Night
  namespace: Night
  summary: >-
    Measures the time between the last call to this function and the current one.

    Calling this function updates the value returned by <xref href="Night.Timer.GetDelta" data-throw-if-not-resolved="false"></xref>.

    This is typically called once per frame by the game loop to determine the delta time for that frame.
  example: []
  syntax:
    content: public static double Step()
    return:
      type: System.Double
      description: The time passed (in seconds) since the last call to Step().
    content.vb: Public Shared Function [Step]() As Double
  overload: Night.Timer.Step*
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Night.Timer.GetTime*
  commentId: Overload:Night.Timer.GetTime
  href: Night.Timer.html#Night_Timer_GetTime
  name: GetTime
  nameWithType: Timer.GetTime
  fullName: Night.Timer.GetTime
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Night.Timer.GetFPS*
  commentId: Overload:Night.Timer.GetFPS
  href: Night.Timer.html#Night_Timer_GetFPS
  name: GetFPS
  nameWithType: Timer.GetFPS
  fullName: Night.Timer.GetFPS
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Night.Timer.GetDelta*
  commentId: Overload:Night.Timer.GetDelta
  href: Night.Timer.html#Night_Timer_GetDelta
  name: GetDelta
  nameWithType: Timer.GetDelta
  fullName: Night.Timer.GetDelta
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Night.Timer.GetAverageDelta*
  commentId: Overload:Night.Timer.GetAverageDelta
  href: Night.Timer.html#Night_Timer_GetAverageDelta
  name: GetAverageDelta
  nameWithType: Timer.GetAverageDelta
  fullName: Night.Timer.GetAverageDelta
- uid: Night.Timer.Sleep*
  commentId: Overload:Night.Timer.Sleep
  href: Night.Timer.html#Night_Timer_Sleep_System_Double_
  name: Sleep
  nameWithType: Timer.Sleep
  fullName: Night.Timer.Sleep
- uid: Night.Timer.GetDelta
  commentId: M:Night.Timer.GetDelta
  href: Night.Timer.html#Night_Timer_GetDelta
  name: GetDelta()
  nameWithType: Timer.GetDelta()
  fullName: Night.Timer.GetDelta()
  spec.csharp:
  - uid: Night.Timer.GetDelta
    name: GetDelta
    href: Night.Timer.html#Night_Timer_GetDelta
  - name: (
  - name: )
  spec.vb:
  - uid: Night.Timer.GetDelta
    name: GetDelta
    href: Night.Timer.html#Night_Timer_GetDelta
  - name: (
  - name: )
- uid: Night.Timer.Step*
  commentId: Overload:Night.Timer.Step
  href: Night.Timer.html#Night_Timer_Step
  name: Step
  nameWithType: Timer.Step
  fullName: Night.Timer.Step



================================================
File: site/api/Night.VersionInfo.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.VersionInfo
  commentId: T:Night.VersionInfo
  id: VersionInfo
  parent: Night
  children:
  - Night.VersionInfo.CodeName
  - Night.VersionInfo.GetVersion
  - Night.VersionInfo.Version
  langs:
  - csharp
  - vb
  name: VersionInfo
  nameWithType: VersionInfo
  fullName: Night.VersionInfo
  type: Class
  source:
    remote:
      path: src/Night/VersionInfo.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: VersionInfo
    path: ../src/Night/VersionInfo.cs
    startLine: 27
  assemblies:
  - Night
  namespace: Night
  summary: Provides information about the Night library, such as its version.
  example: []
  syntax:
    content: public static class VersionInfo
    content.vb: Public Module VersionInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Night.VersionInfo.Version
  commentId: F:Night.VersionInfo.Version
  id: Version
  parent: Night.VersionInfo
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: VersionInfo.Version
  fullName: Night.VersionInfo.Version
  type: Field
  source:
    remote:
      path: src/Night/VersionInfo.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Version
    path: ../src/Night/VersionInfo.cs
    startLine: 33
  assemblies:
  - Night
  namespace: Night
  summary: >-
    Gets the full semantic version string (e.g., "1.0.0", "1.2.3-beta.1").

    This value is updated by the GitHub release Action.
  example: []
  syntax:
    content: public const string Version = "0.0.0-dev"
    return:
      type: System.String
    content.vb: Public Const Version As String = "0.0.0-dev"
- uid: Night.VersionInfo.CodeName
  commentId: F:Night.VersionInfo.CodeName
  id: CodeName
  parent: Night.VersionInfo
  langs:
  - csharp
  - vb
  name: CodeName
  nameWithType: VersionInfo.CodeName
  fullName: Night.VersionInfo.CodeName
  type: Field
  source:
    remote:
      path: src/Night/VersionInfo.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: CodeName
    path: ../src/Night/VersionInfo.cs
    startLine: 39
  assemblies:
  - Night
  namespace: Night
  summary: >-
    Gets the developer-assigned codename for the current version.

    This value is manually updated by the developer.
  example: []
  syntax:
    content: public const string CodeName = "Initial Codename"
    return:
      type: System.String
    content.vb: Public Const CodeName As String = "Initial Codename"
- uid: Night.VersionInfo.GetVersion
  commentId: M:Night.VersionInfo.GetVersion
  id: GetVersion
  parent: Night.VersionInfo
  langs:
  - csharp
  - vb
  name: GetVersion()
  nameWithType: VersionInfo.GetVersion()
  fullName: Night.VersionInfo.GetVersion()
  type: Method
  source:
    remote:
      path: src/Night/VersionInfo.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: GetVersion
    path: ../src/Night/VersionInfo.cs
    startLine: 46
  assemblies:
  - Night
  namespace: Night
  summary: >-
    Gets the Semantic Version of the Night library.

    This version is set during the release process.
  example: []
  syntax:
    content: public static string GetVersion()
    return:
      type: System.String
      description: The library's semantic version string.
    content.vb: Public Shared Function GetVersion() As String
  overload: Night.VersionInfo.GetVersion*
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Night.VersionInfo.GetVersion*
  commentId: Overload:Night.VersionInfo.GetVersion
  href: Night.VersionInfo.html#Night_VersionInfo_GetVersion
  name: GetVersion
  nameWithType: VersionInfo.GetVersion
  fullName: Night.VersionInfo.GetVersion



================================================
File: site/api/Night.Window.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.Window
  commentId: T:Night.Window
  id: Window
  parent: Night
  children:
  - Night.Window.Close
  - Night.Window.FromPixels(System.Single)
  - Night.Window.GetDPIScale
  - Night.Window.GetDesktopDimensions(System.Int32)
  - Night.Window.GetDisplayCount
  - Night.Window.GetFullscreen
  - Night.Window.GetFullscreenModes(System.Int32)
  - Night.Window.GetMode
  - Night.Window.IsOpen
  - Night.Window.SetFullscreen(System.Boolean,Night.FullscreenType)
  - Night.Window.SetMode(System.Int32,System.Int32,SDL3.SDL.WindowFlags)
  - Night.Window.SetTitle(System.String)
  - Night.Window.ToPixels(System.Single)
  langs:
  - csharp
  - vb
  name: Window
  nameWithType: Window
  fullName: Night.Window
  type: Class
  source:
    remote:
      path: src/Night/Window/Window.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Window
    path: ../src/Night/Window/Window.cs
    startLine: 33
  assemblies:
  - Night
  namespace: Night
  summary: Provides an interface for modifying and retrieving information about the program's window.
  example: []
  syntax:
    content: public static class Window
    content.vb: Public Module Window
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Night.Window.SetMode(System.Int32,System.Int32,SDL3.SDL.WindowFlags)
  commentId: M:Night.Window.SetMode(System.Int32,System.Int32,SDL3.SDL.WindowFlags)
  id: SetMode(System.Int32,System.Int32,SDL3.SDL.WindowFlags)
  parent: Night.Window
  langs:
  - csharp
  - vb
  name: SetMode(int, int, WindowFlags)
  nameWithType: Window.SetMode(int, int, SDL.WindowFlags)
  fullName: Night.Window.SetMode(int, int, SDL3.SDL.WindowFlags)
  type: Method
  source:
    remote:
      path: src/Night/Window/Window.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: SetMode
    path: ../src/Night/Window/Window.cs
    startLine: 58
  assemblies:
  - Night
  namespace: Night
  summary: Sets the display mode and properties of the window.
  example: []
  syntax:
    content: public static bool SetMode(int width, int height, SDL.WindowFlags flags)
    parameters:
    - id: width
      type: System.Int32
      description: The width of the window.
    - id: height
      type: System.Int32
      description: The height of the window.
    - id: flags
      type: SDL3.SDL.WindowFlags
      description: SDL Window flags to apply.
    return:
      type: System.Boolean
      description: True if the mode was set successfully, false otherwise.
    content.vb: Public Shared Function SetMode(width As Integer, height As Integer, flags As SDL.WindowFlags) As Boolean
  overload: Night.Window.SetMode*
  nameWithType.vb: Window.SetMode(Integer, Integer, SDL.WindowFlags)
  fullName.vb: Night.Window.SetMode(Integer, Integer, SDL3.SDL.WindowFlags)
  name.vb: SetMode(Integer, Integer, WindowFlags)
- uid: Night.Window.SetTitle(System.String)
  commentId: M:Night.Window.SetTitle(System.String)
  id: SetTitle(System.String)
  parent: Night.Window
  langs:
  - csharp
  - vb
  name: SetTitle(string)
  nameWithType: Window.SetTitle(string)
  fullName: Night.Window.SetTitle(string)
  type: Method
  source:
    remote:
      path: src/Night/Window/Window.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: SetTitle
    path: ../src/Night/Window/Window.cs
    startLine: 108
  assemblies:
  - Night
  namespace: Night
  summary: Sets the window title.
  example: []
  syntax:
    content: public static void SetTitle(string title)
    parameters:
    - id: title
      type: System.String
      description: The new window title.
    content.vb: Public Shared Sub SetTitle(title As String)
  overload: Night.Window.SetTitle*
  nameWithType.vb: Window.SetTitle(String)
  fullName.vb: Night.Window.SetTitle(String)
  name.vb: SetTitle(String)
- uid: Night.Window.IsOpen
  commentId: M:Night.Window.IsOpen
  id: IsOpen
  parent: Night.Window
  langs:
  - csharp
  - vb
  name: IsOpen()
  nameWithType: Window.IsOpen()
  fullName: Night.Window.IsOpen()
  type: Method
  source:
    remote:
      path: src/Night/Window/Window.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: IsOpen
    path: ../src/Night/Window/Window.cs
    startLine: 127
  assemblies:
  - Night
  namespace: Night
  summary: Checks if the window is open.
  example: []
  syntax:
    content: public static bool IsOpen()
    return:
      type: System.Boolean
      description: True if the window is open, false otherwise.
    content.vb: Public Shared Function IsOpen() As Boolean
  overload: Night.Window.IsOpen*
- uid: Night.Window.Close
  commentId: M:Night.Window.Close
  id: Close
  parent: Night.Window
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: Window.Close()
  fullName: Night.Window.Close()
  type: Method
  source:
    remote:
      path: src/Night/Window/Window.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Close
    path: ../src/Night/Window/Window.cs
    startLine: 137
  assemblies:
  - Night
  namespace: Night
  summary: >-
    Signals that the window should close.

    This is typically called by the engine when a quit event is received.

    TODO: Does this need to align with Love2D more? https://love2d.org/wiki/love.window.close.
  example: []
  syntax:
    content: public static void Close()
    content.vb: Public Shared Sub Close()
  overload: Night.Window.Close*
- uid: Night.Window.GetDisplayCount
  commentId: M:Night.Window.GetDisplayCount
  id: GetDisplayCount
  parent: Night.Window
  langs:
  - csharp
  - vb
  name: GetDisplayCount()
  nameWithType: Window.GetDisplayCount()
  fullName: Night.Window.GetDisplayCount()
  type: Method
  source:
    remote:
      path: src/Night/Window/Window.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: GetDisplayCount
    path: ../src/Night/Window/Window.cs
    startLine: 146
  assemblies:
  - Night
  namespace: Night
  summary: Gets the number of connected monitors.
  example: []
  syntax:
    content: public static int GetDisplayCount()
    return:
      type: System.Int32
      description: The number of currently connected displays.
    content.vb: Public Shared Function GetDisplayCount() As Integer
  overload: Night.Window.GetDisplayCount*
- uid: Night.Window.GetDesktopDimensions(System.Int32)
  commentId: M:Night.Window.GetDesktopDimensions(System.Int32)
  id: GetDesktopDimensions(System.Int32)
  parent: Night.Window
  langs:
  - csharp
  - vb
  name: GetDesktopDimensions(int)
  nameWithType: Window.GetDesktopDimensions(int)
  fullName: Night.Window.GetDesktopDimensions(int)
  type: Method
  source:
    remote:
      path: src/Night/Window/Window.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: GetDesktopDimensions
    path: ../src/Night/Window/Window.cs
    startLine: 167
  assemblies:
  - Night
  namespace: Night
  summary: Gets the width and height of the desktop.
  example: []
  syntax:
    content: public static (int Width, int Height) GetDesktopDimensions(int displayIndex = 0)
    parameters:
    - id: displayIndex
      type: System.Int32
      description: The index of the display to query (0 for the primary display).
    return:
      type: System.ValueTuple{System.Int32,System.Int32}
      description: A tuple containing the width and height of the desktop, or (0,0) if an error occurs.
    content.vb: Public Shared Function GetDesktopDimensions(displayIndex As Integer = 0) As (Width As Integer, Height As Integer)
  overload: Night.Window.GetDesktopDimensions*
  nameWithType.vb: Window.GetDesktopDimensions(Integer)
  fullName.vb: Night.Window.GetDesktopDimensions(Integer)
  name.vb: GetDesktopDimensions(Integer)
- uid: Night.Window.GetFullscreen
  commentId: M:Night.Window.GetFullscreen
  id: GetFullscreen
  parent: Night.Window
  langs:
  - csharp
  - vb
  name: GetFullscreen()
  nameWithType: Window.GetFullscreen()
  fullName: Night.Window.GetFullscreen()
  type: Method
  source:
    remote:
      path: src/Night/Window/Window.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: GetFullscreen
    path: ../src/Night/Window/Window.cs
    startLine: 197
  assemblies:
  - Night
  namespace: Night
  summary: Gets whether the window is fullscreen.
  example: []
  syntax:
    content: public static (bool IsFullscreen, FullscreenType FsType) GetFullscreen()
    return:
      type: System.ValueTuple{System.Boolean,Night.FullscreenType}
      description: >-
        A tuple: (bool IsFullscreen, FullscreenType FsType).
            IsFullscreen is true if the window is in any fullscreen mode, false otherwise.
            FsType indicates the type of fullscreen mode used.
    content.vb: Public Shared Function GetFullscreen() As (IsFullscreen As Boolean, FsType As FullscreenType)
  overload: Night.Window.GetFullscreen*
- uid: Night.Window.SetFullscreen(System.Boolean,Night.FullscreenType)
  commentId: M:Night.Window.SetFullscreen(System.Boolean,Night.FullscreenType)
  id: SetFullscreen(System.Boolean,Night.FullscreenType)
  parent: Night.Window
  langs:
  - csharp
  - vb
  name: SetFullscreen(bool, FullscreenType)
  nameWithType: Window.SetFullscreen(bool, FullscreenType)
  fullName: Night.Window.SetFullscreen(bool, Night.FullscreenType)
  type: Method
  source:
    remote:
      path: src/Night/Window/Window.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: SetFullscreen
    path: ../src/Night/Window/Window.cs
    startLine: 220
  assemblies:
  - Night
  namespace: Night
  summary: >-
    Enters or exits fullscreen. The display to use when entering fullscreen is chosen

    based on which display the window is currently in, if multiple monitors are connected.
  example: []
  syntax:
    content: public static bool SetFullscreen(bool fullscreen, FullscreenType fsType = FullscreenType.Desktop)
    parameters:
    - id: fullscreen
      type: System.Boolean
      description: Whether to enter or exit fullscreen mode.
    - id: fsType
      type: Night.FullscreenType
      description: The type of fullscreen mode to use (Desktop or Exclusive).
    return:
      type: System.Boolean
      description: True if the operation was successful, false otherwise.
    content.vb: Public Shared Function SetFullscreen(fullscreen As Boolean, fsType As FullscreenType = FullscreenType.Desktop) As Boolean
  overload: Night.Window.SetFullscreen*
  nameWithType.vb: Window.SetFullscreen(Boolean, FullscreenType)
  fullName.vb: Night.Window.SetFullscreen(Boolean, Night.FullscreenType)
  name.vb: SetFullscreen(Boolean, FullscreenType)
- uid: Night.Window.GetFullscreenModes(System.Int32)
  commentId: M:Night.Window.GetFullscreenModes(System.Int32)
  id: GetFullscreenModes(System.Int32)
  parent: Night.Window
  langs:
  - csharp
  - vb
  name: GetFullscreenModes(int)
  nameWithType: Window.GetFullscreenModes(int)
  fullName: Night.Window.GetFullscreenModes(int)
  type: Method
  source:
    remote:
      path: src/Night/Window/Window.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: GetFullscreenModes
    path: ../src/Night/Window/Window.cs
    startLine: 306
  assemblies:
  - Night
  namespace: Night
  summary: Gets a list of available fullscreen display modes for a given display.
  example: []
  syntax:
    content: public static List<(int Width, int Height)> GetFullscreenModes(int displayIndex = 0)
    parameters:
    - id: displayIndex
      type: System.Int32
      description: The index of the display (0 for primary).
    return:
      type: System.Collections.Generic.List{System.ValueTuple{System.Int32,System.Int32}}
      description: A list of (Width, Height) tuples representing available modes, or an empty list on error.
    content.vb: Public Shared Function GetFullscreenModes(displayIndex As Integer = 0) As List(Of (Width As Integer, Height As Integer))
  overload: Night.Window.GetFullscreenModes*
  nameWithType.vb: Window.GetFullscreenModes(Integer)
  fullName.vb: Night.Window.GetFullscreenModes(Integer)
  name.vb: GetFullscreenModes(Integer)
- uid: Night.Window.GetMode
  commentId: M:Night.Window.GetMode
  id: GetMode
  parent: Night.Window
  langs:
  - csharp
  - vb
  name: GetMode()
  nameWithType: Window.GetMode()
  fullName: Night.Window.GetMode()
  type: Method
  source:
    remote:
      path: src/Night/Window/Window.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: GetMode
    path: ../src/Night/Window/Window.cs
    startLine: 347
  assemblies:
  - Night
  namespace: Night
  summary: Gets the current window mode (width, height, and flags).
  example: []
  syntax:
    content: public static WindowMode GetMode()
    return:
      type: Night.WindowMode
      description: A WindowMode struct containing width, height, and current flags.
    content.vb: Public Shared Function GetMode() As WindowMode
  overload: Night.Window.GetMode*
- uid: Night.Window.GetDPIScale
  commentId: M:Night.Window.GetDPIScale
  id: GetDPIScale
  parent: Night.Window
  langs:
  - csharp
  - vb
  name: GetDPIScale()
  nameWithType: Window.GetDPIScale()
  fullName: Night.Window.GetDPIScale()
  type: Method
  source:
    remote:
      path: src/Night/Window/Window.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: GetDPIScale
    path: ../src/Night/Window/Window.cs
    startLine: 413
  assemblies:
  - Night
  namespace: Night
  summary: Gets the DPI scale factor of the display containing the window.
  example: []
  syntax:
    content: public static float GetDPIScale()
    return:
      type: System.Single
      description: The DPI scale factor, or 1.0f on error or if not applicable.
    content.vb: Public Shared Function GetDPIScale() As Single
  overload: Night.Window.GetDPIScale*
- uid: Night.Window.ToPixels(System.Single)
  commentId: M:Night.Window.ToPixels(System.Single)
  id: ToPixels(System.Single)
  parent: Night.Window
  langs:
  - csharp
  - vb
  name: ToPixels(float)
  nameWithType: Window.ToPixels(float)
  fullName: Night.Window.ToPixels(float)
  type: Method
  source:
    remote:
      path: src/Night/Window/Window.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: ToPixels
    path: ../src/Night/Window/Window.cs
    startLine: 434
  assemblies:
  - Night
  namespace: Night
  summary: Converts a value from density-independent units to pixels, using the window's current DPI scale.
  example: []
  syntax:
    content: public static float ToPixels(float value)
    parameters:
    - id: value
      type: System.Single
      description: The value in density-independent units.
    return:
      type: System.Single
      description: The equivalent value in pixels.
    content.vb: Public Shared Function ToPixels(value As Single) As Single
  overload: Night.Window.ToPixels*
  nameWithType.vb: Window.ToPixels(Single)
  fullName.vb: Night.Window.ToPixels(Single)
  name.vb: ToPixels(Single)
- uid: Night.Window.FromPixels(System.Single)
  commentId: M:Night.Window.FromPixels(System.Single)
  id: FromPixels(System.Single)
  parent: Night.Window
  langs:
  - csharp
  - vb
  name: FromPixels(float)
  nameWithType: Window.FromPixels(float)
  fullName: Night.Window.FromPixels(float)
  type: Method
  source:
    remote:
      path: src/Night/Window/Window.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: FromPixels
    path: ../src/Night/Window/Window.cs
    startLine: 444
  assemblies:
  - Night
  namespace: Night
  summary: Converts a value from pixels to density-independent units, using the window's current DPI scale.
  example: []
  syntax:
    content: public static float FromPixels(float value)
    parameters:
    - id: value
      type: System.Single
      description: The value in pixels.
    return:
      type: System.Single
      description: The equivalent value in density-independent units.
    content.vb: Public Shared Function FromPixels(value As Single) As Single
  overload: Night.Window.FromPixels*
  nameWithType.vb: Window.FromPixels(Single)
  fullName.vb: Night.Window.FromPixels(Single)
  name.vb: FromPixels(Single)
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Night.Window.SetMode*
  commentId: Overload:Night.Window.SetMode
  href: Night.Window.html#Night_Window_SetMode_System_Int32_System_Int32_SDL3_SDL_WindowFlags_
  name: SetMode
  nameWithType: Window.SetMode
  fullName: Night.Window.SetMode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SDL3.SDL.WindowFlags
  commentId: T:SDL3.SDL.WindowFlags
  parent: SDL3
  isExternal: true
  name: SDL.WindowFlags
  nameWithType: SDL.WindowFlags
  fullName: SDL3.SDL.WindowFlags
  spec.csharp:
  - uid: SDL3.SDL
    name: SDL
    isExternal: true
  - name: .
  - uid: SDL3.SDL.WindowFlags
    name: WindowFlags
    isExternal: true
  spec.vb:
  - uid: SDL3.SDL
    name: SDL
    isExternal: true
  - name: .
  - uid: SDL3.SDL.WindowFlags
    name: WindowFlags
    isExternal: true
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SDL3
  commentId: N:SDL3
  isExternal: true
  name: SDL3
  nameWithType: SDL3
  fullName: SDL3
- uid: Night.Window.SetTitle*
  commentId: Overload:Night.Window.SetTitle
  href: Night.Window.html#Night_Window_SetTitle_System_String_
  name: SetTitle
  nameWithType: Window.SetTitle
  fullName: Night.Window.SetTitle
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Night.Window.IsOpen*
  commentId: Overload:Night.Window.IsOpen
  href: Night.Window.html#Night_Window_IsOpen
  name: IsOpen
  nameWithType: Window.IsOpen
  fullName: Night.Window.IsOpen
- uid: Night.Window.Close*
  commentId: Overload:Night.Window.Close
  href: Night.Window.html#Night_Window_Close
  name: Close
  nameWithType: Window.Close
  fullName: Night.Window.Close
- uid: Night.Window.GetDisplayCount*
  commentId: Overload:Night.Window.GetDisplayCount
  href: Night.Window.html#Night_Window_GetDisplayCount
  name: GetDisplayCount
  nameWithType: Window.GetDisplayCount
  fullName: Night.Window.GetDisplayCount
- uid: Night.Window.GetDesktopDimensions*
  commentId: Overload:Night.Window.GetDesktopDimensions
  href: Night.Window.html#Night_Window_GetDesktopDimensions_System_Int32_
  name: GetDesktopDimensions
  nameWithType: Window.GetDesktopDimensions
  fullName: Night.Window.GetDesktopDimensions
- uid: System.ValueTuple{System.Int32,System.Int32}
  commentId: T:System.ValueTuple{System.Int32,System.Int32}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: (int X, int Y)
  nameWithType: (int X, int Y)
  fullName: (int X, int Y)
  nameWithType.vb: (X As Integer, Y As Integer)
  fullName.vb: (X As Integer, Y As Integer)
  name.vb: (X As Integer, Y As Integer)
  spec.csharp:
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.X
    name: X
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.x
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.Y
    name: Y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.y
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Int32,System.Int32}.X
    name: X
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.x
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.Y
    name: Y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.y
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Night.Window.GetFullscreen*
  commentId: Overload:Night.Window.GetFullscreen
  href: Night.Window.html#Night_Window_GetFullscreen
  name: GetFullscreen
  nameWithType: Window.GetFullscreen
  fullName: Night.Window.GetFullscreen
- uid: System.ValueTuple{System.Boolean,Night.FullscreenType}
  commentId: T:System.ValueTuple{System.Boolean,Night.FullscreenType}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: (bool IsFullscreen, FullscreenType FsType)
  nameWithType: (bool IsFullscreen, FullscreenType FsType)
  fullName: (bool IsFullscreen, Night.FullscreenType FsType)
  nameWithType.vb: (IsFullscreen As Boolean, FsType As FullscreenType)
  fullName.vb: (IsFullscreen As Boolean, FsType As Night.FullscreenType)
  name.vb: (IsFullscreen As Boolean, FsType As FullscreenType)
  spec.csharp:
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: " "
  - uid: System.ValueTuple{System.Boolean,Night.FullscreenType}.IsFullscreen
    name: IsFullscreen
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.boolean,night.fullscreentype-.isfullscreen
  - name: ','
  - name: " "
  - uid: Night.FullscreenType
    name: FullscreenType
    href: Night.FullscreenType.html
  - name: " "
  - uid: System.ValueTuple{System.Boolean,Night.FullscreenType}.FsType
    name: FsType
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.boolean,night.fullscreentype-.fstype
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Boolean,Night.FullscreenType}.IsFullscreen
    name: IsFullscreen
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.boolean,night.fullscreentype-.isfullscreen
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Boolean,Night.FullscreenType}.FsType
    name: FsType
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.boolean,night.fullscreentype-.fstype
  - name: " "
  - name: As
  - name: " "
  - uid: Night.FullscreenType
    name: FullscreenType
    href: Night.FullscreenType.html
  - name: )
- uid: Night.Window.SetFullscreen*
  commentId: Overload:Night.Window.SetFullscreen
  href: Night.Window.html#Night_Window_SetFullscreen_System_Boolean_Night_FullscreenType_
  name: SetFullscreen
  nameWithType: Window.SetFullscreen
  fullName: Night.Window.SetFullscreen
- uid: Night.FullscreenType
  commentId: T:Night.FullscreenType
  parent: Night
  href: Night.FullscreenType.html
  name: FullscreenType
  nameWithType: FullscreenType
  fullName: Night.FullscreenType
- uid: Night.Window.GetFullscreenModes*
  commentId: Overload:Night.Window.GetFullscreenModes
  href: Night.Window.html#Night_Window_GetFullscreenModes_System_Int32_
  name: GetFullscreenModes
  nameWithType: Window.GetFullscreenModes
  fullName: Night.Window.GetFullscreenModes
- uid: System.Collections.Generic.List{System.ValueTuple{System.Int32,System.Int32}}
  commentId: T:System.Collections.Generic.List{System.ValueTuple{System.Int32,System.Int32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<(int Width, int Height)>
  nameWithType: List<(int Width, int Height)>
  fullName: System.Collections.Generic.List<(int Width, int Height)>
  nameWithType.vb: List(Of (Width As Integer, Height As Integer))
  fullName.vb: System.Collections.Generic.List(Of (Width As Integer, Height As Integer))
  name.vb: List(Of (Width As Integer, Height As Integer))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.Width
    name: Width
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.width
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.Height
    name: Height
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.height
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Int32,System.Int32}.Width
    name: Width
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.width
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.Height
    name: Height
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.height
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Night.Window.GetMode*
  commentId: Overload:Night.Window.GetMode
  href: Night.Window.html#Night_Window_GetMode
  name: GetMode
  nameWithType: Window.GetMode
  fullName: Night.Window.GetMode
- uid: Night.WindowMode
  commentId: T:Night.WindowMode
  parent: Night
  href: Night.WindowMode.html
  name: WindowMode
  nameWithType: WindowMode
  fullName: Night.WindowMode
- uid: Night.Window.GetDPIScale*
  commentId: Overload:Night.Window.GetDPIScale
  href: Night.Window.html#Night_Window_GetDPIScale
  name: GetDPIScale
  nameWithType: Window.GetDPIScale
  fullName: Night.Window.GetDPIScale
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Night.Window.ToPixels*
  commentId: Overload:Night.Window.ToPixels
  href: Night.Window.html#Night_Window_ToPixels_System_Single_
  name: ToPixels
  nameWithType: Window.ToPixels
  fullName: Night.Window.ToPixels
- uid: Night.Window.FromPixels*
  commentId: Overload:Night.Window.FromPixels
  href: Night.Window.html#Night_Window_FromPixels_System_Single_
  name: FromPixels
  nameWithType: Window.FromPixels
  fullName: Night.Window.FromPixels



================================================
File: site/api/Night.WindowConfig.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.WindowConfig
  commentId: T:Night.WindowConfig
  id: WindowConfig
  parent: Night
  children:
  - Night.WindowConfig.Borderless
  - Night.WindowConfig.Depth
  - Night.WindowConfig.Display
  - Night.WindowConfig.Fullscreen
  - Night.WindowConfig.FullscreenType
  - Night.WindowConfig.Height
  - Night.WindowConfig.HighDPI
  - Night.WindowConfig.Icon
  - Night.WindowConfig.MSAA
  - Night.WindowConfig.MinHeight
  - Night.WindowConfig.MinWidth
  - Night.WindowConfig.Resizable
  - Night.WindowConfig.Stencil
  - Night.WindowConfig.Title
  - Night.WindowConfig.UseDPIScale
  - Night.WindowConfig.VSync
  - Night.WindowConfig.Width
  - Night.WindowConfig.X
  - Night.WindowConfig.Y
  langs:
  - csharp
  - vb
  name: WindowConfig
  nameWithType: WindowConfig
  fullName: Night.WindowConfig
  type: Class
  source:
    remote:
      path: src/Night/Configuration/WindowConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: WindowConfig
    path: ../src/Night/Configuration/WindowConfig.cs
    startLine: 29
  assemblies:
  - Night
  namespace: Night
  summary: Configuration settings for the game window.
  example: []
  syntax:
    content: public class WindowConfig
    content.vb: Public Class WindowConfig
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Night.WindowConfig.Title
  commentId: P:Night.WindowConfig.Title
  id: Title
  parent: Night.WindowConfig
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: WindowConfig.Title
  fullName: Night.WindowConfig.Title
  type: Property
  source:
    remote:
      path: src/Night/Configuration/WindowConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Title
    path: ../src/Night/Configuration/WindowConfig.cs
    startLine: 34
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the title of the window.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("title")]

      public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("title")>

      Public Property Title As String
  overload: Night.WindowConfig.Title*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: title
- uid: Night.WindowConfig.Icon
  commentId: P:Night.WindowConfig.Icon
  id: Icon
  parent: Night.WindowConfig
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: WindowConfig.Icon
  fullName: Night.WindowConfig.Icon
  type: Property
  source:
    remote:
      path: src/Night/Configuration/WindowConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Icon
    path: ../src/Night/Configuration/WindowConfig.cs
    startLine: 40
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the path to the window icon image file. Null for no icon.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("icon")]

      public string? Icon { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("icon")>

      Public Property Icon As String
  overload: Night.WindowConfig.Icon*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: icon
- uid: Night.WindowConfig.Width
  commentId: P:Night.WindowConfig.Width
  id: Width
  parent: Night.WindowConfig
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: WindowConfig.Width
  fullName: Night.WindowConfig.Width
  type: Property
  source:
    remote:
      path: src/Night/Configuration/WindowConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Width
    path: ../src/Night/Configuration/WindowConfig.cs
    startLine: 46
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the initial width of the window in pixels.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("width")]

      public int Width { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonPropertyName("width")>

      Public Property Width As Integer
  overload: Night.WindowConfig.Width*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: width
- uid: Night.WindowConfig.Height
  commentId: P:Night.WindowConfig.Height
  id: Height
  parent: Night.WindowConfig
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: WindowConfig.Height
  fullName: Night.WindowConfig.Height
  type: Property
  source:
    remote:
      path: src/Night/Configuration/WindowConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Height
    path: ../src/Night/Configuration/WindowConfig.cs
    startLine: 52
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the initial height of the window in pixels.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("height")]

      public int Height { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonPropertyName("height")>

      Public Property Height As Integer
  overload: Night.WindowConfig.Height*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: height
- uid: Night.WindowConfig.Borderless
  commentId: P:Night.WindowConfig.Borderless
  id: Borderless
  parent: Night.WindowConfig
  langs:
  - csharp
  - vb
  name: Borderless
  nameWithType: WindowConfig.Borderless
  fullName: Night.WindowConfig.Borderless
  type: Property
  source:
    remote:
      path: src/Night/Configuration/WindowConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Borderless
    path: ../src/Night/Configuration/WindowConfig.cs
    startLine: 58
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the window should be borderless.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("borderless")]

      public bool Borderless { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("borderless")>

      Public Property Borderless As Boolean
  overload: Night.WindowConfig.Borderless*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: borderless
- uid: Night.WindowConfig.Resizable
  commentId: P:Night.WindowConfig.Resizable
  id: Resizable
  parent: Night.WindowConfig
  langs:
  - csharp
  - vb
  name: Resizable
  nameWithType: WindowConfig.Resizable
  fullName: Night.WindowConfig.Resizable
  type: Property
  source:
    remote:
      path: src/Night/Configuration/WindowConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Resizable
    path: ../src/Night/Configuration/WindowConfig.cs
    startLine: 64
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the window should be resizable.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("resizable")]

      public bool Resizable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("resizable")>

      Public Property Resizable As Boolean
  overload: Night.WindowConfig.Resizable*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: resizable
- uid: Night.WindowConfig.MinWidth
  commentId: P:Night.WindowConfig.MinWidth
  id: MinWidth
  parent: Night.WindowConfig
  langs:
  - csharp
  - vb
  name: MinWidth
  nameWithType: WindowConfig.MinWidth
  fullName: Night.WindowConfig.MinWidth
  type: Property
  source:
    remote:
      path: src/Night/Configuration/WindowConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: MinWidth
    path: ../src/Night/Configuration/WindowConfig.cs
    startLine: 70
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the minimum width of the window if resizable.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("minwidth")]

      public int MinWidth { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonPropertyName("minwidth")>

      Public Property MinWidth As Integer
  overload: Night.WindowConfig.MinWidth*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: minwidth
- uid: Night.WindowConfig.MinHeight
  commentId: P:Night.WindowConfig.MinHeight
  id: MinHeight
  parent: Night.WindowConfig
  langs:
  - csharp
  - vb
  name: MinHeight
  nameWithType: WindowConfig.MinHeight
  fullName: Night.WindowConfig.MinHeight
  type: Property
  source:
    remote:
      path: src/Night/Configuration/WindowConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: MinHeight
    path: ../src/Night/Configuration/WindowConfig.cs
    startLine: 76
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the minimum height of the window if resizable.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("minheight")]

      public int MinHeight { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonPropertyName("minheight")>

      Public Property MinHeight As Integer
  overload: Night.WindowConfig.MinHeight*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: minheight
- uid: Night.WindowConfig.Fullscreen
  commentId: P:Night.WindowConfig.Fullscreen
  id: Fullscreen
  parent: Night.WindowConfig
  langs:
  - csharp
  - vb
  name: Fullscreen
  nameWithType: WindowConfig.Fullscreen
  fullName: Night.WindowConfig.Fullscreen
  type: Property
  source:
    remote:
      path: src/Night/Configuration/WindowConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Fullscreen
    path: ../src/Night/Configuration/WindowConfig.cs
    startLine: 82
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the window should start in fullscreen mode.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("fullscreen")]

      public bool Fullscreen { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("fullscreen")>

      Public Property Fullscreen As Boolean
  overload: Night.WindowConfig.Fullscreen*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: fullscreen
- uid: Night.WindowConfig.FullscreenType
  commentId: P:Night.WindowConfig.FullscreenType
  id: FullscreenType
  parent: Night.WindowConfig
  langs:
  - csharp
  - vb
  name: FullscreenType
  nameWithType: WindowConfig.FullscreenType
  fullName: Night.WindowConfig.FullscreenType
  type: Property
  source:
    remote:
      path: src/Night/Configuration/WindowConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: FullscreenType
    path: ../src/Night/Configuration/WindowConfig.cs
    startLine: 88
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the type of fullscreen mode ("desktop" or "exclusive").
  example: []
  syntax:
    content: >-
      [JsonPropertyName("fullscreentype")]

      public string FullscreenType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("fullscreentype")>

      Public Property FullscreenType As String
  overload: Night.WindowConfig.FullscreenType*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: fullscreentype
- uid: Night.WindowConfig.VSync
  commentId: P:Night.WindowConfig.VSync
  id: VSync
  parent: Night.WindowConfig
  langs:
  - csharp
  - vb
  name: VSync
  nameWithType: WindowConfig.VSync
  fullName: Night.WindowConfig.VSync
  type: Property
  source:
    remote:
      path: src/Night/Configuration/WindowConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: VSync
    path: ../src/Night/Configuration/WindowConfig.cs
    startLine: 94
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the VSync mode. -1 for adaptive, 0 for disabled, 1 for enabled.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("vsync")]

      public int VSync { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonPropertyName("vsync")>

      Public Property VSync As Integer
  overload: Night.WindowConfig.VSync*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: vsync
- uid: Night.WindowConfig.MSAA
  commentId: P:Night.WindowConfig.MSAA
  id: MSAA
  parent: Night.WindowConfig
  langs:
  - csharp
  - vb
  name: MSAA
  nameWithType: WindowConfig.MSAA
  fullName: Night.WindowConfig.MSAA
  type: Property
  source:
    remote:
      path: src/Night/Configuration/WindowConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: MSAA
    path: ../src/Night/Configuration/WindowConfig.cs
    startLine: 100
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the multisample anti-aliasing (MSAA) level.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("msaa")]

      public int MSAA { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonPropertyName("msaa")>

      Public Property MSAA As Integer
  overload: Night.WindowConfig.MSAA*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: msaa
- uid: Night.WindowConfig.Depth
  commentId: P:Night.WindowConfig.Depth
  id: Depth
  parent: Night.WindowConfig
  langs:
  - csharp
  - vb
  name: Depth
  nameWithType: WindowConfig.Depth
  fullName: Night.WindowConfig.Depth
  type: Property
  source:
    remote:
      path: src/Night/Configuration/WindowConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Depth
    path: ../src/Night/Configuration/WindowConfig.cs
    startLine: 106
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the depth buffer bits. Null for system default.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("depth")]

      public int? Depth { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("depth")>

      Public Property Depth As Integer?
  overload: Night.WindowConfig.Depth*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: depth
- uid: Night.WindowConfig.Stencil
  commentId: P:Night.WindowConfig.Stencil
  id: Stencil
  parent: Night.WindowConfig
  langs:
  - csharp
  - vb
  name: Stencil
  nameWithType: WindowConfig.Stencil
  fullName: Night.WindowConfig.Stencil
  type: Property
  source:
    remote:
      path: src/Night/Configuration/WindowConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Stencil
    path: ../src/Night/Configuration/WindowConfig.cs
    startLine: 112
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the stencil buffer bits. Null for system default.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("stencil")]

      public int? Stencil { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("stencil")>

      Public Property Stencil As Integer?
  overload: Night.WindowConfig.Stencil*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: stencil
- uid: Night.WindowConfig.Display
  commentId: P:Night.WindowConfig.Display
  id: Display
  parent: Night.WindowConfig
  langs:
  - csharp
  - vb
  name: Display
  nameWithType: WindowConfig.Display
  fullName: Night.WindowConfig.Display
  type: Property
  source:
    remote:
      path: src/Night/Configuration/WindowConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Display
    path: ../src/Night/Configuration/WindowConfig.cs
    startLine: 118
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the 1-indexed display number to use for the window.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("display")]

      public int Display { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonPropertyName("display")>

      Public Property Display As Integer
  overload: Night.WindowConfig.Display*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: display
- uid: Night.WindowConfig.HighDPI
  commentId: P:Night.WindowConfig.HighDPI
  id: HighDPI
  parent: Night.WindowConfig
  langs:
  - csharp
  - vb
  name: HighDPI
  nameWithType: WindowConfig.HighDPI
  fullName: Night.WindowConfig.HighDPI
  type: Property
  source:
    remote:
      path: src/Night/Configuration/WindowConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: HighDPI
    path: ../src/Night/Configuration/WindowConfig.cs
    startLine: 124
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether to enable High DPI mode if available.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("highdpi")]

      public bool HighDPI { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("highdpi")>

      Public Property HighDPI As Boolean
  overload: Night.WindowConfig.HighDPI*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: highdpi
- uid: Night.WindowConfig.UseDPIScale
  commentId: P:Night.WindowConfig.UseDPIScale
  id: UseDPIScale
  parent: Night.WindowConfig
  langs:
  - csharp
  - vb
  name: UseDPIScale
  nameWithType: WindowConfig.UseDPIScale
  fullName: Night.WindowConfig.UseDPIScale
  type: Property
  source:
    remote:
      path: src/Night/Configuration/WindowConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: UseDPIScale
    path: ../src/Night/Configuration/WindowConfig.cs
    startLine: 130
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether to use DPI scaling.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("usedpiscale")]

      public bool UseDPIScale { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("usedpiscale")>

      Public Property UseDPIScale As Boolean
  overload: Night.WindowConfig.UseDPIScale*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: usedpiscale
- uid: Night.WindowConfig.X
  commentId: P:Night.WindowConfig.X
  id: X
  parent: Night.WindowConfig
  langs:
  - csharp
  - vb
  name: X
  nameWithType: WindowConfig.X
  fullName: Night.WindowConfig.X
  type: Property
  source:
    remote:
      path: src/Night/Configuration/WindowConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: X
    path: ../src/Night/Configuration/WindowConfig.cs
    startLine: 136
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the initial X position of the window. Null for centered.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("x")]

      public int? X { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("x")>

      Public Property X As Integer?
  overload: Night.WindowConfig.X*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: x
- uid: Night.WindowConfig.Y
  commentId: P:Night.WindowConfig.Y
  id: Y
  parent: Night.WindowConfig
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: WindowConfig.Y
  fullName: Night.WindowConfig.Y
  type: Property
  source:
    remote:
      path: src/Night/Configuration/WindowConfig.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Y
    path: ../src/Night/Configuration/WindowConfig.cs
    startLine: 142
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the initial Y position of the window. Null for centered.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("y")]

      public int? Y { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("y")>

      Public Property Y As Integer?
  overload: Night.WindowConfig.Y*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: y
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Night.WindowConfig.Title*
  commentId: Overload:Night.WindowConfig.Title
  href: Night.WindowConfig.html#Night_WindowConfig_Title
  name: Title
  nameWithType: WindowConfig.Title
  fullName: Night.WindowConfig.Title
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Night.WindowConfig.Icon*
  commentId: Overload:Night.WindowConfig.Icon
  href: Night.WindowConfig.html#Night_WindowConfig_Icon
  name: Icon
  nameWithType: WindowConfig.Icon
  fullName: Night.WindowConfig.Icon
- uid: Night.WindowConfig.Width*
  commentId: Overload:Night.WindowConfig.Width
  href: Night.WindowConfig.html#Night_WindowConfig_Width
  name: Width
  nameWithType: WindowConfig.Width
  fullName: Night.WindowConfig.Width
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Night.WindowConfig.Height*
  commentId: Overload:Night.WindowConfig.Height
  href: Night.WindowConfig.html#Night_WindowConfig_Height
  name: Height
  nameWithType: WindowConfig.Height
  fullName: Night.WindowConfig.Height
- uid: Night.WindowConfig.Borderless*
  commentId: Overload:Night.WindowConfig.Borderless
  href: Night.WindowConfig.html#Night_WindowConfig_Borderless
  name: Borderless
  nameWithType: WindowConfig.Borderless
  fullName: Night.WindowConfig.Borderless
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Night.WindowConfig.Resizable*
  commentId: Overload:Night.WindowConfig.Resizable
  href: Night.WindowConfig.html#Night_WindowConfig_Resizable
  name: Resizable
  nameWithType: WindowConfig.Resizable
  fullName: Night.WindowConfig.Resizable
- uid: Night.WindowConfig.MinWidth*
  commentId: Overload:Night.WindowConfig.MinWidth
  href: Night.WindowConfig.html#Night_WindowConfig_MinWidth
  name: MinWidth
  nameWithType: WindowConfig.MinWidth
  fullName: Night.WindowConfig.MinWidth
- uid: Night.WindowConfig.MinHeight*
  commentId: Overload:Night.WindowConfig.MinHeight
  href: Night.WindowConfig.html#Night_WindowConfig_MinHeight
  name: MinHeight
  nameWithType: WindowConfig.MinHeight
  fullName: Night.WindowConfig.MinHeight
- uid: Night.WindowConfig.Fullscreen*
  commentId: Overload:Night.WindowConfig.Fullscreen
  href: Night.WindowConfig.html#Night_WindowConfig_Fullscreen
  name: Fullscreen
  nameWithType: WindowConfig.Fullscreen
  fullName: Night.WindowConfig.Fullscreen
- uid: Night.WindowConfig.FullscreenType*
  commentId: Overload:Night.WindowConfig.FullscreenType
  href: Night.WindowConfig.html#Night_WindowConfig_FullscreenType
  name: FullscreenType
  nameWithType: WindowConfig.FullscreenType
  fullName: Night.WindowConfig.FullscreenType
- uid: Night.WindowConfig.VSync*
  commentId: Overload:Night.WindowConfig.VSync
  href: Night.WindowConfig.html#Night_WindowConfig_VSync
  name: VSync
  nameWithType: WindowConfig.VSync
  fullName: Night.WindowConfig.VSync
- uid: Night.WindowConfig.MSAA*
  commentId: Overload:Night.WindowConfig.MSAA
  href: Night.WindowConfig.html#Night_WindowConfig_MSAA
  name: MSAA
  nameWithType: WindowConfig.MSAA
  fullName: Night.WindowConfig.MSAA
- uid: Night.WindowConfig.Depth*
  commentId: Overload:Night.WindowConfig.Depth
  href: Night.WindowConfig.html#Night_WindowConfig_Depth
  name: Depth
  nameWithType: WindowConfig.Depth
  fullName: Night.WindowConfig.Depth
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Night.WindowConfig.Stencil*
  commentId: Overload:Night.WindowConfig.Stencil
  href: Night.WindowConfig.html#Night_WindowConfig_Stencil
  name: Stencil
  nameWithType: WindowConfig.Stencil
  fullName: Night.WindowConfig.Stencil
- uid: Night.WindowConfig.Display*
  commentId: Overload:Night.WindowConfig.Display
  href: Night.WindowConfig.html#Night_WindowConfig_Display
  name: Display
  nameWithType: WindowConfig.Display
  fullName: Night.WindowConfig.Display
- uid: Night.WindowConfig.HighDPI*
  commentId: Overload:Night.WindowConfig.HighDPI
  href: Night.WindowConfig.html#Night_WindowConfig_HighDPI
  name: HighDPI
  nameWithType: WindowConfig.HighDPI
  fullName: Night.WindowConfig.HighDPI
- uid: Night.WindowConfig.UseDPIScale*
  commentId: Overload:Night.WindowConfig.UseDPIScale
  href: Night.WindowConfig.html#Night_WindowConfig_UseDPIScale
  name: UseDPIScale
  nameWithType: WindowConfig.UseDPIScale
  fullName: Night.WindowConfig.UseDPIScale
- uid: Night.WindowConfig.X*
  commentId: Overload:Night.WindowConfig.X
  href: Night.WindowConfig.html#Night_WindowConfig_X
  name: X
  nameWithType: WindowConfig.X
  fullName: Night.WindowConfig.X
- uid: Night.WindowConfig.Y*
  commentId: Overload:Night.WindowConfig.Y
  href: Night.WindowConfig.html#Night_WindowConfig_Y
  name: Y
  nameWithType: WindowConfig.Y
  fullName: Night.WindowConfig.Y



================================================
File: site/api/Night.WindowMode.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night.WindowMode
  commentId: T:Night.WindowMode
  id: WindowMode
  parent: Night
  children:
  - Night.WindowMode.Borderless
  - Night.WindowMode.Centered
  - Night.WindowMode.Display
  - Night.WindowMode.Fullscreen
  - Night.WindowMode.FullscreenType
  - Night.WindowMode.Height
  - Night.WindowMode.HighDpi
  - Night.WindowMode.MinHeight
  - Night.WindowMode.MinWidth
  - Night.WindowMode.Msaa
  - Night.WindowMode.RefreshRate
  - Night.WindowMode.Resizable
  - Night.WindowMode.Vsync
  - Night.WindowMode.Width
  - Night.WindowMode.X
  - Night.WindowMode.Y
  langs:
  - csharp
  - vb
  name: WindowMode
  nameWithType: WindowMode
  fullName: Night.WindowMode
  type: Struct
  source:
    remote:
      path: src/Night/Window/WindowMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: WindowMode
    path: ../src/Night/Window/WindowMode.cs
    startLine: 29
  assemblies:
  - Night
  namespace: Night
  summary: Represents the display mode of a window, including width, height, and other properties.
  example: []
  syntax:
    content: public struct WindowMode
    content.vb: Public Structure WindowMode
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Night.WindowMode.Width
  commentId: F:Night.WindowMode.Width
  id: Width
  parent: Night.WindowMode
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: WindowMode.Width
  fullName: Night.WindowMode.Width
  type: Field
  source:
    remote:
      path: src/Night/Window/WindowMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Width
    path: ../src/Night/Window/WindowMode.cs
    startLine: 34
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the window width in pixels.
  example: []
  syntax:
    content: public int Width
    return:
      type: System.Int32
    content.vb: Public Width As Integer
- uid: Night.WindowMode.Height
  commentId: F:Night.WindowMode.Height
  id: Height
  parent: Night.WindowMode
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: WindowMode.Height
  fullName: Night.WindowMode.Height
  type: Field
  source:
    remote:
      path: src/Night/Window/WindowMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Height
    path: ../src/Night/Window/WindowMode.cs
    startLine: 39
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the window height in pixels.
  example: []
  syntax:
    content: public int Height
    return:
      type: System.Int32
    content.vb: Public Height As Integer
- uid: Night.WindowMode.Fullscreen
  commentId: F:Night.WindowMode.Fullscreen
  id: Fullscreen
  parent: Night.WindowMode
  langs:
  - csharp
  - vb
  name: Fullscreen
  nameWithType: WindowMode.Fullscreen
  fullName: Night.WindowMode.Fullscreen
  type: Field
  source:
    remote:
      path: src/Night/Window/WindowMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Fullscreen
    path: ../src/Night/Window/WindowMode.cs
    startLine: 44
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the window is in fullscreen mode.
  example: []
  syntax:
    content: public bool Fullscreen
    return:
      type: System.Boolean
    content.vb: Public Fullscreen As Boolean
- uid: Night.WindowMode.FullscreenType
  commentId: F:Night.WindowMode.FullscreenType
  id: FullscreenType
  parent: Night.WindowMode
  langs:
  - csharp
  - vb
  name: FullscreenType
  nameWithType: WindowMode.FullscreenType
  fullName: Night.WindowMode.FullscreenType
  type: Field
  source:
    remote:
      path: src/Night/Window/WindowMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: FullscreenType
    path: ../src/Night/Window/WindowMode.cs
    startLine: 49
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the type of fullscreen mode used.
  example: []
  syntax:
    content: public FullscreenType FullscreenType
    return:
      type: Night.FullscreenType
    content.vb: Public FullscreenType As FullscreenType
- uid: Night.WindowMode.Borderless
  commentId: F:Night.WindowMode.Borderless
  id: Borderless
  parent: Night.WindowMode
  langs:
  - csharp
  - vb
  name: Borderless
  nameWithType: WindowMode.Borderless
  fullName: Night.WindowMode.Borderless
  type: Field
  source:
    remote:
      path: src/Night/Window/WindowMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Borderless
    path: ../src/Night/Window/WindowMode.cs
    startLine: 54
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the window is borderless.
  example: []
  syntax:
    content: public bool Borderless
    return:
      type: System.Boolean
    content.vb: Public Borderless As Boolean
- uid: Night.WindowMode.Vsync
  commentId: F:Night.WindowMode.Vsync
  id: Vsync
  parent: Night.WindowMode
  langs:
  - csharp
  - vb
  name: Vsync
  nameWithType: WindowMode.Vsync
  fullName: Night.WindowMode.Vsync
  type: Field
  source:
    remote:
      path: src/Night/Window/WindowMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Vsync
    path: ../src/Night/Window/WindowMode.cs
    startLine: 59
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the VSync mode. 1 if the graphics framerate is synchronized with the monitor's refresh rate, 0 otherwise.
  example: []
  syntax:
    content: public int Vsync
    return:
      type: System.Int32
    content.vb: Public Vsync As Integer
- uid: Night.WindowMode.Msaa
  commentId: F:Night.WindowMode.Msaa
  id: Msaa
  parent: Night.WindowMode
  langs:
  - csharp
  - vb
  name: Msaa
  nameWithType: WindowMode.Msaa
  fullName: Night.WindowMode.Msaa
  type: Field
  source:
    remote:
      path: src/Night/Window/WindowMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Msaa
    path: ../src/Night/Window/WindowMode.cs
    startLine: 64
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the number of antialiasing samples used (0 if MSAA is disabled).
  example: []
  syntax:
    content: public int Msaa
    return:
      type: System.Int32
    content.vb: Public Msaa As Integer
- uid: Night.WindowMode.Resizable
  commentId: F:Night.WindowMode.Resizable
  id: Resizable
  parent: Night.WindowMode
  langs:
  - csharp
  - vb
  name: Resizable
  nameWithType: WindowMode.Resizable
  fullName: Night.WindowMode.Resizable
  type: Field
  source:
    remote:
      path: src/Night/Window/WindowMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Resizable
    path: ../src/Night/Window/WindowMode.cs
    startLine: 69
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the window is resizable in windowed mode.
  example: []
  syntax:
    content: public bool Resizable
    return:
      type: System.Boolean
    content.vb: Public Resizable As Boolean
- uid: Night.WindowMode.Centered
  commentId: F:Night.WindowMode.Centered
  id: Centered
  parent: Night.WindowMode
  langs:
  - csharp
  - vb
  name: Centered
  nameWithType: WindowMode.Centered
  fullName: Night.WindowMode.Centered
  type: Field
  source:
    remote:
      path: src/Night/Window/WindowMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Centered
    path: ../src/Night/Window/WindowMode.cs
    startLine: 74
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether the window is centered in windowed mode.
  example: []
  syntax:
    content: public bool Centered
    return:
      type: System.Boolean
    content.vb: Public Centered As Boolean
- uid: Night.WindowMode.Display
  commentId: F:Night.WindowMode.Display
  id: Display
  parent: Night.WindowMode
  langs:
  - csharp
  - vb
  name: Display
  nameWithType: WindowMode.Display
  fullName: Night.WindowMode.Display
  type: Field
  source:
    remote:
      path: src/Night/Window/WindowMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Display
    path: ../src/Night/Window/WindowMode.cs
    startLine: 79
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the 1-based index of the display the window is currently in.
  example: []
  syntax:
    content: public int Display
    return:
      type: System.Int32
    content.vb: Public Display As Integer
- uid: Night.WindowMode.MinWidth
  commentId: F:Night.WindowMode.MinWidth
  id: MinWidth
  parent: Night.WindowMode
  langs:
  - csharp
  - vb
  name: MinWidth
  nameWithType: WindowMode.MinWidth
  fullName: Night.WindowMode.MinWidth
  type: Field
  source:
    remote:
      path: src/Night/Window/WindowMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: MinWidth
    path: ../src/Night/Window/WindowMode.cs
    startLine: 84
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the minimum width of the window, if resizable.
  example: []
  syntax:
    content: public int MinWidth
    return:
      type: System.Int32
    content.vb: Public MinWidth As Integer
- uid: Night.WindowMode.MinHeight
  commentId: F:Night.WindowMode.MinHeight
  id: MinHeight
  parent: Night.WindowMode
  langs:
  - csharp
  - vb
  name: MinHeight
  nameWithType: WindowMode.MinHeight
  fullName: Night.WindowMode.MinHeight
  type: Field
  source:
    remote:
      path: src/Night/Window/WindowMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: MinHeight
    path: ../src/Night/Window/WindowMode.cs
    startLine: 89
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the minimum height of the window, if resizable.
  example: []
  syntax:
    content: public int MinHeight
    return:
      type: System.Int32
    content.vb: Public MinHeight As Integer
- uid: Night.WindowMode.HighDpi
  commentId: F:Night.WindowMode.HighDpi
  id: HighDpi
  parent: Night.WindowMode
  langs:
  - csharp
  - vb
  name: HighDpi
  nameWithType: WindowMode.HighDpi
  fullName: Night.WindowMode.HighDpi
  type: Field
  source:
    remote:
      path: src/Night/Window/WindowMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: HighDpi
    path: ../src/Night/Window/WindowMode.cs
    startLine: 94
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets a value indicating whether high-dpi mode is allowed on Retina displays (macOS).
  example: []
  syntax:
    content: public bool HighDpi
    return:
      type: System.Boolean
    content.vb: Public HighDpi As Boolean
- uid: Night.WindowMode.RefreshRate
  commentId: F:Night.WindowMode.RefreshRate
  id: RefreshRate
  parent: Night.WindowMode
  langs:
  - csharp
  - vb
  name: RefreshRate
  nameWithType: WindowMode.RefreshRate
  fullName: Night.WindowMode.RefreshRate
  type: Field
  source:
    remote:
      path: src/Night/Window/WindowMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: RefreshRate
    path: ../src/Night/Window/WindowMode.cs
    startLine: 99
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the refresh rate of the screen's current display mode in Hz (0 if undetermined).
  example: []
  syntax:
    content: public int RefreshRate
    return:
      type: System.Int32
    content.vb: Public RefreshRate As Integer
- uid: Night.WindowMode.X
  commentId: F:Night.WindowMode.X
  id: X
  parent: Night.WindowMode
  langs:
  - csharp
  - vb
  name: X
  nameWithType: WindowMode.X
  fullName: Night.WindowMode.X
  type: Field
  source:
    remote:
      path: src/Night/Window/WindowMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: X
    path: ../src/Night/Window/WindowMode.cs
    startLine: 104
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the x-coordinate of the window's position.
  example: []
  syntax:
    content: public int X
    return:
      type: System.Int32
    content.vb: Public X As Integer
- uid: Night.WindowMode.Y
  commentId: F:Night.WindowMode.Y
  id: Y
  parent: Night.WindowMode
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: WindowMode.Y
  fullName: Night.WindowMode.Y
  type: Field
  source:
    remote:
      path: src/Night/Window/WindowMode.cs
      branch: dev
      repo: https://github.com/nightconcept/any2.git
    id: Y
    path: ../src/Night/Window/WindowMode.cs
    startLine: 109
  assemblies:
  - Night
  namespace: Night
  summary: Gets or sets the y-coordinate of the window's position.
  example: []
  syntax:
    content: public int Y
    return:
      type: System.Int32
    content.vb: Public Y As Integer
references:
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Night.FullscreenType
  commentId: T:Night.FullscreenType
  parent: Night
  href: Night.FullscreenType.html
  name: FullscreenType
  nameWithType: FullscreenType
  fullName: Night.FullscreenType



================================================
File: site/api/Night.yml
================================================
### YamlMime:ManagedReference
items:
- uid: Night
  commentId: N:Night
  id: Night
  children:
  - Night.AudioConfig
  - Night.Color
  - Night.ConfigurationManager
  - Night.DrawMode
  - Night.Error
  - Night.ErrorHandlerDelegate
  - Night.FileMode
  - Night.FileSystemInfo
  - Night.FileType
  - Night.Filesystem
  - Night.Framework
  - Night.FullscreenType
  - Night.GameConfig
  - Night.Graphics
  - Night.IGame
  - Night.KeyCode
  - Night.KeySymbol
  - Night.Keyboard
  - Night.ModulesConfig
  - Night.Mouse
  - Night.MouseButton
  - Night.NightSDL
  - Night.PointF
  - Night.Rectangle
  - Night.Sprite
  - Night.System
  - Night.Timer
  - Night.VersionInfo
  - Night.Window
  - Night.WindowConfig
  - Night.WindowMode
  langs:
  - csharp
  - vb
  name: Night
  nameWithType: Night
  fullName: Night
  type: Namespace
  assemblies:
  - Night
references:
- uid: Night.AudioConfig
  commentId: T:Night.AudioConfig
  parent: Night
  href: Night.AudioConfig.html
  name: AudioConfig
  nameWithType: AudioConfig
  fullName: Night.AudioConfig
- uid: Night.ConfigurationManager
  commentId: T:Night.ConfigurationManager
  href: Night.ConfigurationManager.html
  name: ConfigurationManager
  nameWithType: ConfigurationManager
  fullName: Night.ConfigurationManager
- uid: Night.GameConfig
  commentId: T:Night.GameConfig
  parent: Night
  href: Night.GameConfig.html
  name: GameConfig
  nameWithType: GameConfig
  fullName: Night.GameConfig
- uid: Night.ModulesConfig
  commentId: T:Night.ModulesConfig
  parent: Night
  href: Night.ModulesConfig.html
  name: ModulesConfig
  nameWithType: ModulesConfig
  fullName: Night.ModulesConfig
- uid: Night.WindowConfig
  commentId: T:Night.WindowConfig
  parent: Night
  href: Night.WindowConfig.html
  name: WindowConfig
  nameWithType: WindowConfig
  fullName: Night.WindowConfig
- uid: Night.ErrorHandlerDelegate
  commentId: T:Night.ErrorHandlerDelegate
  parent: Night
  href: Night.ErrorHandlerDelegate.html
  name: ErrorHandlerDelegate
  nameWithType: ErrorHandlerDelegate
  fullName: Night.ErrorHandlerDelegate
- uid: Night.Error
  commentId: T:Night.Error
  href: Night.Error.html
  name: Error
  nameWithType: Error
  fullName: Night.Error
- uid: Night.FileMode
  commentId: T:Night.FileMode
  parent: Night
  href: Night.FileMode.html
  name: FileMode
  nameWithType: FileMode
  fullName: Night.FileMode
- uid: Night.Filesystem
  commentId: T:Night.Filesystem
  href: Night.Filesystem.html
  name: Filesystem
  nameWithType: Filesystem
  fullName: Night.Filesystem
- uid: Night.FileSystemInfo
  commentId: T:Night.FileSystemInfo
  parent: Night
  href: Night.FileSystemInfo.html
  name: FileSystemInfo
  nameWithType: FileSystemInfo
  fullName: Night.FileSystemInfo
- uid: Night.FileType
  commentId: T:Night.FileType
  parent: Night
  href: Night.FileType.html
  name: FileType
  nameWithType: FileType
  fullName: Night.FileType
- uid: Night.Framework
  commentId: T:Night.Framework
  href: Night.Framework.html
  name: Framework
  nameWithType: Framework
  fullName: Night.Framework
- uid: Night.Color
  commentId: T:Night.Color
  parent: Night
  href: Night.Color.html
  name: Color
  nameWithType: Color
  fullName: Night.Color
- uid: Night.DrawMode
  commentId: T:Night.DrawMode
  parent: Night
  href: Night.DrawMode.html
  name: DrawMode
  nameWithType: DrawMode
  fullName: Night.DrawMode
- uid: Night.Graphics
  commentId: T:Night.Graphics
  href: Night.Graphics.html
  name: Graphics
  nameWithType: Graphics
  fullName: Night.Graphics
- uid: Night.PointF
  commentId: T:Night.PointF
  href: Night.PointF.html
  name: PointF
  nameWithType: PointF
  fullName: Night.PointF
- uid: Night.Rectangle
  commentId: T:Night.Rectangle
  href: Night.Rectangle.html
  name: Rectangle
  nameWithType: Rectangle
  fullName: Night.Rectangle
- uid: Night.Sprite
  commentId: T:Night.Sprite
  parent: Night
  href: Night.Sprite.html
  name: Sprite
  nameWithType: Sprite
  fullName: Night.Sprite
- uid: Night.IGame
  commentId: T:Night.IGame
  parent: Night
  href: Night.IGame.html
  name: IGame
  nameWithType: IGame
  fullName: Night.IGame
- uid: Night.Keyboard
  commentId: T:Night.Keyboard
  href: Night.Keyboard.html
  name: Keyboard
  nameWithType: Keyboard
  fullName: Night.Keyboard
- uid: Night.KeyCode
  commentId: T:Night.KeyCode
  parent: Night
  href: Night.KeyCode.html
  name: KeyCode
  nameWithType: KeyCode
  fullName: Night.KeyCode
- uid: Night.KeySymbol
  commentId: T:Night.KeySymbol
  parent: Night
  href: Night.KeySymbol.html
  name: KeySymbol
  nameWithType: KeySymbol
  fullName: Night.KeySymbol
- uid: Night.Mouse
  commentId: T:Night.Mouse
  href: Night.Mouse.html
  name: Mouse
  nameWithType: Mouse
  fullName: Night.Mouse
- uid: Night.MouseButton
  commentId: T:Night.MouseButton
  parent: Night
  href: Night.MouseButton.html
  name: MouseButton
  nameWithType: MouseButton
  fullName: Night.MouseButton
- uid: Night.NightSDL
  commentId: T:Night.NightSDL
  href: Night.NightSDL.html
  name: NightSDL
  nameWithType: NightSDL
  fullName: Night.NightSDL
- uid: Night.System
  commentId: T:Night.System
  href: Night.System.html
  name: System
  nameWithType: System
  fullName: Night.System
- uid: Night.Timer
  commentId: T:Night.Timer
  href: Night.Timer.html
  name: Timer
  nameWithType: Timer
  fullName: Night.Timer
- uid: Night.VersionInfo
  commentId: T:Night.VersionInfo
  href: Night.VersionInfo.html
  name: VersionInfo
  nameWithType: VersionInfo
  fullName: Night.VersionInfo
- uid: Night.FullscreenType
  commentId: T:Night.FullscreenType
  parent: Night
  href: Night.FullscreenType.html
  name: FullscreenType
  nameWithType: FullscreenType
  fullName: Night.FullscreenType
- uid: Night.Window
  commentId: T:Night.Window
  href: Night.Window.html
  name: Window
  nameWithType: Window
  fullName: Night.Window
- uid: Night.WindowMode
  commentId: T:Night.WindowMode
  parent: Night
  href: Night.WindowMode.html
  name: WindowMode
  nameWithType: WindowMode
  fullName: Night.WindowMode
- uid: Night
  commentId: N:Night
  href: Night.html
  name: Night
  nameWithType: Night
  fullName: Night



================================================
File: site/api/index.md
================================================
# Night Engine API Documentation

Welcome to the API documentation for Night Engine.

Use the navigation to explore the available namespaces and classes.



================================================
File: site/api/toc.yml
================================================
### YamlMime:TableOfContent
items:
- uid: Night
  name: Night
  type: Namespace
  items:
  - uid: Night.AudioConfig
    name: AudioConfig
    type: Class
  - uid: Night.Color
    name: Color
    type: Struct
  - uid: Night.ConfigurationManager
    name: ConfigurationManager
    type: Class
  - uid: Night.DrawMode
    name: DrawMode
    type: Enum
  - uid: Night.Error
    name: Error
    type: Class
  - uid: Night.ErrorHandlerDelegate
    name: ErrorHandlerDelegate
    type: Delegate
  - uid: Night.FileMode
    name: FileMode
    type: Enum
  - uid: Night.FileSystemInfo
    name: FileSystemInfo
    type: Class
  - uid: Night.FileType
    name: FileType
    type: Enum
  - uid: Night.Filesystem
    name: Filesystem
    type: Class
  - uid: Night.Framework
    name: Framework
    type: Class
  - uid: Night.FullscreenType
    name: FullscreenType
    type: Enum
  - uid: Night.GameConfig
    name: GameConfig
    type: Class
  - uid: Night.Graphics
    name: Graphics
    type: Class
  - uid: Night.IGame
    name: IGame
    type: Interface
  - uid: Night.KeyCode
    name: KeyCode
    type: Enum
  - uid: Night.KeySymbol
    name: KeySymbol
    type: Enum
  - uid: Night.Keyboard
    name: Keyboard
    type: Class
  - uid: Night.ModulesConfig
    name: ModulesConfig
    type: Class
  - uid: Night.Mouse
    name: Mouse
    type: Class
  - uid: Night.MouseButton
    name: MouseButton
    type: Enum
  - uid: Night.NightSDL
    name: NightSDL
    type: Class
  - uid: Night.PointF
    name: PointF
    type: Struct
  - uid: Night.Rectangle
    name: Rectangle
    type: Struct
  - uid: Night.Sprite
    name: Sprite
    type: Class
  - uid: Night.System
    name: System
    type: Class
  - uid: Night.Timer
    name: Timer
    type: Class
  - uid: Night.VersionInfo
    name: VersionInfo
    type: Class
  - uid: Night.Window
    name: Window
    type: Class
  - uid: Night.WindowConfig
    name: WindowConfig
    type: Class
  - uid: Night.WindowMode
    name: WindowMode
    type: Struct
- uid: Night.SampleGame
  name: Night.SampleGame
  type: Namespace
  items:
  - uid: Night.SampleGame.Game
    name: Game
    type: Class
  - uid: Night.SampleGame.Platformer
    name: Platformer
    type: Class
  - uid: Night.SampleGame.PlatformerGame
    name: PlatformerGame
    type: Class
  - uid: Night.SampleGame.Player
    name: Player
    type: Class
  - uid: Night.SampleGame.Program
    name: Program
    type: Class
memberLayout: SamePage



================================================
File: site/api/.manifest
================================================
{
  "Night": "Night.yml",
  "Night.AudioConfig": "Night.AudioConfig.yml",
  "Night.AudioConfig.Mic": "Night.AudioConfig.yml",
  "Night.AudioConfig.MixWithSystem": "Night.AudioConfig.yml",
  "Night.Color": "Night.Color.yml",
  "Night.Color.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)": "Night.Color.yml",
  "Night.Color.A": "Night.Color.yml",
  "Night.Color.B": "Night.Color.yml",
  "Night.Color.Black": "Night.Color.yml",
  "Night.Color.Blue": "Night.Color.yml",
  "Night.Color.Cyan": "Night.Color.yml",
  "Night.Color.G": "Night.Color.yml",
  "Night.Color.Green": "Night.Color.yml",
  "Night.Color.Magenta": "Night.Color.yml",
  "Night.Color.R": "Night.Color.yml",
  "Night.Color.Red": "Night.Color.yml",
  "Night.Color.Transparent": "Night.Color.yml",
  "Night.Color.White": "Night.Color.yml",
  "Night.Color.Yellow": "Night.Color.yml",
  "Night.ConfigurationManager": "Night.ConfigurationManager.yml",
  "Night.ConfigurationManager.CurrentConfig": "Night.ConfigurationManager.yml",
  "Night.ConfigurationManager.IsLoaded": "Night.ConfigurationManager.yml",
  "Night.ConfigurationManager.LoadConfig(System.String)": "Night.ConfigurationManager.yml",
  "Night.DrawMode": "Night.DrawMode.yml",
  "Night.DrawMode.Fill": "Night.DrawMode.yml",
  "Night.DrawMode.Line": "Night.DrawMode.yml",
  "Night.Error": "Night.Error.yml",
  "Night.Error.SetHandler(Night.ErrorHandlerDelegate)": "Night.Error.yml",
  "Night.ErrorHandlerDelegate": "Night.ErrorHandlerDelegate.yml",
  "Night.FileMode": "Night.FileMode.yml",
  "Night.FileMode.A": "Night.FileMode.yml",
  "Night.FileMode.Append": "Night.FileMode.yml",
  "Night.FileMode.C": "Night.FileMode.yml",
  "Night.FileMode.Close": "Night.FileMode.yml",
  "Night.FileMode.R": "Night.FileMode.yml",
  "Night.FileMode.Read": "Night.FileMode.yml",
  "Night.FileMode.W": "Night.FileMode.yml",
  "Night.FileMode.Write": "Night.FileMode.yml",
  "Night.FileSystemInfo": "Night.FileSystemInfo.yml",
  "Night.FileSystemInfo.#ctor": "Night.FileSystemInfo.yml",
  "Night.FileSystemInfo.#ctor(Night.FileType,System.Nullable{System.Int64},System.Nullable{System.Int64})": "Night.FileSystemInfo.yml",
  "Night.FileSystemInfo.ModTime": "Night.FileSystemInfo.yml",
  "Night.FileSystemInfo.Size": "Night.FileSystemInfo.yml",
  "Night.FileSystemInfo.Type": "Night.FileSystemInfo.yml",
  "Night.FileType": "Night.FileType.yml",
  "Night.FileType.Directory": "Night.FileType.yml",
  "Night.FileType.File": "Night.FileType.yml",
  "Night.FileType.None": "Night.FileType.yml",
  "Night.FileType.Other": "Night.FileType.yml",
  "Night.FileType.Symlink": "Night.FileType.yml",
  "Night.Filesystem": "Night.Filesystem.yml",
  "Night.Filesystem.GetInfo(System.String,Night.FileSystemInfo)": "Night.Filesystem.yml",
  "Night.Filesystem.GetInfo(System.String,Night.FileType,Night.FileSystemInfo)": "Night.Filesystem.yml",
  "Night.Filesystem.GetInfo(System.String,System.Nullable{Night.FileType})": "Night.Filesystem.yml",
  "Night.Filesystem.ReadBytes(System.String)": "Night.Filesystem.yml",
  "Night.Filesystem.ReadText(System.String)": "Night.Filesystem.yml",
  "Night.Framework": "Night.Framework.yml",
  "Night.Framework.IsInputInitialized": "Night.Framework.yml",
  "Night.Framework.Run(Night.IGame)": "Night.Framework.yml",
  "Night.FullscreenType": "Night.FullscreenType.yml",
  "Night.FullscreenType.Desktop": "Night.FullscreenType.yml",
  "Night.FullscreenType.Exclusive": "Night.FullscreenType.yml",
  "Night.GameConfig": "Night.GameConfig.yml",
  "Night.GameConfig.AccelerometerJoystick": "Night.GameConfig.yml",
  "Night.GameConfig.AppendIdentity": "Night.GameConfig.yml",
  "Night.GameConfig.Audio": "Night.GameConfig.yml",
  "Night.GameConfig.Console": "Night.GameConfig.yml",
  "Night.GameConfig.ExternalStorage": "Night.GameConfig.yml",
  "Night.GameConfig.GammaCorrect": "Night.GameConfig.yml",
  "Night.GameConfig.Identity": "Night.GameConfig.yml",
  "Night.GameConfig.Modules": "Night.GameConfig.yml",
  "Night.GameConfig.Version": "Night.GameConfig.yml",
  "Night.GameConfig.Window": "Night.GameConfig.yml",
  "Night.Graphics": "Night.Graphics.yml",
  "Night.Graphics.Circle(Night.DrawMode,System.Single,System.Single,System.Single,System.Int32)": "Night.Graphics.yml",
  "Night.Graphics.Clear(Night.Color)": "Night.Graphics.yml",
  "Night.Graphics.Draw(Night.Sprite,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)": "Night.Graphics.yml",
  "Night.Graphics.Line(Night.PointF[])": "Night.Graphics.yml",
  "Night.Graphics.Line(System.Single,System.Single,System.Single,System.Single)": "Night.Graphics.yml",
  "Night.Graphics.NewImage(System.String)": "Night.Graphics.yml",
  "Night.Graphics.Polygon(Night.DrawMode,Night.PointF[])": "Night.Graphics.yml",
  "Night.Graphics.Present": "Night.Graphics.yml",
  "Night.Graphics.Rectangle(Night.DrawMode,System.Single,System.Single,System.Single,System.Single)": "Night.Graphics.yml",
  "Night.Graphics.SetColor(Night.Color)": "Night.Graphics.yml",
  "Night.Graphics.SetColor(System.Byte,System.Byte,System.Byte,System.Byte)": "Night.Graphics.yml",
  "Night.IGame": "Night.IGame.yml",
  "Night.IGame.Draw": "Night.IGame.yml",
  "Night.IGame.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)": "Night.IGame.yml",
  "Night.IGame.KeyReleased(Night.KeySymbol,Night.KeyCode)": "Night.IGame.yml",
  "Night.IGame.Load": "Night.IGame.yml",
  "Night.IGame.MousePressed(System.Int32,System.Int32,Night.MouseButton,System.Boolean,System.Int32)": "Night.IGame.yml",
  "Night.IGame.MouseReleased(System.Int32,System.Int32,Night.MouseButton,System.Boolean,System.Int32)": "Night.IGame.yml",
  "Night.IGame.Update(System.Double)": "Night.IGame.yml",
  "Night.KeyCode": "Night.KeyCode.yml",
  "Night.KeyCode.A": "Night.KeyCode.yml",
  "Night.KeyCode.Again": "Night.KeyCode.yml",
  "Night.KeyCode.Alpha0": "Night.KeyCode.yml",
  "Night.KeyCode.Alpha1": "Night.KeyCode.yml",
  "Night.KeyCode.Alpha2": "Night.KeyCode.yml",
  "Night.KeyCode.Alpha3": "Night.KeyCode.yml",
  "Night.KeyCode.Alpha4": "Night.KeyCode.yml",
  "Night.KeyCode.Alpha5": "Night.KeyCode.yml",
  "Night.KeyCode.Alpha6": "Night.KeyCode.yml",
  "Night.KeyCode.Alpha7": "Night.KeyCode.yml",
  "Night.KeyCode.Alpha8": "Night.KeyCode.yml",
  "Night.KeyCode.Alpha9": "Night.KeyCode.yml",
  "Night.KeyCode.Apostrophe": "Night.KeyCode.yml",
  "Night.KeyCode.AppBack": "Night.KeyCode.yml",
  "Night.KeyCode.AppBookmarks": "Night.KeyCode.yml",
  "Night.KeyCode.AppForward": "Night.KeyCode.yml",
  "Night.KeyCode.AppHome": "Night.KeyCode.yml",
  "Night.KeyCode.AppRefresh": "Night.KeyCode.yml",
  "Night.KeyCode.AppSearch": "Night.KeyCode.yml",
  "Night.KeyCode.AppStop": "Night.KeyCode.yml",
  "Night.KeyCode.Application": "Night.KeyCode.yml",
  "Night.KeyCode.B": "Night.KeyCode.yml",
  "Night.KeyCode.Backslash": "Night.KeyCode.yml",
  "Night.KeyCode.Backspace": "Night.KeyCode.yml",
  "Night.KeyCode.C": "Night.KeyCode.yml",
  "Night.KeyCode.Capslock": "Night.KeyCode.yml",
  "Night.KeyCode.Comma": "Night.KeyCode.yml",
  "Night.KeyCode.Copy": "Night.KeyCode.yml",
  "Night.KeyCode.Cut": "Night.KeyCode.yml",
  "Night.KeyCode.D": "Night.KeyCode.yml",
  "Night.KeyCode.Delete": "Night.KeyCode.yml",
  "Night.KeyCode.Down": "Night.KeyCode.yml",
  "Night.KeyCode.E": "Night.KeyCode.yml",
  "Night.KeyCode.End": "Night.KeyCode.yml",
  "Night.KeyCode.Equals": "Night.KeyCode.yml",
  "Night.KeyCode.Escape": "Night.KeyCode.yml",
  "Night.KeyCode.Execute": "Night.KeyCode.yml",
  "Night.KeyCode.F": "Night.KeyCode.yml",
  "Night.KeyCode.F1": "Night.KeyCode.yml",
  "Night.KeyCode.F10": "Night.KeyCode.yml",
  "Night.KeyCode.F11": "Night.KeyCode.yml",
  "Night.KeyCode.F12": "Night.KeyCode.yml",
  "Night.KeyCode.F13": "Night.KeyCode.yml",
  "Night.KeyCode.F14": "Night.KeyCode.yml",
  "Night.KeyCode.F15": "Night.KeyCode.yml",
  "Night.KeyCode.F16": "Night.KeyCode.yml",
  "Night.KeyCode.F17": "Night.KeyCode.yml",
  "Night.KeyCode.F18": "Night.KeyCode.yml",
  "Night.KeyCode.F19": "Night.KeyCode.yml",
  "Night.KeyCode.F2": "Night.KeyCode.yml",
  "Night.KeyCode.F20": "Night.KeyCode.yml",
  "Night.KeyCode.F21": "Night.KeyCode.yml",
  "Night.KeyCode.F22": "Night.KeyCode.yml",
  "Night.KeyCode.F23": "Night.KeyCode.yml",
  "Night.KeyCode.F24": "Night.KeyCode.yml",
  "Night.KeyCode.F3": "Night.KeyCode.yml",
  "Night.KeyCode.F4": "Night.KeyCode.yml",
  "Night.KeyCode.F5": "Night.KeyCode.yml",
  "Night.KeyCode.F6": "Night.KeyCode.yml",
  "Night.KeyCode.F7": "Night.KeyCode.yml",
  "Night.KeyCode.F8": "Night.KeyCode.yml",
  "Night.KeyCode.F9": "Night.KeyCode.yml",
  "Night.KeyCode.Find": "Night.KeyCode.yml",
  "Night.KeyCode.G": "Night.KeyCode.yml",
  "Night.KeyCode.Grave": "Night.KeyCode.yml",
  "Night.KeyCode.H": "Night.KeyCode.yml",
  "Night.KeyCode.Help": "Night.KeyCode.yml",
  "Night.KeyCode.Home": "Night.KeyCode.yml",
  "Night.KeyCode.I": "Night.KeyCode.yml",
  "Night.KeyCode.Insert": "Night.KeyCode.yml",
  "Night.KeyCode.J": "Night.KeyCode.yml",
  "Night.KeyCode.K": "Night.KeyCode.yml",
  "Night.KeyCode.Kp0": "Night.KeyCode.yml",
  "Night.KeyCode.Kp1": "Night.KeyCode.yml",
  "Night.KeyCode.Kp2": "Night.KeyCode.yml",
  "Night.KeyCode.Kp3": "Night.KeyCode.yml",
  "Night.KeyCode.Kp4": "Night.KeyCode.yml",
  "Night.KeyCode.Kp5": "Night.KeyCode.yml",
  "Night.KeyCode.Kp6": "Night.KeyCode.yml",
  "Night.KeyCode.Kp7": "Night.KeyCode.yml",
  "Night.KeyCode.Kp8": "Night.KeyCode.yml",
  "Night.KeyCode.Kp9": "Night.KeyCode.yml",
  "Night.KeyCode.KpComma": "Night.KeyCode.yml",
  "Night.KeyCode.KpDivide": "Night.KeyCode.yml",
  "Night.KeyCode.KpEnter": "Night.KeyCode.yml",
  "Night.KeyCode.KpEquals": "Night.KeyCode.yml",
  "Night.KeyCode.KpMinus": "Night.KeyCode.yml",
  "Night.KeyCode.KpMultiply": "Night.KeyCode.yml",
  "Night.KeyCode.KpPeriod": "Night.KeyCode.yml",
  "Night.KeyCode.KpPlus": "Night.KeyCode.yml",
  "Night.KeyCode.L": "Night.KeyCode.yml",
  "Night.KeyCode.LAlt": "Night.KeyCode.yml",
  "Night.KeyCode.LCtrl": "Night.KeyCode.yml",
  "Night.KeyCode.LGUI": "Night.KeyCode.yml",
  "Night.KeyCode.LShift": "Night.KeyCode.yml",
  "Night.KeyCode.Left": "Night.KeyCode.yml",
  "Night.KeyCode.Leftbracket": "Night.KeyCode.yml",
  "Night.KeyCode.M": "Night.KeyCode.yml",
  "Night.KeyCode.MediaEject": "Night.KeyCode.yml",
  "Night.KeyCode.MediaFastForward": "Night.KeyCode.yml",
  "Night.KeyCode.MediaNextTrack": "Night.KeyCode.yml",
  "Night.KeyCode.MediaPause": "Night.KeyCode.yml",
  "Night.KeyCode.MediaPlay": "Night.KeyCode.yml",
  "Night.KeyCode.MediaPlayPause": "Night.KeyCode.yml",
  "Night.KeyCode.MediaPreviousTrack": "Night.KeyCode.yml",
  "Night.KeyCode.MediaRecord": "Night.KeyCode.yml",
  "Night.KeyCode.MediaRewind": "Night.KeyCode.yml",
  "Night.KeyCode.MediaSelect": "Night.KeyCode.yml",
  "Night.KeyCode.MediaStop": "Night.KeyCode.yml",
  "Night.KeyCode.Menu": "Night.KeyCode.yml",
  "Night.KeyCode.Minus": "Night.KeyCode.yml",
  "Night.KeyCode.Mode": "Night.KeyCode.yml",
  "Night.KeyCode.Mute": "Night.KeyCode.yml",
  "Night.KeyCode.N": "Night.KeyCode.yml",
  "Night.KeyCode.NonUsbackslash": "Night.KeyCode.yml",
  "Night.KeyCode.NonUshash": "Night.KeyCode.yml",
  "Night.KeyCode.NumlockClear": "Night.KeyCode.yml",
  "Night.KeyCode.O": "Night.KeyCode.yml",
  "Night.KeyCode.P": "Night.KeyCode.yml",
  "Night.KeyCode.Pagedown": "Night.KeyCode.yml",
  "Night.KeyCode.Pageup": "Night.KeyCode.yml",
  "Night.KeyCode.Paste": "Night.KeyCode.yml",
  "Night.KeyCode.Pause": "Night.KeyCode.yml",
  "Night.KeyCode.Period": "Night.KeyCode.yml",
  "Night.KeyCode.Power": "Night.KeyCode.yml",
  "Night.KeyCode.Printscreen": "Night.KeyCode.yml",
  "Night.KeyCode.Q": "Night.KeyCode.yml",
  "Night.KeyCode.R": "Night.KeyCode.yml",
  "Night.KeyCode.RAlt": "Night.KeyCode.yml",
  "Night.KeyCode.RCtrl": "Night.KeyCode.yml",
  "Night.KeyCode.RGUI": "Night.KeyCode.yml",
  "Night.KeyCode.RShift": "Night.KeyCode.yml",
  "Night.KeyCode.Return": "Night.KeyCode.yml",
  "Night.KeyCode.Right": "Night.KeyCode.yml",
  "Night.KeyCode.Rightbracket": "Night.KeyCode.yml",
  "Night.KeyCode.S": "Night.KeyCode.yml",
  "Night.KeyCode.Scrolllock": "Night.KeyCode.yml",
  "Night.KeyCode.Select": "Night.KeyCode.yml",
  "Night.KeyCode.Semicolon": "Night.KeyCode.yml",
  "Night.KeyCode.Slash": "Night.KeyCode.yml",
  "Night.KeyCode.Space": "Night.KeyCode.yml",
  "Night.KeyCode.Stop": "Night.KeyCode.yml",
  "Night.KeyCode.T": "Night.KeyCode.yml",
  "Night.KeyCode.Tab": "Night.KeyCode.yml",
  "Night.KeyCode.U": "Night.KeyCode.yml",
  "Night.KeyCode.Undo": "Night.KeyCode.yml",
  "Night.KeyCode.Unknown": "Night.KeyCode.yml",
  "Night.KeyCode.Up": "Night.KeyCode.yml",
  "Night.KeyCode.V": "Night.KeyCode.yml",
  "Night.KeyCode.VolumeDown": "Night.KeyCode.yml",
  "Night.KeyCode.VolumeUp": "Night.KeyCode.yml",
  "Night.KeyCode.W": "Night.KeyCode.yml",
  "Night.KeyCode.X": "Night.KeyCode.yml",
  "Night.KeyCode.Y": "Night.KeyCode.yml",
  "Night.KeyCode.Z": "Night.KeyCode.yml",
  "Night.KeySymbol": "Night.KeySymbol.yml",
  "Night.KeySymbol.A": "Night.KeySymbol.yml",
  "Night.KeySymbol.Alpha0": "Night.KeySymbol.yml",
  "Night.KeySymbol.Alpha1": "Night.KeySymbol.yml",
  "Night.KeySymbol.Alpha2": "Night.KeySymbol.yml",
  "Night.KeySymbol.Alpha3": "Night.KeySymbol.yml",
  "Night.KeySymbol.Alpha4": "Night.KeySymbol.yml",
  "Night.KeySymbol.Alpha5": "Night.KeySymbol.yml",
  "Night.KeySymbol.Alpha6": "Night.KeySymbol.yml",
  "Night.KeySymbol.Alpha7": "Night.KeySymbol.yml",
  "Night.KeySymbol.Alpha8": "Night.KeySymbol.yml",
  "Night.KeySymbol.Alpha9": "Night.KeySymbol.yml",
  "Night.KeySymbol.Apostrophe": "Night.KeySymbol.yml",
  "Night.KeySymbol.B": "Night.KeySymbol.yml",
  "Night.KeySymbol.Backslash": "Night.KeySymbol.yml",
  "Night.KeySymbol.Backspace": "Night.KeySymbol.yml",
  "Night.KeySymbol.C": "Night.KeySymbol.yml",
  "Night.KeySymbol.Comma": "Night.KeySymbol.yml",
  "Night.KeySymbol.D": "Night.KeySymbol.yml",
  "Night.KeySymbol.Down": "Night.KeySymbol.yml",
  "Night.KeySymbol.E": "Night.KeySymbol.yml",
  "Night.KeySymbol.Equals": "Night.KeySymbol.yml",
  "Night.KeySymbol.Escape": "Night.KeySymbol.yml",
  "Night.KeySymbol.F": "Night.KeySymbol.yml",
  "Night.KeySymbol.F1": "Night.KeySymbol.yml",
  "Night.KeySymbol.F10": "Night.KeySymbol.yml",
  "Night.KeySymbol.F11": "Night.KeySymbol.yml",
  "Night.KeySymbol.F12": "Night.KeySymbol.yml",
  "Night.KeySymbol.F2": "Night.KeySymbol.yml",
  "Night.KeySymbol.F3": "Night.KeySymbol.yml",
  "Night.KeySymbol.F4": "Night.KeySymbol.yml",
  "Night.KeySymbol.F5": "Night.KeySymbol.yml",
  "Night.KeySymbol.F6": "Night.KeySymbol.yml",
  "Night.KeySymbol.F7": "Night.KeySymbol.yml",
  "Night.KeySymbol.F8": "Night.KeySymbol.yml",
  "Night.KeySymbol.F9": "Night.KeySymbol.yml",
  "Night.KeySymbol.G": "Night.KeySymbol.yml",
  "Night.KeySymbol.Grave": "Night.KeySymbol.yml",
  "Night.KeySymbol.H": "Night.KeySymbol.yml",
  "Night.KeySymbol.I": "Night.KeySymbol.yml",
  "Night.KeySymbol.J": "Night.KeySymbol.yml",
  "Night.KeySymbol.K": "Night.KeySymbol.yml",
  "Night.KeySymbol.L": "Night.KeySymbol.yml",
  "Night.KeySymbol.LAlt": "Night.KeySymbol.yml",
  "Night.KeySymbol.LCtrl": "Night.KeySymbol.yml",
  "Night.KeySymbol.LGUI": "Night.KeySymbol.yml",
  "Night.KeySymbol.LShift": "Night.KeySymbol.yml",
  "Night.KeySymbol.Left": "Night.KeySymbol.yml",
  "Night.KeySymbol.Leftbracket": "Night.KeySymbol.yml",
  "Night.KeySymbol.M": "Night.KeySymbol.yml",
  "Night.KeySymbol.Minus": "Night.KeySymbol.yml",
  "Night.KeySymbol.N": "Night.KeySymbol.yml",
  "Night.KeySymbol.O": "Night.KeySymbol.yml",
  "Night.KeySymbol.P": "Night.KeySymbol.yml",
  "Night.KeySymbol.Period": "Night.KeySymbol.yml",
  "Night.KeySymbol.Q": "Night.KeySymbol.yml",
  "Night.KeySymbol.R": "Night.KeySymbol.yml",
  "Night.KeySymbol.RAlt": "Night.KeySymbol.yml",
  "Night.KeySymbol.RCtrl": "Night.KeySymbol.yml",
  "Night.KeySymbol.RGUI": "Night.KeySymbol.yml",
  "Night.KeySymbol.RShift": "Night.KeySymbol.yml",
  "Night.KeySymbol.Return": "Night.KeySymbol.yml",
  "Night.KeySymbol.Right": "Night.KeySymbol.yml",
  "Night.KeySymbol.Rightbracket": "Night.KeySymbol.yml",
  "Night.KeySymbol.S": "Night.KeySymbol.yml",
  "Night.KeySymbol.Semicolon": "Night.KeySymbol.yml",
  "Night.KeySymbol.Slash": "Night.KeySymbol.yml",
  "Night.KeySymbol.Space": "Night.KeySymbol.yml",
  "Night.KeySymbol.T": "Night.KeySymbol.yml",
  "Night.KeySymbol.Tab": "Night.KeySymbol.yml",
  "Night.KeySymbol.U": "Night.KeySymbol.yml",
  "Night.KeySymbol.Unknown": "Night.KeySymbol.yml",
  "Night.KeySymbol.Up": "Night.KeySymbol.yml",
  "Night.KeySymbol.V": "Night.KeySymbol.yml",
  "Night.KeySymbol.W": "Night.KeySymbol.yml",
  "Night.KeySymbol.X": "Night.KeySymbol.yml",
  "Night.KeySymbol.Y": "Night.KeySymbol.yml",
  "Night.KeySymbol.Z": "Night.KeySymbol.yml",
  "Night.Keyboard": "Night.Keyboard.yml",
  "Night.Keyboard.IsDown(Night.KeyCode)": "Night.Keyboard.yml",
  "Night.ModulesConfig": "Night.ModulesConfig.yml",
  "Night.ModulesConfig.Audio": "Night.ModulesConfig.yml",
  "Night.ModulesConfig.Data": "Night.ModulesConfig.yml",
  "Night.ModulesConfig.Event": "Night.ModulesConfig.yml",
  "Night.ModulesConfig.Font": "Night.ModulesConfig.yml",
  "Night.ModulesConfig.Graphics": "Night.ModulesConfig.yml",
  "Night.ModulesConfig.Image": "Night.ModulesConfig.yml",
  "Night.ModulesConfig.Joystick": "Night.ModulesConfig.yml",
  "Night.ModulesConfig.Keyboard": "Night.ModulesConfig.yml",
  "Night.ModulesConfig.Math": "Night.ModulesConfig.yml",
  "Night.ModulesConfig.Mouse": "Night.ModulesConfig.yml",
  "Night.ModulesConfig.Physics": "Night.ModulesConfig.yml",
  "Night.ModulesConfig.Sound": "Night.ModulesConfig.yml",
  "Night.ModulesConfig.System": "Night.ModulesConfig.yml",
  "Night.ModulesConfig.Thread": "Night.ModulesConfig.yml",
  "Night.ModulesConfig.Timer": "Night.ModulesConfig.yml",
  "Night.ModulesConfig.Touch": "Night.ModulesConfig.yml",
  "Night.ModulesConfig.Video": "Night.ModulesConfig.yml",
  "Night.ModulesConfig.Window": "Night.ModulesConfig.yml",
  "Night.Mouse": "Night.Mouse.yml",
  "Night.Mouse.GetPosition": "Night.Mouse.yml",
  "Night.Mouse.IsDown(Night.MouseButton)": "Night.Mouse.yml",
  "Night.Mouse.SetGrabbed(System.Boolean)": "Night.Mouse.yml",
  "Night.Mouse.SetRelativeMode(System.Boolean)": "Night.Mouse.yml",
  "Night.Mouse.SetVisible(System.Boolean)": "Night.Mouse.yml",
  "Night.MouseButton": "Night.MouseButton.yml",
  "Night.MouseButton.Left": "Night.MouseButton.yml",
  "Night.MouseButton.Middle": "Night.MouseButton.yml",
  "Night.MouseButton.Right": "Night.MouseButton.yml",
  "Night.MouseButton.Unknown": "Night.MouseButton.yml",
  "Night.MouseButton.X1": "Night.MouseButton.yml",
  "Night.MouseButton.X2": "Night.MouseButton.yml",
  "Night.NightSDL": "Night.NightSDL.yml",
  "Night.NightSDL.GetError": "Night.NightSDL.yml",
  "Night.NightSDL.GetVersion": "Night.NightSDL.yml",
  "Night.PointF": "Night.PointF.yml",
  "Night.PointF.#ctor(System.Single,System.Single)": "Night.PointF.yml",
  "Night.PointF.X": "Night.PointF.yml",
  "Night.PointF.Y": "Night.PointF.yml",
  "Night.Rectangle": "Night.Rectangle.yml",
  "Night.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)": "Night.Rectangle.yml",
  "Night.Rectangle.Height": "Night.Rectangle.yml",
  "Night.Rectangle.Width": "Night.Rectangle.yml",
  "Night.Rectangle.X": "Night.Rectangle.yml",
  "Night.Rectangle.Y": "Night.Rectangle.yml",
  "Night.SampleGame": "Night.SampleGame.yml",
  "Night.SampleGame.Game": "Night.SampleGame.Game.yml",
  "Night.SampleGame.Game.#ctor": "Night.SampleGame.Game.yml",
  "Night.SampleGame.Game.Draw": "Night.SampleGame.Game.yml",
  "Night.SampleGame.Game.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)": "Night.SampleGame.Game.yml",
  "Night.SampleGame.Game.Load": "Night.SampleGame.Game.yml",
  "Night.SampleGame.Game.Update(System.Double)": "Night.SampleGame.Game.yml",
  "Night.SampleGame.Platformer": "Night.SampleGame.Platformer.yml",
  "Night.SampleGame.Platformer.#ctor": "Night.SampleGame.Platformer.yml",
  "Night.SampleGame.Platformer.Draw": "Night.SampleGame.Platformer.yml",
  "Night.SampleGame.Platformer.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)": "Night.SampleGame.Platformer.yml",
  "Night.SampleGame.Platformer.Load": "Night.SampleGame.Platformer.yml",
  "Night.SampleGame.Platformer.Update(System.Double)": "Night.SampleGame.Platformer.yml",
  "Night.SampleGame.PlatformerGame": "Night.SampleGame.PlatformerGame.yml",
  "Night.SampleGame.PlatformerGame.PlatformerGameMain": "Night.SampleGame.PlatformerGame.yml",
  "Night.SampleGame.Player": "Night.SampleGame.Player.yml",
  "Night.SampleGame.Player.#ctor": "Night.SampleGame.Player.yml",
  "Night.SampleGame.Player.Draw": "Night.SampleGame.Player.yml",
  "Night.SampleGame.Player.Height": "Night.SampleGame.Player.yml",
  "Night.SampleGame.Player.Load": "Night.SampleGame.Player.yml",
  "Night.SampleGame.Player.Update(System.Double,System.Collections.Generic.List{Night.Rectangle})": "Night.SampleGame.Player.yml",
  "Night.SampleGame.Player.Width": "Night.SampleGame.Player.yml",
  "Night.SampleGame.Player.X": "Night.SampleGame.Player.yml",
  "Night.SampleGame.Player.Y": "Night.SampleGame.Player.yml",
  "Night.SampleGame.Program": "Night.SampleGame.Program.yml",
  "Night.SampleGame.Program.Main": "Night.SampleGame.Program.yml",
  "Night.Sprite": "Night.Sprite.yml",
  "Night.Sprite.#ctor(System.IntPtr,System.Int32,System.Int32)": "Night.Sprite.yml",
  "Night.Sprite.Height": "Night.Sprite.yml",
  "Night.Sprite.Texture": "Night.Sprite.yml",
  "Night.Sprite.Width": "Night.Sprite.yml",
  "Night.System": "Night.System.yml",
  "Night.System.SetClipboardText(System.String)": "Night.System.yml",
  "Night.Timer": "Night.Timer.yml",
  "Night.Timer.GetAverageDelta": "Night.Timer.yml",
  "Night.Timer.GetDelta": "Night.Timer.yml",
  "Night.Timer.GetFPS": "Night.Timer.yml",
  "Night.Timer.GetTime": "Night.Timer.yml",
  "Night.Timer.Sleep(System.Double)": "Night.Timer.yml",
  "Night.Timer.Step": "Night.Timer.yml",
  "Night.VersionInfo": "Night.VersionInfo.yml",
  "Night.VersionInfo.CodeName": "Night.VersionInfo.yml",
  "Night.VersionInfo.GetVersion": "Night.VersionInfo.yml",
  "Night.VersionInfo.Version": "Night.VersionInfo.yml",
  "Night.Window": "Night.Window.yml",
  "Night.Window.Close": "Night.Window.yml",
  "Night.Window.FromPixels(System.Single)": "Night.Window.yml",
  "Night.Window.GetDPIScale": "Night.Window.yml",
  "Night.Window.GetDesktopDimensions(System.Int32)": "Night.Window.yml",
  "Night.Window.GetDisplayCount": "Night.Window.yml",
  "Night.Window.GetFullscreen": "Night.Window.yml",
  "Night.Window.GetFullscreenModes(System.Int32)": "Night.Window.yml",
  "Night.Window.GetMode": "Night.Window.yml",
  "Night.Window.IsOpen": "Night.Window.yml",
  "Night.Window.SetFullscreen(System.Boolean,Night.FullscreenType)": "Night.Window.yml",
  "Night.Window.SetMode(System.Int32,System.Int32,SDL3.SDL.WindowFlags)": "Night.Window.yml",
  "Night.Window.SetTitle(System.String)": "Night.Window.yml",
  "Night.Window.ToPixels(System.Single)": "Night.Window.yml",
  "Night.WindowConfig": "Night.WindowConfig.yml",
  "Night.WindowConfig.Borderless": "Night.WindowConfig.yml",
  "Night.WindowConfig.Depth": "Night.WindowConfig.yml",
  "Night.WindowConfig.Display": "Night.WindowConfig.yml",
  "Night.WindowConfig.Fullscreen": "Night.WindowConfig.yml",
  "Night.WindowConfig.FullscreenType": "Night.WindowConfig.yml",
  "Night.WindowConfig.Height": "Night.WindowConfig.yml",
  "Night.WindowConfig.HighDPI": "Night.WindowConfig.yml",
  "Night.WindowConfig.Icon": "Night.WindowConfig.yml",
  "Night.WindowConfig.MSAA": "Night.WindowConfig.yml",
  "Night.WindowConfig.MinHeight": "Night.WindowConfig.yml",
  "Night.WindowConfig.MinWidth": "Night.WindowConfig.yml",
  "Night.WindowConfig.Resizable": "Night.WindowConfig.yml",
  "Night.WindowConfig.Stencil": "Night.WindowConfig.yml",
  "Night.WindowConfig.Title": "Night.WindowConfig.yml",
  "Night.WindowConfig.UseDPIScale": "Night.WindowConfig.yml",
  "Night.WindowConfig.VSync": "Night.WindowConfig.yml",
  "Night.WindowConfig.Width": "Night.WindowConfig.yml",
  "Night.WindowConfig.X": "Night.WindowConfig.yml",
  "Night.WindowConfig.Y": "Night.WindowConfig.yml",
  "Night.WindowMode": "Night.WindowMode.yml",
  "Night.WindowMode.Borderless": "Night.WindowMode.yml",
  "Night.WindowMode.Centered": "Night.WindowMode.yml",
  "Night.WindowMode.Display": "Night.WindowMode.yml",
  "Night.WindowMode.Fullscreen": "Night.WindowMode.yml",
  "Night.WindowMode.FullscreenType": "Night.WindowMode.yml",
  "Night.WindowMode.Height": "Night.WindowMode.yml",
  "Night.WindowMode.HighDpi": "Night.WindowMode.yml",
  "Night.WindowMode.MinHeight": "Night.WindowMode.yml",
  "Night.WindowMode.MinWidth": "Night.WindowMode.yml",
  "Night.WindowMode.Msaa": "Night.WindowMode.yml",
  "Night.WindowMode.RefreshRate": "Night.WindowMode.yml",
  "Night.WindowMode.Resizable": "Night.WindowMode.yml",
  "Night.WindowMode.Vsync": "Night.WindowMode.yml",
  "Night.WindowMode.Width": "Night.WindowMode.yml",
  "Night.WindowMode.X": "Night.WindowMode.yml",
  "Night.WindowMode.Y": "Night.WindowMode.yml"
}


================================================
File: site/docs/getting-started.md
================================================
# Getting Started


================================================
File: site/docs/index.md
================================================
# Articles

This section contains conceptual articles about Night Engine.



================================================
File: site/docs/introduction.md
================================================
# Introduction


================================================
File: site/docs/toc.yml
================================================
- name: Introduction
  href: index.md
- name: Getting Started
  href: getting-started.md



================================================
File: src/.DS_Store
================================================
[Non-text file]


================================================
File: src/Night/Error.cs
================================================
// <copyright file="Error.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;
using System.IO;

namespace Night
{
  /// <summary>
  /// Defines the delegate for handling unhandled exceptions from game code.
  /// The error handler function will be called when an unhandled exception occurs
  /// within the game's Load, Update, Draw, or input callback methods.
  /// </summary>
  /// <param name="e">The exception that occurred.</param>
  public delegate void ErrorHandlerDelegate(Exception e);

  /// <summary>
  /// Manages the user-defined error handler.
  /// </summary>
  public static class Error
  {
    /// <summary>
    /// Gets the currently set custom error handler. Returns null if no custom handler is set.
    /// This is used internally by the framework to invoke the handler.
    /// </summary>
    internal static ErrorHandlerDelegate? CustomErrorHandler { get; private set; }

    /// <summary>
    /// Sets a custom function to be called when an unhandled error occurs in game code.
    /// </summary>
    /// <param name="handler">The delegate to handle errors.</param>
    public static void SetHandler(ErrorHandlerDelegate handler)
    {
      CustomErrorHandler = handler;
    }

    /// <summary>
    /// Gets the currently set custom error handler.
    /// This is used internally by the framework.
    /// </summary>
    /// <returns>The custom error handler delegate, or null if none is set.</returns>
    internal static ErrorHandlerDelegate? GetHandler()
    {
      return CustomErrorHandler;
    }
  }
}



================================================
File: src/Night/Framework.cs
================================================
// <copyright file="Framework.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices;

using Night;

using SDL3;

namespace Night
{
  /// <summary>
  /// Manages the main game loop and coordination of game states.
  /// Provides the main entry point to run a game.
  /// </summary>
  public static class Framework
  {
    private const int MaxDeltaHistorySamples = 60; // Store up to 1 second of deltas at 60fps

    private static bool isSdlInitialized = false;
    private static SDL.InitFlags initializedSubsystems = 0;

    private static int frameCount = 0;
    private static double fpsTimeAccumulator = 0.0;
    private static List<double> deltaHistory = new List<double>();

    private static bool inErrorState = false;

    /// <summary>
    /// Gets a value indicating whether a flag indicating whether the core SDL systems, particularly for input,
    /// have been successfully initialized by this Framework's Run method.
    /// </summary>
    public static bool IsInputInitialized { get; private set; } = false;

    /// <summary>
    /// Runs the game instance.
    /// The game loop will internally call Load, Update, and Draw methods
    /// on the provided game logic.
    /// This method will initialize and shut down required SDL subsystems.
    /// </summary>
    /// <param name="game">The game interface to run. Must implement <see cref="Night.IGame"/>.</param>
    public static void Run(IGame game)
    {
      if (game == null)
      {
        Console.WriteLine("Night.Framework.Run: gameLogic cannot be null.");
        return;
      }

      ConfigurationManager.LoadConfig();
      var windowConfig = ConfigurationManager.CurrentConfig.Window;

      string nightVersionString = VersionInfo.GetVersion();
      string sdlVersionString = NightSDL.GetVersion();
      Console.WriteLine($"Night Engine: v{nightVersionString}");
      Console.WriteLine($"SDL: v{sdlVersionString}");
      Console.WriteLine(GetFormattedPlatformString());
      Console.WriteLine($"Framework: {RuntimeInformation.FrameworkDescription}");

      try
      {
        initializedSubsystems = SDL.InitFlags.Video | SDL.InitFlags.Events;
        if (!SDL.Init(initializedSubsystems))
        {
          Console.WriteLine($"Night.Framework.Run: SDL_Init failed: {SDL.GetError()}");
          return;
        }

        isSdlInitialized = true;
        IsInputInitialized = (initializedSubsystems & SDL.InitFlags.Events) == SDL.InitFlags.Events;

        // Setup initial window based on configuration BEFORE game.Load()
        SDL.WindowFlags sdlFlags = (SDL.WindowFlags)0;
        if (windowConfig.Resizable)
        {
          sdlFlags |= SDL.WindowFlags.Resizable;
        }

        if (windowConfig.Borderless)
        {
          sdlFlags |= SDL.WindowFlags.Borderless;
        }

        if (windowConfig.HighDPI)
        {
          sdlFlags |= SDL.WindowFlags.HighPixelDensity;
        }

        bool modeSet = Window.SetMode(windowConfig.Width, windowConfig.Height, sdlFlags);
        if (!modeSet)
        {
          Console.WriteLine($"Night.Framework.Run: Failed to set initial window mode from configuration: {SDL.GetError()}");
          CleanUpSDL();
          return;
        }

        Window.SetTitle(windowConfig.Title ?? "Night Game");

        if (windowConfig.Fullscreen)
        {
          FullscreenType fsType = windowConfig.FullscreenType.ToLowerInvariant() == "exclusive"
                                    ? FullscreenType.Exclusive
                                    : FullscreenType.Desktop;
          if (!Window.SetFullscreen(true, fsType))
          {
            Console.WriteLine($"Night.Framework.Run: Failed to set initial fullscreen mode from configuration: {SDL.GetError()}");
          }
        }

        if (Window.RendererPtr != nint.Zero)
        {
          if (!SDL.SetRenderVSync(Window.RendererPtr, windowConfig.VSync ? 1 : 0))
          {
            Console.WriteLine($"Night.Framework.Run: Failed to set initial VSync mode from configuration: {SDL.GetError()}");
          }
        }

        if (windowConfig.X.HasValue && windowConfig.Y.HasValue && Window.Handle != nint.Zero)
        {
          _ = SDL.SetWindowPosition(Window.Handle, windowConfig.X.Value, windowConfig.Y.Value);
        }

        // Set window icon if specified in config
        if (!string.IsNullOrEmpty(windowConfig.IconPath) && Window.Handle != nint.Zero)
        {
          // Assuming IconPath is relative to the game's executable directory or a common assets folder.
          // AppContext.BaseDirectory should give the directory where the .exe is.
          // If your assets are in a subdirectory like "assets", you might need:
          // string iconFullPath = System.IO.Path.Combine(AppContext.BaseDirectory, "assets", windowConfig.IconPath);
          // For now, let's assume IconPath can be resolved directly or is absolute.
          // A more robust solution would involve the Filesystem module to resolve paths.
          string iconFullPath = windowConfig.IconPath;
          if (!Path.IsPathRooted(iconFullPath))
          {
            iconFullPath = Path.Combine(AppContext.BaseDirectory, iconFullPath);
          }

          if (!Window.SetIcon(iconFullPath))
          {
            Console.WriteLine($"Night.Framework.Run: Failed to set window icon from configuration: '{iconFullPath}'. Check path and image format.");
          }
        }

        // End of initial window setup
        try
        {
          // game.Load() can now use Graphics.NewImage(), and can also call Window.SetMode again to override.
          game.Load();
        }
        catch (Exception e)
        {
          HandleGameException(e, game);
          if (inErrorState)
          {
            CleanUpSDLAndWindow();
            return;
          }
        }

        // After game.Load(), check if window is still open.
        // If game.Load() called Window.Close() or failed to maintain a window, we should not continue.
        if (!Window.IsOpen())
        {
          Console.WriteLine("Night.Framework.Run: Window is not open after game.Load(). Exiting.");

          // Ensure cleanup if window was closed by game.Load()
          CleanUpSDLAndWindow();
          return;
        }

        // If game.Load() *did* change window settings (e.g. VSync via a new SetMode call),
        // we don't re-apply config VSync here unless we have a way to know it wasn't touched by game.
        // The current Window.SetMode creates a new renderer, so VSync would be reset anyway if game called SetMode.
        // So, if game called SetMode, it's responsible for its own VSync if it differs from config default for new renderer.
        // If game didn't call SetMode, our initial VSync setting stands.
        Night.Timer.Initialize();

        frameCount = 0;
        fpsTimeAccumulator = 0.0;
        deltaHistory.Clear();

        // Main game loop
        while (Window.IsOpen() && !inErrorState)
        {
          // Calculate DeltaTime by calling Night.Timer.Step()
          double deltaTime = Night.Timer.Step();

          // FPS Calculation
          frameCount++;
          fpsTimeAccumulator += deltaTime;
          if (fpsTimeAccumulator >= 1.0)
          {
            Night.Timer.CurrentFPS = frameCount;
            frameCount = 0;

            // Subtract 1 second, keep remainder for accuracy
            fpsTimeAccumulator -= 1.0;
          }

          // Average Delta Calculation
          deltaHistory.Add(deltaTime);
          if (deltaHistory.Count > MaxDeltaHistorySamples)
          {
            // Keep the list size bounded
            deltaHistory.RemoveAt(0);
          }

          if (deltaHistory.Count > 0)
          {
            Night.Timer.CurrentAverageDelta = deltaHistory.Average();
          }

          // Event Processing
          while (SDL.PollEvent(out SDL.Event e) && !inErrorState)
          {
            var eventType = (SDL.EventType)e.Type;

            if (eventType == SDL.EventType.Quit)
            {
              Window.Close();
            }
            else if (eventType == SDL.EventType.KeyDown)
            {
              try
              {
                // TODO: Rename these to match love2d
                game.KeyPressed(
                    (KeySymbol)e.Key.Key,
                    (KeyCode)e.Key.Scancode,
                    e.Key.Repeat);
              }
              catch (Exception exUser)
              {
                HandleGameException(exUser, game);
              }
            }
            else if (eventType == SDL.EventType.KeyUp)
            {
              try
              {
                game.KeyReleased(
                    (KeySymbol)e.Key.Key,
                    (KeyCode)e.Key.Scancode);
              }
              catch (Exception exUser)
              {
                HandleGameException(exUser, game);
              }
            }
            else if (eventType == SDL.EventType.MouseButtonDown)
            {
              try
              {
                game.MousePressed(
                    (int)e.Button.X,
                    (int)e.Button.Y,
                    (MouseButton)e.Button.Button,
                    /* istouch */ e.Button.Which == SDL.TouchMouseID,
                    e.Button.Clicks);
              }
              catch (Exception exUser)
              {
                HandleGameException(exUser, game);
              }
            }
            else if (eventType == SDL.EventType.MouseButtonUp)
            {
              try
              {
                game.MouseReleased(
                    (int)e.Button.X,
                    (int)e.Button.Y,
                    (MouseButton)e.Button.Button,
                    /* istouch */ e.Button.Which == SDL.TouchMouseID,
                    e.Button.Clicks);
              }
              catch (Exception exUser)
              {
                HandleGameException(exUser, game);
              }
            }

            // TODO: Add other event handling (mouse, etc.) as per future tasks.
          }

          // Check if error occurred during event processing
          if (inErrorState)
          {
            // Error handler (Default or custom) should have run.
            // Default handler enters its own loop or prepares for exit.
            // If it was a custom handler, it might have cleared _inErrorState or decided to continue.
            // If _inErrorState is still true, we break the main loop.
            break;
          }

          // Update, do not update if an error has occurred and is being handled
          if (!inErrorState)
          {
            try
            {
              game.Update((float)deltaTime);
            }
            catch (Exception exUser)
            {
              HandleGameException(exUser, game);
              if (inErrorState)
              {
                break; // Exit main loop if error sets state
              }
            }
          }

          // Draw, do not draw if an error has occurred and is being handled
          if (!inErrorState)
          {
            try
            {
              // Graphics.BeginFrame() / Clear etc. should be called by game.Draw() or a higher level abstraction.
              // For now, FrameworkLoop does not manage the render target clearing directly.
              // It's assumed game.Draw() handles everything from clear to present.
              game.Draw();

              // Present the drawn frame to the screen
              Night.Graphics.Present();
            }
            catch (Exception exUser)
            {
              HandleGameException(exUser, game);

              // If Draw fails, we typically still want to try and finish the frame/loop iteration
              // unless _inErrorState is set by the handler to signal a desire to stop.
              if (inErrorState)
              {
                break;
              }
            }
          }
        }
      }
      catch (Exception ex)
      {
        // This is for errors within Framework.Run itself, not game code.
        Console.WriteLine($"Night.Framework.Run: An UNEXPECTED FRAMEWORK error occurred: {ex.ToString()}");

        // Attempt to call default error handler for framework errors too, but without game instance.
        HandleGameException(ex, null);
      }
      finally
      {
        // TODO: Call gameLogic.Quit() if it's added to IGame.
        CleanUpSDLAndWindow();
      }
    }

    private static void HandleGameException(Exception e, IGame? gameInstance)
    {
      inErrorState = true; // Signal that we are now in an error state.

      var customHandler = Night.Error.GetHandler();
      if (customHandler != null)
      {
        try
        {
          customHandler(e);

          // If custom handler returns, we assume it handled the error
          // and the game might want to continue or has already quit.
          // For now, we'll still close the window to be safe, unless custom handler re-opens it.
          // This behavior might need refinement.
          if (Window.IsOpen())
          {
            Window.Close();
          }
        }
        catch (Exception exHandler)
        {
          // Error in the custom error handler itself!
          Console.WriteLine($"Night.Framework.Run: CRITICAL: Exception in custom error handler: {exHandler.ToString()}");

          // Fallback to a very minimal default behavior
          Console.WriteLine($"Night.Framework.Run: Original game error: {e.ToString()}");
          if (Window.IsOpen())
          {
            Window.Close(); // Ensure shutdown
          }
        }
      }
      else
      {
        DefaultErrorHandler(e, gameInstance);
      }
    }

    private static void DefaultErrorHandler(Exception e, IGame? gameInstance)
    {
      Console.Error.WriteLine("--- Night Engine: Default Error Handler ---");
      Console.Error.WriteLine($"An error occurred in the game: {e.GetType().Name}");
      Console.Error.WriteLine($"Message: {e.Message}");
      Console.Error.WriteLine("Stack Trace:");
      Console.Error.WriteLine(e.StackTrace);
      Console.Error.WriteLine("-------------------------------------------");

      bool canDrawError = false;
      try
      {
        // Assuming Graphics.RendererPtr is a good check for active graphics
        if (!Window.IsOpen() || (Window.RendererPtr == nint.Zero))
        {
          Console.WriteLine("Night.Framework.Run (DefaultErrorHandler): Window or Graphics not initialized. Attempting to set mode...");

          // Attempt to set a basic window mode if not already open.
          // Use a default size. WindowFlags can be minimal or Resizable.
          if (Window.SetMode(800, 600, SDL.WindowFlags.Resizable))
          {
            Console.WriteLine("Night.Framework.Run (DefaultErrorHandler): Window mode set to 800x600.");
            canDrawError = Window.RendererPtr != nint.Zero;
          }
          else
          {
            Console.WriteLine($"Night.Framework.Run (DefaultErrorHandler): Failed to set window mode. SDL Error: {SDL.GetError()}");
          }
        }
        else
        {
          canDrawError = true;
        }

        // Reset input state
        if (IsInputInitialized)
        {
          Mouse.SetVisible(true);
          Mouse.SetGrabbed(false);
          Mouse.SetRelativeMode(false);

          // Mouse.SetCursor() - Skipped as per plan if complex; SDL default cursor should apply.
        }
      }
      catch (Exception resetEx)
      {
        Console.Error.WriteLine($"Night.Framework.Run (DefaultErrorHandler): Exception during state reset: {resetEx.ToString()}");
        canDrawError = false; // If reset fails, drawing might be unsafe.
      }

      if (canDrawError)
      {
        try
        {
          // Simple error display loop
          string fullErrorText = $"Error: {e.Message}\n\n{e.StackTrace}";

          // Shorten for display if too long, or make it scrollable if we had font rendering
          // For now, just display what fits or make user copy.
          Window.SetTitle($"Error - {gameInstance?.GetType().Name ?? "Night Game"}");

          bool runningErrorLoop = true;
          while (runningErrorLoop && Window.IsOpen())
          {
            while (SDL.PollEvent(out SDL.Event ev))
            {
              if (ev.Type == (uint)SDL.EventType.Quit)
              {
                runningErrorLoop = false;
                Window.Close();
                break;
              }

              if (ev.Type == (uint)SDL.EventType.KeyDown)
              {
                if (ev.Key.Key == SDL.Keycode.Escape)
                {
                  runningErrorLoop = false;
                  Window.Close();
                  break;
                }

                // Check for Ctrl+C - SDL.Keymod.Ctrl is a flag
                if (ev.Key.Key == SDL.Keycode.C && ((SDL.GetModState() & SDL.Keymod.Ctrl) != 0))
                {
                  try
                  {
                    if (Night.System.SetClipboardText(fullErrorText))
                    {
                      Console.WriteLine("(Error copied to clipboard)");
                    }
                    else
                    {
                      Console.WriteLine($"(Failed to copy error to clipboard: {SDL.GetError()})");
                    }
                  }
                  catch (Exception clipEx)
                  {
                    Console.WriteLine($"(Exception trying to copy to clipboard: {clipEx.Message})");
                  }
                }
              }
            }

            if (!runningErrorLoop)
            {
              break;
            }

            Graphics.Clear(new Color(89, 157, 220, 255)); // Blue background

            // Graphics.Print functionality is NOT available.
            // We will just show a blue screen and title. User must check console.
            // If Night.Font was available:
            // Graphics.SetColor(Night.Color.Black);
            // Graphics.Print($"Error: {e.Message}", 10, 10, Window.GetWidth() - 20);
            // Graphics.Print($"Press ESC to quit. Ctrl+C to copy.", 10, Window.GetHeight() - 30);
            Graphics.Present();
            Timer.Sleep(0.01f); // Sleep for 10ms
          }
        }
        catch (Exception drawEx)
        {
          Console.Error.WriteLine($"Night.Framework.Run (DefaultErrorHandler): Exception during error display loop: {drawEx.ToString()}");
        }
      }
      else
      {
        Console.WriteLine("Night.Framework.Run (DefaultErrorHandler): Cannot display visual error. Check console. Press Ctrl+C in console to quit if frozen.");

        // Loop to keep process alive for a bit for console reading, or just exit.
        // For now, just let it fall through to finally block.
      }

      // Ensure the main loop knows to terminate
      if (Window.IsOpen())
      {
        Window.Close();
      }
    }

    private static void CleanUpSDLAndWindow()
    {
      // Shutdown window and related resources (renderer, etc.)
      // This should happen before SDL.QuitSubSystem for Video.
      // This case should ideally not be hit if _inErrorState or loop conditions were managed correctly
      if (Window.IsOpen())
      {
        Console.WriteLine("Night.Framework.Run (CleanUpSDLAndWindow): Window was still open, attempting to close.");
        Window.Close(); // This will set _isWindowOpen to false
      }

      // Window.Shutdown() handles destroying window, renderer, and SDL.QuitSubSystem(SDL.InitFlags.Video)
      // It's important that Shutdown is called AFTER the error handler's visual loop might have used the window/renderer.
      Window.Shutdown();

      CleanUpSDL();
    }

    private static void CleanUpSDL()
    {
      if (isSdlInitialized)
      {
        // SDL.QuitSubSystem was already called for Video by Window.Shutdown().
        // We only need to quit other subsystems explicitly initialized by Run if they weren't covered.
        // However, SDL.Quit() handles all initialized subsystems.
        SDL.Quit();
        isSdlInitialized = false;
        IsInputInitialized = false;
        initializedSubsystems = 0;
      }
    }

    private static string GetFormattedPlatformString()
    {
      if (RuntimeInformation.IsOSPlatform(OSPlatform.OSX))
      {
        try
        {
          string macOSVersion = string.Empty;
          string darwinVersion = string.Empty;

          // Get macOS version
          ProcessStartInfo swVersPsi = new ProcessStartInfo
          {
            FileName = "sw_vers",
            Arguments = "-productVersion",
            RedirectStandardOutput = true,
            UseShellExecute = false,
            CreateNoWindow = true,
          };
          using (Process swVersProcess = Process.Start(swVersPsi)!)
          {
            macOSVersion = swVersProcess.StandardOutput.ReadToEnd().Trim();
            swVersProcess.WaitForExit();
          }

          // Get Darwin kernel version
          ProcessStartInfo unamePsi = new ProcessStartInfo
          {
            FileName = "uname",
            Arguments = "-r",
            RedirectStandardOutput = true,
            UseShellExecute = false,
            CreateNoWindow = true,
          };
          using (Process unameProcess = Process.Start(unamePsi)!)
          {
            darwinVersion = unameProcess.StandardOutput.ReadToEnd().Trim();
            unameProcess.WaitForExit();
          }

          if (!string.IsNullOrEmpty(macOSVersion) && !string.IsNullOrEmpty(darwinVersion))
          {
            return $"Platform: macOS {macOSVersion} (Darwin {darwinVersion})";
          }
        }
        catch (Exception ex)
        {
          // Log the exception or handle it as needed, then fall back.
          Console.WriteLine($"Night.Framework.Run: Could not retrieve detailed macOS version info: {ex.Message}");
        }
      }

      // Fallback for non-macOS platforms or if macOS version retrieval fails
      return $"Platform: {RuntimeInformation.OSDescription} ({RuntimeInformation.OSArchitecture})";
    }
  }
}



================================================
File: src/Night/IGame.cs
================================================
// <copyright file="IGame.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;

namespace Night
{
  /// <summary>
  /// Interface for a game that can be run by the Night Engine.
  /// Game developers will implement this interface in their main game class.
  /// </summary>
  public interface IGame
  {
    /// <summary>
    /// Called exactly once when the game starts for loading resources.
    /// </summary>
    void Load();

    /// <summary>
    /// Callback function used to update the state of the game every frame.
    /// </summary>
    /// <param name="deltaTime">The time elapsed since the last frame, in seconds.</param>
    void Update(double deltaTime);

    /// <summary>
    /// Callback function used to draw on the screen every frame.
    /// </summary>
    void Draw();

    /// <summary>
    /// Callback function triggered when a key is pressed.
    /// </summary>
    /// <param name="key">The logical key symbol that was pressed.</param>
    /// <param name="scancode">The physical key (scancode) that was pressed.</param>
    /// <param name="isRepeat">True if this is a key repeat event, false otherwise.</param>
    void KeyPressed(KeySymbol key, KeyCode scancode, bool isRepeat);

    /// <summary>
    /// Callback function triggered when a key is released.
    /// </summary>
    /// <param name="key">The logical key symbol that was released.</param>
    /// <param name="scancode">The physical key (scancode) that was released.</param>
    void KeyReleased(KeySymbol key, KeyCode scancode)
    { /* Optional: Default empty implementation */
    }

    /// <summary>
    /// Callback function triggered when a mouse button is pressed.
    /// </summary>
    /// <param name="x">The x-coordinate of the mouse cursor relative to the window.</param>
    /// <param name="y">The y-coordinate of the mouse cursor relative to the window.</param>
    /// <param name="button">The mouse button that was pressed.</param>
    /// <param name="istouch">True if the event was generated by a touch input device, false otherwise.</param>
    /// <param name="presses">The number of clicks (1 for single-click, 2 for double-click, etc.).</param>
    void MousePressed(int x, int y, MouseButton button, bool istouch, int presses)
    { /* Optional: Default empty implementation */
    }

    /// <summary>
    /// Callback function triggered when a mouse button is released.
    /// </summary>
    /// <param name="x">The x-coordinate of the mouse cursor relative to the window.</param>
    /// <param name="y">The y-coordinate of the mouse cursor relative to the window.</param>
    /// <param name="button">The mouse button that was released.</param>
    /// <param name="istouch">True if the event was generated by a touch input device, false otherwise.</param>
    /// <param name="presses">The number of clicks (typically 1 for release, but may vary).</param>
    void MouseReleased(int x, int y, MouseButton button, bool istouch, int presses)
    { /* Optional: Default empty implementation */
    }
  }
}



================================================
File: src/Night/Night.csproj
================================================
﻿<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <AssemblyName>Night</AssemblyName>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <LangVersion>13.0</LangVersion>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <DocumentationFile>bin/$(Configuration)/$(TargetFramework)/Night.xml</DocumentationFile>
    <WarningsAsErrors>$(WarningsAsErrors);SA1633</WarningsAsErrors>
  </PropertyGroup>

  <ItemGroup>
    <AdditionalFiles Include="stylecop.json" />
    <PackageReference Include="SDL3-CS" Version="*" />
    <PackageReference Include="StyleCop.Analyzers.Unstable" Version="1.2.0.556">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

</Project>



================================================
File: src/Night/VersionInfo.cs
================================================
// <copyright file="VersionInfo.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

namespace Night
{
  /// <summary>
  /// Provides information about the Night library, such as its version.
  /// </summary>
  public static class VersionInfo
  {
    /// <summary>
    /// Gets the full semantic version string (e.g., "1.0.0", "1.2.3-beta.1").
    /// This value is updated by the GitHub release Action.
    /// </summary>
    public const string Version = "0.0.0-dev";

    /// <summary>
    /// Gets the developer-assigned codename for the current version.
    /// This value is manually updated by the developer.
    /// </summary>
    public const string CodeName = "Initial Codename"; // Placeholder

    /// <summary>
    /// Gets the Semantic Version of the Night library.
    /// This version is set during the release process.
    /// </summary>
    /// <returns>The library's semantic version string.</returns>
    public static string GetVersion()
    {
      return Version;
    }
  }
}



================================================
File: src/Night/stylecop.json
================================================
{
  "$schema": "https://raw.githubusercontent.com/DotNetAnalyzers/StyleCopAnalyzers/master/StyleCop.Analyzers/StyleCop.Analyzers/Settings/stylecop.schema.json",
  "settings": {
    "documentationRules": {
      "companyName": "Night Circle",
      "copyrightText": "zlib license\n\nCopyright (c) {copyrightYears} Danny Solivan, {companyName}\n\nThis software is provided 'as-is', without any express or implied\nwarranty. In no event will the authors be held liable for any damages\narising from the use of this software.\n\nPermission is granted to anyone to use this software for any purpose,\nincluding commercial applications, and to alter it and redistribute it\nfreely, subject to the following restrictions:\n\n1. The origin of this software must not be misrepresented; you must not\n   claim that you wrote the original software. If you use this software\n   in a product, an acknowledgment in the product documentation would be\n   appreciated but is not required.\n2. Altered source versions must be plainly marked as such, and must not be\n   misrepresented as being the original software.\n3. This notice may not be removed or altered from any source distribution.",
      "variables": {
        "copyrightYears": "2025"
      }
    }
  }
}



================================================
File: src/Night/Configuration/AudioConfig.cs
================================================
// <copyright file="AudioConfig.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System.Text.Json.Serialization;

namespace Night
{
  /// <summary>
  /// Configuration settings for the audio module.
  /// </summary>
  public class AudioConfig
  {
    /// <summary>
    /// Gets or sets a value indicating whether to mix game audio with system audio (true) or mute system audio (false).
    /// Relevant primarily for mobile platforms.
    /// </summary>
    [JsonPropertyName("mixwithsystem")]
    public bool MixWithSystem { get; set; } = true;
  }
}



================================================
File: src/Night/Configuration/ConfigurationManager.cs
================================================
// <copyright file="ConfigurationManager.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;
using System.IO;
using System.Text.Json;

using Night;

namespace Night
{
  /// <summary>
  /// Manages the loading and accessing of game configuration settings.
  /// </summary>
  public static class ConfigurationManager
  {
    private static readonly string ConfigFileName = "config.json";
    private static GameConfig currentConfig = new GameConfig();
    private static bool isLoaded = false;

    /// <summary>
    /// Gets the currently loaded game configuration. If no configuration has been loaded, returns the default configuration.
    /// </summary>
    public static GameConfig CurrentConfig => currentConfig;

    /// <summary>
    /// Gets a value indicating whether the configuration has been loaded.
    /// </summary>
    public static bool IsLoaded => isLoaded;

    /// <summary>
    /// Loads the game configuration from a 'config.json' file.
    /// If the file is not found, or if an error occurs during loading or parsing, default settings are used.
    /// The configuration is loaded only once; subsequent calls will not reload the configuration.
    /// </summary>
    /// <param name="gameDirectory">The directory to search for 'config.json'. If null, the application's base directory is used.</param>
    public static void LoadConfig(string? gameDirectory = null)
    {
      if (isLoaded)
      {
        return;
      }

      string effectiveGameDirectory = gameDirectory ?? AppContext.BaseDirectory;
      string configFilePath = Path.Combine(effectiveGameDirectory, ConfigFileName);

      if (File.Exists(configFilePath))
      {
        try
        {
          string jsonContent = File.ReadAllText(configFilePath);
          if (!string.IsNullOrEmpty(jsonContent))
          {
            var options = new JsonSerializerOptions
            {
              PropertyNameCaseInsensitive = true,
              AllowTrailingCommas = true,
              ReadCommentHandling = JsonCommentHandling.Skip,
            };
            GameConfig? loadedConfig = JsonSerializer.Deserialize<GameConfig>(jsonContent, options);
            if (loadedConfig != null)
            {
              currentConfig = loadedConfig;
            }
            else
            {
              Console.WriteLine($"Warning: Could not parse '{ConfigFileName}' from '{configFilePath}'. Using default configuration.");
            }
          }
          else
          {
            Console.WriteLine($"Warning: '{ConfigFileName}' found at '{configFilePath}' is empty. Using default configuration.");
          }
        }
        catch (JsonException jsonEx)
        {
          Console.WriteLine($"Error deserializing '{ConfigFileName}' from '{configFilePath}': {jsonEx.Message}. Using default configuration.");
        }

        // Catch-all for other potential issues
        catch (Exception ex)
        {
          Console.WriteLine($"Night.ConfigurationManager: Error loading or deserializing config.json: {ex.Message}. Using default configuration.");
        }
      }
      else
      {
        Console.WriteLine($"Info: '{ConfigFileName}' not found at '{configFilePath}'. Using default configuration.");
      }

      isLoaded = true;
    }
  }
}



================================================
File: src/Night/Configuration/GameConfig.cs
================================================
// <copyright file="GameConfig.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System.Text.Json.Serialization;

namespace Night
{
  /// <summary>
  /// Represents the overall game configuration settings, typically loaded from a config.json file.
  /// </summary>
  public class GameConfig
  {
    /// <summary>
    /// Gets or sets the identity of the game. This is used for the save directory.
    /// </summary>
    [JsonPropertyName("identity")]
    public string? Identity { get; set; } = null;

    /// <summary>
    /// Gets or sets a value indicating whether the game identity should be appended to the save directory path.
    /// </summary>
    [JsonPropertyName("appendidentity")]
    public bool AppendIdentity { get; set; } = false;

    /// <summary>
    /// Gets or sets the LÖVE version this game targets. Currently informational.
    /// </summary>
    [JsonPropertyName("version")]
    public string Version { get; set; } = "11.4"; // Default to LÖVE 11.4

    /// <summary>
    /// Gets or sets a value indicating whether a console window should be attached (Windows only, currently placeholder).
    /// </summary>
    [JsonPropertyName("console")]
    public bool Console { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether the accelerometer should be used as a joystick.
    /// </summary>
    [JsonPropertyName("accelerometerjoystick")]
    public bool AccelerometerJoystick { get; set; } = true;

    /// <summary>
    /// Gets or sets a value indicating whether to request external storage access (Android only, currently placeholder).
    /// </summary>
    [JsonPropertyName("externalstorage")]
    public bool ExternalStorage { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether gamma correction should be enabled.
    /// </summary>
    [JsonPropertyName("gammacorrect")]
    public bool GammaCorrect { get; set; } = false;

    /// <summary>
    /// Gets or sets the audio module configuration.
    /// </summary>
    [JsonPropertyName("audio")]
    public AudioConfig Audio { get; set; } = new AudioConfig();

    /// <summary>
    /// Gets or sets the window module configuration.
    /// </summary>
    [JsonPropertyName("window")]
    public WindowConfig Window { get; set; } = new WindowConfig();

    /// <summary>
    /// Gets or sets the configuration for enabling/disabling engine modules.
    /// </summary>
    [JsonPropertyName("modules")]
    public ModulesConfig Modules { get; set; } = new ModulesConfig();
  }

  // NOTE: The definitions for AudioConfig, WindowConfig, and ModulesConfig
  // have been moved to their own files: AudioConfig.cs, WindowConfig.cs, and ModulesConfig.cs
  // This is to resolve SA1402: File may only contain a single type.
}



================================================
File: src/Night/Configuration/ModulesConfig.cs
================================================
// <copyright file="ModulesConfig.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System.Text.Json.Serialization;

namespace Night
{
  /// <summary>
  /// Configuration for enabling/disabling engine modules (similar to t.modules in LÖVE's conf.lua).
  /// </summary>
  public class ModulesConfig
  {
    /// <summary>Gets or sets a value indicating whether the Audio module is enabled.</summary>
    [JsonPropertyName("audio")]
    public bool Audio { get; set; } = true;

    /// <summary>Gets or sets a value indicating whether the Data module is enabled.</summary>
    [JsonPropertyName("data")]
    public bool Data { get; set; } = true;

    /// <summary>Gets or sets a value indicating whether the Event module is enabled.</summary>
    [JsonPropertyName("event")]
    public bool Event { get; set; } = true;

    /// <summary>Gets or sets a value indicating whether the Font module is enabled.</summary>
    [JsonPropertyName("font")]
    public bool Font { get; set; } = true;

    /// <summary>Gets or sets a value indicating whether the Graphics module is enabled.</summary>
    [JsonPropertyName("graphics")]
    public bool Graphics { get; set; } = true;

    /// <summary>Gets or sets a value indicating whether the Image module is enabled.</summary>
    [JsonPropertyName("image")]
    public bool Image { get; set; } = true;

    /// <summary>Gets or sets a value indicating whether the Joystick module is enabled.</summary>
    [JsonPropertyName("joystick")]
    public bool Joystick { get; set; } = true;

    /// <summary>Gets or sets a value indicating whether the Keyboard module is enabled.</summary>
    [JsonPropertyName("keyboard")]
    public bool Keyboard { get; set; } = true;

    /// <summary>Gets or sets a value indicating whether the Math module is enabled.</summary>
    [JsonPropertyName("math")]
    public bool Math { get; set; } = true;

    /// <summary>Gets or sets a value indicating whether the Mouse module is enabled.</summary>
    [JsonPropertyName("mouse")]
    public bool Mouse { get; set; } = true;

    /// <summary>Gets or sets a value indicating whether the Physics module is enabled.</summary>
    [JsonPropertyName("physics")]
    public bool Physics { get; set; } = true;

    /// <summary>Gets or sets a value indicating whether the Sound module is enabled.</summary>
    [JsonPropertyName("sound")]
    public bool Sound { get; set; } = true;

    /// <summary>Gets or sets a value indicating whether the System module is enabled.</summary>
    [JsonPropertyName("system")]
    public bool System { get; set; } = true;

    /// <summary>Gets or sets a value indicating whether the Timer module is enabled.</summary>
    [JsonPropertyName("timer")]
    public bool Timer { get; set; } = true;

    /// <summary>Gets or sets a value indicating whether the Touch module is enabled.</summary>
    [JsonPropertyName("touch")]
    public bool Touch { get; set; } = true;

    /// <summary>Gets or sets a value indicating whether the Video module is enabled.</summary>
    [JsonPropertyName("video")]
    public bool Video { get; set; } = true;

    /// <summary>Gets or sets a value indicating whether the Window module is enabled.</summary>
    [JsonPropertyName("window")]
    public bool WindowModule { get; set; } = true; // Renamed to avoid conflict with Night.Window namespace

    /// <summary>Gets or sets a value indicating whether the Thread module is enabled.</summary>
    [JsonPropertyName("thread")]
    public bool Thread { get; set; } = true;
  }
}



================================================
File: src/Night/Configuration/WindowConfig.cs
================================================
// <copyright file="WindowConfig.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System.Text.Json.Serialization;

namespace Night
{
  /// <summary>
  /// Configuration settings for the game window.
  /// </summary>
  public class WindowConfig
  {
    /// <summary>
    /// Gets or sets the window title.
    /// </summary>
    [JsonPropertyName("title")]
    public string? Title { get; set; } = "Night Game"; // Default title

    /// <summary>
    /// Gets or sets the path to the window icon file. Relative to the game's root directory.
    /// </summary>
    [JsonPropertyName("icon")]
    public string? IconPath { get; set; } = null;

    /// <summary>
    /// Gets or sets the window width in pixels.
    /// </summary>
    [JsonPropertyName("width")]
    public int Width { get; set; } = 800;

    /// <summary>
    /// Gets or sets the window height in pixels.
    /// </summary>
    [JsonPropertyName("height")]
    public int Height { get; set; } = 600;

    /// <summary>
    /// Gets or sets the x-coordinate of the window's top-left corner on the screen. Null for centered.
    /// </summary>
    [JsonPropertyName("x")]
    public int? X { get; set; } = null;

    /// <summary>
    /// Gets or sets the y-coordinate of the window's top-left corner on the screen. Null for centered.
    /// </summary>
    [JsonPropertyName("y")]
    public int? Y { get; set; } = null;

    /// <summary>
    /// Gets or sets the minimum window width.
    /// </summary>
    [JsonPropertyName("minwidth")]
    public int MinWidth { get; set; } = 1; // LÖVE default

    /// <summary>
    /// Gets or sets the minimum window height.
    /// </summary>
    [JsonPropertyName("minheight")]
    public int MinHeight { get; set; } = 1; // LÖVE default

    /// <summary>
    /// Gets or sets a value indicating whether the window is resizable.
    /// </summary>
    [JsonPropertyName("resizable")]
    public bool Resizable { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether the window has a border.
    /// </summary>
    [JsonPropertyName("borderless")]
    public bool Borderless { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether the window is fullscreen.
    /// </summary>
    [JsonPropertyName("fullscreen")]
    public bool Fullscreen { get; set; } = false;

    /// <summary>
    /// Gets or sets the type of fullscreen mode. Expected values: "desktop" or "exclusive".
    /// </summary>
    [JsonPropertyName("fullscreentype")]
    public string FullscreenType { get; set; } = "desktop"; // LÖVE default

    /// <summary>
    /// Gets or sets a value indicating whether VSync is enabled.
    /// </summary>
    [JsonPropertyName("vsync")]
    public bool VSync { get; set; } = true; // LÖVE default

    /// <summary>
    /// Gets or sets a value indicating whether to enable high-DPI mode if available.
    /// </summary>
    [JsonPropertyName("highdpi")]
    public bool HighDPI { get; set; } = false; // LÖVE default

    /// <summary>
    /// Gets or sets the multisample anti-aliasing (MSAA) level.
    /// </summary>
    [JsonPropertyName("msaa")]
    public int MSAA { get; set; } = 0;

    /// <summary>
    /// Gets or sets the depth buffer bits. Null for system default.
    /// </summary>
    [JsonPropertyName("depth")]
    public int? Depth { get; set; } = null;

    /// <summary>
    /// Gets or sets the stencil buffer bits. Null for system default.
    /// </summary>
    [JsonPropertyName("stencil")]
    public int? Stencil { get; set; } = null;

    /// <summary>
    /// Gets or sets the 1-indexed display number to use for the window.
    /// </summary>
    [JsonPropertyName("display")]
    public int Display { get; set; } = 1; // 1-indexed

    /// <summary>
    /// Gets or sets a value indicating whether to use DPI scaling.
    /// </summary>
    [JsonPropertyName("usedpiscale")]
    public bool UseDPIScale { get; set; } = true;
  }
}



================================================
File: src/Night/Engine/.gitkeep
================================================



================================================
File: src/Night/Filesystem/FileMode.cs
================================================
// <copyright file="FileMode.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;

namespace Night
{
  /// <summary>
  /// Represents the different modes you can open a File in.
  /// </summary>
  public enum FileMode
  {
    /// <summary>
    /// Open a file for read.
    /// </summary>
    Read,

    /// <summary>
    /// Open a file for write.
    /// </summary>
    Write,

    /// <summary>
    /// Open a file for append.
    /// </summary>
    Append,

    /// <summary>
    /// Do not open a file (represents a closed file.)
    /// </summary>
    Close,

    /// <summary>
    /// Open a file for write.
    /// </summary>
    W = Write,

    /// <summary>
    /// Open a file for read.
    /// </summary>
    R = Read,

    /// <summary>
    /// Open a file for append.
    /// </summary>
    A = Append,

    /// <summary>
    /// Do not open a file (represents a closed file.)
    /// </summary>
    C = Close,
  }
}



================================================
File: src/Night/Filesystem/FileSystemInfo.cs
================================================
// <copyright file="FileSystemInfo.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;

namespace Night
{
  /// <summary>
  /// Contains information about a file or directory.
  /// </summary>
  public class FileSystemInfo
  {
    /// <summary>
    /// Initializes a new instance of the <see cref="FileSystemInfo"/> class.
    /// </summary>
    public FileSystemInfo()
    {
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="FileSystemInfo"/> class with specified values.
    /// </summary>
    /// <param name="type">The type of the file system object.</param>
    /// <param name="size">The size of the file in bytes.</param>
    /// <param name="modTime">The last modification time in Unix epoch seconds.</param>
    public FileSystemInfo(FileType type, long? size, long? modTime)
    {
      this.Type = type;
      this.Size = size;
      this.ModTime = modTime;
    }

    /// <summary>
    /// Gets or sets the type of the object at the path (file, directory, symlink, etc.).
    /// Default is None.
    /// </summary>
    public FileType Type { get; set; } = FileType.None;

    /// <summary>
    /// Gets or sets the size in bytes of the file, or null if it can't be determined or not applicable (e.g. for a directory).
    /// </summary>
    public long? Size { get; set; }

    /// <summary>
    /// Gets or sets the file's last modification time in seconds since the Unix epoch, or null if it can't be determined.
    /// </summary>
    public long? ModTime { get; set; }
  }
}



================================================
File: src/Night/Filesystem/FileType.cs
================================================
// <copyright file="FileType.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;

namespace Night
{
  /// <summary>
  /// Represents the type of a file system object.
  /// </summary>
  public enum FileType
  {
    /// <summary>
    /// A regular file.
    /// </summary>
    File,

    /// <summary>
    /// A directory.
    /// </summary>
    Directory,

    /// <summary>
    /// A symbolic link.
    /// </summary>
    Symlink,

    /// <summary>
    /// Other type (e.g., device, pipe).
    /// </summary>
    Other,

    /// <summary>
    /// The path does not exist or its type cannot be determined.
    /// </summary>
    None,
  }
}



================================================
File: src/Night/Filesystem/Filesystem.cs
================================================
// <copyright file="Filesystem.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;
using System.IO;

namespace Night
{
  /// <summary>
  /// Provides basic file system operations.
  /// Inspired by Love2D's love.filesystem module.
  /// </summary>
  public static class Filesystem
  {
    /// <summary>
    /// Gets information about the specified file or directory.
    /// </summary>
    /// <param name="path">The file or directory path to check.</param>
    /// <param name="filterType">If supplied, this parameter causes getInfo to only return the info table if the item at the given path matches the specified file type.</param>
    /// <returns>A FileSystemInfo object containing information about the specified path, or null if nothing exists at the path or if it doesn't match the filterType.</returns>
    public static FileSystemInfo? GetInfo(string path, FileType? filterType = null)
    {
      if (string.IsNullOrEmpty(path))
      {
        return null;
      }

      long? size = null;
      FileType type;
      long? modTime;
      try
      {
        if (File.Exists(path))
        {
          var fileInfo = new FileInfo(path);
          if ((fileInfo.Attributes & FileAttributes.ReparsePoint) == FileAttributes.ReparsePoint)
          {
            type = FileType.Symlink;
          }
          else
          {
            type = FileType.File;
          }

          size = fileInfo.Length;
          modTime = ((DateTimeOffset)fileInfo.LastWriteTimeUtc).ToUnixTimeSeconds();
        }
        else if (Directory.Exists(path))
        {
          var dirInfo = new DirectoryInfo(path);
          if ((dirInfo.Attributes & FileAttributes.ReparsePoint) == FileAttributes.ReparsePoint)
          {
            type = FileType.Symlink;
          }
          else
          {
            type = FileType.Directory;
          }

          modTime = ((DateTimeOffset)dirInfo.LastWriteTimeUtc).ToUnixTimeSeconds();
        }
        else
        {
          return null;
        }
      }
      catch (Exception)
      {
        return null;
      }

      if (filterType.HasValue && type != filterType.Value)
      {
        return null;
      }

      return new FileSystemInfo(type, size, modTime);
    }

    /// <summary>
    /// Gets information about the specified file or directory and populates an existing FileSystemInfo object.
    /// </summary>
    /// <param name="path">The file or directory path to check.</param>
    /// <param name="info">A FileSystemInfo object which will be filled in.</param>
    /// <returns>The FileSystemInfo object given as an argument, filled with information, or null if nothing exists at the path.</returns>
    public static FileSystemInfo? GetInfo(string path, FileSystemInfo info)
    {
      if (info == null)
      {
        return null;
      }

      var newInfo = GetInfo(path);
      if (newInfo != null)
      {
        info.Type = newInfo.Type;
        info.Size = newInfo.Size;
        info.ModTime = newInfo.ModTime;
        return info;
      }

      return null;
    }

    /// <summary>
    /// Gets information about the specified file or directory, filtered by type, and populates an existing FileSystemInfo object.
    /// </summary>
    /// <param name="path">The file or directory path to check.</param>
    /// <param name="filterType">Causes getInfo to only return the info table if the item at the given path matches the specified file type.</param>
    /// <param name="info">A FileSystemInfo object which will be filled in.</param>
    /// <returns>The FileSystemInfo object given as an argument, filled with information, or null if nothing exists at the path or if it doesn't match the filterType.</returns>
    public static FileSystemInfo? GetInfo(string path, FileType filterType, FileSystemInfo info)
    {
      if (info == null)
      {
        return null;
      }

      var newInfo = GetInfo(path, filterType);
      if (newInfo != null)
      {
        info.Type = newInfo.Type;
        info.Size = newInfo.Size;
        info.ModTime = newInfo.ModTime;
        return info;
      }

      return null;
    }

    /// <summary>
    /// Reads the entire content of a file into a byte array.
    /// </summary>
    /// <param name="path">The path to the file to read.</param>
    /// <returns>A byte array containing the contents of the file.</returns>
    /// <exception cref="FileNotFoundException">Thrown if the file is not found.</exception>
    public static byte[] ReadBytes(string path)
    {
      return File.ReadAllBytes(path);
    }

    /// <summary>
    /// Reads the entire content of a file into a string.
    /// </summary>
    /// <param name="path">The path to the file to read.</param>
    /// <returns>A string containing the contents of the file.</returns>
    /// <exception cref="FileNotFoundException">Thrown if the file is not found.</exception>
    public static string ReadText(string path)
    {
      return File.ReadAllText(path);
    }
  }
}



================================================
File: src/Night/Graphics/Color.cs
================================================
// <copyright file="Color.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;

namespace Night
{
  /// <summary>
  /// Represents a color with Red, Green, Blue, and Alpha components.
  /// Each component is a byte value ranging from 0 (no intensity) to 255 (full intensity).
  /// The Alpha component controls the transparency of the color, where 0 is fully transparent and 255 is fully opaque.
  /// </summary>
  public struct Color
  {
    // Common color presets

    /// <summary>Represents the color black.</summary>
    public static readonly Color Black = new(0, 0, 0);

    /// <summary>Represents the color white.</summary>
    public static readonly Color White = new(255, 255, 255);

    /// <summary>Represents the color red.</summary>
    public static readonly Color Red = new(255, 0, 0);

    /// <summary>Represents the color green.</summary>
    public static readonly Color Green = new(0, 255, 0);

    /// <summary>Represents the color blue.</summary>
    public static readonly Color Blue = new(0, 0, 255);

    /// <summary>Represents the color yellow.</summary>
    public static readonly Color Yellow = new(255, 255, 0);

    /// <summary>Represents the color magenta.</summary>
    public static readonly Color Magenta = new(255, 0, 255);

    /// <summary>Represents the color cyan.</summary>
    public static readonly Color Cyan = new(0, 255, 255);

    /// <summary>Represents a fully transparent color.</summary>
    public static readonly Color Transparent = new(0, 0, 0, 0);

    /// <summary>
    /// The red component of the color.
    /// </summary>
    public byte R;

    /// <summary>
    /// The green component of the color.
    /// </summary>
    public byte G;

    /// <summary>
    /// The blue component of the color.
    /// </summary>
    public byte B;

    /// <summary>
    /// The alpha (transparency) component of the color.
    /// </summary>
    public byte A;

    /// <summary>
    /// Initializes a new instance of the <see cref="Color"/> struct.
    /// </summary>
    /// <param name="r">The red component (0-255).</param>
    /// <param name="g">The green component (0-255).</param>
    /// <param name="b">The blue component (0-255).</param>
    /// <param name="a">The alpha component (0-255). Defaults to 255 (fully opaque).</param>
    public Color(byte r, byte g, byte b, byte a = 255)
    {
      this.R = r;
      this.G = g;
      this.B = b;
      this.A = a;
    }
  }
}



================================================
File: src/Night/Graphics/DrawMode.cs
================================================
// <copyright file="DrawMode.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;

namespace Night
{
  /// <summary>
  /// Specifies whether a shape should be drawn filled or as an outline.
  /// </summary>
  public enum DrawMode
  {
    /// <summary>
    /// Draw the shape filled.
    /// </summary>
    Fill,

    /// <summary>
    /// Draw the shape as an outline.
    /// </summary>
    Line,
  }
}



================================================
File: src/Night/Graphics/Graphics.cs
================================================
// <copyright file="Graphics.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;
using System.IO;
using System.Runtime.InteropServices;

using Night;

using SDL3;

namespace Night
{
  /// <summary>
  /// Provides functionality for drawing graphics.
  /// Mimics Love2D's love.graphics module.
  /// </summary>
  public static class Graphics
  {
    /// <summary>
    /// Creates a new image (Sprite) from a file.
    /// </summary>
    /// <param name="filePath">The path to the image file.</param>
    /// <returns>A new Sprite object.</returns>
    public static Sprite? NewImage(string filePath)
    {
      IntPtr rendererPtr = Window.RendererPtr;
      if (rendererPtr == IntPtr.Zero)
      {
        Console.WriteLine("Error in Graphics.NewImage: Renderer pointer is null. Was Window.SetMode called successfully?");
        return null;
      }

      if (!File.Exists(filePath))
      {
        Console.WriteLine($"Error in Graphics.NewImage: Image file not found at '{filePath}'.");
        return null;
      }

      IntPtr surfacePtr = SDL3.Image.Load(filePath);

      if (surfacePtr == IntPtr.Zero)
      {
        string sdlError = SDL.GetError();
        Console.WriteLine($"Error in Graphics.NewImage: Failed to load image into surface from '{filePath}'. SDL_image Error: {sdlError}");
        return null;
      }

      SDL.Surface surface = Marshal.PtrToStructure<SDL.Surface>(surfacePtr);
      int width = surface.Width;
      int height = surface.Height;

      if (width <= 0 || height <= 0)
      {
        Console.WriteLine($"Error: Invalid surface dimensions ({width}x{height}) for '{filePath}'.");
        SDL.DestroySurface(surfacePtr);
        return null;
      }

      IntPtr texturePtr = SDL.CreateTextureFromSurface(rendererPtr, surfacePtr);
      SDL.DestroySurface(surfacePtr);

      if (texturePtr == IntPtr.Zero)
      {
        string sdlError = SDL.GetError();
        Console.WriteLine($"Error in Graphics.NewImage: Failed to create texture from surface for '{filePath}'. SDL Error: {sdlError}");
        return null;
      }

      return new Sprite(texturePtr, width, height);
    }

    /// <summary>
    /// Sets the active color for drawing operations.
    /// </summary>
    /// <param name="color">The color to set.</param>
    public static void SetColor(Color color)
    {
      IntPtr rendererPtr = Window.RendererPtr;
      if (rendererPtr == IntPtr.Zero)
      {
        Console.WriteLine("Error in Graphics.SetColor: Renderer pointer is null. Was Window.SetMode called successfully?");
        return;
      }

      if (!SDL.SetRenderDrawColor(rendererPtr, color.R, color.G, color.B, color.A))
      {
        string sdlError = SDL.GetError();
        Console.WriteLine($"Error in Graphics.SetColor (SetRenderDrawColor): {sdlError}");
      }
    }

    /// <summary>
    /// Sets the active color for drawing operations using individual RGBA components.
    /// </summary>
    /// <param name="r">The red component (0-255).</param>
    /// <param name="g">The green component (0-255).</param>
    /// <param name="b">The blue component (0-255).</param>
    /// <param name="a">The alpha component (0-255), defaults to 255 (opaque).</param>
    public static void SetColor(byte r, byte g, byte b, byte a = 255)
    {
      SetColor(new Color(r, g, b, a));
    }

    /// <summary>
    /// Draws a rectangle.
    /// </summary>
    /// <param name="mode">The drawing mode (Fill or Line).</param>
    /// <param name="x">The x-coordinate of the top-left corner.</param>
    /// <param name="y">The y-coordinate of the top-left corner.</param>
    /// <param name="width">The width of the rectangle.</param>
    /// <param name="height">The height of the rectangle.</param>
    public static void Rectangle(DrawMode mode, float x, float y, float width, float height)
    {
      IntPtr rendererPtr = Window.RendererPtr;
      if (rendererPtr == IntPtr.Zero)
      {
        Console.WriteLine("Error in Graphics.Rectangle: Renderer pointer is null. Was Window.SetMode called successfully?");
        return;
      }

      if (width <= 0 || height <= 0)
      {
        // No-op for zero or negative dimensions
        return;
      }

      bool success;
      if (mode == DrawMode.Fill)
      {
        // Define the 4 vertices of the rectangle
        float[] xy = new float[]
        {
            x, y,                        // Top-left
            x + width, y,                // Top-right
            x + width, y + height,       // Bottom-right
            x, y + height, // Bottom-left
        };

        SDL.FColor[] vertexColors = new SDL.FColor[4];
        byte r_byte, g_byte, b_byte, a_byte;
        _ = SDL.GetRenderDrawColor(rendererPtr, out r_byte, out g_byte, out b_byte, out a_byte);
        SDL.FColor drawColor = new SDL.FColor { R = r_byte / 255f, G = g_byte / 255f, B = b_byte / 255f, A = a_byte / 255f };
        for (int i = 0; i < 4; i++)
        {
          vertexColors[i] = drawColor;
        }

        // Indices for two triangles forming the rectangle (0,1,2 and 0,2,3)
        // SDL.RenderGeometryRaw expects indices, typically byte or short.
        // Using byte here as polygon fill does, but ensure it's appropriate for SDL3's expectations.
        // For a quad, it's 2 triangles, 6 indices.
        byte[] indices = new byte[] { 0, 1, 2, 0, 2, 3 }; // Triangle 1: (v0,v1,v2), Triangle 2: (v0,v2,v3)

        GCHandle xyHandle = default;
        GCHandle colorsHandle = default;
        GCHandle indicesHandle = default;

        try
        {
          xyHandle = GCHandle.Alloc(xy, GCHandleType.Pinned);
          colorsHandle = GCHandle.Alloc(vertexColors, GCHandleType.Pinned);
          indicesHandle = GCHandle.Alloc(indices, GCHandleType.Pinned);

          IntPtr xyPtr = xyHandle.AddrOfPinnedObject();
          IntPtr colorsPtr = colorsHandle.AddrOfPinnedObject();
          IntPtr indicesPtr = indicesHandle.AddrOfPinnedObject();

          success = SDL.RenderGeometryRaw(
                                     rendererPtr,
                                     IntPtr.Zero, // No texture
                                     xyPtr,
                                     sizeof(float) * 2, // Stride for xy
                                     colorsPtr,
                                     Marshal.SizeOf<SDL.FColor>(), // Stride for colors
                                     IntPtr.Zero, // No UVs
                                     0,           // Stride for UVs
                                     4,           // Number of vertices
                                     indicesPtr,
                                     indices.Length, // Number of indices
                                     sizeof(byte));  // Size of each index
        }
        finally
        {
          if (xyHandle.IsAllocated)
          {
            xyHandle.Free();
          }

          if (colorsHandle.IsAllocated)
          {
            colorsHandle.Free();
          }

          if (indicesHandle.IsAllocated)
          {
            indicesHandle.Free();
          }
        }
      }

      // DrawMode.Line
      else
      {
        SDL.FRect rect = new SDL.FRect { X = x, Y = y, W = width, H = height };
        success = SDL.RenderRect(rendererPtr, rect);
      }

      if (!success)
      {
        string sdlError = SDL.GetError();
        Console.WriteLine($"Error in Graphics.Rectangle (Mode: {mode}): {sdlError}");
      }
    }

    /// <summary>
    /// Draws a line segment between two points.
    /// </summary>
    /// <param name="x1">The x-coordinate of the first point.</param>
    /// <param name="y1">The y-coordinate of the first point.</param>
    /// <param name="x2">The x-coordinate of the second point.</param>
    /// <param name="y2">The y-coordinate of the second point.</param>
    public static void Line(float x1, float y1, float x2, float y2)
    {
      IntPtr rendererPtr = Window.RendererPtr;
      if (rendererPtr == IntPtr.Zero)
      {
        Console.WriteLine("Error in Graphics.Line: Renderer pointer is null. Was Window.SetMode called successfully?");
        return;
      }

      if (!SDL.RenderLine(rendererPtr, x1, y1, x2, y2))
      {
        string sdlError = SDL.GetError();
        Console.WriteLine($"Error in Graphics.Line: {sdlError}");
      }
    }

    /// <summary>
    /// Draws a sequence of connected line segments.
    /// </summary>
    /// <param name="points">An array of points to connect.</param>
    public static void Line(PointF[] points)
    {
      IntPtr rendererPtr = Window.RendererPtr;
      if (rendererPtr == IntPtr.Zero)
      {
        Console.WriteLine("Error in Graphics.Line (multiple points): Renderer pointer is null. Was Window.SetMode called successfully?");
        return;
      }

      if (points == null || points.Length < 2)
      {
        Console.WriteLine("Error in Graphics.Line (multiple points): At least two points are required to draw lines.");
        return;
      }

      SDL.FPoint[] sdlPoints = new SDL.FPoint[points.Length];
      for (int i = 0; i < points.Length; i++)
      {
        sdlPoints[i] = new SDL.FPoint { X = points[i].X, Y = points[i].Y };
      }

      if (!SDL.RenderLines(rendererPtr, sdlPoints, sdlPoints.Length))
      {
        string sdlError = SDL.GetError();
        Console.WriteLine($"Error in Graphics.Line (multiple points): {sdlError}");
      }
    }

    /// <summary>
    /// Draws a polygon.
    /// </summary>
    /// <param name="mode">The drawing mode (Fill or Line).</param>
    /// <param name="vertices">An array of points representing the polygon's vertices.</param>
    public static void Polygon(DrawMode mode, PointF[] vertices)
    {
      IntPtr rendererPtr = Window.RendererPtr;
      if (rendererPtr == IntPtr.Zero)
      {
        Console.WriteLine("Error in Graphics.Polygon: Renderer pointer is null. Was Window.SetMode called successfully?");
        return;
      }

      if (vertices == null || vertices.Length < 3)
      {
        Console.WriteLine("Error in Graphics.Polygon: At least three vertices are required to draw a polygon.");
        return;
      }

      if (mode == DrawMode.Line)
      {
        SDL.FPoint[] lineVertices = new SDL.FPoint[vertices.Length + 1];
        for (int i = 0; i < vertices.Length; i++)
        {
          lineVertices[i] = new SDL.FPoint { X = vertices[i].X, Y = vertices[i].Y };
        }

        // Close the polygon
        lineVertices[vertices.Length] = new SDL.FPoint { X = vertices[0].X, Y = vertices[0].Y };

        if (!SDL.RenderLines(rendererPtr, lineVertices, lineVertices.Length))
        {
          string sdlError = SDL.GetError();
          Console.WriteLine($"Error in Graphics.Polygon (Line Mode): {sdlError}");
        }
      }
      else
      {
        if (vertices.Length < 3)
        {
          return;
        }

        float[] xy = new float[vertices.Length * 2];
        SDL.FColor[] vertexColors = new SDL.FColor[vertices.Length];

        byte r, g, b, a;
        _ = SDL.GetRenderDrawColor(rendererPtr, out r, out g, out b, out a);
        SDL.FColor drawColor = new SDL.FColor { R = r / 255f, G = g / 255f, B = b / 255f, A = a / 255f };

        for (int i = 0; i < vertices.Length; i++)
        {
          xy[i * 2] = vertices[i].X;
          xy[(i * 2) + 1] = vertices[i].Y;
          vertexColors[i] = drawColor;
        }

        byte[] indices = new byte[(vertices.Length - 2) * 3];
        for (int i = 0; i < vertices.Length - 2; i++)
        {
          indices[i * 3] = 0;
          indices[(i * 3) + 1] = (byte)(i + 1);
          indices[(i * 3) + 2] = (byte)(i + 2);
        }

        GCHandle xyHandle = default;
        GCHandle colorsHandle = default;
        GCHandle indicesHandle = default;

        try
        {
          xyHandle = GCHandle.Alloc(xy, GCHandleType.Pinned);
          colorsHandle = GCHandle.Alloc(vertexColors, GCHandleType.Pinned);
          indicesHandle = GCHandle.Alloc(indices, GCHandleType.Pinned);

          IntPtr xyPtr = xyHandle.AddrOfPinnedObject();
          IntPtr colorsPtr = colorsHandle.AddrOfPinnedObject();
          IntPtr indicesPtr = indicesHandle.AddrOfPinnedObject();

          if (!SDL.RenderGeometryRaw(
                                     rendererPtr,
                                     IntPtr.Zero,
                                     xyPtr,
                                     sizeof(float) * 2,
                                     colorsPtr,
                                     Marshal.SizeOf<SDL.FColor>(),
                                     IntPtr.Zero,
                                     0,
                                     vertices.Length,
                                     indicesPtr,
                                     indices.Length,
                                     sizeof(byte)))
          {
            string sdlError = SDL.GetError();
            Console.WriteLine($"Error in Graphics.Polygon (Fill Mode - RenderGeometryRaw): {sdlError}");
          }
        }
        finally
        {
          if (xyHandle.IsAllocated)
          {
            xyHandle.Free();
          }

          if (colorsHandle.IsAllocated)
          {
            colorsHandle.Free();
          }

          if (indicesHandle.IsAllocated)
          {
            indicesHandle.Free();
          }
        }
      }
    }

    /// <summary>
    /// Draws a circle.
    /// </summary>
    /// <param name="mode">The drawing mode (Fill or Line).</param>
    /// <param name="x">The x-coordinate of the circle's center.</param>
    /// <param name="y">The y-coordinate of the circle's center.</param>
    /// <param name="radius">The radius of the circle.</param>
    /// <param name="segments">The number of segments used to draw the circle (more segments means a smoother circle).</param>
    public static void Circle(
      DrawMode mode,
      float x,
      float y,
      float radius,
      int segments = 12)
    {
      IntPtr rendererPtr = Window.RendererPtr;
      if (rendererPtr == IntPtr.Zero)
      {
        Console.WriteLine("Error in Graphics.Circle: Renderer pointer is null. Was Window.SetMode called successfully?");
        return;
      }

      if (segments <= 0)
      {
        // Default to 12 segments if an invalid number is provided.
        segments = 12;
      }

      if (radius < 0)
      {
        radius = 0;
      }

      // An array of FPoints to hold the vertices of the circle
      SDL.FPoint[] points = new SDL.FPoint[segments + 1];

      for (int i = 0; i <= segments; i++)
      {
        double angle = (Math.PI * 2.0 * i) / segments;
        points[i].X = x + (float)(Math.Cos(angle) * radius);
        points[i].Y = y + (float)(Math.Sin(angle) * radius);
      }

      bool success;
      if (mode == DrawMode.Fill)
      {
        // For filling, we need to convert points to vertices and provide indices if using RenderGeometry.
        // SDL_RenderGeometry does not directly support filled circles with a simple point list.
        // A common approach is to create a triangle fan.
        // However, SDL_gfx or a custom triangle rasterizer would be better for perfect filled circles.
        // For simplicity, we will draw many lines for a "filled" effect if segments is high enough,
        // or just outline if not DrawMode.Line.
        // This is not a true fill for convex polygons but works for circles.
        // A more robust solution would involve SDL_gfx.filledCircleRGBA or custom geometry rendering.
        // SDL3 provides SDL_RenderFillPolygon, which is EXPERIMENTAL for now.
        // As a fallback, let's draw it as connected lines (outline) even for Fill mode for now,
        // as a true fill is complex without SDL_gfx or a geometry helper.
        // TODO: Implement a proper fill for circles.
        success = SDL.RenderLines(rendererPtr, points, segments + 1);
      }
      else
      {
        success = SDL.RenderLines(rendererPtr, points, segments + 1);
      }

      if (!success)
      {
        string sdlError = SDL.GetError();
        Console.WriteLine($"Error in Graphics.Circle (Mode: {mode}): {sdlError}");
      }
    }

    /// <summary>
    /// Draws a sprite to the screen.
    /// </summary>
    /// <param name="sprite">The sprite to draw.</param>
    /// <param name="x">The x-coordinate to draw the sprite at.</param>
    /// <param name="y">The y-coordinate to draw the sprite at.</param>
    /// <param name="rotation">The rotation of the sprite (in radians).</param>
    /// <param name="scaleX">The horizontal scale factor.</param>
    /// <param name="scaleY">The vertical scale factor.</param>
    /// <param name="offsetX">The x-offset for the sprite's origin.</param>
    /// <param name="offsetY">The y-offset for the sprite's origin.</param>
    public static void Draw(
        Sprite sprite,
        float x,
        float y,
        float rotation = 0,
        float scaleX = 1,
        float scaleY = 1,
        float offsetX = 0,
        float offsetY = 0)
    {
      // Check if sprite is null
      if (sprite == null)
      {
        return;
      }

      // Check if sprite texture is null
      if (sprite.Texture == IntPtr.Zero)
      {
        Console.WriteLine("Error in Graphics.Draw: Sprite or sprite texture is null.");
        return;
      }

      IntPtr rendererPtr = Window.RendererPtr;
      if (rendererPtr == IntPtr.Zero)
      {
        Console.WriteLine("Error in Graphics.Draw: Renderer pointer is null. Was Window.SetMode called successfully?");
        return;
      }

      SDL.FRect dstRectStruct = new SDL.FRect
      {
        X = x,
        Y = y,
        W = sprite.Width * scaleX,
        H = sprite.Height * scaleY,
      };

      SDL.FPoint centerPointStruct = new SDL.FPoint
      {
        X = offsetX * scaleX,
        Y = offsetY * scaleY,
      };

      double angleInDegrees = rotation * (180.0 / Math.PI);

      IntPtr dstRectPtr = IntPtr.Zero;
      IntPtr centerPointPtr = IntPtr.Zero;

      try
      {
        dstRectPtr = Marshal.AllocHGlobal(Marshal.SizeOf(dstRectStruct));
        Marshal.StructureToPtr(dstRectStruct, dstRectPtr, false);

        centerPointPtr = Marshal.AllocHGlobal(Marshal.SizeOf(centerPointStruct));
        Marshal.StructureToPtr(centerPointStruct, centerPointPtr, false);

        if (!SDL.RenderTextureRotated(rendererPtr, sprite.Texture, IntPtr.Zero, dstRectPtr, angleInDegrees, centerPointPtr, SDL.FlipMode.None))
        {
          string sdlError = SDL.GetError();
          Console.WriteLine($"Error in Graphics.Draw (RenderTextureRotated): {sdlError}");
        }
      }
      finally
      {
        if (dstRectPtr != IntPtr.Zero)
        {
          Marshal.FreeHGlobal(dstRectPtr);
        }

        if (centerPointPtr != IntPtr.Zero)
        {
          Marshal.FreeHGlobal(centerPointPtr);
        }
      }
    }

    /// <summary>
    /// Clears the screen to a specific color.
    /// </summary>
    /// <param name="color">The color to clear the screen with.</param>
    public static void Clear(Color color)
    {
      IntPtr rendererPtr = Window.RendererPtr;
      if (rendererPtr == IntPtr.Zero)
      {
        Console.WriteLine("Error in Graphics.Clear: Renderer pointer is null. Was Window.SetMode called successfully?");
        return;
      }

      // Set color for clearing
      if (!SDL.SetRenderDrawColor(rendererPtr, color.R, color.G, color.B, color.A))
      {
        string sdlError = SDL.GetError();
        Console.WriteLine($"Error in Graphics.Clear (SetRenderDrawColor): {sdlError}");
        return; // Return if color setting fails, to avoid clearing with wrong color
      }

      if (!SDL.RenderClear(rendererPtr))
      {
        string sdlError = SDL.GetError();
        Console.WriteLine($"Error in Graphics.Clear (RenderClear): {sdlError}");
      }
    }

    /// <summary>
    /// Presents the drawn graphics to the screen (swaps buffers).
    /// </summary>
    public static void Present()
    {
      IntPtr rendererPtr = Window.RendererPtr;
      if (rendererPtr == IntPtr.Zero)
      {
        Console.WriteLine("Error in Graphics.Present: Renderer pointer is null. Was Window.SetMode called successfully?");
        return;
      }

      // Set color for drawing (though Present itself doesn't draw, good practice if any last-minute things were to be added here)
      // SDL.SetRenderDrawColor( Night.Window.RendererPtr, currentColor.R, currentColor.G, currentColor.B, currentColor.A );
      _ = SDL.RenderPresent(Window.RendererPtr);
    }
  }
}



================================================
File: src/Night/Graphics/ImageData.cs
================================================
// <copyright file="ImageData.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;

namespace Night
{
  /// <summary>
  /// Represents raw pixel data of an image.
  /// </summary>
  public class ImageData
  {
    /// <summary>
    /// Initializes a new instance of the <see cref="ImageData"/> class.
    /// </summary>
    /// <param name="width">The width of the image.</param>
    /// <param name="height">The height of the image.</param>
    /// <param name="data">The pixel data (assumed RGBA, 4 bytes per pixel).</param>
    public ImageData(int width, int height, byte[] data)
    {
      if (data == null)
      {
        throw new ArgumentNullException(nameof(data));
      }

      if (width <= 0 || height <= 0)
      {
        throw new ArgumentOutOfRangeException(nameof(width), "Width and height must be positive.");
      }

      // Assuming 4 bytes per pixel (RGBA)
      // SDL_Surface pixels are often in BGRA or ARGB depending on the surface format and endianness.
      // We need to be careful here. SDL_PIXELFORMAT_RGBA32 is a common target.
      // For SDL_LoadBMP, the surface is often in BGR format.
      // A conversion step might be needed if the surface is not RGBA.
      // For simplicity now, we assume data provided is already RGBA.
      if (data.Length != width * height * 4)
      {
        throw new ArgumentException("Data length does not match width, height, and RGBA format (4 bytes per pixel).", nameof(data));
      }

      this.Width = width;
      this.Height = height;
      this.Data = data;
    }

    /// <summary>
    /// Gets the width of the image in pixels.
    /// </summary>
    public int Width { get; }

    /// <summary>
    /// Gets the height of the image in pixels.
    /// </summary>
    public int Height { get; }

    /// <summary>
    /// Gets the raw pixel data.
    /// Assumed to be in RGBA format, 4 bytes per pixel.
    /// The data is stored as a copy of the input array.
    /// </summary>
    public byte[] Data { get; }
  }
}



================================================
File: src/Night/Graphics/PointF.cs
================================================
// <copyright file="PointF.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;

namespace Night
{
  /// <summary>
  /// Represents a 2D point with floating-point coordinates.
  /// </summary>
  public struct PointF
  {
    /// <summary>
    /// The X-coordinate of the point.
    /// </summary>
    public float X;

    /// <summary>
    /// The Y-coordinate of the point.
    /// </summary>
    public float Y;

    /// <summary>
    /// Initializes a new instance of the <see cref="PointF"/> struct.
    /// </summary>
    /// <param name="x">The X-coordinate.</param>
    /// <param name="y">The Y-coordinate.</param>
    public PointF(float x, float y)
    {
      this.X = x;
      this.Y = y;
    }
  }
}



================================================
File: src/Night/Graphics/Rectangle.cs
================================================
// <copyright file="Rectangle.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;

namespace Night
{
  /// <summary>
  /// Represents a rectangle with position (X, Y) and dimensions (Width, Height).
  /// </summary>
  public struct Rectangle
  {
    /// <summary>
    /// The X-coordinate of the top-left corner of the rectangle.
    /// </summary>
    public int X;

    /// <summary>
    /// The Y-coordinate of the top-left corner of the rectangle.
    /// </summary>
    public int Y;

    /// <summary>
    /// The width of the rectangle.
    /// </summary>
    public int Width;

    /// <summary>
    /// The height of the rectangle.
    /// </summary>
    public int Height;

    /// <summary>
    /// Initializes a new instance of the <see cref="Rectangle"/> struct.
    /// </summary>
    /// <param name="x">The X-coordinate of the top-left corner.</param>
    /// <param name="y">The Y-coordinate of the top-left corner.</param>
    /// <param name="width">The width of the rectangle.</param>
    /// <param name="height">The height of the rectangle.</param>
    public Rectangle(int x, int y, int width, int height)
    {
      this.X = x;
      this.Y = y;
      this.Width = width;
      this.Height = height;
    }
  }
}



================================================
File: src/Night/Graphics/Sprite.cs
================================================
// <copyright file="Sprite.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;

namespace Night
{
  /// <summary>
  /// Represents a 2D sprite, typically an image loaded into a texture.
  /// </summary>
  public class Sprite
  {
    /// <summary>
    /// Initializes a new instance of the <see cref="Sprite"/> class.
    /// </summary>
    /// <param name="texture">The SDL texture handle.</param>
    /// <param name="width">The width of the texture.</param>
    /// <param name="height">The height of the texture.</param>
    public Sprite(IntPtr texture, int width, int height)
    {
      this.Texture = texture;
      this.Width = width;
      this.Height = height;
    }

    /// <summary>
    /// Gets the SDL texture handle.
    /// </summary>
    public IntPtr Texture { get; }

    /// <summary>
    /// Gets the width of the sprite in pixels.
    /// </summary>
    public int Width { get; }

    /// <summary>
    /// Gets the height of the sprite in pixels.
    /// </summary>
    public int Height { get; }
  }
}



================================================
File: src/Night/Keyboard/KeyCode.cs
================================================
// <copyright file="KeyCode.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

namespace Night
{
  /// <summary>
  /// Represents keyboard scancodes. Values correspond to SDL_Scancode.
  /// </summary>
  /// <remarks>
  /// See SDL_scancode.h for the full list of SDL_Scancode values.
  /// This enum maps directly to SDL_Scancode values, representing the physical key on the keyboard.
  /// </remarks>
  public enum KeyCode
  {
    /// <summary>An unknown scancode.</summary>
    Unknown = 0,

    // Letters

    /// <summary>The 'A' key.</summary>
    A = 4,

    /// <summary>The 'B' key.</summary>
    B = 5,

    /// <summary>The 'C' key.</summary>
    C = 6,

    /// <summary>The 'D' key.</summary>
    D = 7,

    /// <summary>The 'E' key.</summary>
    E = 8,

    /// <summary>The 'F' key.</summary>
    F = 9,

    /// <summary>The 'G' key.</summary>
    G = 10,

    /// <summary>The 'H' key.</summary>
    H = 11,

    /// <summary>The 'I' key.</summary>
    I = 12,

    /// <summary>The 'J' key.</summary>
    J = 13,

    /// <summary>The 'K' key.</summary>
    K = 14,

    /// <summary>The 'L' key.</summary>
    L = 15,

    /// <summary>The 'M' key.</summary>
    M = 16,

    /// <summary>The 'N' key.</summary>
    N = 17,

    /// <summary>The 'O' key.</summary>
    O = 18,

    /// <summary>The 'P' key.</summary>
    P = 19,

    /// <summary>The 'Q' key.</summary>
    Q = 20,

    /// <summary>The 'R' key.</summary>
    R = 21,

    /// <summary>The 'S' key.</summary>
    S = 22,

    /// <summary>The 'T' key.</summary>
    T = 23,

    /// <summary>The 'U' key.</summary>
    U = 24,

    /// <summary>The 'V' key.</summary>
    V = 25,

    /// <summary>The 'W' key.</summary>
    W = 26,

    /// <summary>The 'X' key.</summary>
    X = 27,

    /// <summary>The 'Y' key.</summary>
    Y = 28,

    /// <summary>The 'Z' key.</summary>
    Z = 29,

    // Numbers (Top row)

    /// <summary>The '1' key.</summary>
    Alpha1 = 30,

    /// <summary>The '2' key.</summary>
    Alpha2 = 31,

    /// <summary>The '3' key.</summary>
    Alpha3 = 32,

    /// <summary>The '4' key.</summary>
    Alpha4 = 33,

    /// <summary>The '5' key.</summary>
    Alpha5 = 34,

    /// <summary>The '6' key.</summary>
    Alpha6 = 35,

    /// <summary>The '7' key.</summary>
    Alpha7 = 36,

    /// <summary>The '8' key.</summary>
    Alpha8 = 37,

    /// <summary>The '9' key.</summary>
    Alpha9 = 38,

    /// <summary>The '0' key.</summary>
    Alpha0 = 39,

    // Control keys

    /// <summary>The Return/Enter key.</summary>
    Return = 40,

    /// <summary>The Escape key.</summary>
    Escape = 41,

    /// <summary>The Backspace key.</summary>
    Backspace = 42,

    /// <summary>The Tab key.</summary>
    Tab = 43,

    /// <summary>The Space bar.</summary>
    Space = 44,

    /// <summary>The Minus '-' key.</summary>
    Minus = 45,

    /// <summary>The Equals '=' key.</summary>
    Equals = 46,

    /// <summary>The Left Bracket '[' key.</summary>
    Leftbracket = 47,

    /// <summary>The Right Bracket ']' key.</summary>
    Rightbracket = 48,

    /// <summary>The Backslash '' key.</summary>
    Backslash = 49,

    /// <summary>The Non-US Hash key (e.g., UK pound sign).</summary>
    NonUshash = 50,

    /// <summary>The Semicolon ';' key.</summary>
    Semicolon = 51,

    /// <summary>The Apostrophe ''' key.</summary>
    Apostrophe = 52,

    /// <summary>The Grave Accent (Backtick) '`' key.</summary>
    Grave = 53,

    /// <summary>The Comma ',' key.</summary>
    Comma = 54,

    /// <summary>The Period '.' key.</summary>
    Period = 55,

    /// <summary>The Slash '/' key.</summary>
    Slash = 56,

    /// <summary>The Caps Lock key.</summary>
    Capslock = 57,

    // Function keys

    /// <summary>The F1 key.</summary>
    F1 = 58,

    /// <summary>The F2 key.</summary>
    F2 = 59,

    /// <summary>The F3 key.</summary>
    F3 = 60,

    /// <summary>The F4 key.</summary>
    F4 = 61,

    /// <summary>The F5 key.</summary>
    F5 = 62,

    /// <summary>The F6 key.</summary>
    F6 = 63,

    /// <summary>The F7 key.</summary>
    F7 = 64,

    /// <summary>The F8 key.</summary>
    F8 = 65,

    /// <summary>The F9 key.</summary>
    F9 = 66,

    /// <summary>The F10 key.</summary>
    F10 = 67,

    /// <summary>The F11 key.</summary>
    F11 = 68,

    /// <summary>The F12 key.</summary>
    F12 = 69,

    /// <summary>The Print Screen key.</summary>
    Printscreen = 70,

    /// <summary>The Scroll Lock key.</summary>
    Scrolllock = 71,

    /// <summary>The Pause key.</summary>
    Pause = 72,

    /// <summary>The Insert key.</summary>
    Insert = 73,

    /// <summary>The Home key.</summary>
    Home = 74,

    /// <summary>The Page Up key.</summary>
    Pageup = 75,

    /// <summary>The Delete key.</summary>
    Delete = 76,

    /// <summary>The End key.</summary>
    End = 77,

    /// <summary>The Page Down key.</summary>
    Pagedown = 78,

    // Arrow keys

    /// <summary>The Right Arrow key.</summary>
    Right = 79,

    /// <summary>The Left Arrow key.</summary>
    Left = 80,

    /// <summary>The Down Arrow key.</summary>
    Down = 81,

    /// <summary>The Up Arrow key.</summary>
    Up = 82,

    /// <summary>The Num Lock or Clear key.</summary>
    NumlockClear = 83,

    // Keypad

    /// <summary>The Keypad Divide '/' key.</summary>
    KpDivide = 84,

    /// <summary>The Keypad Multiply '*' key.</summary>
    KpMultiply = 85,

    /// <summary>The Keypad Minus '-' key.</summary>
    KpMinus = 86,

    /// <summary>The Keypad Plus '+' key.</summary>
    KpPlus = 87,

    /// <summary>The Keypad Enter key.</summary>
    KpEnter = 88,

    /// <summary>The Keypad '1' key.</summary>
    Kp1 = 89,

    /// <summary>The Keypad '2' key.</summary>
    Kp2 = 90,

    /// <summary>The Keypad '3' key.</summary>
    Kp3 = 91,

    /// <summary>The Keypad '4' key.</summary>
    Kp4 = 92,

    /// <summary>The Keypad '5' key.</summary>
    Kp5 = 93,

    /// <summary>The Keypad '6' key.</summary>
    Kp6 = 94,

    /// <summary>The Keypad '7' key.</summary>
    Kp7 = 95,

    /// <summary>The Keypad '8' key.</summary>
    Kp8 = 96,

    /// <summary>The Keypad '9' key.</summary>
    Kp9 = 97,

    /// <summary>The Keypad '0' key.</summary>
    Kp0 = 98,

    /// <summary>The Keypad Period '.' key.</summary>
    KpPeriod = 99,

    /// <summary>The Non-US Backslash key.</summary>
    NonUsbackslash = 100,

    /// <summary>The Application key (context menu).</summary>
    Application = 101,

    /// <summary>The Power key.</summary>
    Power = 102,

    /// <summary>The Keypad Equals '=' key.</summary>
    KpEquals = 103,

    /// <summary>The F13 key.</summary>
    F13 = 104,

    /// <summary>The F14 key.</summary>
    F14 = 105,

    /// <summary>The F15 key.</summary>
    F15 = 106,

    /// <summary>The F16 key.</summary>
    F16 = 107,

    /// <summary>The F17 key.</summary>
    F17 = 108,

    /// <summary>The F18 key.</summary>
    F18 = 109,

    /// <summary>The F19 key.</summary>
    F19 = 110,

    /// <summary>The F20 key.</summary>
    F20 = 111,

    /// <summary>The F21 key.</summary>
    F21 = 112,

    /// <summary>The F22 key.</summary>
    F22 = 113,

    /// <summary>The F23 key.</summary>
    F23 = 114,

    /// <summary>The F24 key.</summary>
    F24 = 115,

    /// <summary>The Execute key.</summary>
    Execute = 116,

    /// <summary>The Help key.</summary>
    Help = 117,

    /// <summary>The Menu key.</summary>
    Menu = 118,

    /// <summary>The Select key.</summary>
    Select = 119,

    /// <summary>The Stop key.</summary>
    Stop = 120,

    /// <summary>The Again key.</summary>
    Again = 121,

    /// <summary>The Undo key.</summary>
    Undo = 122,

    /// <summary>The Cut key.</summary>
    Cut = 123,

    /// <summary>The Copy key.</summary>
    Copy = 124,

    /// <summary>The Paste key.</summary>
    Paste = 125,

    /// <summary>The Find key.</summary>
    Find = 126,

    /// <summary>The Mute key.</summary>
    Mute = 127,

    /// <summary>The Volume Up key.</summary>
    VolumeUp = 128,

    /// <summary>The Volume Down key.</summary>
    VolumeDown = 129,

    /// <summary>The Keypad Comma ',' key.</summary>
    KpComma = 133,

    // Modifier keys

    /// <summary>The Left Control key.</summary>
    LCtrl = 224,

    /// <summary>The Left Shift key.</summary>
    LShift = 225,

    /// <summary>The Left Alt key.</summary>
    LAlt = 226,

    /// <summary>The Left GUI key (Windows/Command/Meta key).</summary>
    LGUI = 227,

    /// <summary>The Right Control key.</summary>
    RCtrl = 228,

    /// <summary>The Right Shift key.</summary>
    RShift = 229,

    /// <summary>The Right Alt key.</summary>
    RAlt = 230,

    /// <summary>The Right GUI key (Windows/Command/Meta key).</summary>
    RGUI = 231,

    /// <summary>The Mode Switch key.</summary>
    Mode = 257,

    // Media keys (subset)

    /// <summary>The Media Play key.</summary>
    MediaPlay = 262,

    /// <summary>The Media Pause key.</summary>
    MediaPause = 263,

    /// <summary>The Media Record key.</summary>
    MediaRecord = 264,

    /// <summary>The Media Fast Forward key.</summary>
    MediaFastForward = 265,

    /// <summary>The Media Rewind key.</summary>
    MediaRewind = 266,

    /// <summary>The Media Next Track key.</summary>
    MediaNextTrack = 267,

    /// <summary>The Media Previous Track key.</summary>
    MediaPreviousTrack = 268,

    /// <summary>The Media Stop key.</summary>
    MediaStop = 269,

    /// <summary>The Media Eject key.</summary>
    MediaEject = 270,

    /// <summary>The Media Play/Pause key.</summary>
    MediaPlayPause = 271,

    /// <summary>The Media Select key.</summary>
    MediaSelect = 272,

    // Application control keys (subset)

    /// <summary>The Application Search key.</summary>
    AppSearch = 280,

    /// <summary>The Application Home key.</summary>
    AppHome = 281,

    /// <summary>The Application Back key.</summary>
    AppBack = 282,

    /// <summary>The Application Forward key.</summary>
    AppForward = 283,

    /// <summary>The Application Stop key.</summary>
    AppStop = 284,

    /// <summary>The Application Refresh key.</summary>
    AppRefresh = 285,

    /// <summary>The Application Bookmarks key.</summary>
    AppBookmarks = 286,
  }
}



================================================
File: src/Night/Keyboard/KeySymbol.cs
================================================
// <copyright file="KeySymbol.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using SDL3;

namespace Night
{
  /// <summary>
  /// Represents logical key symbols. Values correspond to SDL_Keycode.
  /// </summary>
  /// <remarks>
  /// This enum maps to SDL_Keycode values, representing the symbol produced by a key press
  /// under the current keyboard layout.
  /// </remarks>
  public enum KeySymbol : uint // Explicitly set underlying type to uint
  {
    /// <summary>An unknown key symbol.</summary>
    Unknown = SDL.Keycode.Unknown,

    // Letters (match SDL.Keycode values, which are ASCII for letters)

    /// <summary>The 'A' symbol.</summary>
    A = SDL.Keycode.A,

    /// <summary>The 'B' symbol.</summary>
    B = SDL.Keycode.B,

    /// <summary>The 'C' symbol.</summary>
    C = SDL.Keycode.C,

    /// <summary>The 'D' symbol.</summary>
    D = SDL.Keycode.D,

    /// <summary>The 'E' symbol.</summary>
    E = SDL.Keycode.E,

    /// <summary>The 'F' symbol.</summary>
    F = SDL.Keycode.F,

    /// <summary>The 'G' symbol.</summary>
    G = SDL.Keycode.G,

    /// <summary>The 'H' symbol.</summary>
    H = SDL.Keycode.H,

    /// <summary>The 'I' symbol.</summary>
    I = SDL.Keycode.I,

    /// <summary>The 'J' symbol.</summary>
    J = SDL.Keycode.J,

    /// <summary>The 'K' symbol.</summary>
    K = SDL.Keycode.K,

    /// <summary>The 'L' symbol.</summary>
    L = SDL.Keycode.L,

    /// <summary>The 'M' symbol.</summary>
    M = SDL.Keycode.M,

    /// <summary>The 'N' symbol.</summary>
    N = SDL.Keycode.N,

    /// <summary>The 'O' symbol.</summary>
    O = SDL.Keycode.O,

    /// <summary>The 'P' symbol.</summary>
    P = SDL.Keycode.P,

    /// <summary>The 'Q' symbol.</summary>
    Q = SDL.Keycode.Q,

    /// <summary>The 'R' symbol.</summary>
    R = SDL.Keycode.R,

    /// <summary>The 'S' symbol.</summary>
    S = SDL.Keycode.S,

    /// <summary>The 'T' symbol.</summary>
    T = SDL.Keycode.T,

    /// <summary>The 'U' symbol.</summary>
    U = SDL.Keycode.U,

    /// <summary>The 'V' symbol.</summary>
    V = SDL.Keycode.V,

    /// <summary>The 'W' symbol.</summary>
    W = SDL.Keycode.W,

    /// <summary>The 'X' symbol.</summary>
    X = SDL.Keycode.X,

    /// <summary>The 'Y' symbol.</summary>
    Y = SDL.Keycode.Y,

    /// <summary>The 'Z' symbol.</summary>
    Z = SDL.Keycode.Z,

    // Numbers (Top row - match SDL.Keycode values, which are ASCII for numbers)

    /// <summary>The '0' symbol.</summary>
    Alpha0 = SDL.Keycode.Alpha0,

    /// <summary>The '1' symbol.</summary>
    Alpha1 = SDL.Keycode.Alpha1,

    /// <summary>The '2' symbol.</summary>
    Alpha2 = SDL.Keycode.Alpha2,

    /// <summary>The '3' symbol.</summary>
    Alpha3 = SDL.Keycode.Alpha3,

    /// <summary>The '4' symbol.</summary>
    Alpha4 = SDL.Keycode.Alpha4,

    /// <summary>The '5' symbol.</summary>
    Alpha5 = SDL.Keycode.Alpha5,

    /// <summary>The '6' symbol.</summary>
    Alpha6 = SDL.Keycode.Alpha6,

    /// <summary>The '7' symbol.</summary>
    Alpha7 = SDL.Keycode.Alpha7,

    /// <summary>The '8' symbol.</summary>
    Alpha8 = SDL.Keycode.Alpha8,

    /// <summary>The '9' symbol.</summary>
    Alpha9 = SDL.Keycode.Alpha9,

    // Common control keys

    /// <summary>The Return/Enter symbol.</summary>
    Return = SDL.Keycode.Return,

    /// <summary>The Escape symbol.</summary>
    Escape = SDL.Keycode.Escape,

    /// <summary>The Backspace symbol.</summary>
    Backspace = SDL.Keycode.Backspace,

    /// <summary>The Tab symbol.</summary>
    Tab = SDL.Keycode.Tab,

    /// <summary>The Space symbol.</summary>
    Space = SDL.Keycode.Space,

    // Punctuation (example, more can be added)

    /// <summary>The Minus '-' symbol.</summary>
    Minus = SDL.Keycode.Minus,

    /// <summary>The Equals '=' symbol.</summary>
    Equals = SDL.Keycode.Equals,

    /// <summary>The Left Bracket '[' symbol.</summary>
    Leftbracket = SDL.Keycode.LeftBracket,

    /// <summary>The Right Bracket ']' symbol.</summary>
    Rightbracket = SDL.Keycode.RightBracket,

    /// <summary>The Backslash '' symbol.</summary>
    Backslash = SDL.Keycode.Backslash,

    /// <summary>The Semicolon ';' symbol.</summary>
    Semicolon = SDL.Keycode.Semicolon,

    /// <summary>The Apostrophe ''' symbol.</summary>
    Apostrophe = SDL.Keycode.Apostrophe,

    /// <summary>The Grave Accent (Backtick) '`' symbol.</summary>
    Grave = SDL.Keycode.Grave,

    /// <summary>The Comma ',' symbol.</summary>
    Comma = SDL.Keycode.Comma,

    /// <summary>The Period '.' symbol.</summary>
    Period = SDL.Keycode.Period,

    /// <summary>The Slash '/' symbol.</summary>
    Slash = SDL.Keycode.Slash,

    // Function keys

    /// <summary>The F1 symbol.</summary>
    F1 = SDL.Keycode.F1,

    /// <summary>The F2 symbol.</summary>
    F2 = SDL.Keycode.F2,

    /// <summary>The F3 symbol.</summary>
    F3 = SDL.Keycode.F3,

    /// <summary>The F4 symbol.</summary>
    F4 = SDL.Keycode.F4,

    /// <summary>The F5 symbol.</summary>
    F5 = SDL.Keycode.F5,

    /// <summary>The F6 symbol.</summary>
    F6 = SDL.Keycode.F6,

    /// <summary>The F7 symbol.</summary>
    F7 = SDL.Keycode.F7,

    /// <summary>The F8 symbol.</summary>
    F8 = SDL.Keycode.F8,

    /// <summary>The F9 symbol.</summary>
    F9 = SDL.Keycode.F9,

    /// <summary>The F10 symbol.</summary>
    F10 = SDL.Keycode.F10,

    /// <summary>The F11 symbol.</summary>
    F11 = SDL.Keycode.F11,

    /// <summary>The F12 symbol.</summary>
    F12 = SDL.Keycode.F12,

    // Arrow keys

    /// <summary>The Right Arrow symbol.</summary>
    Right = SDL.Keycode.Right,

    /// <summary>The Left Arrow symbol.</summary>
    Left = SDL.Keycode.Left,

    /// <summary>The Down Arrow symbol.</summary>
    Down = SDL.Keycode.Down,

    /// <summary>The Up Arrow symbol.</summary>
    Up = SDL.Keycode.Up,

    // Modifiers

    /// <summary>The Left Control symbol.</summary>
    LCtrl = SDL.Keycode.LCtrl,

    /// <summary>The Left Shift symbol.</summary>
    LShift = SDL.Keycode.LShift,

    /// <summary>The Left Alt symbol.</summary>
    LAlt = SDL.Keycode.LAlt,

    /// <summary>The Left GUI symbol (Windows/Command/Meta key).</summary>
    LGUI = SDL.Keycode.LGui,

    /// <summary>The Right Control symbol.</summary>
    RCtrl = SDL.Keycode.RCtrl,

    /// <summary>The Right Shift symbol.</summary>
    RShift = SDL.Keycode.RShift,

    /// <summary>The Right Alt symbol.</summary>
    RAlt = SDL.Keycode.RAlt,

    /// <summary>The Right GUI symbol (Windows/Command/Meta key).</summary>
    RGUI = SDL.Keycode.RGUI,
  }
}



================================================
File: src/Night/Keyboard/Keyboard.cs
================================================
// <copyright file="Keyboard.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;
using System.Runtime.InteropServices;

using Night;

using SDL3;

namespace Night
{
  /// <summary>
  /// Provides an interface to the user's keyboard.
  /// </summary>
  public static class Keyboard
  {
    /// <summary>
    /// Checks whether a certain key is down.
    /// </summary>
    /// <param name="key">The key to check.</param>
    /// <returns>True if the key is down, false otherwise.</returns>
    public static bool IsDown(KeyCode key)
    {
      if (!Framework.IsInputInitialized)
      {
        Console.WriteLine("Warning: Night.Keyboard.IsDown called before input system is initialized. Returning false.");
        return false;
      }

      bool[] keyboardState = SDL.GetKeyboardState(out int _);

      if (keyboardState == null)
      {
        Console.WriteLine("Warning: SDL.GetKeyboardState returned a null array.");
        return false;
      }

      SDL.Scancode sdlScancode = (SDL.Scancode)key;

      if (sdlScancode == SDL.Scancode.Unknown)
      {
        return false;
      }

      if ((int)sdlScancode >= keyboardState.Length || (int)sdlScancode < 0)
      {
        Console.WriteLine($"Warning: Scancode {(int)sdlScancode} is out of bounds (numKeys: {keyboardState.Length}).");
        return false;
      }

      return keyboardState[(int)sdlScancode];
    }
  }
}



================================================
File: src/Night/Mouse/Mouse.cs
================================================
// <copyright file="Mouse.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;

using Night;

using SDL3;

namespace Night
{
  /// <summary>
  /// Provides an interface to the user's mouse.
  /// </summary>
  public static class Mouse
  {
    /// <summary>
    /// Checks whether a certain mouse button is down.
    /// This function does not detect mouse wheel scrolling.
    /// </summary>
    /// <param name="button">The index of a button to check. 1 is the primary mouse button, 2 is the secondary mouse button, 3 is the middle button, 4 is the X1 button (typically "back"), and 5 is the X2 button (typically "forward").</param>
    /// <returns>True if the button is down, false otherwise.</returns>
    public static bool IsDown(MouseButton button)
    {
      if (!Framework.IsInputInitialized)
      {
        Console.WriteLine("Warning: Night.Mouse.IsDown called before input system is initialized. Returning false.");
        return false;
      }

      SDL.MouseButtonFlags mouseState = SDL.GetMouseState(out float _, out float _);

      SDL.MouseButtonFlags buttonMask;
      switch (button)
      {
        case MouseButton.Left:
          buttonMask = SDL.MouseButtonFlags.Left;
          break;
        case MouseButton.Middle:
          buttonMask = SDL.MouseButtonFlags.Middle;
          break;
        case MouseButton.Right:
          buttonMask = SDL.MouseButtonFlags.Right;
          break;
        case MouseButton.X1:
          buttonMask = SDL.MouseButtonFlags.X1;
          break;
        case MouseButton.X2:
          buttonMask = SDL.MouseButtonFlags.X2;
          break;
        case MouseButton.Unknown:
        default:
          return false;
      }

      return (mouseState & buttonMask) != 0;
    }

    /// <summary>
    /// Gets the current position of the mouse cursor in the window.
    /// </summary>
    /// <returns>A tuple (int X, int Y) representing the mouse cursor coordinates.</returns>
    public static (int X, int Y) GetPosition()
    {
      if (!Framework.IsInputInitialized)
      {
        Console.WriteLine("Warning: Night.Mouse.GetPosition called before input system is initialized. Returning (0,0).");
        return (0, 0);
      }

      float mouseX, mouseY;
      _ = SDL.GetMouseState(out mouseX, out mouseY);
      return ((int)mouseX, (int)mouseY);
    }

    /// <summary>
    /// Sets the visibility of the mouse cursor.
    /// </summary>
    /// <param name="visible">True to show the cursor, false to hide it.</param>
    public static void SetVisible(bool visible)
    {
      if (!Framework.IsInputInitialized)
      {
        return;
      }

      if (visible)
      {
        _ = SDL.ShowCursor();
      }
      else
      {
        _ = SDL.HideCursor();
      }
    }

    /// <summary>
    /// Grabs the mouse, confining it to the window.
    /// </summary>
    /// <param name="grabbed">True to grab the mouse, false to release it.</param>
    public static void SetGrabbed(bool grabbed)
    {
      if (!Framework.IsInputInitialized || Window.Handle == nint.Zero)
      {
        return;
      }

      _ = SDL.SetWindowMouseGrab(Window.Handle, grabbed);
    }

    /// <summary>
    /// Sets whether relative mouse mode is enabled for the current window.
    /// In relative mode, the cursor is hidden and mouse motion is reported as relative to the last position.
    /// </summary>
    /// <param name="enabled">True to enable relative mode, false to disable it.</param>
    public static void SetRelativeMode(bool enabled)
    {
      if (!Framework.IsInputInitialized || Window.Handle == nint.Zero)
      {
        return;
      }

      _ = SDL.SetWindowRelativeMouseMode(Window.Handle, enabled);
    }
  }
}



================================================
File: src/Night/Mouse/MouseButton.cs
================================================
// <copyright file="MouseButton.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;

namespace Night
{
  /// <summary>
  /// Represents mouse buttons. Values correspond to SDL_MouseButtonFlags/
  /// SDL3.SDL.Button* constants.
  /// (e.g., Left is 1, Middle is 2, etc.)
  /// </summary>
  public enum MouseButton
  {
    /// <summary>
    /// An unknown or unspecified mouse button.
    /// </summary>
    Unknown = 0, // Not a direct SDL button constant

    /// <summary>
    /// The left mouse button.
    /// </summary>
    Left = 1,    // Corresponds to SDL.ButtonLeft

    /// <summary>
    /// The middle mouse button.
    /// </summary>
    Middle = 2,  // Corresponds to SDL.ButtonMiddle

    /// <summary>
    /// The right mouse button.
    /// </summary>
    Right = 3,   // Corresponds to SDL.ButtonRight

    /// <summary>
    /// The first extra mouse button (often "back").
    /// </summary>
    X1 = 4,      // Corresponds to SDL.ButtonX1 (Typically "back")

    /// <summary>
    /// The second extra mouse button (often "forward").
    /// </summary>
    X2 = 5,       // Corresponds to SDL.ButtonX2 (Typically "forward")
  }
}



================================================
File: src/Night/SDL/NightSDL.cs
================================================
// <copyright file="NightSDL.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;

using SDL3;

namespace Night
{
  /// <summary>
  /// Provides direct access to some SDL3 functions using SDL3-CS bindings.
  /// </summary>
  public static class NightSDL
  {
    /// <summary>
    /// Get the version of SDL that is linked against the Night Engine.
    /// Calls the SDL3-CS binding for SDL_GetVersion() and returns a packed int.
    /// https://wiki.libsdl.org/SDL3/SDL_GetVersion.
    /// </summary>
    /// <returns>A string representing the SDL version "major.minor.patch".</returns>
    public static string GetVersion()
    {
      int sdl_version = SDL.GetVersion();
      int major = sdl_version / 1000000;
      int minor = (sdl_version / 1000) % 1000;
      int patch = sdl_version % 1000;
      return $"{major}.{minor}.{patch}";
    }

    /// <summary>
    /// Retrieve a message about the last error that occurred on the current thread.
    /// Calls the SDL3-CS binding for SDL_GetError() and returns a string.
    /// https://wiki.libsdl.org/SDL3/SDL_GetError.
    /// </summary>
    /// <returns>Returns a message with information about the specific error that occurred, or an empty string if there hasn't been an error message set since the last call to SDL_ClearError().</returns>
    public static string GetError()
    {
      return SDL.GetError();
    }
  }
}



================================================
File: src/Night/System/System.cs
================================================
// <copyright file="System.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

namespace Night
{
  using SDL3;

  /// <summary>
  /// Provides access to system-level information and functions.
  /// </summary>
  public static class System
  {
    /// <summary>
    /// Puts text in the system's clipboard.
    /// </summary>
    /// <param name="text">The new text to hold in the system's clipboard.</param>
    /// <returns>True if the operation was successful, false otherwise.</returns>
    public static bool SetClipboardText(string text)
    {
      return SDL.SetClipboardText(text);
    }

    // TODO: Consider adding GetClipboardText if in scope for future versions.
    // public static string GetClipboardText()
    // {
    //     return SDL.GetClipboardText();
    // }
  }
}



================================================
File: src/Night/Timer/Timer.cs
================================================
// <copyright file="Timer.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;
using System.Threading;

using SDL3;

namespace Night
{
  /// <summary>
  /// Provides high-resolution timing functionality.
  /// </summary>
  public static class Timer
  {
    // _timerStartTime is initialized when the Timer class is first loaded.
    private static readonly ulong TimerStartTime = SDL.GetPerformanceCounter();

    /// <summary>
    /// Gets or sets the current frames per second. Updated by the framework.
    /// </summary>
    internal static int CurrentFPS { get; set; } = 0;

    /// <summary>
    /// Gets or sets the delta time of the current frame. Updated by <see cref="Step()"/>.
    /// </summary>
    internal static float CurrentDelta { get; set; } = 0.0f;

    /// <summary>
    /// Gets or sets the average delta time over recent frames. Updated by the framework.
    /// </summary>
    internal static double CurrentAverageDelta { get; set; } = 0.0;

    /// <summary>
    /// Gets or sets the timestamp of the last call to <see cref="Step()"/>. Initialized by <see cref="Initialize()"/>.
    /// </summary>
    internal static ulong LastStepTime { get; set; } = 0;

    /// <summary>
    /// Gets the performance counter frequency. Initialized by <see cref="Initialize()"/>.
    /// </summary>
    internal static ulong PerformanceFrequency { get; private set; } = 1;

    /// <summary>
    /// Gets the time elapsed since the Timer module was loaded, in seconds.
    /// </summary>
    /// <returns>The time in seconds. Given as a decimal, accurate to the microsecond.</returns>
    public static double GetTime()
    {
      if (PerformanceFrequency == 0)
      {
        return 0.0;
      }

      ulong currentTimeCounter = SDL.GetPerformanceCounter();
      return (double)(currentTimeCounter - TimerStartTime) / PerformanceFrequency;
    }

    /// <summary>
    /// Gets the current frames per second (FPS).
    /// </summary>
    /// <returns>The current FPS.</returns>
    public static int GetFPS()
    {
      return CurrentFPS;
    }

    /// <summary>
    /// Gets the time elapsed since the last frame, in seconds.
    /// This is the same value passed to. <code>IGame.Update(float deltaTime)</code>.
    /// </summary>
    /// <returns>The delta time in seconds.</returns>
    public static float GetDelta()
    {
      return CurrentDelta;
    }

    /// <summary>
    /// Returns the average delta time (seconds per frame) over the last second.
    /// </summary>
    /// <returns>The average delta time over the last second.</returns>
    public static double GetAverageDelta()
    {
      return CurrentAverageDelta;
    }

    /// <summary>
    /// Pauses the current thread for the specified amount of time.
    /// This function causes the entire thread to pause. Graphics will not draw,
    /// input events will not trigger, code will not run, and the window will
    /// be unresponsive if you use this in the main game thread.
    /// </summary>
    /// <param name="seconds">Seconds to sleep for.</param>
    public static void Sleep(double seconds)
    {
      if (seconds < 0)
      {
        return;
      }

      Thread.Sleep(TimeSpan.FromSeconds(seconds));
    }

    /// <summary>
    /// Measures the time between the last call to this function and the current one.
    /// Calling this function updates the value returned by <see cref="GetDelta()"/>.
    /// This is typically called once per frame by the game loop to determine the delta time for that frame.
    /// </summary>
    /// <returns>The time passed (in seconds) since the last call to Step().</returns>
    public static double Step()
    {
      ulong now = SDL.GetPerformanceCounter();
      double deltaTimeSeconds = 0;

      // Ensure LastStepTime and PerformanceFrequency have been initialized
      if (LastStepTime > 0 && PerformanceFrequency > 0)
      {
        ulong elapsedTicks = now - LastStepTime;
        deltaTimeSeconds = (double)elapsedTicks / PerformanceFrequency;
      }

      // Clamp deltaTime to avoid large jumps
      // Approx 15 FPS, or 66.6ms
      if (deltaTimeSeconds > 0.0666)
      {
        deltaTimeSeconds = 0.0666;
      }

      LastStepTime = now;
      CurrentDelta = (float)deltaTimeSeconds;

      return deltaTimeSeconds;
    }

    /// <summary>
    /// Initializes essential timer values. Must be called once by the framework
    /// before the game loop begins and after SDL has been initialized.
    /// </summary>
    internal static void Initialize()
    {
      PerformanceFrequency = SDL.GetPerformanceFrequency();
      if (PerformanceFrequency == 0)
      {
        // Avoid division by zero, though SDL should provide valid freq.
        PerformanceFrequency = 1;
      }

      // Initialize for the first call to Step()
      LastStepTime = SDL.GetPerformanceCounter();

      // _timerStartTime is already initialized at class load (line 14) and should remain as such
      // to reflect "time since module loaded" for GetTime().
      // Do not re-assign _timerStartTime here.
    }
  }
}



================================================
File: src/Night/Window/FullscreenType.cs
================================================
// <copyright file="FullscreenType.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;

namespace Night
{
  /// <summary>
  /// Types of fullscreen modes.
  /// </summary>
  public enum FullscreenType
  {
    /// <summary>
    /// Standard exclusive-fullscreen mode. Changes the display mode (actual resolution) of the monitor.
    /// </summary>
    Exclusive,

    /// <summary>
    /// Borderless fullscreen windowed mode. A borderless screen-sized window is created which sits on top of all desktop UI elements.
    /// The window is automatically resized to match the dimensions of the desktop, and its size cannot be changed.
    /// </summary>
    Desktop,
  }
}



================================================
File: src/Night/Window/Window.cs
================================================
// <copyright file="Window.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

using SDL3;

namespace Night
{
  /// <summary>
  /// Provides an interface for modifying and retrieving information about the program's window.
  /// </summary>
  public static class Window
  {
    private static nint window = nint.Zero;
    private static nint renderer = nint.Zero;
    private static bool isVideoInitialized = false;
    private static bool isWindowOpen = false;
    private static FullscreenType currentFullscreenType = FullscreenType.Desktop;
    private static ImageData? currentIconData = null;
    private static string? currentIconPathForDebug = null;

    /// <summary>
    /// Gets the pointer to the internal SDL renderer. For use by Night.Graphics.
    /// </summary>
    internal static nint RendererPtr => renderer;

    /// <summary>
    /// Gets the handle to the internal SDL window. For use by other Night modules or internal methods.
    /// </summary>
    internal static nint Handle => window;

    /// <summary>
    /// Sets the window icon.
    /// </summary>
    /// <param name="imagePath">The path to the icon image file (e.g., .ico, .png, .bmp).
    /// Uses SDL_image for loading, so supports various formats.</param>
    /// <returns>True if the icon was set successfully, false otherwise.</returns>
    public static bool SetIcon(string imagePath)
    {
      currentIconData = null;
      currentIconPathForDebug = null;

      if (window == nint.Zero)
      {
        Console.WriteLine("Night.Window.SetIcon: Window handle is null. Icon not set.");
        return false;
      }

      if (string.IsNullOrEmpty(imagePath))
      {
        Console.WriteLine("Night.Window.SetIcon: imagePath is null or empty. Icon not set.");
        return false;
      }

      _ = SDL.ClearError();
      nint loadedSurfacePtr = SDL3.Image.Load(imagePath);
      if (loadedSurfacePtr == nint.Zero)
      {
        string imgError = SDL.GetError();
        Console.WriteLine($"Night.Window.SetIcon: Failed to load image '{imagePath}' using SDL_image. Error: {imgError}");
        return false;
      }

      SDL.PixelFormat targetFormatEnum = SDL.PixelFormat.RGBA8888;
      nint convertedSurfacePtr = SDL.ConvertSurface(loadedSurfacePtr, targetFormatEnum);

      if (convertedSurfacePtr == nint.Zero)
      {
        string sdlError = SDL.GetError();
        Console.WriteLine($"Night.Window.SetIcon: Failed to convert surface to target format. SDL Error: {sdlError}");
        SDL.DestroySurface(loadedSurfacePtr);
        return false;
      }

      try
      {
        if (!SDL.SetWindowIcon(window, convertedSurfacePtr))
        {
          string sdlError = SDL.GetError();
          Console.WriteLine($"Night.Window.SetIcon: SDL_SetWindowIcon failed. SDL Error: {sdlError}");
          return false;
        }

        SDL.Surface convertedSurfaceStruct = Marshal.PtrToStructure<SDL.Surface>(convertedSurfacePtr);
        int width = convertedSurfaceStruct.Width;
        int height = convertedSurfaceStruct.Height;

        IntPtr detailsPtr = SDL.GetPixelFormatDetails(convertedSurfaceStruct.Format);
        if (detailsPtr == IntPtr.Zero)
        {
          string sdlError = SDL.GetError();
          Console.WriteLine($"Night.Window.SetIcon: Failed to get pixel format details. SDL Error: {sdlError}");
          return false;
        }

        SDL.PixelFormatDetails pixelFormatDetails = Marshal.PtrToStructure<SDL.PixelFormatDetails>(detailsPtr);
        int bytesPerPixel = pixelFormatDetails.BytesPerPixel;

        if (bytesPerPixel != 4)
        {
          Console.WriteLine($"Night.Window.SetIcon: Converted surface is not 4bpp as expected for RGBA. Actual bpp: {bytesPerPixel}, Format: {convertedSurfaceStruct.Format}");
          return false;
        }

        byte[] pixelData = new byte[width * height * bytesPerPixel];
        Marshal.Copy(convertedSurfaceStruct.Pixels, pixelData, 0, pixelData.Length);

        currentIconData = new ImageData(width, height, pixelData);
        currentIconPathForDebug = imagePath;
        return true;
      }
      catch (Exception e)
      {
        Console.WriteLine($"Night.Window.SetIcon: Error processing surface or creating ImageData. Error: {e.Message}");
        return false;
      }
      finally
      {
        if (convertedSurfacePtr != nint.Zero)
        {
          SDL.DestroySurface(convertedSurfacePtr);
        }

        if (loadedSurfacePtr != nint.Zero)
        {
          SDL.DestroySurface(loadedSurfacePtr);
        }
      }
    }

    /// <summary>
    /// Gets the image data of the currently set window icon.
    /// </summary>
    /// <returns>The <see cref="ImageData"/> of the icon, or null if no icon has been set or an error occurred.</returns>
    public static ImageData? GetIcon()
    {
      return currentIconData;
    }

    /// <summary>
    ///     Sets the display mode and properties of the window.
    /// </summary>
    /// <param name="width">The width of the window.</param>
    /// <param name="height">The height of the window.</param>
    /// <param name="flags">SDL Window flags to apply.</param>
    /// <returns>True if the mode was set successfully, false otherwise.</returns>
    public static bool SetMode(int width, int height, SDL.WindowFlags flags)
    {
      if (!isVideoInitialized)
      {
        if (!SDL.InitSubSystem(SDL.InitFlags.Video))
        {
          return false;
        }

        isVideoInitialized = true;
      }

      if (window != nint.Zero)
      {
        if (renderer != nint.Zero)
        {
          SDL.DestroyRenderer(renderer);
          renderer = nint.Zero;
        }

        SDL.DestroyWindow(window);
        window = nint.Zero;
        isWindowOpen = false;
      }

      window = SDL.CreateWindow("Night Engine", width, height, flags);
      if (window == nint.Zero)
      {
        isWindowOpen = false;
        return false;
      }

      renderer = SDL.CreateRenderer(window, null);
      if (renderer == nint.Zero)
      {
        SDL.DestroyWindow(window);
        window = nint.Zero;
        isWindowOpen = false;
        return false;
      }

      isWindowOpen = true;
      return true;
    }

    /// <summary>
    /// Sets the window title.
    /// </summary>
    /// <param name="title">The new window title.</param>
    public static void SetTitle(string title)
    {
      if (window == nint.Zero)
      {
        string errorMsg = "Error in Night.Window.SetTitle: Window handle is null. Was SetMode called successfully?";
        throw new InvalidOperationException(errorMsg);
      }

      if (!SDL.SetWindowTitle(window, title))
      {
        string sdlError = SDL.GetError();
        throw new Exception($"SDL Error in Night.Window.SetTitle: {sdlError}");
      }
    }

    /// <summary>
    /// Checks if the window is open.
    /// </summary>
    /// <returns>True if the window is open, false otherwise.</returns>
    public static bool IsOpen()
    {
      return isWindowOpen && window != nint.Zero;
    }

    /// <summary>
    /// Signals that the window should close.
    /// This is typically called by the engine when a quit event is received.
    /// TODO: Does this need to align with Love2D more? https://love2d.org/wiki/love.window.close.
    /// </summary>
    public static void Close()
    {
      isWindowOpen = false;
    }

    /// <summary>
    /// Gets the number of connected monitors.
    /// </summary>
    /// <returns>The number of currently connected displays.</returns>
    public static int GetDisplayCount()
    {
      if (!isVideoInitialized)
      {
        EnsureVideoInitialized();
      }

      uint[]? displays = SDL.GetDisplays(out int count);
      if (displays == null || count < 0)
      {
        return 0;
      }

      return count;
    }

    /// <summary>
    /// Gets the width and height of the desktop.
    /// </summary>
    /// <param name="displayIndex">The index of the display to query (0 for the primary display).</param>
    /// <returns>A tuple containing the width and height of the desktop, or (0,0) if an error occurs.</returns>
    public static (int Width, int Height) GetDesktopDimensions(int displayIndex = 0)
    {
      if (!isVideoInitialized)
      {
        EnsureVideoInitialized();
      }

      uint[]? actualDisplayIDs = SDL.GetDisplays(out int displayCount);
      if (actualDisplayIDs == null || displayCount <= 0 || displayIndex < 0 || displayIndex >= displayCount)
      {
        return (0, 0);
      }

      uint targetDisplayID = actualDisplayIDs[displayIndex];

      SDL.DisplayMode? mode = SDL.GetDesktopDisplayMode(targetDisplayID);
      if (mode == null)
      {
        return (0, 0);
      }

      return (mode.Value.W, mode.Value.H);
    }

    /// <summary>
    /// Gets whether the window is fullscreen.
    /// </summary>
    /// <returns>A tuple: (bool IsFullscreen, FullscreenType FsType).
    /// IsFullscreen is true if the window is in any fullscreen mode, false otherwise.
    /// FsType indicates the type of fullscreen mode used.</returns>
    public static (bool IsFullscreen, FullscreenType FsType) GetFullscreen()
    {
      if (window == nint.Zero)
      {
        return (false, currentFullscreenType);
      }

      var flags = SDL.GetWindowFlags(window);
      if ((flags & SDL.WindowFlags.Fullscreen) != 0)
      {
        return (true, currentFullscreenType);
      }

      return (false, currentFullscreenType);
    }

    /// <summary>
    /// Enters or exits fullscreen. The display to use when entering fullscreen is chosen
    /// based on which display the window is currently in, if multiple monitors are connected.
    /// </summary>
    /// <param name="fullscreen">Whether to enter or exit fullscreen mode.</param>
    /// <param name="fsType">The type of fullscreen mode to use (Desktop or Exclusive).</param>
    /// <returns>True if the operation was successful, false otherwise.</returns>
    public static bool SetFullscreen(bool fullscreen, FullscreenType fsType = FullscreenType.Desktop)
    {
      if (window == nint.Zero)
      {
        return false;
      }

      if (fullscreen)
      {
        currentFullscreenType = fsType;
        if (fsType == FullscreenType.Exclusive)
        {
          uint displayID = SDL.GetDisplayForWindow(window);
          if (displayID == 0 && SDL.GetError() != null && SDL.GetError().Length > 0)
          {
            return false;
          }

          SDL.DisplayMode? dm = SDL.GetDesktopDisplayMode(displayID);
          if (dm.HasValue)
          {
            if (!SDL.SetWindowFullscreenMode(window, dm.Value))
            {
              return false;
            }
          }
          else
          {
            return false;
          }
        }
        else
        {
          if (!SDL.SetWindowFullscreenMode(window, nint.Zero))
          {
          }

          if (!SDL.SetWindowBordered(window, false))
          {
            return false;
          }

          uint displayID = SDL.GetDisplayForWindow(window);
          if (displayID == 0 && SDL.GetError() != null && SDL.GetError().Length > 0)
          {
            return false;
          }

          var (desktopW, desktopH) = GetDesktopDimensionsForDisplayID(displayID);
          if (desktopW > 0 && desktopH > 0)
          {
            _ = SDL.SetWindowPosition(window, 0, 0);
            if (!SDL.SetWindowSize(window, desktopW, desktopH))
            {
              return false;
            }
          }
          else
          {
            return false;
          }
        }
      }
      else
      {
        currentFullscreenType = FullscreenType.Desktop;
        if (!SDL.SetWindowFullscreenMode(window, nint.Zero))
        {
        }

        if (!SDL.SetWindowBordered(window, true))
        {
          return false;
        }

        _ = SDL.RestoreWindow(window);
      }

      return true;
    }

    /// <summary>
    /// Gets a list of available fullscreen display modes for a given display.
    /// </summary>
    /// <param name="displayIndex">The index of the display (0 for primary).</param>
    /// <returns>A list of (Width, Height) tuples representing available modes, or an empty list on error.</returns>
    public static List<(int Width, int Height)> GetFullscreenModes(int displayIndex = 0)
    {
      if (!isVideoInitialized)
      {
        EnsureVideoInitialized();
      }

      var modesList = new List<(int Width, int Height)>();
      var uniqueModes = new HashSet<(int Width, int Height)>();

      uint[]? actualDisplayIDs = SDL.GetDisplays(out int displayCount);
      if (actualDisplayIDs == null || displayCount <= 0 || displayIndex < 0 || displayIndex >= displayCount)
      {
        return modesList;
      }

      uint targetDisplayID = actualDisplayIDs[displayIndex];

      SDL.DisplayMode[]? displayModes = SDL.GetFullscreenDisplayModes(targetDisplayID, out int count);

      if (displayModes == null || count <= 0 || displayModes.Length != count)
      {
        return modesList;
      }

      foreach (var mode in displayModes)
      {
        var currentModeTuple = (mode.W, mode.H);
        if (uniqueModes.Add(currentModeTuple))
        {
          modesList.Add(currentModeTuple);
        }
      }

      return modesList;
    }

    /// <summary>
    /// Gets the current window mode (width, height, and flags).
    /// </summary>
    /// <returns>A WindowMode struct containing width, height, and current flags.</returns>
    public static WindowMode GetMode()
    {
      if (window == nint.Zero)
      {
        return new WindowMode { Width = 0, Height = 0, Fullscreen = false, FullscreenType = currentFullscreenType, Borderless = false };
      }

      _ = SDL.GetWindowSize(window, out int w, out int h);
      var flags = SDL.GetWindowFlags(window);

      bool isSdlExclusiveFullscreen = (flags & SDL.WindowFlags.Fullscreen) != 0;
      bool isSdlBorderless = (flags & SDL.WindowFlags.Borderless) != 0;
      FullscreenType reportedFsType = currentFullscreenType;

      bool actualReportedFullscreenState;
      if (isSdlExclusiveFullscreen)
      {
        actualReportedFullscreenState = true;
        reportedFsType = FullscreenType.Exclusive;
      }
      else if (isSdlBorderless)
      {
        if (currentFullscreenType == FullscreenType.Desktop)
        {
          uint currentDisplayID = SDL.GetDisplayForWindow(window);
          if (currentDisplayID != 0)
          {
            var (desktopW, desktopH) = GetDesktopDimensionsForDisplayID(currentDisplayID);
            if (w == desktopW && h == desktopH)
            {
              actualReportedFullscreenState = true;
            }
            else
            {
              actualReportedFullscreenState = false;
            }
          }
          else
          {
            actualReportedFullscreenState = false;
          }
        }
        else
        {
          actualReportedFullscreenState = false;
        }
      }
      else
      {
        actualReportedFullscreenState = false;
      }

      return new WindowMode
      {
        Width = w,
        Height = h,
        Fullscreen = actualReportedFullscreenState,
        FullscreenType = reportedFsType,
        Borderless = isSdlBorderless,
      };
    }

    /// <summary>
    /// Gets the DPI scale factor of the display containing the window.
    /// </summary>
    /// <returns>The DPI scale factor, or 1.0f on error or if not applicable.</returns>
    public static float GetDPIScale()
    {
      if (window == nint.Zero)
      {
        return 1.0f;
      }

      float dpiScale = SDL.GetWindowDisplayScale(window);
      if (dpiScale <= 0f)
      {
        return 1.0f;
      }

      return dpiScale;
    }

    /// <summary>
    /// Converts a value from density-independent units to pixels, using the window's current DPI scale.
    /// </summary>
    /// <param name="value">The value in density-independent units.</param>
    /// <returns>The equivalent value in pixels.</returns>
    public static float ToPixels(float value)
    {
      return value * GetDPIScale();
    }

    /// <summary>
    /// Converts a value from pixels to density-independent units, using the window's current DPI scale.
    /// </summary>
    /// <param name="value">The value in pixels.</param>
    /// <returns>The equivalent value in density-independent units.</returns>
    public static float FromPixels(float value)
    {
      float dpiScale = GetDPIScale();
      if (dpiScale == 0f)
      {
        return value;
      }

      return value / dpiScale;
    }

    /// <summary>
    /// Internal method to shut down the window and renderer, and quit the video subsystem.
    /// Should be called by the FrameworkLoop at the end of the application.
    /// </summary>
    internal static void Shutdown()
    {
      if (renderer != nint.Zero)
      {
        SDL.DestroyRenderer(renderer);
        renderer = nint.Zero;
      }

      if (window != nint.Zero)
      {
        SDL.DestroyWindow(window);
        window = nint.Zero;
      }

      if (isVideoInitialized)
      {
        SDL.QuitSubSystem(SDL.InitFlags.Video);
        isVideoInitialized = false;
      }

      isWindowOpen = false;
    }

    /// <summary>
    /// Ensures the SDL Video subsystem is initialized.
    /// </summary>
    private static void EnsureVideoInitialized()
    {
      if (!isVideoInitialized)
      {
        if (!SDL.InitSubSystem(SDL.InitFlags.Video))
        {
          string sdlError = SDL.GetError();
          throw new Exception($"SDL Error initializing video subsystem: {sdlError}");
        }

        isVideoInitialized = true;
      }
    }

    /// <summary>
    /// Gets the dimensions of the desktop for a specific display ID.
    /// </summary>
    /// <param name="displayID">The actual ID of the display to query.</param>
    /// <returns>A tuple containing the width and height of the desktop, or (0,0) if an error occurs.</returns>
    private static (int Width, int Height) GetDesktopDimensionsForDisplayID(uint displayID)
    {
      if (!isVideoInitialized)
      {
        EnsureVideoInitialized();
      }

      SDL.DisplayMode? mode = SDL.GetDesktopDisplayMode(displayID);
      if (mode == null)
      {
        return (0, 0);
      }

      return (mode.Value.W, mode.Value.H);
    }
  }
}



================================================
File: src/Night/Window/WindowMode.cs
================================================
// <copyright file="WindowMode.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;

namespace Night
{
  /// <summary>
  /// Represents the display mode of a window, including width, height, and other properties.
  /// </summary>
  public struct WindowMode
  {
    /// <summary>
    /// Gets or sets the window width in pixels.
    /// </summary>
    public int Width;

    /// <summary>
    /// Gets or sets the window height in pixels.
    /// </summary>
    public int Height;

    /// <summary>
    /// Gets or sets a value indicating whether the window is in fullscreen mode.
    /// </summary>
    public bool Fullscreen;

    /// <summary>
    /// Gets or sets the type of fullscreen mode used.
    /// </summary>
    public FullscreenType FullscreenType;

    /// <summary>
    /// Gets or sets a value indicating whether the window is borderless.
    /// </summary>
    public bool Borderless;

    /// <summary>
    /// Gets or sets the VSync mode. 1 if the graphics framerate is synchronized with the monitor's refresh rate, 0 otherwise.
    /// </summary>
    public int Vsync;

    /// <summary>
    /// Gets or sets the number of antialiasing samples used (0 if MSAA is disabled).
    /// </summary>
    public int Msaa;

    /// <summary>
    /// Gets or sets a value indicating whether the window is resizable in windowed mode.
    /// </summary>
    public bool Resizable;

    /// <summary>
    /// Gets or sets a value indicating whether the window is centered in windowed mode.
    /// </summary>
    public bool Centered;

    /// <summary>
    /// Gets or sets the 1-based index of the display the window is currently in.
    /// </summary>
    public int Display;

    /// <summary>
    /// Gets or sets the minimum width of the window, if resizable.
    /// </summary>
    public int MinWidth;

    /// <summary>
    /// Gets or sets the minimum height of the window, if resizable.
    /// </summary>
    public int MinHeight;

    /// <summary>
    /// Gets or sets a value indicating whether high-dpi mode is allowed on Retina displays (macOS).
    /// </summary>
    public bool HighDpi;

    /// <summary>
    /// Gets or sets the refresh rate of the screen's current display mode in Hz (0 if undetermined).
    /// </summary>
    public int RefreshRate;

    /// <summary>
    /// Gets or sets the x-coordinate of the window's position.
    /// </summary>
    public int X;

    /// <summary>
    /// Gets or sets the y-coordinate of the window's position.
    /// </summary>
    public int Y;
  }
}



================================================
File: src/Night/bin/Debug/net9.0/Night.Engine.deps.json
================================================
{
  "runtimeTarget": {
    "name": ".NETCoreApp,Version=v9.0",
    "signature": ""
  },
  "compilationOptions": {},
  "targets": {
    ".NETCoreApp,Version=v9.0": {
      "Night.Engine/1.0.0": {
        "dependencies": {
          "SDL3-CS": "3.2.14.2"
        },
        "runtime": {
          "Night.Engine.dll": {}
        }
      },
      "SDL3-CS/3.2.14.2": {
        "runtime": {
          "lib/net9.0/SDL3-CS.dll": {
            "assemblyVersion": "3.2.14.2",
            "fileVersion": "3.2.14.2"
          }
        }
      }
    }
  },
  "libraries": {
    "Night.Engine/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "SDL3-CS/3.2.14.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-wqWjIm2EP7PmXRQfwSxY4YJDSrXZ0QmolJMCJcs9KY4b3vYBdlwo0U4/olPMdBx6yRzqhN1nGJjmeC9OJT6L1g==",
      "path": "sdl3-cs/3.2.14.2",
      "hashPath": "sdl3-cs.3.2.14.2.nupkg.sha512"
    }
  }
}


================================================
File: src/Night/bin/Debug/net9.0/Night.deps.json
================================================
{
  "runtimeTarget": {
    "name": ".NETCoreApp,Version=v9.0",
    "signature": ""
  },
  "compilationOptions": {},
  "targets": {
    ".NETCoreApp,Version=v9.0": {
      "Night/1.0.0": {
        "dependencies": {
          "SDL3-CS": "3.2.14.2",
          "StyleCop.Analyzers.Unstable": "1.2.0.556"
        },
        "runtime": {
          "Night.dll": {}
        }
      },
      "SDL3-CS/3.2.14.2": {
        "runtime": {
          "lib/net9.0/SDL3-CS.dll": {
            "assemblyVersion": "3.2.14.2",
            "fileVersion": "3.2.14.2"
          }
        }
      },
      "StyleCop.Analyzers.Unstable/1.2.0.556": {}
    }
  },
  "libraries": {
    "Night/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "SDL3-CS/3.2.14.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-wqWjIm2EP7PmXRQfwSxY4YJDSrXZ0QmolJMCJcs9KY4b3vYBdlwo0U4/olPMdBx6yRzqhN1nGJjmeC9OJT6L1g==",
      "path": "sdl3-cs/3.2.14.2",
      "hashPath": "sdl3-cs.3.2.14.2.nupkg.sha512"
    },
    "StyleCop.Analyzers.Unstable/1.2.0.556": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-zvn9Mqs/ox/83cpYPignI8hJEM2A93s2HkHs8HYMOAQW0PkampyoErAiIyKxgTLqbbad29HX/shv/6LGSjPJNQ==",
      "path": "stylecop.analyzers.unstable/1.2.0.556",
      "hashPath": "stylecop.analyzers.unstable.1.2.0.556.nupkg.sha512"
    }
  }
}


================================================
File: src/Night/bin/Debug/net9.0/Night.xml
================================================
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Night</name>
    </assembly>
    <members>
        <member name="T:Night.AudioConfig">
            <summary>
            Configuration settings for the audio module.
            </summary>
        </member>
        <member name="P:Night.AudioConfig.MixWithSystem">
            <summary>
            Gets or sets a value indicating whether to mix game audio with system audio (true) or mute system audio (false).
            Relevant primarily for mobile platforms.
            </summary>
        </member>
        <member name="T:Night.ConfigurationManager">
            <summary>
            Manages the loading and accessing of game configuration settings.
            </summary>
        </member>
        <member name="P:Night.ConfigurationManager.CurrentConfig">
            <summary>
            Gets the currently loaded game configuration. If no configuration has been loaded, returns the default configuration.
            </summary>
        </member>
        <member name="P:Night.ConfigurationManager.IsLoaded">
            <summary>
            Gets a value indicating whether the configuration has been loaded.
            </summary>
        </member>
        <member name="M:Night.ConfigurationManager.LoadConfig(System.String)">
            <summary>
            Loads the game configuration from a 'config.json' file.
            If the file is not found, or if an error occurs during loading or parsing, default settings are used.
            The configuration is loaded only once; subsequent calls will not reload the configuration.
            </summary>
            <param name="gameDirectory">The directory to search for 'config.json'. If null, the application's base directory is used.</param>
        </member>
        <member name="T:Night.GameConfig">
            <summary>
            Represents the overall game configuration settings, typically loaded from a config.json file.
            </summary>
        </member>
        <member name="P:Night.GameConfig.Identity">
            <summary>
            Gets or sets the identity of the game. This is used for the save directory.
            </summary>
        </member>
        <member name="P:Night.GameConfig.AppendIdentity">
            <summary>
            Gets or sets a value indicating whether the game identity should be appended to the save directory path.
            </summary>
        </member>
        <member name="P:Night.GameConfig.Version">
            <summary>
            Gets or sets the LÖVE version this game targets. Currently informational.
            </summary>
        </member>
        <member name="P:Night.GameConfig.Console">
            <summary>
            Gets or sets a value indicating whether a console window should be attached (Windows only, currently placeholder).
            </summary>
        </member>
        <member name="P:Night.GameConfig.AccelerometerJoystick">
            <summary>
            Gets or sets a value indicating whether the accelerometer should be used as a joystick.
            </summary>
        </member>
        <member name="P:Night.GameConfig.ExternalStorage">
            <summary>
            Gets or sets a value indicating whether to request external storage access (Android only, currently placeholder).
            </summary>
        </member>
        <member name="P:Night.GameConfig.GammaCorrect">
            <summary>
            Gets or sets a value indicating whether gamma correction should be enabled.
            </summary>
        </member>
        <member name="P:Night.GameConfig.Audio">
            <summary>
            Gets or sets the audio module configuration.
            </summary>
        </member>
        <member name="P:Night.GameConfig.Window">
            <summary>
            Gets or sets the window module configuration.
            </summary>
        </member>
        <member name="P:Night.GameConfig.Modules">
            <summary>
            Gets or sets the configuration for enabling/disabling engine modules.
            </summary>
        </member>
        <member name="T:Night.ModulesConfig">
            <summary>
            Configuration for enabling/disabling engine modules (similar to t.modules in LÖVE's conf.lua).
            </summary>
        </member>
        <member name="P:Night.ModulesConfig.Audio">
            <summary>Gets or sets a value indicating whether the Audio module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Data">
            <summary>Gets or sets a value indicating whether the Data module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Event">
            <summary>Gets or sets a value indicating whether the Event module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Font">
            <summary>Gets or sets a value indicating whether the Font module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Graphics">
            <summary>Gets or sets a value indicating whether the Graphics module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Image">
            <summary>Gets or sets a value indicating whether the Image module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Joystick">
            <summary>Gets or sets a value indicating whether the Joystick module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Keyboard">
            <summary>Gets or sets a value indicating whether the Keyboard module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Math">
            <summary>Gets or sets a value indicating whether the Math module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Mouse">
            <summary>Gets or sets a value indicating whether the Mouse module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Physics">
            <summary>Gets or sets a value indicating whether the Physics module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Sound">
            <summary>Gets or sets a value indicating whether the Sound module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.System">
            <summary>Gets or sets a value indicating whether the System module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Timer">
            <summary>Gets or sets a value indicating whether the Timer module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Touch">
            <summary>Gets or sets a value indicating whether the Touch module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Video">
            <summary>Gets or sets a value indicating whether the Video module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.WindowModule">
            <summary>Gets or sets a value indicating whether the Window module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Thread">
            <summary>Gets or sets a value indicating whether the Thread module is enabled.</summary>
        </member>
        <member name="T:Night.WindowConfig">
            <summary>
            Configuration settings for the game window.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Title">
            <summary>
            Gets or sets the window title.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.IconPath">
            <summary>
            Gets or sets the path to the window icon file. Relative to the game's root directory.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Width">
            <summary>
            Gets or sets the window width in pixels.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Height">
            <summary>
            Gets or sets the window height in pixels.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.X">
            <summary>
            Gets or sets the x-coordinate of the window's top-left corner on the screen. Null for centered.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Y">
            <summary>
            Gets or sets the y-coordinate of the window's top-left corner on the screen. Null for centered.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.MinWidth">
            <summary>
            Gets or sets the minimum window width.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.MinHeight">
            <summary>
            Gets or sets the minimum window height.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Resizable">
            <summary>
            Gets or sets a value indicating whether the window is resizable.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Borderless">
            <summary>
            Gets or sets a value indicating whether the window has a border.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Fullscreen">
            <summary>
            Gets or sets a value indicating whether the window is fullscreen.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.FullscreenType">
            <summary>
            Gets or sets the type of fullscreen mode. Expected values: "desktop" or "exclusive".
            </summary>
        </member>
        <member name="P:Night.WindowConfig.VSync">
            <summary>
            Gets or sets a value indicating whether VSync is enabled.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.HighDPI">
            <summary>
            Gets or sets a value indicating whether to enable high-DPI mode if available.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.MSAA">
            <summary>
            Gets or sets the multisample anti-aliasing (MSAA) level.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Depth">
            <summary>
            Gets or sets the depth buffer bits. Null for system default.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Stencil">
            <summary>
            Gets or sets the stencil buffer bits. Null for system default.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Display">
            <summary>
            Gets or sets the 1-indexed display number to use for the window.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.UseDPIScale">
            <summary>
            Gets or sets a value indicating whether to use DPI scaling.
            </summary>
        </member>
        <member name="T:Night.ErrorHandlerDelegate">
            <summary>
            Defines the delegate for handling unhandled exceptions from game code.
            The error handler function will be called when an unhandled exception occurs
            within the game's Load, Update, Draw, or input callback methods.
            </summary>
            <param name="e">The exception that occurred.</param>
        </member>
        <member name="T:Night.Error">
            <summary>
            Manages the user-defined error handler.
            </summary>
        </member>
        <member name="P:Night.Error.CustomErrorHandler">
            <summary>
            Gets the currently set custom error handler. Returns null if no custom handler is set.
            This is used internally by the framework to invoke the handler.
            </summary>
        </member>
        <member name="M:Night.Error.SetHandler(Night.ErrorHandlerDelegate)">
            <summary>
            Sets a custom function to be called when an unhandled error occurs in game code.
            </summary>
            <param name="handler">The delegate to handle errors.</param>
        </member>
        <member name="M:Night.Error.GetHandler">
            <summary>
            Gets the currently set custom error handler.
            This is used internally by the framework.
            </summary>
            <returns>The custom error handler delegate, or null if none is set.</returns>
        </member>
        <member name="T:Night.FileMode">
            <summary>
            Represents the different modes you can open a File in.
            </summary>
        </member>
        <member name="F:Night.FileMode.Read">
            <summary>
            Open a file for read.
            </summary>
        </member>
        <member name="F:Night.FileMode.Write">
            <summary>
            Open a file for write.
            </summary>
        </member>
        <member name="F:Night.FileMode.Append">
            <summary>
            Open a file for append.
            </summary>
        </member>
        <member name="F:Night.FileMode.Close">
            <summary>
            Do not open a file (represents a closed file.)
            </summary>
        </member>
        <member name="F:Night.FileMode.W">
            <summary>
            Open a file for write.
            </summary>
        </member>
        <member name="F:Night.FileMode.R">
            <summary>
            Open a file for read.
            </summary>
        </member>
        <member name="F:Night.FileMode.A">
            <summary>
            Open a file for append.
            </summary>
        </member>
        <member name="F:Night.FileMode.C">
            <summary>
            Do not open a file (represents a closed file.)
            </summary>
        </member>
        <member name="T:Night.Filesystem">
            <summary>
            Provides basic file system operations.
            Inspired by Love2D's love.filesystem module.
            </summary>
        </member>
        <member name="M:Night.Filesystem.GetInfo(System.String,System.Nullable{Night.FileType})">
            <summary>
            Gets information about the specified file or directory.
            </summary>
            <param name="path">The file or directory path to check.</param>
            <param name="filterType">If supplied, this parameter causes getInfo to only return the info table if the item at the given path matches the specified file type.</param>
            <returns>A FileSystemInfo object containing information about the specified path, or null if nothing exists at the path or if it doesn't match the filterType.</returns>
        </member>
        <member name="M:Night.Filesystem.GetInfo(System.String,Night.FileSystemInfo)">
            <summary>
            Gets information about the specified file or directory and populates an existing FileSystemInfo object.
            </summary>
            <param name="path">The file or directory path to check.</param>
            <param name="info">A FileSystemInfo object which will be filled in.</param>
            <returns>The FileSystemInfo object given as an argument, filled with information, or null if nothing exists at the path.</returns>
        </member>
        <member name="M:Night.Filesystem.GetInfo(System.String,Night.FileType,Night.FileSystemInfo)">
            <summary>
            Gets information about the specified file or directory, filtered by type, and populates an existing FileSystemInfo object.
            </summary>
            <param name="path">The file or directory path to check.</param>
            <param name="filterType">Causes getInfo to only return the info table if the item at the given path matches the specified file type.</param>
            <param name="info">A FileSystemInfo object which will be filled in.</param>
            <returns>The FileSystemInfo object given as an argument, filled with information, or null if nothing exists at the path or if it doesn't match the filterType.</returns>
        </member>
        <member name="M:Night.Filesystem.ReadBytes(System.String)">
            <summary>
            Reads the entire content of a file into a byte array.
            </summary>
            <param name="path">The path to the file to read.</param>
            <returns>A byte array containing the contents of the file.</returns>
            <exception cref="T:System.IO.FileNotFoundException">Thrown if the file is not found.</exception>
        </member>
        <member name="M:Night.Filesystem.ReadText(System.String)">
            <summary>
            Reads the entire content of a file into a string.
            </summary>
            <param name="path">The path to the file to read.</param>
            <returns>A string containing the contents of the file.</returns>
            <exception cref="T:System.IO.FileNotFoundException">Thrown if the file is not found.</exception>
        </member>
        <member name="T:Night.FileSystemInfo">
            <summary>
            Contains information about a file or directory.
            </summary>
        </member>
        <member name="M:Night.FileSystemInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Night.FileSystemInfo"/> class.
            </summary>
        </member>
        <member name="M:Night.FileSystemInfo.#ctor(Night.FileType,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:Night.FileSystemInfo"/> class with specified values.
            </summary>
            <param name="type">The type of the file system object.</param>
            <param name="size">The size of the file in bytes.</param>
            <param name="modTime">The last modification time in Unix epoch seconds.</param>
        </member>
        <member name="P:Night.FileSystemInfo.Type">
            <summary>
            Gets or sets the type of the object at the path (file, directory, symlink, etc.).
            Default is None.
            </summary>
        </member>
        <member name="P:Night.FileSystemInfo.Size">
            <summary>
            Gets or sets the size in bytes of the file, or null if it can't be determined or not applicable (e.g. for a directory).
            </summary>
        </member>
        <member name="P:Night.FileSystemInfo.ModTime">
            <summary>
            Gets or sets the file's last modification time in seconds since the Unix epoch, or null if it can't be determined.
            </summary>
        </member>
        <member name="T:Night.FileType">
            <summary>
            Represents the type of a file system object.
            </summary>
        </member>
        <member name="F:Night.FileType.File">
            <summary>
            A regular file.
            </summary>
        </member>
        <member name="F:Night.FileType.Directory">
            <summary>
            A directory.
            </summary>
        </member>
        <member name="F:Night.FileType.Symlink">
            <summary>
            A symbolic link.
            </summary>
        </member>
        <member name="F:Night.FileType.Other">
            <summary>
            Other type (e.g., device, pipe).
            </summary>
        </member>
        <member name="F:Night.FileType.None">
            <summary>
            The path does not exist or its type cannot be determined.
            </summary>
        </member>
        <member name="T:Night.Framework">
            <summary>
            Manages the main game loop and coordination of game states.
            Provides the main entry point to run a game.
            </summary>
        </member>
        <member name="P:Night.Framework.IsInputInitialized">
            <summary>
            Gets a value indicating whether a flag indicating whether the core SDL systems, particularly for input,
            have been successfully initialized by this Framework's Run method.
            </summary>
        </member>
        <member name="M:Night.Framework.Run(Night.IGame)">
            <summary>
            Runs the game instance.
            The game loop will internally call Load, Update, and Draw methods
            on the provided game logic.
            This method will initialize and shut down required SDL subsystems.
            </summary>
            <param name="game">The game interface to run. Must implement <see cref="T:Night.IGame"/>.</param>
        </member>
        <member name="T:Night.Color">
            <summary>
            Represents a color with Red, Green, Blue, and Alpha components.
            Each component is a byte value ranging from 0 (no intensity) to 255 (full intensity).
            The Alpha component controls the transparency of the color, where 0 is fully transparent and 255 is fully opaque.
            </summary>
        </member>
        <member name="F:Night.Color.Black">
            <summary>Represents the color black.</summary>
        </member>
        <member name="F:Night.Color.White">
            <summary>Represents the color white.</summary>
        </member>
        <member name="F:Night.Color.Red">
            <summary>Represents the color red.</summary>
        </member>
        <member name="F:Night.Color.Green">
            <summary>Represents the color green.</summary>
        </member>
        <member name="F:Night.Color.Blue">
            <summary>Represents the color blue.</summary>
        </member>
        <member name="F:Night.Color.Yellow">
            <summary>Represents the color yellow.</summary>
        </member>
        <member name="F:Night.Color.Magenta">
            <summary>Represents the color magenta.</summary>
        </member>
        <member name="F:Night.Color.Cyan">
            <summary>Represents the color cyan.</summary>
        </member>
        <member name="F:Night.Color.Transparent">
            <summary>Represents a fully transparent color.</summary>
        </member>
        <member name="F:Night.Color.R">
            <summary>
            The red component of the color.
            </summary>
        </member>
        <member name="F:Night.Color.G">
            <summary>
            The green component of the color.
            </summary>
        </member>
        <member name="F:Night.Color.B">
            <summary>
            The blue component of the color.
            </summary>
        </member>
        <member name="F:Night.Color.A">
            <summary>
            The alpha (transparency) component of the color.
            </summary>
        </member>
        <member name="M:Night.Color.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Night.Color"/> struct.
            </summary>
            <param name="r">The red component (0-255).</param>
            <param name="g">The green component (0-255).</param>
            <param name="b">The blue component (0-255).</param>
            <param name="a">The alpha component (0-255). Defaults to 255 (fully opaque).</param>
        </member>
        <member name="T:Night.DrawMode">
            <summary>
            Specifies whether a shape should be drawn filled or as an outline.
            </summary>
        </member>
        <member name="F:Night.DrawMode.Fill">
            <summary>
            Draw the shape filled.
            </summary>
        </member>
        <member name="F:Night.DrawMode.Line">
            <summary>
            Draw the shape as an outline.
            </summary>
        </member>
        <member name="T:Night.Graphics">
            <summary>
            Provides functionality for drawing graphics.
            Mimics Love2D's love.graphics module.
            </summary>
        </member>
        <member name="M:Night.Graphics.NewImage(System.String)">
            <summary>
            Creates a new image (Sprite) from a file.
            </summary>
            <param name="filePath">The path to the image file.</param>
            <returns>A new Sprite object.</returns>
        </member>
        <member name="M:Night.Graphics.SetColor(Night.Color)">
            <summary>
            Sets the active color for drawing operations.
            </summary>
            <param name="color">The color to set.</param>
        </member>
        <member name="M:Night.Graphics.SetColor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the active color for drawing operations using individual RGBA components.
            </summary>
            <param name="r">The red component (0-255).</param>
            <param name="g">The green component (0-255).</param>
            <param name="b">The blue component (0-255).</param>
            <param name="a">The alpha component (0-255), defaults to 255 (opaque).</param>
        </member>
        <member name="M:Night.Graphics.Rectangle(Night.DrawMode,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a rectangle.
            </summary>
            <param name="mode">The drawing mode (Fill or Line).</param>
            <param name="x">The x-coordinate of the top-left corner.</param>
            <param name="y">The y-coordinate of the top-left corner.</param>
            <param name="width">The width of the rectangle.</param>
            <param name="height">The height of the rectangle.</param>
        </member>
        <member name="M:Night.Graphics.Line(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a line segment between two points.
            </summary>
            <param name="x1">The x-coordinate of the first point.</param>
            <param name="y1">The y-coordinate of the first point.</param>
            <param name="x2">The x-coordinate of the second point.</param>
            <param name="y2">The y-coordinate of the second point.</param>
        </member>
        <member name="M:Night.Graphics.Line(Night.PointF[])">
            <summary>
            Draws a sequence of connected line segments.
            </summary>
            <param name="points">An array of points to connect.</param>
        </member>
        <member name="M:Night.Graphics.Polygon(Night.DrawMode,Night.PointF[])">
            <summary>
            Draws a polygon.
            </summary>
            <param name="mode">The drawing mode (Fill or Line).</param>
            <param name="vertices">An array of points representing the polygon's vertices.</param>
        </member>
        <member name="M:Night.Graphics.Circle(Night.DrawMode,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Draws a circle.
            </summary>
            <param name="mode">The drawing mode (Fill or Line).</param>
            <param name="x">The x-coordinate of the circle's center.</param>
            <param name="y">The y-coordinate of the circle's center.</param>
            <param name="radius">The radius of the circle.</param>
            <param name="segments">The number of segments used to draw the circle (more segments means a smoother circle).</param>
        </member>
        <member name="M:Night.Graphics.Draw(Night.Sprite,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a sprite to the screen.
            </summary>
            <param name="sprite">The sprite to draw.</param>
            <param name="x">The x-coordinate to draw the sprite at.</param>
            <param name="y">The y-coordinate to draw the sprite at.</param>
            <param name="rotation">The rotation of the sprite (in radians).</param>
            <param name="scaleX">The horizontal scale factor.</param>
            <param name="scaleY">The vertical scale factor.</param>
            <param name="offsetX">The x-offset for the sprite's origin.</param>
            <param name="offsetY">The y-offset for the sprite's origin.</param>
        </member>
        <member name="M:Night.Graphics.Clear(Night.Color)">
            <summary>
            Clears the screen to a specific color.
            </summary>
            <param name="color">The color to clear the screen with.</param>
        </member>
        <member name="M:Night.Graphics.Present">
            <summary>
            Presents the drawn graphics to the screen (swaps buffers).
            </summary>
        </member>
        <member name="T:Night.ImageData">
            <summary>
            Represents raw pixel data of an image.
            </summary>
        </member>
        <member name="M:Night.ImageData.#ctor(System.Int32,System.Int32,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Night.ImageData"/> class.
            </summary>
            <param name="width">The width of the image.</param>
            <param name="height">The height of the image.</param>
            <param name="data">The pixel data (assumed RGBA, 4 bytes per pixel).</param>
        </member>
        <member name="P:Night.ImageData.Width">
            <summary>
            Gets the width of the image in pixels.
            </summary>
        </member>
        <member name="P:Night.ImageData.Height">
            <summary>
            Gets the height of the image in pixels.
            </summary>
        </member>
        <member name="P:Night.ImageData.Data">
            <summary>
            Gets the raw pixel data.
            Assumed to be in RGBA format, 4 bytes per pixel.
            The data is stored as a copy of the input array.
            </summary>
        </member>
        <member name="T:Night.PointF">
            <summary>
            Represents a 2D point with floating-point coordinates.
            </summary>
        </member>
        <member name="F:Night.PointF.X">
            <summary>
            The X-coordinate of the point.
            </summary>
        </member>
        <member name="F:Night.PointF.Y">
            <summary>
            The Y-coordinate of the point.
            </summary>
        </member>
        <member name="M:Night.PointF.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Night.PointF"/> struct.
            </summary>
            <param name="x">The X-coordinate.</param>
            <param name="y">The Y-coordinate.</param>
        </member>
        <member name="T:Night.Rectangle">
            <summary>
            Represents a rectangle with position (X, Y) and dimensions (Width, Height).
            </summary>
        </member>
        <member name="F:Night.Rectangle.X">
            <summary>
            The X-coordinate of the top-left corner of the rectangle.
            </summary>
        </member>
        <member name="F:Night.Rectangle.Y">
            <summary>
            The Y-coordinate of the top-left corner of the rectangle.
            </summary>
        </member>
        <member name="F:Night.Rectangle.Width">
            <summary>
            The width of the rectangle.
            </summary>
        </member>
        <member name="F:Night.Rectangle.Height">
            <summary>
            The height of the rectangle.
            </summary>
        </member>
        <member name="M:Night.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Night.Rectangle"/> struct.
            </summary>
            <param name="x">The X-coordinate of the top-left corner.</param>
            <param name="y">The Y-coordinate of the top-left corner.</param>
            <param name="width">The width of the rectangle.</param>
            <param name="height">The height of the rectangle.</param>
        </member>
        <member name="T:Night.Sprite">
            <summary>
            Represents a 2D sprite, typically an image loaded into a texture.
            </summary>
        </member>
        <member name="M:Night.Sprite.#ctor(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Night.Sprite"/> class.
            </summary>
            <param name="texture">The SDL texture handle.</param>
            <param name="width">The width of the texture.</param>
            <param name="height">The height of the texture.</param>
        </member>
        <member name="P:Night.Sprite.Texture">
            <summary>
            Gets the SDL texture handle.
            </summary>
        </member>
        <member name="P:Night.Sprite.Width">
            <summary>
            Gets the width of the sprite in pixels.
            </summary>
        </member>
        <member name="P:Night.Sprite.Height">
            <summary>
            Gets the height of the sprite in pixels.
            </summary>
        </member>
        <member name="T:Night.IGame">
            <summary>
            Interface for a game that can be run by the Night Engine.
            Game developers will implement this interface in their main game class.
            </summary>
        </member>
        <member name="M:Night.IGame.Load">
            <summary>
            Called exactly once when the game starts for loading resources.
            </summary>
        </member>
        <member name="M:Night.IGame.Update(System.Double)">
            <summary>
            Callback function used to update the state of the game every frame.
            </summary>
            <param name="deltaTime">The time elapsed since the last frame, in seconds.</param>
        </member>
        <member name="M:Night.IGame.Draw">
            <summary>
            Callback function used to draw on the screen every frame.
            </summary>
        </member>
        <member name="M:Night.IGame.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)">
            <summary>
            Callback function triggered when a key is pressed.
            </summary>
            <param name="key">The logical key symbol that was pressed.</param>
            <param name="scancode">The physical key (scancode) that was pressed.</param>
            <param name="isRepeat">True if this is a key repeat event, false otherwise.</param>
        </member>
        <member name="M:Night.IGame.KeyReleased(Night.KeySymbol,Night.KeyCode)">
            <summary>
            Callback function triggered when a key is released.
            </summary>
            <param name="key">The logical key symbol that was released.</param>
            <param name="scancode">The physical key (scancode) that was released.</param>
        </member>
        <member name="M:Night.IGame.MousePressed(System.Int32,System.Int32,Night.MouseButton,System.Boolean,System.Int32)">
            <summary>
            Callback function triggered when a mouse button is pressed.
            </summary>
            <param name="x">The x-coordinate of the mouse cursor relative to the window.</param>
            <param name="y">The y-coordinate of the mouse cursor relative to the window.</param>
            <param name="button">The mouse button that was pressed.</param>
            <param name="istouch">True if the event was generated by a touch input device, false otherwise.</param>
            <param name="presses">The number of clicks (1 for single-click, 2 for double-click, etc.).</param>
        </member>
        <member name="M:Night.IGame.MouseReleased(System.Int32,System.Int32,Night.MouseButton,System.Boolean,System.Int32)">
            <summary>
            Callback function triggered when a mouse button is released.
            </summary>
            <param name="x">The x-coordinate of the mouse cursor relative to the window.</param>
            <param name="y">The y-coordinate of the mouse cursor relative to the window.</param>
            <param name="button">The mouse button that was released.</param>
            <param name="istouch">True if the event was generated by a touch input device, false otherwise.</param>
            <param name="presses">The number of clicks (typically 1 for release, but may vary).</param>
        </member>
        <member name="T:Night.Keyboard">
            <summary>
            Provides an interface to the user's keyboard.
            </summary>
        </member>
        <member name="M:Night.Keyboard.IsDown(Night.KeyCode)">
            <summary>
            Checks whether a certain key is down.
            </summary>
            <param name="key">The key to check.</param>
            <returns>True if the key is down, false otherwise.</returns>
        </member>
        <member name="T:Night.KeyCode">
            <summary>
            Represents keyboard scancodes. Values correspond to SDL_Scancode.
            </summary>
            <remarks>
            See SDL_scancode.h for the full list of SDL_Scancode values.
            This enum maps directly to SDL_Scancode values, representing the physical key on the keyboard.
            </remarks>
        </member>
        <member name="F:Night.KeyCode.Unknown">
            <summary>An unknown scancode.</summary>
        </member>
        <member name="F:Night.KeyCode.A">
            <summary>The 'A' key.</summary>
        </member>
        <member name="F:Night.KeyCode.B">
            <summary>The 'B' key.</summary>
        </member>
        <member name="F:Night.KeyCode.C">
            <summary>The 'C' key.</summary>
        </member>
        <member name="F:Night.KeyCode.D">
            <summary>The 'D' key.</summary>
        </member>
        <member name="F:Night.KeyCode.E">
            <summary>The 'E' key.</summary>
        </member>
        <member name="F:Night.KeyCode.F">
            <summary>The 'F' key.</summary>
        </member>
        <member name="F:Night.KeyCode.G">
            <summary>The 'G' key.</summary>
        </member>
        <member name="F:Night.KeyCode.H">
            <summary>The 'H' key.</summary>
        </member>
        <member name="F:Night.KeyCode.I">
            <summary>The 'I' key.</summary>
        </member>
        <member name="F:Night.KeyCode.J">
            <summary>The 'J' key.</summary>
        </member>
        <member name="F:Night.KeyCode.K">
            <summary>The 'K' key.</summary>
        </member>
        <member name="F:Night.KeyCode.L">
            <summary>The 'L' key.</summary>
        </member>
        <member name="F:Night.KeyCode.M">
            <summary>The 'M' key.</summary>
        </member>
        <member name="F:Night.KeyCode.N">
            <summary>The 'N' key.</summary>
        </member>
        <member name="F:Night.KeyCode.O">
            <summary>The 'O' key.</summary>
        </member>
        <member name="F:Night.KeyCode.P">
            <summary>The 'P' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Q">
            <summary>The 'Q' key.</summary>
        </member>
        <member name="F:Night.KeyCode.R">
            <summary>The 'R' key.</summary>
        </member>
        <member name="F:Night.KeyCode.S">
            <summary>The 'S' key.</summary>
        </member>
        <member name="F:Night.KeyCode.T">
            <summary>The 'T' key.</summary>
        </member>
        <member name="F:Night.KeyCode.U">
            <summary>The 'U' key.</summary>
        </member>
        <member name="F:Night.KeyCode.V">
            <summary>The 'V' key.</summary>
        </member>
        <member name="F:Night.KeyCode.W">
            <summary>The 'W' key.</summary>
        </member>
        <member name="F:Night.KeyCode.X">
            <summary>The 'X' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Y">
            <summary>The 'Y' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Z">
            <summary>The 'Z' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha1">
            <summary>The '1' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha2">
            <summary>The '2' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha3">
            <summary>The '3' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha4">
            <summary>The '4' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha5">
            <summary>The '5' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha6">
            <summary>The '6' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha7">
            <summary>The '7' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha8">
            <summary>The '8' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha9">
            <summary>The '9' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha0">
            <summary>The '0' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Return">
            <summary>The Return/Enter key.</summary>
        </member>
        <member name="F:Night.KeyCode.Escape">
            <summary>The Escape key.</summary>
        </member>
        <member name="F:Night.KeyCode.Backspace">
            <summary>The Backspace key.</summary>
        </member>
        <member name="F:Night.KeyCode.Tab">
            <summary>The Tab key.</summary>
        </member>
        <member name="F:Night.KeyCode.Space">
            <summary>The Space bar.</summary>
        </member>
        <member name="F:Night.KeyCode.Minus">
            <summary>The Minus '-' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Equals">
            <summary>The Equals '=' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Leftbracket">
            <summary>The Left Bracket '[' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Rightbracket">
            <summary>The Right Bracket ']' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Backslash">
            <summary>The Backslash '' key.</summary>
        </member>
        <member name="F:Night.KeyCode.NonUshash">
            <summary>The Non-US Hash key (e.g., UK pound sign).</summary>
        </member>
        <member name="F:Night.KeyCode.Semicolon">
            <summary>The Semicolon ';' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Apostrophe">
            <summary>The Apostrophe ''' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Grave">
            <summary>The Grave Accent (Backtick) '`' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Comma">
            <summary>The Comma ',' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Period">
            <summary>The Period '.' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Slash">
            <summary>The Slash '/' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Capslock">
            <summary>The Caps Lock key.</summary>
        </member>
        <member name="F:Night.KeyCode.F1">
            <summary>The F1 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F2">
            <summary>The F2 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F3">
            <summary>The F3 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F4">
            <summary>The F4 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F5">
            <summary>The F5 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F6">
            <summary>The F6 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F7">
            <summary>The F7 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F8">
            <summary>The F8 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F9">
            <summary>The F9 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F10">
            <summary>The F10 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F11">
            <summary>The F11 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F12">
            <summary>The F12 key.</summary>
        </member>
        <member name="F:Night.KeyCode.Printscreen">
            <summary>The Print Screen key.</summary>
        </member>
        <member name="F:Night.KeyCode.Scrolllock">
            <summary>The Scroll Lock key.</summary>
        </member>
        <member name="F:Night.KeyCode.Pause">
            <summary>The Pause key.</summary>
        </member>
        <member name="F:Night.KeyCode.Insert">
            <summary>The Insert key.</summary>
        </member>
        <member name="F:Night.KeyCode.Home">
            <summary>The Home key.</summary>
        </member>
        <member name="F:Night.KeyCode.Pageup">
            <summary>The Page Up key.</summary>
        </member>
        <member name="F:Night.KeyCode.Delete">
            <summary>The Delete key.</summary>
        </member>
        <member name="F:Night.KeyCode.End">
            <summary>The End key.</summary>
        </member>
        <member name="F:Night.KeyCode.Pagedown">
            <summary>The Page Down key.</summary>
        </member>
        <member name="F:Night.KeyCode.Right">
            <summary>The Right Arrow key.</summary>
        </member>
        <member name="F:Night.KeyCode.Left">
            <summary>The Left Arrow key.</summary>
        </member>
        <member name="F:Night.KeyCode.Down">
            <summary>The Down Arrow key.</summary>
        </member>
        <member name="F:Night.KeyCode.Up">
            <summary>The Up Arrow key.</summary>
        </member>
        <member name="F:Night.KeyCode.NumlockClear">
            <summary>The Num Lock or Clear key.</summary>
        </member>
        <member name="F:Night.KeyCode.KpDivide">
            <summary>The Keypad Divide '/' key.</summary>
        </member>
        <member name="F:Night.KeyCode.KpMultiply">
            <summary>The Keypad Multiply '*' key.</summary>
        </member>
        <member name="F:Night.KeyCode.KpMinus">
            <summary>The Keypad Minus '-' key.</summary>
        </member>
        <member name="F:Night.KeyCode.KpPlus">
            <summary>The Keypad Plus '+' key.</summary>
        </member>
        <member name="F:Night.KeyCode.KpEnter">
            <summary>The Keypad Enter key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp1">
            <summary>The Keypad '1' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp2">
            <summary>The Keypad '2' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp3">
            <summary>The Keypad '3' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp4">
            <summary>The Keypad '4' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp5">
            <summary>The Keypad '5' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp6">
            <summary>The Keypad '6' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp7">
            <summary>The Keypad '7' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp8">
            <summary>The Keypad '8' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp9">
            <summary>The Keypad '9' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp0">
            <summary>The Keypad '0' key.</summary>
        </member>
        <member name="F:Night.KeyCode.KpPeriod">
            <summary>The Keypad Period '.' key.</summary>
        </member>
        <member name="F:Night.KeyCode.NonUsbackslash">
            <summary>The Non-US Backslash key.</summary>
        </member>
        <member name="F:Night.KeyCode.Application">
            <summary>The Application key (context menu).</summary>
        </member>
        <member name="F:Night.KeyCode.Power">
            <summary>The Power key.</summary>
        </member>
        <member name="F:Night.KeyCode.KpEquals">
            <summary>The Keypad Equals '=' key.</summary>
        </member>
        <member name="F:Night.KeyCode.F13">
            <summary>The F13 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F14">
            <summary>The F14 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F15">
            <summary>The F15 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F16">
            <summary>The F16 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F17">
            <summary>The F17 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F18">
            <summary>The F18 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F19">
            <summary>The F19 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F20">
            <summary>The F20 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F21">
            <summary>The F21 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F22">
            <summary>The F22 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F23">
            <summary>The F23 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F24">
            <summary>The F24 key.</summary>
        </member>
        <member name="F:Night.KeyCode.Execute">
            <summary>The Execute key.</summary>
        </member>
        <member name="F:Night.KeyCode.Help">
            <summary>The Help key.</summary>
        </member>
        <member name="F:Night.KeyCode.Menu">
            <summary>The Menu key.</summary>
        </member>
        <member name="F:Night.KeyCode.Select">
            <summary>The Select key.</summary>
        </member>
        <member name="F:Night.KeyCode.Stop">
            <summary>The Stop key.</summary>
        </member>
        <member name="F:Night.KeyCode.Again">
            <summary>The Again key.</summary>
        </member>
        <member name="F:Night.KeyCode.Undo">
            <summary>The Undo key.</summary>
        </member>
        <member name="F:Night.KeyCode.Cut">
            <summary>The Cut key.</summary>
        </member>
        <member name="F:Night.KeyCode.Copy">
            <summary>The Copy key.</summary>
        </member>
        <member name="F:Night.KeyCode.Paste">
            <summary>The Paste key.</summary>
        </member>
        <member name="F:Night.KeyCode.Find">
            <summary>The Find key.</summary>
        </member>
        <member name="F:Night.KeyCode.Mute">
            <summary>The Mute key.</summary>
        </member>
        <member name="F:Night.KeyCode.VolumeUp">
            <summary>The Volume Up key.</summary>
        </member>
        <member name="F:Night.KeyCode.VolumeDown">
            <summary>The Volume Down key.</summary>
        </member>
        <member name="F:Night.KeyCode.KpComma">
            <summary>The Keypad Comma ',' key.</summary>
        </member>
        <member name="F:Night.KeyCode.LCtrl">
            <summary>The Left Control key.</summary>
        </member>
        <member name="F:Night.KeyCode.LShift">
            <summary>The Left Shift key.</summary>
        </member>
        <member name="F:Night.KeyCode.LAlt">
            <summary>The Left Alt key.</summary>
        </member>
        <member name="F:Night.KeyCode.LGUI">
            <summary>The Left GUI key (Windows/Command/Meta key).</summary>
        </member>
        <member name="F:Night.KeyCode.RCtrl">
            <summary>The Right Control key.</summary>
        </member>
        <member name="F:Night.KeyCode.RShift">
            <summary>The Right Shift key.</summary>
        </member>
        <member name="F:Night.KeyCode.RAlt">
            <summary>The Right Alt key.</summary>
        </member>
        <member name="F:Night.KeyCode.RGUI">
            <summary>The Right GUI key (Windows/Command/Meta key).</summary>
        </member>
        <member name="F:Night.KeyCode.Mode">
            <summary>The Mode Switch key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaPlay">
            <summary>The Media Play key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaPause">
            <summary>The Media Pause key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaRecord">
            <summary>The Media Record key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaFastForward">
            <summary>The Media Fast Forward key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaRewind">
            <summary>The Media Rewind key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaNextTrack">
            <summary>The Media Next Track key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaPreviousTrack">
            <summary>The Media Previous Track key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaStop">
            <summary>The Media Stop key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaEject">
            <summary>The Media Eject key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaPlayPause">
            <summary>The Media Play/Pause key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaSelect">
            <summary>The Media Select key.</summary>
        </member>
        <member name="F:Night.KeyCode.AppSearch">
            <summary>The Application Search key.</summary>
        </member>
        <member name="F:Night.KeyCode.AppHome">
            <summary>The Application Home key.</summary>
        </member>
        <member name="F:Night.KeyCode.AppBack">
            <summary>The Application Back key.</summary>
        </member>
        <member name="F:Night.KeyCode.AppForward">
            <summary>The Application Forward key.</summary>
        </member>
        <member name="F:Night.KeyCode.AppStop">
            <summary>The Application Stop key.</summary>
        </member>
        <member name="F:Night.KeyCode.AppRefresh">
            <summary>The Application Refresh key.</summary>
        </member>
        <member name="F:Night.KeyCode.AppBookmarks">
            <summary>The Application Bookmarks key.</summary>
        </member>
        <member name="T:Night.KeySymbol">
            <summary>
            Represents logical key symbols. Values correspond to SDL_Keycode.
            </summary>
            <remarks>
            This enum maps to SDL_Keycode values, representing the symbol produced by a key press
            under the current keyboard layout.
            </remarks>
        </member>
        <member name="F:Night.KeySymbol.Unknown">
            <summary>An unknown key symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.A">
            <summary>The 'A' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.B">
            <summary>The 'B' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.C">
            <summary>The 'C' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.D">
            <summary>The 'D' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.E">
            <summary>The 'E' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F">
            <summary>The 'F' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.G">
            <summary>The 'G' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.H">
            <summary>The 'H' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.I">
            <summary>The 'I' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.J">
            <summary>The 'J' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.K">
            <summary>The 'K' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.L">
            <summary>The 'L' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.M">
            <summary>The 'M' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.N">
            <summary>The 'N' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.O">
            <summary>The 'O' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.P">
            <summary>The 'P' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Q">
            <summary>The 'Q' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.R">
            <summary>The 'R' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.S">
            <summary>The 'S' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.T">
            <summary>The 'T' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.U">
            <summary>The 'U' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.V">
            <summary>The 'V' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.W">
            <summary>The 'W' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.X">
            <summary>The 'X' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Y">
            <summary>The 'Y' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Z">
            <summary>The 'Z' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha0">
            <summary>The '0' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha1">
            <summary>The '1' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha2">
            <summary>The '2' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha3">
            <summary>The '3' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha4">
            <summary>The '4' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha5">
            <summary>The '5' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha6">
            <summary>The '6' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha7">
            <summary>The '7' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha8">
            <summary>The '8' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha9">
            <summary>The '9' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Return">
            <summary>The Return/Enter symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Escape">
            <summary>The Escape symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Backspace">
            <summary>The Backspace symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Tab">
            <summary>The Tab symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Space">
            <summary>The Space symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Minus">
            <summary>The Minus '-' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Equals">
            <summary>The Equals '=' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Leftbracket">
            <summary>The Left Bracket '[' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Rightbracket">
            <summary>The Right Bracket ']' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Backslash">
            <summary>The Backslash '' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Semicolon">
            <summary>The Semicolon ';' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Apostrophe">
            <summary>The Apostrophe ''' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Grave">
            <summary>The Grave Accent (Backtick) '`' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Comma">
            <summary>The Comma ',' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Period">
            <summary>The Period '.' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Slash">
            <summary>The Slash '/' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F1">
            <summary>The F1 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F2">
            <summary>The F2 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F3">
            <summary>The F3 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F4">
            <summary>The F4 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F5">
            <summary>The F5 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F6">
            <summary>The F6 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F7">
            <summary>The F7 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F8">
            <summary>The F8 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F9">
            <summary>The F9 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F10">
            <summary>The F10 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F11">
            <summary>The F11 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F12">
            <summary>The F12 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Right">
            <summary>The Right Arrow symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Left">
            <summary>The Left Arrow symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Down">
            <summary>The Down Arrow symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Up">
            <summary>The Up Arrow symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.LCtrl">
            <summary>The Left Control symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.LShift">
            <summary>The Left Shift symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.LAlt">
            <summary>The Left Alt symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.LGUI">
            <summary>The Left GUI symbol (Windows/Command/Meta key).</summary>
        </member>
        <member name="F:Night.KeySymbol.RCtrl">
            <summary>The Right Control symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.RShift">
            <summary>The Right Shift symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.RAlt">
            <summary>The Right Alt symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.RGUI">
            <summary>The Right GUI symbol (Windows/Command/Meta key).</summary>
        </member>
        <member name="T:Night.Mouse">
            <summary>
            Provides an interface to the user's mouse.
            </summary>
        </member>
        <member name="M:Night.Mouse.IsDown(Night.MouseButton)">
            <summary>
            Checks whether a certain mouse button is down.
            This function does not detect mouse wheel scrolling.
            </summary>
            <param name="button">The index of a button to check. 1 is the primary mouse button, 2 is the secondary mouse button, 3 is the middle button, 4 is the X1 button (typically "back"), and 5 is the X2 button (typically "forward").</param>
            <returns>True if the button is down, false otherwise.</returns>
        </member>
        <member name="M:Night.Mouse.GetPosition">
            <summary>
            Gets the current position of the mouse cursor in the window.
            </summary>
            <returns>A tuple (int X, int Y) representing the mouse cursor coordinates.</returns>
        </member>
        <member name="M:Night.Mouse.SetVisible(System.Boolean)">
            <summary>
            Sets the visibility of the mouse cursor.
            </summary>
            <param name="visible">True to show the cursor, false to hide it.</param>
        </member>
        <member name="M:Night.Mouse.SetGrabbed(System.Boolean)">
            <summary>
            Grabs the mouse, confining it to the window.
            </summary>
            <param name="grabbed">True to grab the mouse, false to release it.</param>
        </member>
        <member name="M:Night.Mouse.SetRelativeMode(System.Boolean)">
            <summary>
            Sets whether relative mouse mode is enabled for the current window.
            In relative mode, the cursor is hidden and mouse motion is reported as relative to the last position.
            </summary>
            <param name="enabled">True to enable relative mode, false to disable it.</param>
        </member>
        <member name="T:Night.MouseButton">
            <summary>
            Represents mouse buttons. Values correspond to SDL_MouseButtonFlags/
            SDL3.SDL.Button* constants.
            (e.g., Left is 1, Middle is 2, etc.)
            </summary>
        </member>
        <member name="F:Night.MouseButton.Unknown">
            <summary>
            An unknown or unspecified mouse button.
            </summary>
        </member>
        <member name="F:Night.MouseButton.Left">
            <summary>
            The left mouse button.
            </summary>
        </member>
        <member name="F:Night.MouseButton.Middle">
            <summary>
            The middle mouse button.
            </summary>
        </member>
        <member name="F:Night.MouseButton.Right">
            <summary>
            The right mouse button.
            </summary>
        </member>
        <member name="F:Night.MouseButton.X1">
            <summary>
            The first extra mouse button (often "back").
            </summary>
        </member>
        <member name="F:Night.MouseButton.X2">
            <summary>
            The second extra mouse button (often "forward").
            </summary>
        </member>
        <member name="T:Night.NightSDL">
            <summary>
            Provides direct access to some SDL3 functions using SDL3-CS bindings.
            </summary>
        </member>
        <member name="M:Night.NightSDL.GetVersion">
            <summary>
            Get the version of SDL that is linked against the Night Engine.
            Calls the SDL3-CS binding for SDL_GetVersion() and returns a packed int.
            https://wiki.libsdl.org/SDL3/SDL_GetVersion.
            </summary>
            <returns>A string representing the SDL version "major.minor.patch".</returns>
        </member>
        <member name="M:Night.NightSDL.GetError">
            <summary>
            Retrieve a message about the last error that occurred on the current thread.
            Calls the SDL3-CS binding for SDL_GetError() and returns a string.
            https://wiki.libsdl.org/SDL3/SDL_GetError.
            </summary>
            <returns>Returns a message with information about the specific error that occurred, or an empty string if there hasn't been an error message set since the last call to SDL_ClearError().</returns>
        </member>
        <member name="T:Night.System">
            <summary>
            Provides access to system-level information and functions.
            </summary>
        </member>
        <member name="M:Night.System.SetClipboardText(System.String)">
            <summary>
            Puts text in the system's clipboard.
            </summary>
            <param name="text">The new text to hold in the system's clipboard.</param>
            <returns>True if the operation was successful, false otherwise.</returns>
        </member>
        <member name="T:Night.Timer">
            <summary>
            Provides high-resolution timing functionality.
            </summary>
        </member>
        <member name="P:Night.Timer.CurrentFPS">
            <summary>
            Gets or sets the current frames per second. Updated by the framework.
            </summary>
        </member>
        <member name="P:Night.Timer.CurrentDelta">
            <summary>
            Gets or sets the delta time of the current frame. Updated by <see cref="M:Night.Timer.Step"/>.
            </summary>
        </member>
        <member name="P:Night.Timer.CurrentAverageDelta">
            <summary>
            Gets or sets the average delta time over recent frames. Updated by the framework.
            </summary>
        </member>
        <member name="P:Night.Timer.LastStepTime">
            <summary>
            Gets or sets the timestamp of the last call to <see cref="M:Night.Timer.Step"/>. Initialized by <see cref="M:Night.Timer.Initialize"/>.
            </summary>
        </member>
        <member name="P:Night.Timer.PerformanceFrequency">
            <summary>
            Gets the performance counter frequency. Initialized by <see cref="M:Night.Timer.Initialize"/>.
            </summary>
        </member>
        <member name="M:Night.Timer.GetTime">
            <summary>
            Gets the time elapsed since the Timer module was loaded, in seconds.
            </summary>
            <returns>The time in seconds. Given as a decimal, accurate to the microsecond.</returns>
        </member>
        <member name="M:Night.Timer.GetFPS">
            <summary>
            Gets the current frames per second (FPS).
            </summary>
            <returns>The current FPS.</returns>
        </member>
        <member name="M:Night.Timer.GetDelta">
            <summary>
            Gets the time elapsed since the last frame, in seconds.
            This is the same value passed to. <code>IGame.Update(float deltaTime)</code>.
            </summary>
            <returns>The delta time in seconds.</returns>
        </member>
        <member name="M:Night.Timer.GetAverageDelta">
            <summary>
            Returns the average delta time (seconds per frame) over the last second.
            </summary>
            <returns>The average delta time over the last second.</returns>
        </member>
        <member name="M:Night.Timer.Sleep(System.Double)">
            <summary>
            Pauses the current thread for the specified amount of time.
            This function causes the entire thread to pause. Graphics will not draw,
            input events will not trigger, code will not run, and the window will
            be unresponsive if you use this in the main game thread.
            </summary>
            <param name="seconds">Seconds to sleep for.</param>
        </member>
        <member name="M:Night.Timer.Step">
            <summary>
            Measures the time between the last call to this function and the current one.
            Calling this function updates the value returned by <see cref="M:Night.Timer.GetDelta"/>.
            This is typically called once per frame by the game loop to determine the delta time for that frame.
            </summary>
            <returns>The time passed (in seconds) since the last call to Step().</returns>
        </member>
        <member name="M:Night.Timer.Initialize">
            <summary>
            Initializes essential timer values. Must be called once by the framework
            before the game loop begins and after SDL has been initialized.
            </summary>
        </member>
        <member name="T:Night.VersionInfo">
            <summary>
            Provides information about the Night library, such as its version.
            </summary>
        </member>
        <member name="F:Night.VersionInfo.Version">
            <summary>
            Gets the full semantic version string (e.g., "1.0.0", "1.2.3-beta.1").
            This value is updated by the GitHub release Action.
            </summary>
        </member>
        <member name="F:Night.VersionInfo.CodeName">
            <summary>
            Gets the developer-assigned codename for the current version.
            This value is manually updated by the developer.
            </summary>
        </member>
        <member name="M:Night.VersionInfo.GetVersion">
            <summary>
            Gets the Semantic Version of the Night library.
            This version is set during the release process.
            </summary>
            <returns>The library's semantic version string.</returns>
        </member>
        <member name="T:Night.FullscreenType">
            <summary>
            Types of fullscreen modes.
            </summary>
        </member>
        <member name="F:Night.FullscreenType.Exclusive">
            <summary>
            Standard exclusive-fullscreen mode. Changes the display mode (actual resolution) of the monitor.
            </summary>
        </member>
        <member name="F:Night.FullscreenType.Desktop">
            <summary>
            Borderless fullscreen windowed mode. A borderless screen-sized window is created which sits on top of all desktop UI elements.
            The window is automatically resized to match the dimensions of the desktop, and its size cannot be changed.
            </summary>
        </member>
        <member name="T:Night.Window">
            <summary>
            Provides an interface for modifying and retrieving information about the program's window.
            </summary>
        </member>
        <member name="P:Night.Window.RendererPtr">
            <summary>
            Gets the pointer to the internal SDL renderer. For use by Night.Graphics.
            </summary>
        </member>
        <member name="P:Night.Window.Handle">
            <summary>
            Gets the handle to the internal SDL window. For use by other Night modules or internal methods.
            </summary>
        </member>
        <member name="M:Night.Window.SetIcon(System.String)">
            <summary>
            Sets the window icon.
            </summary>
            <param name="imagePath">The path to the icon image file (e.g., .ico, .png, .bmp).
            Uses SDL_image for loading, so supports various formats.</param>
            <returns>True if the icon was set successfully, false otherwise.</returns>
        </member>
        <member name="M:Night.Window.GetIcon">
            <summary>
            Gets the image data of the currently set window icon.
            </summary>
            <returns>The <see cref="T:Night.ImageData"/> of the icon, or null if no icon has been set or an error occurred.</returns>
        </member>
        <member name="M:Night.Window.SetMode(System.Int32,System.Int32,SDL3.SDL.WindowFlags)">
            <summary>
                Sets the display mode and properties of the window.
            </summary>
            <param name="width">The width of the window.</param>
            <param name="height">The height of the window.</param>
            <param name="flags">SDL Window flags to apply.</param>
            <returns>True if the mode was set successfully, false otherwise.</returns>
        </member>
        <member name="M:Night.Window.SetTitle(System.String)">
            <summary>
            Sets the window title.
            </summary>
            <param name="title">The new window title.</param>
        </member>
        <member name="M:Night.Window.IsOpen">
            <summary>
            Checks if the window is open.
            </summary>
            <returns>True if the window is open, false otherwise.</returns>
        </member>
        <member name="M:Night.Window.Close">
            <summary>
            Signals that the window should close.
            This is typically called by the engine when a quit event is received.
            TODO: Does this need to align with Love2D more? https://love2d.org/wiki/love.window.close.
            </summary>
        </member>
        <member name="M:Night.Window.GetDisplayCount">
            <summary>
            Gets the number of connected monitors.
            </summary>
            <returns>The number of currently connected displays.</returns>
        </member>
        <member name="M:Night.Window.GetDesktopDimensions(System.Int32)">
            <summary>
            Gets the width and height of the desktop.
            </summary>
            <param name="displayIndex">The index of the display to query (0 for the primary display).</param>
            <returns>A tuple containing the width and height of the desktop, or (0,0) if an error occurs.</returns>
        </member>
        <member name="M:Night.Window.GetFullscreen">
            <summary>
            Gets whether the window is fullscreen.
            </summary>
            <returns>A tuple: (bool IsFullscreen, FullscreenType FsType).
            IsFullscreen is true if the window is in any fullscreen mode, false otherwise.
            FsType indicates the type of fullscreen mode used.</returns>
        </member>
        <member name="M:Night.Window.SetFullscreen(System.Boolean,Night.FullscreenType)">
            <summary>
            Enters or exits fullscreen. The display to use when entering fullscreen is chosen
            based on which display the window is currently in, if multiple monitors are connected.
            </summary>
            <param name="fullscreen">Whether to enter or exit fullscreen mode.</param>
            <param name="fsType">The type of fullscreen mode to use (Desktop or Exclusive).</param>
            <returns>True if the operation was successful, false otherwise.</returns>
        </member>
        <member name="M:Night.Window.GetFullscreenModes(System.Int32)">
            <summary>
            Gets a list of available fullscreen display modes for a given display.
            </summary>
            <param name="displayIndex">The index of the display (0 for primary).</param>
            <returns>A list of (Width, Height) tuples representing available modes, or an empty list on error.</returns>
        </member>
        <member name="M:Night.Window.GetMode">
            <summary>
            Gets the current window mode (width, height, and flags).
            </summary>
            <returns>A WindowMode struct containing width, height, and current flags.</returns>
        </member>
        <member name="M:Night.Window.GetDPIScale">
            <summary>
            Gets the DPI scale factor of the display containing the window.
            </summary>
            <returns>The DPI scale factor, or 1.0f on error or if not applicable.</returns>
        </member>
        <member name="M:Night.Window.ToPixels(System.Single)">
            <summary>
            Converts a value from density-independent units to pixels, using the window's current DPI scale.
            </summary>
            <param name="value">The value in density-independent units.</param>
            <returns>The equivalent value in pixels.</returns>
        </member>
        <member name="M:Night.Window.FromPixels(System.Single)">
            <summary>
            Converts a value from pixels to density-independent units, using the window's current DPI scale.
            </summary>
            <param name="value">The value in pixels.</param>
            <returns>The equivalent value in density-independent units.</returns>
        </member>
        <member name="M:Night.Window.Shutdown">
            <summary>
            Internal method to shut down the window and renderer, and quit the video subsystem.
            Should be called by the FrameworkLoop at the end of the application.
            </summary>
        </member>
        <member name="M:Night.Window.EnsureVideoInitialized">
            <summary>
            Ensures the SDL Video subsystem is initialized.
            </summary>
        </member>
        <member name="M:Night.Window.GetDesktopDimensionsForDisplayID(System.UInt32)">
            <summary>
            Gets the dimensions of the desktop for a specific display ID.
            </summary>
            <param name="displayID">The actual ID of the display to query.</param>
            <returns>A tuple containing the width and height of the desktop, or (0,0) if an error occurs.</returns>
        </member>
        <member name="T:Night.WindowMode">
            <summary>
            Represents the display mode of a window, including width, height, and other properties.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Width">
            <summary>
            Gets or sets the window width in pixels.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Height">
            <summary>
            Gets or sets the window height in pixels.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Fullscreen">
            <summary>
            Gets or sets a value indicating whether the window is in fullscreen mode.
            </summary>
        </member>
        <member name="F:Night.WindowMode.FullscreenType">
            <summary>
            Gets or sets the type of fullscreen mode used.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Borderless">
            <summary>
            Gets or sets a value indicating whether the window is borderless.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Vsync">
            <summary>
            Gets or sets the VSync mode. 1 if the graphics framerate is synchronized with the monitor's refresh rate, 0 otherwise.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Msaa">
            <summary>
            Gets or sets the number of antialiasing samples used (0 if MSAA is disabled).
            </summary>
        </member>
        <member name="F:Night.WindowMode.Resizable">
            <summary>
            Gets or sets a value indicating whether the window is resizable in windowed mode.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Centered">
            <summary>
            Gets or sets a value indicating whether the window is centered in windowed mode.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Display">
            <summary>
            Gets or sets the 1-based index of the display the window is currently in.
            </summary>
        </member>
        <member name="F:Night.WindowMode.MinWidth">
            <summary>
            Gets or sets the minimum width of the window, if resizable.
            </summary>
        </member>
        <member name="F:Night.WindowMode.MinHeight">
            <summary>
            Gets or sets the minimum height of the window, if resizable.
            </summary>
        </member>
        <member name="F:Night.WindowMode.HighDpi">
            <summary>
            Gets or sets a value indicating whether high-dpi mode is allowed on Retina displays (macOS).
            </summary>
        </member>
        <member name="F:Night.WindowMode.RefreshRate">
            <summary>
            Gets or sets the refresh rate of the screen's current display mode in Hz (0 if undetermined).
            </summary>
        </member>
        <member name="F:Night.WindowMode.X">
            <summary>
            Gets or sets the x-coordinate of the window's position.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Y">
            <summary>
            Gets or sets the y-coordinate of the window's position.
            </summary>
        </member>
    </members>
</doc>



================================================
File: src/Night/bin/Release/net9.0/Night.deps.json
================================================
{
  "runtimeTarget": {
    "name": ".NETCoreApp,Version=v9.0",
    "signature": ""
  },
  "compilationOptions": {},
  "targets": {
    ".NETCoreApp,Version=v9.0": {
      "Night/1.0.0": {
        "dependencies": {
          "SDL3-CS": "3.2.14.2"
        },
        "runtime": {
          "Night.dll": {}
        }
      },
      "SDL3-CS/3.2.14.2": {
        "runtime": {
          "lib/net9.0/SDL3-CS.dll": {
            "assemblyVersion": "3.2.14.2",
            "fileVersion": "3.2.14.2"
          }
        }
      }
    }
  },
  "libraries": {
    "Night/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "SDL3-CS/3.2.14.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-wqWjIm2EP7PmXRQfwSxY4YJDSrXZ0QmolJMCJcs9KY4b3vYBdlwo0U4/olPMdBx6yRzqhN1nGJjmeC9OJT6L1g==",
      "path": "sdl3-cs/3.2.14.2",
      "hashPath": "sdl3-cs.3.2.14.2.nupkg.sha512"
    }
  }
}


================================================
File: src/Night/obj/Night.Engine.csproj.nuget.dgspec.json
================================================
{
  "format": 1,
  "restore": {
    "/Users/danny/Documents/GitHub/any2/src/Night.Engine/Night.Engine.csproj": {}
  },
  "projects": {
    "/Users/danny/Documents/GitHub/any2/src/Night.Engine/Night.Engine.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "/Users/danny/Documents/GitHub/any2/src/Night.Engine/Night.Engine.csproj",
        "projectName": "Night.Engine",
        "projectPath": "/Users/danny/Documents/GitHub/any2/src/Night.Engine/Night.Engine.csproj",
        "packagesPath": "/Users/danny/.nuget/packages/",
        "outputPath": "/Users/danny/Documents/GitHub/any2/src/Night.Engine/obj/",
        "projectStyle": "PackageReference",
        "configFilePaths": [
          "/Users/danny/.nuget/NuGet/NuGet.Config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "SDL3-CS": {
              "target": "Package",
              "version": "[*, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "/Users/danny/.local/share/mise/installs/dotnet/9.0.300/sdk/9.0.300/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}


================================================
File: src/Night/obj/Night.Engine.csproj.nuget.g.props
================================================
﻿<?xml version="1.0" encoding="utf-8" standalone="no"?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <RestoreSuccess Condition=" '$(RestoreSuccess)' == '' ">True</RestoreSuccess>
    <RestoreTool Condition=" '$(RestoreTool)' == '' ">NuGet</RestoreTool>
    <ProjectAssetsFile Condition=" '$(ProjectAssetsFile)' == '' ">$(MSBuildThisFileDirectory)project.assets.json</ProjectAssetsFile>
    <NuGetPackageRoot Condition=" '$(NuGetPackageRoot)' == '' ">/Users/danny/.nuget/packages/</NuGetPackageRoot>
    <NuGetPackageFolders Condition=" '$(NuGetPackageFolders)' == '' ">/Users/danny/.nuget/packages/</NuGetPackageFolders>
    <NuGetProjectStyle Condition=" '$(NuGetProjectStyle)' == '' ">PackageReference</NuGetProjectStyle>
    <NuGetToolVersion Condition=" '$(NuGetToolVersion)' == '' ">6.14.0</NuGetToolVersion>
  </PropertyGroup>
  <ItemGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <SourceRoot Include="/Users/danny/.nuget/packages/" />
  </ItemGroup>
</Project>


================================================
File: src/Night/obj/Night.Engine.csproj.nuget.g.targets
================================================
﻿<?xml version="1.0" encoding="utf-8" standalone="no"?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" />


================================================
File: src/Night/obj/Night.csproj.nuget.dgspec.json
================================================
{
  "format": 1,
  "restore": {
    "/Users/danny/Documents/GitHub/any2/src/Night/Night.csproj": {}
  },
  "projects": {
    "/Users/danny/Documents/GitHub/any2/src/Night/Night.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "/Users/danny/Documents/GitHub/any2/src/Night/Night.csproj",
        "projectName": "Night",
        "projectPath": "/Users/danny/Documents/GitHub/any2/src/Night/Night.csproj",
        "packagesPath": "/Users/danny/.nuget/packages/",
        "outputPath": "/Users/danny/Documents/GitHub/any2/src/Night/obj/",
        "projectStyle": "PackageReference",
        "configFilePaths": [
          "/Users/danny/.nuget/NuGet/NuGet.Config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "SDL3-CS": {
              "target": "Package",
              "version": "[*, )"
            },
            "StyleCop.Analyzers.Unstable": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[1.2.0.556, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "/Users/danny/.local/share/mise/installs/dotnet/9.0.300/sdk/9.0.300/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}


================================================
File: src/Night/obj/Night.csproj.nuget.g.props
================================================
﻿<?xml version="1.0" encoding="utf-8" standalone="no"?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <RestoreSuccess Condition=" '$(RestoreSuccess)' == '' ">True</RestoreSuccess>
    <RestoreTool Condition=" '$(RestoreTool)' == '' ">NuGet</RestoreTool>
    <ProjectAssetsFile Condition=" '$(ProjectAssetsFile)' == '' ">$(MSBuildThisFileDirectory)project.assets.json</ProjectAssetsFile>
    <NuGetPackageRoot Condition=" '$(NuGetPackageRoot)' == '' ">/Users/danny/.nuget/packages/</NuGetPackageRoot>
    <NuGetPackageFolders Condition=" '$(NuGetPackageFolders)' == '' ">/Users/danny/.nuget/packages/</NuGetPackageFolders>
    <NuGetProjectStyle Condition=" '$(NuGetProjectStyle)' == '' ">PackageReference</NuGetProjectStyle>
    <NuGetToolVersion Condition=" '$(NuGetToolVersion)' == '' ">6.14.0</NuGetToolVersion>
  </PropertyGroup>
  <ItemGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <SourceRoot Include="/Users/danny/.nuget/packages/" />
  </ItemGroup>
  <PropertyGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <PkgStyleCop_Analyzers_Unstable Condition=" '$(PkgStyleCop_Analyzers_Unstable)' == '' ">/Users/danny/.nuget/packages/stylecop.analyzers.unstable/1.2.0.556</PkgStyleCop_Analyzers_Unstable>
  </PropertyGroup>
</Project>


================================================
File: src/Night/obj/Night.csproj.nuget.g.targets
================================================
﻿<?xml version="1.0" encoding="utf-8" standalone="no"?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" />


================================================
File: src/Night/obj/project.assets.json
================================================
{
  "version": 3,
  "targets": {
    "net9.0": {
      "SDL3-CS/3.2.14.2": {
        "type": "package",
        "compile": {
          "lib/net9.0/SDL3-CS.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/SDL3-CS.dll": {
            "related": ".xml"
          }
        }
      },
      "StyleCop.Analyzers.Unstable/1.2.0.556": {
        "type": "package"
      }
    }
  },
  "libraries": {
    "SDL3-CS/3.2.14.2": {
      "sha512": "wqWjIm2EP7PmXRQfwSxY4YJDSrXZ0QmolJMCJcs9KY4b3vYBdlwo0U4/olPMdBx6yRzqhN1nGJjmeC9OJT6L1g==",
      "type": "package",
      "path": "sdl3-cs/3.2.14.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "CODE_OF_CONDUCT.md",
        "LICENSE",
        "README-nuget.md",
        "README.md",
        "SDL3-CS.xml",
        "lib/net7.0/SDL3-CS.dll",
        "lib/net7.0/SDL3-CS.xml",
        "lib/net8.0/SDL3-CS.dll",
        "lib/net8.0/SDL3-CS.xml",
        "lib/net9.0/SDL3-CS.dll",
        "lib/net9.0/SDL3-CS.xml",
        "logo.png",
        "sdl3-cs.3.2.14.2.nupkg.sha512",
        "sdl3-cs.nuspec"
      ]
    },
    "StyleCop.Analyzers.Unstable/1.2.0.556": {
      "sha512": "zvn9Mqs/ox/83cpYPignI8hJEM2A93s2HkHs8HYMOAQW0PkampyoErAiIyKxgTLqbbad29HX/shv/6LGSjPJNQ==",
      "type": "package",
      "path": "stylecop.analyzers.unstable/1.2.0.556",
      "hasTools": true,
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "THIRD-PARTY-NOTICES.txt",
        "analyzers/dotnet/cs/StyleCop.Analyzers.CodeFixes.dll",
        "analyzers/dotnet/cs/StyleCop.Analyzers.dll",
        "analyzers/dotnet/cs/de-DE/StyleCop.Analyzers.resources.dll",
        "analyzers/dotnet/cs/en-GB/StyleCop.Analyzers.resources.dll",
        "analyzers/dotnet/cs/es-MX/StyleCop.Analyzers.resources.dll",
        "analyzers/dotnet/cs/fr-FR/StyleCop.Analyzers.resources.dll",
        "analyzers/dotnet/cs/pl-PL/StyleCop.Analyzers.resources.dll",
        "analyzers/dotnet/cs/pt-BR/StyleCop.Analyzers.resources.dll",
        "analyzers/dotnet/cs/ru-RU/StyleCop.Analyzers.resources.dll",
        "rulesets/StyleCopAnalyzersDefault.ruleset",
        "stylecop.analyzers.unstable.1.2.0.556.nupkg.sha512",
        "stylecop.analyzers.unstable.nuspec",
        "tools/install.ps1",
        "tools/uninstall.ps1"
      ]
    }
  },
  "projectFileDependencyGroups": {
    "net9.0": [
      "SDL3-CS >= *",
      "StyleCop.Analyzers.Unstable >= 1.2.0.556"
    ]
  },
  "packageFolders": {
    "/Users/danny/.nuget/packages/": {}
  },
  "project": {
    "version": "1.0.0",
    "restore": {
      "projectUniqueName": "/Users/danny/Documents/GitHub/any2/src/Night/Night.csproj",
      "projectName": "Night",
      "projectPath": "/Users/danny/Documents/GitHub/any2/src/Night/Night.csproj",
      "packagesPath": "/Users/danny/.nuget/packages/",
      "outputPath": "/Users/danny/Documents/GitHub/any2/src/Night/obj/",
      "projectStyle": "PackageReference",
      "configFilePaths": [
        "/Users/danny/.nuget/NuGet/NuGet.Config"
      ],
      "originalTargetFrameworks": [
        "net9.0"
      ],
      "sources": {
        "https://api.nuget.org/v3/index.json": {}
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "projectReferences": {}
        }
      },
      "warningProperties": {
        "warnAsError": [
          "NU1605"
        ]
      },
      "restoreAuditProperties": {
        "enableAudit": "true",
        "auditLevel": "low",
        "auditMode": "direct"
      },
      "SdkAnalysisLevel": "9.0.300"
    },
    "frameworks": {
      "net9.0": {
        "targetAlias": "net9.0",
        "dependencies": {
          "SDL3-CS": {
            "target": "Package",
            "version": "[*, )"
          },
          "StyleCop.Analyzers.Unstable": {
            "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
            "suppressParent": "All",
            "target": "Package",
            "version": "[1.2.0.556, )"
          }
        },
        "imports": [
          "net461",
          "net462",
          "net47",
          "net471",
          "net472",
          "net48",
          "net481"
        ],
        "assetTargetFallback": true,
        "warn": true,
        "frameworkReferences": {
          "Microsoft.NETCore.App": {
            "privateAssets": "all"
          }
        },
        "runtimeIdentifierGraphPath": "/Users/danny/.local/share/mise/installs/dotnet/9.0.300/sdk/9.0.300/PortableRuntimeIdentifierGraph.json"
      }
    }
  }
}


================================================
File: src/Night/obj/project.nuget.cache
================================================
{
  "version": 2,
  "dgSpecHash": "IpcCkV15DMQ=",
  "success": true,
  "projectFilePath": "/Users/danny/Documents/GitHub/any2/src/Night/Night.csproj",
  "expectedPackageFiles": [
    "/Users/danny/.nuget/packages/sdl3-cs/3.2.14.2/sdl3-cs.3.2.14.2.nupkg.sha512",
    "/Users/danny/.nuget/packages/stylecop.analyzers.unstable/1.2.0.556/stylecop.analyzers.unstable.1.2.0.556.nupkg.sha512"
  ],
  "logs": []
}


================================================
File: src/Night/obj/Debug/net9.0/Night.AssemblyInfo.cs
================================================
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("Night")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+e8acfd8c72548188ce07da1dbb62c652b6e1ed63")]
[assembly: System.Reflection.AssemblyProductAttribute("Night")]
[assembly: System.Reflection.AssemblyTitleAttribute("Night")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]

// Generated by the MSBuild WriteCodeFragment class.




================================================
File: src/Night/obj/Debug/net9.0/Night.AssemblyInfoInputs.cache
================================================
825e5e010f1eb8b6046368429c647b3236f8a7abea7eb9ea29ae91c037a2e787



================================================
File: src/Night/obj/Debug/net9.0/Night.Engine.AssemblyInfo.cs
================================================
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("Night.Engine")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+9199592ee1287114365d11edda2ee4a27d5a98c0")]
[assembly: System.Reflection.AssemblyProductAttribute("Night.Engine")]
[assembly: System.Reflection.AssemblyTitleAttribute("Night.Engine")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]

// Generated by the MSBuild WriteCodeFragment class.




================================================
File: src/Night/obj/Debug/net9.0/Night.Engine.AssemblyInfoInputs.cache
================================================
1f51dc827502e92fa9a30b06c3a411f2227cb4df15e0c7ab7d14c2ca84a976e6



================================================
File: src/Night/obj/Debug/net9.0/Night.Engine.GeneratedMSBuildEditorConfig.editorconfig
================================================
is_global = true
build_property.TargetFramework = net9.0
build_property.TargetPlatformMinVersion = 
build_property.UsingMicrosoftNETSdkWeb = 
build_property.ProjectTypeGuids = 
build_property.InvariantGlobalization = 
build_property.PlatformNeutralAssembly = 
build_property.EnforceExtendedAnalyzerRules = 
build_property._SupportedPlatformList = Linux,macOS,Windows
build_property.RootNamespace = Night.Engine
build_property.ProjectDir = /Users/danny/Documents/GitHub/any2/src/Night.Engine/
build_property.EnableComHosting = 
build_property.EnableGeneratedComInterfaceComImportInterop = 
build_property.EffectiveAnalysisLevelStyle = 9.0
build_property.EnableCodeStyleSeverity = 



================================================
File: src/Night/obj/Debug/net9.0/Night.Engine.GlobalUsings.g.cs
================================================
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.IO;
global using global::System.Linq;
global using global::System.Net.Http;
global using global::System.Threading;
global using global::System.Threading.Tasks;



================================================
File: src/Night/obj/Debug/net9.0/Night.Engine.assets.cache
================================================
[Non-text file]


================================================
File: src/Night/obj/Debug/net9.0/Night.Engine.csproj.AssemblyReference.cache
================================================
[Non-text file]


================================================
File: src/Night/obj/Debug/net9.0/Night.Engine.csproj.CoreCompileInputs.cache
================================================
b3df604d7cffb48e344726c17cf5ace8003ee548754b1f33d5c7a81b14304dee



================================================
File: src/Night/obj/Debug/net9.0/Night.Engine.sourcelink.json
================================================
{"documents":{"/Users/danny/Documents/GitHub/any2/*":"https://raw.githubusercontent.com/nightconcept/any2/9199592ee1287114365d11edda2ee4a27d5a98c0/*","/Users/danny/Documents/GitHub/any2/lib/SDL3-CS/*":"https://raw.githubusercontent.com/edwardgushchin/SDL3-CS/f910675dcf9e0825b10e97b8583c892e0eee14be/*"}}


================================================
File: src/Night/obj/Debug/net9.0/Night.GeneratedMSBuildEditorConfig.editorconfig
================================================
is_global = true
build_property.TargetFramework = net9.0
build_property.TargetPlatformMinVersion = 
build_property.UsingMicrosoftNETSdkWeb = 
build_property.ProjectTypeGuids = 
build_property.InvariantGlobalization = 
build_property.PlatformNeutralAssembly = 
build_property.EnforceExtendedAnalyzerRules = 
build_property._SupportedPlatformList = Linux,macOS,Windows
build_property.RootNamespace = Night
build_property.ProjectDir = /Users/danny/Documents/GitHub/any2/src/Night/
build_property.EnableComHosting = 
build_property.EnableGeneratedComInterfaceComImportInterop = 
build_property.EffectiveAnalysisLevelStyle = 9.0
build_property.EnableCodeStyleSeverity = 



================================================
File: src/Night/obj/Debug/net9.0/Night.GlobalUsings.g.cs
================================================
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.IO;
global using global::System.Linq;
global using global::System.Net.Http;
global using global::System.Threading;
global using global::System.Threading.Tasks;



================================================
File: src/Night/obj/Debug/net9.0/Night.assets.cache
================================================
[Non-text file]


================================================
File: src/Night/obj/Debug/net9.0/Night.csproj.AssemblyReference.cache
================================================
[Non-text file]


================================================
File: src/Night/obj/Debug/net9.0/Night.csproj.CoreCompileInputs.cache
================================================
e1f511686d26da68a0e102905c679a4eea194bf0f3d29311764503ef897eb969



================================================
File: src/Night/obj/Debug/net9.0/Night.sourcelink.json
================================================
{"documents":{"/Users/danny/Documents/GitHub/any2/*":"https://raw.githubusercontent.com/nightconcept/any2/e8acfd8c72548188ce07da1dbb62c652b6e1ed63/*","/Users/danny/Documents/GitHub/any2/lib/SDL3-CS/*":"https://raw.githubusercontent.com/edwardgushchin/SDL3-CS/f910675dcf9e0825b10e97b8583c892e0eee14be/*"}}


================================================
File: src/Night/obj/Debug/net9.0/.NETCoreApp,Version=v9.0.AssemblyAttributes.cs
================================================
// <autogenerated />
using System;
using System.Reflection;
[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETCoreApp,Version=v9.0", FrameworkDisplayName = ".NET 9.0")]





================================================
File: src/Night/obj/Release/net9.0/Night.AssemblyInfo.cs
================================================
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("Night")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Release")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+24ac3ca6d4b8b5b68fc84dc694eac60dd7de3977")]
[assembly: System.Reflection.AssemblyProductAttribute("Night")]
[assembly: System.Reflection.AssemblyTitleAttribute("Night")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]

// Generated by the MSBuild WriteCodeFragment class.




================================================
File: src/Night/obj/Release/net9.0/Night.AssemblyInfoInputs.cache
================================================
b629dd9fcb338f50465a38056124ace888def6c13e2f77b42e286d5b4291007c



================================================
File: src/Night/obj/Release/net9.0/Night.GeneratedMSBuildEditorConfig.editorconfig
================================================
is_global = true
build_property.TargetFramework = net9.0
build_property.TargetPlatformMinVersion = 
build_property.UsingMicrosoftNETSdkWeb = 
build_property.ProjectTypeGuids = 
build_property.InvariantGlobalization = 
build_property.PlatformNeutralAssembly = 
build_property.EnforceExtendedAnalyzerRules = 
build_property._SupportedPlatformList = Linux,macOS,Windows
build_property.RootNamespace = Night
build_property.ProjectDir = /Users/danny/Documents/GitHub/any2/src/Night/
build_property.EnableComHosting = 
build_property.EnableGeneratedComInterfaceComImportInterop = 
build_property.EffectiveAnalysisLevelStyle = 9.0
build_property.EnableCodeStyleSeverity = 



================================================
File: src/Night/obj/Release/net9.0/Night.GlobalUsings.g.cs
================================================
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.IO;
global using global::System.Linq;
global using global::System.Net.Http;
global using global::System.Threading;
global using global::System.Threading.Tasks;



================================================
File: src/Night/obj/Release/net9.0/Night.assets.cache
================================================
[Non-text file]


================================================
File: src/Night/obj/Release/net9.0/Night.csproj.AssemblyReference.cache
================================================
[Non-text file]


================================================
File: src/Night/obj/Release/net9.0/Night.csproj.CoreCompileInputs.cache
================================================
e35b55b06b9c2cc816fb12d13a4a07026832adce57ee9caec137ae375ce8bac7



================================================
File: src/Night/obj/Release/net9.0/Night.sourcelink.json
================================================
{"documents":{"/Users/danny/Documents/GitHub/any2/*":"https://raw.githubusercontent.com/nightconcept/any2/9199592ee1287114365d11edda2ee4a27d5a98c0/*","/Users/danny/Documents/GitHub/any2/lib/SDL3-CS/*":"https://raw.githubusercontent.com/edwardgushchin/SDL3-CS/f910675dcf9e0825b10e97b8583c892e0eee14be/*"}}


================================================
File: src/Night/obj/Release/net9.0/.NETCoreApp,Version=v9.0.AssemblyAttributes.cs
================================================
// <autogenerated />
using System;
using System.Reflection;
[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETCoreApp,Version=v9.0", FrameworkDisplayName = ".NET 9.0")]





================================================
File: src/SampleGame/Game.cs
================================================
// <copyright file="Game.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;
using System.Collections.Generic;
using System.IO;

using Night;

using SDL3;

namespace Night.SampleGame;

/// <summary>
/// Main game class for the platformer sample.
/// Implements the <see cref="IGame"/> interface for Night.Engine integration.
/// </summary>
public class Game : IGame
{
  private Player player;
  private List<Night.Rectangle> platforms;
  private Night.Sprite? platformSprite;
  private Night.Rectangle goalPlatform;
  private bool goalReachedMessageShown = false; // To ensure message prints only once

  /// <summary>
  /// Initializes a new instance of the <see cref="Game"/> class.
  /// </summary>
  public Game()
  {
    this.player = new Player();
    this.platforms = new List<Night.Rectangle>();
  }

  /// <summary>
  /// Loads game assets and initializes game state.
  /// Called once at the start of the game by the Night.Engine.
  /// </summary>
  public void Load()
  {
    // _ = Window.SetMode(800, 600, SDL.WindowFlags.Resizable);
    // Window.SetTitle("Night Platformer Sample");
    // Window settings will now be driven by config.json (or defaults if not present/configured)
    this.player.Load();

    // Load platform sprite
    string baseDirectory = AppContext.BaseDirectory;
    string platformImageRelativePath = Path.Combine("assets", "images", "pixel_green.png");
    string platformImageFullPath = Path.Combine(baseDirectory, platformImageRelativePath);
    this.platformSprite = Graphics.NewImage(platformImageFullPath); // Graphics class will be in Night.Framework
    if (this.platformSprite == null)
    {
      Console.WriteLine($"Game.Load: Failed to load platform sprite at '{platformImageFullPath}'. Platforms will not be drawn.");
    }

    // Initialize platforms (as per docs/epics/epic7-design.md)
    this.platforms.Add(new Night.Rectangle(50, 500, 700, 50));
    this.platforms.Add(new Night.Rectangle(200, 400, 150, 30));
    this.platforms.Add(new Night.Rectangle(450, 300, 100, 30));
    this.goalPlatform = new Night.Rectangle(600, 200, 100, 30);
    this.platforms.Add(this.goalPlatform);

    // Set the window icon (assuming icon is in assets/icon.ico relative to executable)
    // This path will be resolved by Night.Framework if specified in config.json via IconPath.
    // If not in config, or if this call is made after Framework has set from config,
    // this explicit call can override or set it if not in config.
    // For the sample, we'll rely on the config first, but this shows direct API usage.
    // If you want the SampleGame to ALWAYS use a specific icon regardless of config, call it here.
    // For now, we let config drive it. If you want to test direct SetIcon:
    _ = Window.SetIcon("assets/icon.ico");
    Console.WriteLine($"Attempted to set icon from Game.Load. Current icon: {Window.GetIcon()}");
  }

  /// <summary>
  /// Updates the game state.
  /// Called every frame by the Night.Engine.
  /// </summary>
  /// <param name="deltaTime">The time elapsed since the last frame, in seconds.</param>
  public void Update(double deltaTime)
  {
    this.player.Update(deltaTime, this.platforms);

    // Check if player reached the goal platform
    // Adjust playerBounds slightly for the goal check to ensure "touching" counts,
    // as player might be perfectly aligned on top.
    Night.Rectangle playerBoundsForGoalCheck = new Night.Rectangle((int)this.player.X, (int)this.player.Y, this.player.Width, this.player.Height + 1);
    if (CheckAABBCollision(playerBoundsForGoalCheck, this.goalPlatform) && !this.goalReachedMessageShown)
    {
      // Simple win condition: print a message.
      // A real game might change state, show a UI, etc.
      Console.WriteLine("Congratulations! Goal Reached!");
      this.goalReachedMessageShown = true; // Set flag so it doesn't print again

      // Optionally, could close the game or trigger another action:
      // Window.Close(); // Window class will be in Night.Framework
    }
  }

  /// <summary>
  /// Draws the game scene.
  /// Called every frame by the Night.Engine after Update.
  /// </summary>
  public void Draw()
  {
    Graphics.Clear(new Night.Color(135, 206, 235)); // Sky blue background

    // Draw platforms
    if (this.platformSprite != null)
    {
      foreach (var platform in this.platforms)
      {
        // Scale the 1x1 pixel sprite to the platform's dimensions
        Graphics.Draw(
            this.platformSprite,
            platform.X,
            platform.Y,
            0,
            platform.Width,
            platform.Height);
      }
    }

    this.player.Draw();

    // --- Graphics Shape Drawing Demonstration (Top-Left Corner) ---
    // All coordinates and sizes are adjusted to fit in a smaller area.
    // Base offset for the demo shapes
    int demoXOffset = 10;
    int demoYOffset = 10;
    int shapeSize = 20; // General size for smaller shapes
    int spacing = 5;    // Spacing between shapes

    // Rectangle Demo
    Graphics.SetColor(Night.Color.Red);
    Graphics.Rectangle(Night.DrawMode.Fill, demoXOffset, demoYOffset, shapeSize, shapeSize / 2); // Smaller Red Rectangle
    Graphics.SetColor(Night.Color.Black);
    Graphics.Rectangle(Night.DrawMode.Line, demoXOffset, demoYOffset, shapeSize, shapeSize / 2);

    demoXOffset += shapeSize + spacing; // Move right for next shape

    Graphics.SetColor(0, 0, 255, 128); // Semi-transparent Blue
    Graphics.Rectangle(Night.DrawMode.Line, demoXOffset, demoYOffset, shapeSize - 5, shapeSize + 5); // Adjusted Blue Rectangle

    demoXOffset += (shapeSize - 5) + spacing; // Move right

    // Circle Demo
    Graphics.SetColor(Night.Color.Green);
    Graphics.Circle(Night.DrawMode.Fill, demoXOffset + (shapeSize / 2), demoYOffset + (shapeSize / 2), shapeSize / 2); // Smaller Green Circle
    Graphics.SetColor(Night.Color.Black);
    Graphics.Circle(Night.DrawMode.Line, demoXOffset + (shapeSize / 2), demoYOffset + (shapeSize / 2), shapeSize / 2, 12); // 12 segments

    demoXOffset += shapeSize + spacing; // Move right

    Graphics.SetColor(Night.Color.Yellow);
    Graphics.Circle(Night.DrawMode.Line, demoXOffset + (shapeSize / 3), demoYOffset + (shapeSize / 3), shapeSize / 3, 6); // Smaller Hexagon

    // Reset X offset for a new "row" of shapes if needed, or continue right
    // For this demo, we'll just continue right and assume enough horizontal space for this small demo.
    // If more shapes were added, a new row would be demoYOffset += shapeSize + spacing; demoXOffset = 10;
    demoXOffset += (shapeSize / 3 * 2) + spacing; // Move right based on hexagon diameter

    // Line Demo
    Graphics.SetColor(Night.Color.Magenta);
    Graphics.Line(demoXOffset, demoYOffset, demoXOffset + shapeSize, demoYOffset + (shapeSize / 2)); // Smaller Magenta Line

    demoXOffset += shapeSize + spacing;

    Night.PointF[] linePoints = new Night.PointF[]
    {
      new Night.PointF(demoXOffset, demoYOffset),
      new Night.PointF(demoXOffset + (shapeSize / 3), demoYOffset + (shapeSize / 2)),
      new Night.PointF(demoXOffset + (shapeSize * 2 / 3), demoYOffset),
      new Night.PointF(demoXOffset + shapeSize, demoYOffset + (shapeSize / 2)),
    };
    Graphics.SetColor(Night.Color.Cyan);
    Graphics.Line(linePoints); // Smaller Polyline in Cyan

    demoXOffset += shapeSize + spacing;

    // Polygon Demo
    Night.PointF[] triangleVertices = new Night.PointF[]
    {
      new Night.PointF(demoXOffset + (shapeSize / 2), demoYOffset),
      new Night.PointF(demoXOffset + shapeSize, demoYOffset + shapeSize),
      new Night.PointF(demoXOffset, demoYOffset + shapeSize),
    };
    Graphics.SetColor(new Night.Color(255, 165, 0)); // Orange
    Graphics.Polygon(Night.DrawMode.Fill, triangleVertices); // Smaller Orange Triangle
    Graphics.SetColor(Night.Color.Black);
    Graphics.Polygon(Night.DrawMode.Line, triangleVertices);

    demoXOffset += shapeSize + spacing;

    Night.PointF[] pentagonVertices = new Night.PointF[]
    {
        new Night.PointF(demoXOffset + (shapeSize / 2), demoYOffset),
        new Night.PointF(demoXOffset + shapeSize, demoYOffset + (shapeSize / 3)),
        new Night.PointF(demoXOffset + (shapeSize * 2 / 3), demoYOffset + shapeSize),
        new Night.PointF(demoXOffset + (shapeSize / 3), demoYOffset + shapeSize),
        new Night.PointF(demoXOffset, demoYOffset + (shapeSize / 3)),
    };
    Graphics.SetColor(new Night.Color(75, 0, 130)); // Indigo
    Graphics.Polygon(Night.DrawMode.Line, pentagonVertices); // Smaller Pentagon

    // --- Test Large Filled Rectangle ---
    Graphics.SetColor(Night.Color.Blue);
    Graphics.Rectangle(Night.DrawMode.Fill, 300, 200, 200, 150); // Large Blue Filled Rectangle Test

    // --- End Test Large Filled Rectangle ---
  }

  /// <summary>
  /// Handles key press events.
  /// Called by Night.Engine when a key is pressed.
  /// </summary>
  /// <param name="key">The <see cref="Night.KeySymbol"/> of the pressed key.</param>
  /// <param name="scancode">The <see cref="Night.KeyCode"/> (physical key code) of the pressed key.</param>
  /// <param name="isRepeat">True if this is a repeat key event, false otherwise.</param>
  public void KeyPressed(Night.KeySymbol key, Night.KeyCode scancode, bool isRepeat)
  {
    // Minimal key handling for now, primarily for closing the window.
    if (key == Night.KeySymbol.Escape)
    {
      Window.Close();
    }

    // Test error triggering
    if (key == Night.KeySymbol.E && !isRepeat)
    {
      throw new InvalidOperationException("Test error triggered by pressing 'E' in SampleGame!");
    }

    // --- Night.Window Demo: Toggle Fullscreen ---
    if (key == Night.KeySymbol.F11)
    {
      var (isFullscreen, _) = Window.GetFullscreen();
      bool success = Window.SetFullscreen(!isFullscreen, Night.FullscreenType.Desktop);
      Console.WriteLine($"SetFullscreen to {!isFullscreen} (Desktop) attempt: {(success ? "Success" : "Failed")}");
      var newMode = Window.GetMode();
      Console.WriteLine($"New Window Mode: {newMode.Width}x{newMode.Height}, Fullscreen: {newMode.Fullscreen}, Type: {newMode.FullscreenType}, Borderless: {newMode.Borderless}");
    }

    if (key == Night.KeySymbol.F10)
    {
      var (isFullscreen, _) = Window.GetFullscreen();
      bool success = Window.SetFullscreen(!isFullscreen, Night.FullscreenType.Exclusive);
      Console.WriteLine($"SetFullscreen to {!isFullscreen} (Exclusive) attempt: {(success ? "Success" : "Failed")}");
      var newMode = Window.GetMode();
      Console.WriteLine($"New Window Mode: {newMode.Width}x{newMode.Height}, Fullscreen: {newMode.Fullscreen}, Type: {newMode.FullscreenType}, Borderless: {newMode.Borderless}");
    }

    // --- End Night.Window Demo ---
  }

  // Helper for collision detection (AABB)
  private static bool CheckAABBCollision(Night.Rectangle rect1, Night.Rectangle rect2)
  {
    // True if the rectangles are overlapping
    return rect1.X < rect2.X + rect2.Width &&
           rect1.X + rect1.Width > rect2.X &&
           rect1.Y < rect2.Y + rect2.Height &&
           rect1.Y + rect1.Height > rect2.Y;
  }
}

// Program class removed from here, will be in Program.cs



================================================
File: src/SampleGame/Night.SampleGame.csproj
================================================
﻿<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <LangVersion>13.0</LangVersion>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\Night.SampleGame.xml</DocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <AdditionalFiles Include="stylecop.json" />
    <ProjectReference Include="..\Night\Night.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="assets/**/*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="config.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <Content Include="..\..\lib\SDL3-Prebuilt\windows\SDL3.dll" Condition="$([MSBuild]::IsOSPlatform('Windows'))">
      <Link>SDL3.dll</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="..\..\lib\SDL3-Prebuilt\macos\libSDL3.0.dylib" Condition="$([MSBuild]::IsOSPlatform('OSX'))">
      <Link>libSDL3.dylib</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="..\..\lib\SDL3-Prebuilt\linux\libSDL3.so.0" Condition="$([MSBuild]::IsOSPlatform('Linux'))">
      <Link>libSDL3.so</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>

    <!-- SDL3_image native libraries -->
    <Content Include="..\..\lib\SDL3-Prebuilt\windows\SDL3_image.dll" Condition="$([MSBuild]::IsOSPlatform('Windows'))">
      <Link>SDL3_image.dll</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="..\..\lib\SDL3-Prebuilt\macos\libSDL3_image.0.dylib" Condition="$([MSBuild]::IsOSPlatform('OSX'))">
      <Link>libSDL3_image.dylib</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="..\..\lib\SDL3-Prebuilt\linux\libSDL3_image.so.0" Condition="$([MSBuild]::IsOSPlatform('Linux'))">
      <Link>libSDL3_image.so</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="StyleCop.Analyzers.Unstable" Version="1.2.0.556">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

</Project>



================================================
File: src/SampleGame/Player.cs
================================================
// <copyright file="Player.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;
using System.Collections.Generic;
using System.IO;

using Night;

namespace Night.SampleGame
{
  /// <summary>
  /// Represents the player character in the game.
  /// Handles player movement, physics, and rendering.
  /// </summary>
  public class Player
  {
    private const float HorizontalSpeed = 200f; // Pixels per second
    private const float JumpStrength = -450f;  // Initial upward velocity
    private const float Gravity = 1000f;       // Pixels per second squared

    private float velocityX;
    private float velocityY;
    private bool isGrounded;
    private Night.Sprite? playerSprite; // To hold the blue rectangle sprite

    /// <summary>
    /// Initializes a new instance of the <see cref="Player"/> class.
    /// </summary>
    public Player()
    {
      // Initialize properties in Load()
      this.isGrounded = false; // Start in the air or assume Load sets initial grounded state
    }

    /// <summary>
    /// Gets the player's current X-coordinate (left edge).
    /// </summary>
    public float X { get; private set; }

    /// <summary>
    /// Gets the player's current Y-coordinate (top edge).
    /// </summary>
    public float Y { get; private set; }

    /// <summary>
    /// Gets the width of the player.
    /// </summary>
    public int Width { get; private set; }

    /// <summary>
    /// Gets the height of the player.
    /// </summary>
    public int Height { get; private set; }

    /// <summary>
    /// Loads player assets and initializes player state (position, size, sprite).
    /// </summary>
    public void Load()
    {
      this.Width = 32;
      this.Height = 64;

      // Initial position: Centered horizontally, resting on the first platform (Y=500, H=50).
      // Player's top-left Y = PlatformTopY - PlayerHeight = 500 - 64 = 436.
      // Player's top-left X = (WindowWidth / 2) - (PlayerWidth / 2) = (800 / 2) - (32 / 2) = 400 - 16 = 384.
      // Assuming window width is 800 as per Game.cs Load()
      this.X = 384f;
      this.Y = 436f; // This will be adjusted by gravity until grounded on a floor/platform

      this.velocityX = 0f;
      this.velocityY = 0f;

      // Attempt to load a pre-made blue image for the player.
      // This file needs to exist: "assets/images/player_sprite_blue_32x64.png"
      // Or a 1x1 blue pixel: "assets/images/pixel_blue.png" which we then scale.
      // For simplicity with current Draw method (no tinting), let's assume a 32x64 blue sprite.
      // If we used a 1x1 pixel_blue.png, scaleX would be Width, scaleY would be Height.
      string baseDirectory = AppContext.BaseDirectory;

      // Using a specific asset name as discussed due to lack of tinting.
      // This asset would be a 32x64 solid blue rectangle image.
      string imageRelativePath = Path.Combine("assets", "images", "player_sprite_blue_32x64.png");
      string imageFullPath = Path.Combine(baseDirectory, imageRelativePath);

      this.playerSprite = Graphics.NewImage(imageFullPath);
      if (this.playerSprite == null)
      {
        Console.WriteLine($"Player.Load: Failed to load player sprite at '{imageFullPath}'. A blue rectangle will not be drawn.");
      }
      else
      {
      }

      this.isGrounded = false; // Player starts potentially in the air and falls to ground.
    }

    /// <summary>
    /// Updates the player's state, including handling input, physics, and collisions.
    /// </summary>
    /// <param name="deltaTime">The time elapsed since the last frame, in seconds.</param>
    /// <param name="platforms">A list of <see cref="Night.Rectangle"/> objects representing solid platforms.</param>
    public void Update(double deltaTime, List<Night.Rectangle> platforms)
    {
      float dt = (float)deltaTime;

      // 1. Handle Input & Apply Jump Impulse
      this.velocityX = 0;
      if (Keyboard.IsDown(KeyCode.Left) || Keyboard.IsDown(KeyCode.A))
      {
        this.velocityX = -HorizontalSpeed;
      }

      if (Keyboard.IsDown(KeyCode.Right) || Keyboard.IsDown(KeyCode.D))
      {
        this.velocityX = HorizontalSpeed;
      }

      bool tryingToJump = Keyboard.IsDown(KeyCode.Space);
      if (tryingToJump && this.isGrounded)
      {
        this.velocityY = JumpStrength;
        this.isGrounded = false; // Explicitly set to false when jump starts
      }

      // 2. Apply Gravity
      if (!this.isGrounded)
      {
        this.velocityY += Gravity * dt;
      }

      // 3. Horizontal Movement and Collision
      this.X += this.velocityX * dt;
      Night.Rectangle playerBoundingBox = new Night.Rectangle((int)this.X, (int)this.Y, this.Width, this.Height);

      foreach (var platform in platforms)
      {
        // Update playerBoundingBox X for current position before check
        playerBoundingBox.X = (int)this.X;

        // Keep Y fixed for horizontal check pass
        playerBoundingBox.Y = (int)this.Y;

        if (CheckAABBCollision(new Night.Rectangle((int)this.X, (int)this.Y, this.Width, this.Height), platform))
        {
          // Moving right, collided with left edge of platform
          if (this.velocityX > 0)
          {
            this.X = platform.X - this.Width;
          }

          // Moving left, collided with right edge of platform
          else if (this.velocityX < 0)
          {
            this.X = platform.X + platform.Width;
          }

          // Stop horizontal movement on collision
          this.velocityX = 0;
        }
      }

      // 4. Vertical Movement and Collision
      this.Y += this.velocityY * dt;

      // Update playerBoundingBox for vertical check using potentially corrected X and new Y
      playerBoundingBox.X = (int)this.X;
      playerBoundingBox.Y = (int)this.Y;

      // Before checking collisions, assume player is not grounded unless a collision proves otherwise.
      // This flag will be set if any interaction during the platform loop results in grounding.
      bool newIsGroundedThisFrame = false;

      foreach (var platform in platforms)
      {
        // Horizontal overlap check (using player's float X for precision against integer platform.X)
        bool horizontalOverlap = this.X + this.Width > platform.X && this.X < platform.X + platform.Width;

        if (horizontalOverlap)
        {
          float playerFloatTop = this.Y;
          float playerFloatBottom = this.Y + this.Height;

          float platformTop = platform.Y;
          float platformBottom = platform.Y + platform.Height;

          // Player is moving downwards
          if (this.velocityY > 0)
          {
            // Check if player's bottom has landed on or passed through the platform's top surface,
            // and the player's top was above the platform's top (i.e., not starting from inside/below).
            if (playerFloatBottom >= platformTop && playerFloatTop < platformTop)
            {
              // Snap player's bottom to platform's top
              this.Y = platformTop - this.Height;
              this.velocityY = 0f;
              newIsGroundedThisFrame = true;
            }
          }

          // Player is moving upwards
          else if (this.velocityY < 0)
          {
            // Check if player's top has hit or passed through the platform's bottom surface,
            // and the player's bottom was below the platform's bottom (i.e., not starting from inside/above).
            if (playerFloatTop <= platformBottom && playerFloatBottom > platformBottom)
            {
              // Snap player's top to platform's bottom
              this.Y = platformBottom;
              this.velocityY = 0f;

              // Hitting head does not make player grounded
            }
          }

          // Additional check for stable grounding if player is (almost) stationary vertically.
          // This handles cases where player is already on the platform, slid onto it, or just landed.
          // It's important this runs even if _velocityY became 0 in this frame due to landing.
          // If effectively stationary vertically
          if (Math.Abs(this.velocityY) < 0.1f)
          {
            // Check if player's bottom is at or very slightly through the platform's top,
            // and player's head is above the platform's top.
            // The (platformTop + 1.0f) allows for a small 1px penetration to still count as grounded.
            if (playerFloatBottom >= platformTop && playerFloatBottom < (platformTop + 1.0f) && playerFloatTop < platformTop)
            {
              // Snap firmly
              this.Y = platformTop - this.Height;

              // Ensure velocity is zeroed
              this.velocityY = 0f;
              newIsGroundedThisFrame = true;
            }
          }
        }
      }

      this.isGrounded = newIsGroundedThisFrame;

      // If a jump was initiated and _isGrounded became false,
      // and player is still moving upwards (_velocityY < 0), they are not grounded.
      // This ensures that if a jump starts, _isGrounded remains false until landing.
      // Check if jump was initiated *this frame*
      if (tryingToJump && this.velocityY < 0)
      {
        this.isGrounded = false;
      }

      // Prevent player from going off-screen left/right (simple boundary)
      // These values should ideally come from Window.GetWidth/Height if game resizes
      float gameWindowWidth = 800;
      if (this.X < 0)
      {
        this.X = 0;
      }

      if (this.X + this.Width > gameWindowWidth)
      {
        this.X = gameWindowWidth - this.Width;
      }

      // Top boundary (optional, could allow jumping off screen top)
      // if (Y < 0) { Y = 0; if (_velocityY < 0) _velocityY = 0; }
    }

    /// <summary>
    /// Draws the player on the screen.
    /// </summary>
    public void Draw()
    {
      if (this.playerSprite != null)
      {
        // If player_sprite_blue_32x64.png is exactly 32x64, scaleX and scaleY are 1.
        // If it was a 1x1 pixel_blue.png, then scaleX=Width, scaleY=Height.
        // Assuming the loaded sprite is already the correct size (32x64):
        Graphics.Draw(this.playerSprite, this.X, this.Y);
      }
      else
      {
        // Fallback: Could draw a placeholder or nothing if sprite failed to load.
        // For now, player is invisible if sprite load fails.
        // To draw a white rectangle as a fallback (if we had a white pixel sprite):
        // if (_fallbackWhitePixelSprite != null) {
        //    Graphics.Draw(_fallbackWhitePixelSprite, X, Y, 0, Width, Height);
        // }
      }
    }

    private static bool CheckAABBCollision(Night.Rectangle rect1, Night.Rectangle rect2)
    {
      // True if the rectangles are overlapping
      return rect1.X < rect2.X + rect2.Width &&
             rect1.X + rect1.Width > rect2.X &&
             rect1.Y < rect2.Y + rect2.Height &&
             rect1.Y + rect1.Height > rect2.Y;
    }
  }
}



================================================
File: src/SampleGame/Program.cs
================================================
// <copyright file="Program.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

namespace Night.SampleGame
{
  /// <summary>
  /// Main program class for the SampleGame.
  /// Contains the entry point of the application.
  /// </summary>
  public class Program
  {
    /// <summary>
    /// The main entry point for the application.
    /// Initializes and runs the game using the Night.Framework.
    /// </summary>
    public static void Main()
    {
      Framework.Run(new Game());
    }
  }
}



================================================
File: src/SampleGame/config.json
================================================
{
  "window": {
    "title": "Night Sample Game (from config!)",
    "icon": "assets/icon.ico",
    "width": 1024,
    "height": 768,
    "resizable": true,
    "vsync": false,
    "fullscreen": false,
    "borderless": true,
    "x": 100,
    "y": 100
  }
}



================================================
File: src/SampleGame/stylecop.json
================================================
{
  "$schema": "https://raw.githubusercontent.com/DotNetAnalyzers/StyleCopAnalyzers/master/StyleCop.Analyzers/StyleCop.Analyzers/Settings/stylecop.schema.json",
  "settings": {
    "documentationRules": {
      "companyName": "Night Circle",
      "copyrightText": "zlib license\n\nCopyright (c) {copyrightYears} Danny Solivan, {companyName}\n\nThis software is provided 'as-is', without any express or implied\nwarranty. In no event will the authors be held liable for any damages\narising from the use of this software.\n\nPermission is granted to anyone to use this software for any purpose,\nincluding commercial applications, and to alter it and redistribute it\nfreely, subject to the following restrictions:\n\n1. The origin of this software must not be misrepresented; you must not\n   claim that you wrote the original software. If you use this software\n   in a product, an acknowledgment in the product documentation would be\n   appreciated but is not required.\n2. Altered source versions must be plainly marked as such, and must not be\n   misrepresented as being the original software.\n3. This notice may not be removed or altered from any source distribution.",
      "variables": {
        "copyrightYears": "2025"
      }
    }
  }
}



================================================
File: src/SampleGame/.DS_Store
================================================
[Non-text file]


================================================
File: src/SampleGame/Samples/Platformer.cs
================================================
// <copyright file="Platformer.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;
using System.Collections.Generic;
using System.IO;

using Night;

using SDL3;

namespace Night.SampleGame;

/// <summary>
/// A sample platformer game implementation using the Night engine.
/// Implements the <see cref="IGame"/> interface for Night.Engine integration.
/// </summary>
public class Platformer : IGame
{
  private Player player;
  private List<Night.Rectangle> platforms;
  private Sprite? platformSprite;
  private Night.Rectangle goalPlatform;
  private bool goalReachedMessageShown = false;

  /// <summary>
  /// Initializes a new instance of the <see cref="Platformer"/> class.
  /// </summary>
  public Platformer()
  {
    this.player = new Player();
    this.platforms = new List<Night.Rectangle>();
  }

  /// <summary>
  /// Loads game assets and initializes game state for the platformer.
  /// Called once at the start of the game by the Night.Engine.
  /// </summary>
  public void Load()
  {
    _ = Night.Window.SetMode(800, 600, SDL.WindowFlags.Resizable);
    Night.Window.SetTitle("Night Platformer Sample");

    this.player.Load();

    string baseDirectory = AppContext.BaseDirectory;
    string platformImageRelativePath = Path.Combine("assets", "images", "pixel_green.png");
    string platformImageFullPath = Path.Combine(baseDirectory, platformImageRelativePath);
    this.platformSprite = Graphics.NewImage(platformImageFullPath);
    if (this.platformSprite == null)
    {
      Console.WriteLine($"Game.Load: Failed to load platform sprite at '{platformImageFullPath}'. Platforms will not be drawn.");
    }

    this.platforms.Add(new Night.Rectangle(50, 500, 700, 50));
    this.platforms.Add(new Night.Rectangle(200, 400, 150, 30));
    this.platforms.Add(new Night.Rectangle(450, 300, 100, 30));
    this.goalPlatform = new Night.Rectangle(600, 200, 100, 30);
    this.platforms.Add(this.goalPlatform);
  }

  /// <summary>
  /// Updates the platformer game state.
  /// Called every frame by the Night.Engine.
  /// </summary>
  /// <param name="deltaTime">The time elapsed since the last frame, in seconds.</param>
  public void Update(double deltaTime)
  {
    this.player.Update(deltaTime, this.platforms);

    Night.Rectangle playerBoundsForGoalCheck = new Night.Rectangle((int)this.player.X, (int)this.player.Y, this.player.Width, this.player.Height + 1);
    if (CheckAABBCollision(playerBoundsForGoalCheck, this.goalPlatform) && !this.goalReachedMessageShown)
    {
      // Simple win condition: print a message.
      Console.WriteLine("Congratulations! Goal Reached!");
      this.goalReachedMessageShown = true;
    }
  }

  /// <summary>
  /// Draws the platformer game scene.
  /// Called every frame by the Night.Engine after Update.
  /// </summary>
  public void Draw()
  {
    Night.Graphics.Clear(new Night.Color(135, 206, 235)); // Sky blue background

    // Draw platforms
    if (this.platformSprite != null)
    {
      foreach (var platform in this.platforms)
      {
        // Scale the 1x1 pixel sprite to the platform's dimensions
        Graphics.Draw(
            sprite: this.platformSprite,
            x: platform.X,
            y: platform.Y,
            rotation: 0,
            scaleX: platform.Width,
            scaleY: platform.Height);
      }
    }

    this.player.Draw();

    // Player and Level drawing logic will go here in later tasks.
  }

  /// <summary>
  /// Handles key press events for the platformer game.
  /// Called by Night.Engine when a key is pressed.
  /// </summary>
  /// <param name="key">The <see cref="Night.KeySymbol"/> of the pressed key.</param>
  /// <param name="scancode">The <see cref="Night.KeyCode"/> (physical key code) of the pressed key.</param>
  /// <param name="isRepeat">True if this is a repeat key event, false otherwise.</param>
  public void KeyPressed(KeySymbol key, KeyCode scancode, bool isRepeat)
  {
    // Minimal key handling for now, primarily for closing the window.
    // System.Console.WriteLine($"SampleGame: KeyPressed - KeySymbol: {key}, Scancode: {scancode}, IsRepeat: {isRepeat}");
    if (key == KeySymbol.Escape)
    {
      Console.WriteLine("SampleGame: Escape key pressed, closing window.");
      Window.Close();
    }

    // Player input (movement, jump) will be handled in Player.Update using Night.Keyboard.IsDown().
  }

  // Helper for collision detection (AABB)
  private static bool CheckAABBCollision(Night.Rectangle rect1, Night.Rectangle rect2)
  {
    // True if the rectangles are overlapping
    return rect1.X < rect2.X + rect2.Width &&
           rect1.X + rect1.Width > rect2.X &&
           rect1.Y < rect2.Y + rect2.Height &&
           rect1.Y + rect1.Height > rect2.Y;
  }
}



================================================
File: src/SampleGame/Samples/PlatformerGame.cs
================================================
// <copyright file="PlatformerGame.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using Night;

namespace Night.SampleGame;

/// <summary>
/// Provides an entry point to run the Platformer sample game.
/// </summary>
public class PlatformerGame
{
  /// <summary>
  /// Main method to initialize and run the Platformer game.
  /// </summary>
  public static void PlatformerGameMain()
  {
    Night.Framework.Run(new Platformer());
  }
}




================================================
File: src/SampleGame/assets/images/pixel_green.pixi
================================================
[Non-text file]


================================================
File: src/SampleGame/assets/images/player_sprite_blue_32x64.aseprite
================================================
[Non-text file]


================================================
File: src/SampleGame/bin/Debug/net9.0/Night.SampleGame
================================================
[Non-text file]


================================================
File: src/SampleGame/bin/Debug/net9.0/Night.SampleGame.deps.json
================================================
{
  "runtimeTarget": {
    "name": ".NETCoreApp,Version=v9.0",
    "signature": ""
  },
  "compilationOptions": {},
  "targets": {
    ".NETCoreApp,Version=v9.0": {
      "Night.SampleGame/1.0.0": {
        "dependencies": {
          "Night": "1.0.0",
          "StyleCop.Analyzers.Unstable": "1.2.0.556"
        },
        "runtime": {
          "Night.SampleGame.dll": {}
        }
      },
      "SDL3-CS/3.2.14.2": {
        "runtime": {
          "lib/net9.0/SDL3-CS.dll": {
            "assemblyVersion": "3.2.14.2",
            "fileVersion": "3.2.14.2"
          }
        }
      },
      "StyleCop.Analyzers.Unstable/1.2.0.556": {},
      "Night/1.0.0": {
        "dependencies": {
          "SDL3-CS": "3.2.14.2"
        },
        "runtime": {
          "Night.dll": {
            "assemblyVersion": "1.0.0.0",
            "fileVersion": "1.0.0.0"
          }
        }
      }
    }
  },
  "libraries": {
    "Night.SampleGame/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "SDL3-CS/3.2.14.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-wqWjIm2EP7PmXRQfwSxY4YJDSrXZ0QmolJMCJcs9KY4b3vYBdlwo0U4/olPMdBx6yRzqhN1nGJjmeC9OJT6L1g==",
      "path": "sdl3-cs/3.2.14.2",
      "hashPath": "sdl3-cs.3.2.14.2.nupkg.sha512"
    },
    "StyleCop.Analyzers.Unstable/1.2.0.556": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-zvn9Mqs/ox/83cpYPignI8hJEM2A93s2HkHs8HYMOAQW0PkampyoErAiIyKxgTLqbbad29HX/shv/6LGSjPJNQ==",
      "path": "stylecop.analyzers.unstable/1.2.0.556",
      "hashPath": "stylecop.analyzers.unstable.1.2.0.556.nupkg.sha512"
    },
    "Night/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    }
  }
}


================================================
File: src/SampleGame/bin/Debug/net9.0/Night.SampleGame.runtimeconfig.json
================================================
{
  "runtimeOptions": {
    "tfm": "net9.0",
    "framework": {
      "name": "Microsoft.NETCore.App",
      "version": "9.0.0"
    },
    "configProperties": {
      "System.Runtime.Serialization.EnableUnsafeBinaryFormatterSerialization": false
    }
  }
}


================================================
File: src/SampleGame/bin/Debug/net9.0/Night.SampleGame.xml
================================================
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Night.SampleGame</name>
    </assembly>
    <members>
        <member name="T:Night.SampleGame.Game">
            <summary>
            Main game class for the platformer sample.
            Implements the <see cref="T:Night.IGame"/> interface for Night.Engine integration.
            </summary>
        </member>
        <member name="M:Night.SampleGame.Game.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Night.SampleGame.Game"/> class.
            </summary>
        </member>
        <member name="M:Night.SampleGame.Game.Load">
            <summary>
            Loads game assets and initializes game state.
            Called once at the start of the game by the Night.Engine.
            </summary>
        </member>
        <member name="M:Night.SampleGame.Game.Update(System.Double)">
            <summary>
            Updates the game state.
            Called every frame by the Night.Engine.
            </summary>
            <param name="deltaTime">The time elapsed since the last frame, in seconds.</param>
        </member>
        <member name="M:Night.SampleGame.Game.Draw">
            <summary>
            Draws the game scene.
            Called every frame by the Night.Engine after Update.
            </summary>
        </member>
        <member name="M:Night.SampleGame.Game.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)">
            <summary>
            Handles key press events.
            Called by Night.Engine when a key is pressed.
            </summary>
            <param name="key">The <see cref="T:Night.KeySymbol"/> of the pressed key.</param>
            <param name="scancode">The <see cref="T:Night.KeyCode"/> (physical key code) of the pressed key.</param>
            <param name="isRepeat">True if this is a repeat key event, false otherwise.</param>
        </member>
        <member name="T:Night.SampleGame.Player">
            <summary>
            Represents the player character in the game.
            Handles player movement, physics, and rendering.
            </summary>
        </member>
        <member name="M:Night.SampleGame.Player.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Night.SampleGame.Player"/> class.
            </summary>
        </member>
        <member name="P:Night.SampleGame.Player.X">
            <summary>
            Gets the player's current X-coordinate (left edge).
            </summary>
        </member>
        <member name="P:Night.SampleGame.Player.Y">
            <summary>
            Gets the player's current Y-coordinate (top edge).
            </summary>
        </member>
        <member name="P:Night.SampleGame.Player.Width">
            <summary>
            Gets the width of the player.
            </summary>
        </member>
        <member name="P:Night.SampleGame.Player.Height">
            <summary>
            Gets the height of the player.
            </summary>
        </member>
        <member name="M:Night.SampleGame.Player.Load">
            <summary>
            Loads player assets and initializes player state (position, size, sprite).
            </summary>
        </member>
        <member name="M:Night.SampleGame.Player.Update(System.Double,System.Collections.Generic.List{Night.Rectangle})">
            <summary>
            Updates the player's state, including handling input, physics, and collisions.
            </summary>
            <param name="deltaTime">The time elapsed since the last frame, in seconds.</param>
            <param name="platforms">A list of <see cref="T:Night.Rectangle"/> objects representing solid platforms.</param>
        </member>
        <member name="M:Night.SampleGame.Player.Draw">
            <summary>
            Draws the player on the screen.
            </summary>
        </member>
        <member name="T:Night.SampleGame.Program">
            <summary>
            Main program class for the SampleGame.
            Contains the entry point of the application.
            </summary>
        </member>
        <member name="M:Night.SampleGame.Program.Main">
            <summary>
            The main entry point for the application.
            Initializes and runs the game using the Night.Framework.
            </summary>
        </member>
        <member name="T:Night.SampleGame.Platformer">
            <summary>
            A sample platformer game implementation using the Night engine.
            Implements the <see cref="T:Night.IGame"/> interface for Night.Engine integration.
            </summary>
        </member>
        <member name="M:Night.SampleGame.Platformer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Night.SampleGame.Platformer"/> class.
            </summary>
        </member>
        <member name="M:Night.SampleGame.Platformer.Load">
            <summary>
            Loads game assets and initializes game state for the platformer.
            Called once at the start of the game by the Night.Engine.
            </summary>
        </member>
        <member name="M:Night.SampleGame.Platformer.Update(System.Double)">
            <summary>
            Updates the platformer game state.
            Called every frame by the Night.Engine.
            </summary>
            <param name="deltaTime">The time elapsed since the last frame, in seconds.</param>
        </member>
        <member name="M:Night.SampleGame.Platformer.Draw">
            <summary>
            Draws the platformer game scene.
            Called every frame by the Night.Engine after Update.
            </summary>
        </member>
        <member name="M:Night.SampleGame.Platformer.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)">
            <summary>
            Handles key press events for the platformer game.
            Called by Night.Engine when a key is pressed.
            </summary>
            <param name="key">The <see cref="T:Night.KeySymbol"/> of the pressed key.</param>
            <param name="scancode">The <see cref="T:Night.KeyCode"/> (physical key code) of the pressed key.</param>
            <param name="isRepeat">True if this is a repeat key event, false otherwise.</param>
        </member>
        <member name="T:Night.SampleGame.PlatformerGame">
            <summary>
            Provides an entry point to run the Platformer sample game.
            </summary>
        </member>
        <member name="M:Night.SampleGame.PlatformerGame.PlatformerGameMain">
            <summary>
            Main method to initialize and run the Platformer game.
            </summary>
        </member>
    </members>
</doc>



================================================
File: src/SampleGame/bin/Debug/net9.0/Night.xml
================================================
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Night</name>
    </assembly>
    <members>
        <member name="T:Night.AudioConfig">
            <summary>
            Configuration settings for the audio module.
            </summary>
        </member>
        <member name="P:Night.AudioConfig.MixWithSystem">
            <summary>
            Gets or sets a value indicating whether to mix game audio with system audio (true) or mute system audio (false).
            Relevant primarily for mobile platforms.
            </summary>
        </member>
        <member name="T:Night.ConfigurationManager">
            <summary>
            Manages the loading and accessing of game configuration settings.
            </summary>
        </member>
        <member name="P:Night.ConfigurationManager.CurrentConfig">
            <summary>
            Gets the currently loaded game configuration. If no configuration has been loaded, returns the default configuration.
            </summary>
        </member>
        <member name="P:Night.ConfigurationManager.IsLoaded">
            <summary>
            Gets a value indicating whether the configuration has been loaded.
            </summary>
        </member>
        <member name="M:Night.ConfigurationManager.LoadConfig(System.String)">
            <summary>
            Loads the game configuration from a 'config.json' file.
            If the file is not found, or if an error occurs during loading or parsing, default settings are used.
            The configuration is loaded only once; subsequent calls will not reload the configuration.
            </summary>
            <param name="gameDirectory">The directory to search for 'config.json'. If null, the application's base directory is used.</param>
        </member>
        <member name="T:Night.GameConfig">
            <summary>
            Represents the overall game configuration settings, typically loaded from a config.json file.
            </summary>
        </member>
        <member name="P:Night.GameConfig.Identity">
            <summary>
            Gets or sets the identity of the game. This is used for the save directory.
            </summary>
        </member>
        <member name="P:Night.GameConfig.AppendIdentity">
            <summary>
            Gets or sets a value indicating whether the game identity should be appended to the save directory path.
            </summary>
        </member>
        <member name="P:Night.GameConfig.Version">
            <summary>
            Gets or sets the LÖVE version this game targets. Currently informational.
            </summary>
        </member>
        <member name="P:Night.GameConfig.Console">
            <summary>
            Gets or sets a value indicating whether a console window should be attached (Windows only, currently placeholder).
            </summary>
        </member>
        <member name="P:Night.GameConfig.AccelerometerJoystick">
            <summary>
            Gets or sets a value indicating whether the accelerometer should be used as a joystick.
            </summary>
        </member>
        <member name="P:Night.GameConfig.ExternalStorage">
            <summary>
            Gets or sets a value indicating whether to request external storage access (Android only, currently placeholder).
            </summary>
        </member>
        <member name="P:Night.GameConfig.GammaCorrect">
            <summary>
            Gets or sets a value indicating whether gamma correction should be enabled.
            </summary>
        </member>
        <member name="P:Night.GameConfig.Audio">
            <summary>
            Gets or sets the audio module configuration.
            </summary>
        </member>
        <member name="P:Night.GameConfig.Window">
            <summary>
            Gets or sets the window module configuration.
            </summary>
        </member>
        <member name="P:Night.GameConfig.Modules">
            <summary>
            Gets or sets the configuration for enabling/disabling engine modules.
            </summary>
        </member>
        <member name="T:Night.ModulesConfig">
            <summary>
            Configuration for enabling/disabling engine modules (similar to t.modules in LÖVE's conf.lua).
            </summary>
        </member>
        <member name="P:Night.ModulesConfig.Audio">
            <summary>Gets or sets a value indicating whether the Audio module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Data">
            <summary>Gets or sets a value indicating whether the Data module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Event">
            <summary>Gets or sets a value indicating whether the Event module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Font">
            <summary>Gets or sets a value indicating whether the Font module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Graphics">
            <summary>Gets or sets a value indicating whether the Graphics module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Image">
            <summary>Gets or sets a value indicating whether the Image module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Joystick">
            <summary>Gets or sets a value indicating whether the Joystick module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Keyboard">
            <summary>Gets or sets a value indicating whether the Keyboard module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Math">
            <summary>Gets or sets a value indicating whether the Math module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Mouse">
            <summary>Gets or sets a value indicating whether the Mouse module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Physics">
            <summary>Gets or sets a value indicating whether the Physics module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Sound">
            <summary>Gets or sets a value indicating whether the Sound module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.System">
            <summary>Gets or sets a value indicating whether the System module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Timer">
            <summary>Gets or sets a value indicating whether the Timer module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Touch">
            <summary>Gets or sets a value indicating whether the Touch module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Video">
            <summary>Gets or sets a value indicating whether the Video module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.WindowModule">
            <summary>Gets or sets a value indicating whether the Window module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Thread">
            <summary>Gets or sets a value indicating whether the Thread module is enabled.</summary>
        </member>
        <member name="T:Night.WindowConfig">
            <summary>
            Configuration settings for the game window.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Title">
            <summary>
            Gets or sets the window title.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.IconPath">
            <summary>
            Gets or sets the path to the window icon file. Relative to the game's root directory.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Width">
            <summary>
            Gets or sets the window width in pixels.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Height">
            <summary>
            Gets or sets the window height in pixels.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.X">
            <summary>
            Gets or sets the x-coordinate of the window's top-left corner on the screen. Null for centered.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Y">
            <summary>
            Gets or sets the y-coordinate of the window's top-left corner on the screen. Null for centered.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.MinWidth">
            <summary>
            Gets or sets the minimum window width.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.MinHeight">
            <summary>
            Gets or sets the minimum window height.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Resizable">
            <summary>
            Gets or sets a value indicating whether the window is resizable.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Borderless">
            <summary>
            Gets or sets a value indicating whether the window has a border.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Fullscreen">
            <summary>
            Gets or sets a value indicating whether the window is fullscreen.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.FullscreenType">
            <summary>
            Gets or sets the type of fullscreen mode. Expected values: "desktop" or "exclusive".
            </summary>
        </member>
        <member name="P:Night.WindowConfig.VSync">
            <summary>
            Gets or sets a value indicating whether VSync is enabled.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.HighDPI">
            <summary>
            Gets or sets a value indicating whether to enable high-DPI mode if available.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.MSAA">
            <summary>
            Gets or sets the multisample anti-aliasing (MSAA) level.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Depth">
            <summary>
            Gets or sets the depth buffer bits. Null for system default.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Stencil">
            <summary>
            Gets or sets the stencil buffer bits. Null for system default.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Display">
            <summary>
            Gets or sets the 1-indexed display number to use for the window.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.UseDPIScale">
            <summary>
            Gets or sets a value indicating whether to use DPI scaling.
            </summary>
        </member>
        <member name="T:Night.ErrorHandlerDelegate">
            <summary>
            Defines the delegate for handling unhandled exceptions from game code.
            The error handler function will be called when an unhandled exception occurs
            within the game's Load, Update, Draw, or input callback methods.
            </summary>
            <param name="e">The exception that occurred.</param>
        </member>
        <member name="T:Night.Error">
            <summary>
            Manages the user-defined error handler.
            </summary>
        </member>
        <member name="P:Night.Error.CustomErrorHandler">
            <summary>
            Gets the currently set custom error handler. Returns null if no custom handler is set.
            This is used internally by the framework to invoke the handler.
            </summary>
        </member>
        <member name="M:Night.Error.SetHandler(Night.ErrorHandlerDelegate)">
            <summary>
            Sets a custom function to be called when an unhandled error occurs in game code.
            </summary>
            <param name="handler">The delegate to handle errors.</param>
        </member>
        <member name="M:Night.Error.GetHandler">
            <summary>
            Gets the currently set custom error handler.
            This is used internally by the framework.
            </summary>
            <returns>The custom error handler delegate, or null if none is set.</returns>
        </member>
        <member name="T:Night.FileMode">
            <summary>
            Represents the different modes you can open a File in.
            </summary>
        </member>
        <member name="F:Night.FileMode.Read">
            <summary>
            Open a file for read.
            </summary>
        </member>
        <member name="F:Night.FileMode.Write">
            <summary>
            Open a file for write.
            </summary>
        </member>
        <member name="F:Night.FileMode.Append">
            <summary>
            Open a file for append.
            </summary>
        </member>
        <member name="F:Night.FileMode.Close">
            <summary>
            Do not open a file (represents a closed file.)
            </summary>
        </member>
        <member name="F:Night.FileMode.W">
            <summary>
            Open a file for write.
            </summary>
        </member>
        <member name="F:Night.FileMode.R">
            <summary>
            Open a file for read.
            </summary>
        </member>
        <member name="F:Night.FileMode.A">
            <summary>
            Open a file for append.
            </summary>
        </member>
        <member name="F:Night.FileMode.C">
            <summary>
            Do not open a file (represents a closed file.)
            </summary>
        </member>
        <member name="T:Night.Filesystem">
            <summary>
            Provides basic file system operations.
            Inspired by Love2D's love.filesystem module.
            </summary>
        </member>
        <member name="M:Night.Filesystem.GetInfo(System.String,System.Nullable{Night.FileType})">
            <summary>
            Gets information about the specified file or directory.
            </summary>
            <param name="path">The file or directory path to check.</param>
            <param name="filterType">If supplied, this parameter causes getInfo to only return the info table if the item at the given path matches the specified file type.</param>
            <returns>A FileSystemInfo object containing information about the specified path, or null if nothing exists at the path or if it doesn't match the filterType.</returns>
        </member>
        <member name="M:Night.Filesystem.GetInfo(System.String,Night.FileSystemInfo)">
            <summary>
            Gets information about the specified file or directory and populates an existing FileSystemInfo object.
            </summary>
            <param name="path">The file or directory path to check.</param>
            <param name="info">A FileSystemInfo object which will be filled in.</param>
            <returns>The FileSystemInfo object given as an argument, filled with information, or null if nothing exists at the path.</returns>
        </member>
        <member name="M:Night.Filesystem.GetInfo(System.String,Night.FileType,Night.FileSystemInfo)">
            <summary>
            Gets information about the specified file or directory, filtered by type, and populates an existing FileSystemInfo object.
            </summary>
            <param name="path">The file or directory path to check.</param>
            <param name="filterType">Causes getInfo to only return the info table if the item at the given path matches the specified file type.</param>
            <param name="info">A FileSystemInfo object which will be filled in.</param>
            <returns>The FileSystemInfo object given as an argument, filled with information, or null if nothing exists at the path or if it doesn't match the filterType.</returns>
        </member>
        <member name="M:Night.Filesystem.ReadBytes(System.String)">
            <summary>
            Reads the entire content of a file into a byte array.
            </summary>
            <param name="path">The path to the file to read.</param>
            <returns>A byte array containing the contents of the file.</returns>
            <exception cref="T:System.IO.FileNotFoundException">Thrown if the file is not found.</exception>
        </member>
        <member name="M:Night.Filesystem.ReadText(System.String)">
            <summary>
            Reads the entire content of a file into a string.
            </summary>
            <param name="path">The path to the file to read.</param>
            <returns>A string containing the contents of the file.</returns>
            <exception cref="T:System.IO.FileNotFoundException">Thrown if the file is not found.</exception>
        </member>
        <member name="T:Night.FileSystemInfo">
            <summary>
            Contains information about a file or directory.
            </summary>
        </member>
        <member name="M:Night.FileSystemInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Night.FileSystemInfo"/> class.
            </summary>
        </member>
        <member name="M:Night.FileSystemInfo.#ctor(Night.FileType,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:Night.FileSystemInfo"/> class with specified values.
            </summary>
            <param name="type">The type of the file system object.</param>
            <param name="size">The size of the file in bytes.</param>
            <param name="modTime">The last modification time in Unix epoch seconds.</param>
        </member>
        <member name="P:Night.FileSystemInfo.Type">
            <summary>
            Gets or sets the type of the object at the path (file, directory, symlink, etc.).
            Default is None.
            </summary>
        </member>
        <member name="P:Night.FileSystemInfo.Size">
            <summary>
            Gets or sets the size in bytes of the file, or null if it can't be determined or not applicable (e.g. for a directory).
            </summary>
        </member>
        <member name="P:Night.FileSystemInfo.ModTime">
            <summary>
            Gets or sets the file's last modification time in seconds since the Unix epoch, or null if it can't be determined.
            </summary>
        </member>
        <member name="T:Night.FileType">
            <summary>
            Represents the type of a file system object.
            </summary>
        </member>
        <member name="F:Night.FileType.File">
            <summary>
            A regular file.
            </summary>
        </member>
        <member name="F:Night.FileType.Directory">
            <summary>
            A directory.
            </summary>
        </member>
        <member name="F:Night.FileType.Symlink">
            <summary>
            A symbolic link.
            </summary>
        </member>
        <member name="F:Night.FileType.Other">
            <summary>
            Other type (e.g., device, pipe).
            </summary>
        </member>
        <member name="F:Night.FileType.None">
            <summary>
            The path does not exist or its type cannot be determined.
            </summary>
        </member>
        <member name="T:Night.Framework">
            <summary>
            Manages the main game loop and coordination of game states.
            Provides the main entry point to run a game.
            </summary>
        </member>
        <member name="P:Night.Framework.IsInputInitialized">
            <summary>
            Gets a value indicating whether a flag indicating whether the core SDL systems, particularly for input,
            have been successfully initialized by this Framework's Run method.
            </summary>
        </member>
        <member name="M:Night.Framework.Run(Night.IGame)">
            <summary>
            Runs the game instance.
            The game loop will internally call Load, Update, and Draw methods
            on the provided game logic.
            This method will initialize and shut down required SDL subsystems.
            </summary>
            <param name="game">The game interface to run. Must implement <see cref="T:Night.IGame"/>.</param>
        </member>
        <member name="T:Night.Color">
            <summary>
            Represents a color with Red, Green, Blue, and Alpha components.
            Each component is a byte value ranging from 0 (no intensity) to 255 (full intensity).
            The Alpha component controls the transparency of the color, where 0 is fully transparent and 255 is fully opaque.
            </summary>
        </member>
        <member name="F:Night.Color.Black">
            <summary>Represents the color black.</summary>
        </member>
        <member name="F:Night.Color.White">
            <summary>Represents the color white.</summary>
        </member>
        <member name="F:Night.Color.Red">
            <summary>Represents the color red.</summary>
        </member>
        <member name="F:Night.Color.Green">
            <summary>Represents the color green.</summary>
        </member>
        <member name="F:Night.Color.Blue">
            <summary>Represents the color blue.</summary>
        </member>
        <member name="F:Night.Color.Yellow">
            <summary>Represents the color yellow.</summary>
        </member>
        <member name="F:Night.Color.Magenta">
            <summary>Represents the color magenta.</summary>
        </member>
        <member name="F:Night.Color.Cyan">
            <summary>Represents the color cyan.</summary>
        </member>
        <member name="F:Night.Color.Transparent">
            <summary>Represents a fully transparent color.</summary>
        </member>
        <member name="F:Night.Color.R">
            <summary>
            The red component of the color.
            </summary>
        </member>
        <member name="F:Night.Color.G">
            <summary>
            The green component of the color.
            </summary>
        </member>
        <member name="F:Night.Color.B">
            <summary>
            The blue component of the color.
            </summary>
        </member>
        <member name="F:Night.Color.A">
            <summary>
            The alpha (transparency) component of the color.
            </summary>
        </member>
        <member name="M:Night.Color.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Night.Color"/> struct.
            </summary>
            <param name="r">The red component (0-255).</param>
            <param name="g">The green component (0-255).</param>
            <param name="b">The blue component (0-255).</param>
            <param name="a">The alpha component (0-255). Defaults to 255 (fully opaque).</param>
        </member>
        <member name="T:Night.DrawMode">
            <summary>
            Specifies whether a shape should be drawn filled or as an outline.
            </summary>
        </member>
        <member name="F:Night.DrawMode.Fill">
            <summary>
            Draw the shape filled.
            </summary>
        </member>
        <member name="F:Night.DrawMode.Line">
            <summary>
            Draw the shape as an outline.
            </summary>
        </member>
        <member name="T:Night.Graphics">
            <summary>
            Provides functionality for drawing graphics.
            Mimics Love2D's love.graphics module.
            </summary>
        </member>
        <member name="M:Night.Graphics.NewImage(System.String)">
            <summary>
            Creates a new image (Sprite) from a file.
            </summary>
            <param name="filePath">The path to the image file.</param>
            <returns>A new Sprite object.</returns>
        </member>
        <member name="M:Night.Graphics.SetColor(Night.Color)">
            <summary>
            Sets the active color for drawing operations.
            </summary>
            <param name="color">The color to set.</param>
        </member>
        <member name="M:Night.Graphics.SetColor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the active color for drawing operations using individual RGBA components.
            </summary>
            <param name="r">The red component (0-255).</param>
            <param name="g">The green component (0-255).</param>
            <param name="b">The blue component (0-255).</param>
            <param name="a">The alpha component (0-255), defaults to 255 (opaque).</param>
        </member>
        <member name="M:Night.Graphics.Rectangle(Night.DrawMode,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a rectangle.
            </summary>
            <param name="mode">The drawing mode (Fill or Line).</param>
            <param name="x">The x-coordinate of the top-left corner.</param>
            <param name="y">The y-coordinate of the top-left corner.</param>
            <param name="width">The width of the rectangle.</param>
            <param name="height">The height of the rectangle.</param>
        </member>
        <member name="M:Night.Graphics.Line(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a line segment between two points.
            </summary>
            <param name="x1">The x-coordinate of the first point.</param>
            <param name="y1">The y-coordinate of the first point.</param>
            <param name="x2">The x-coordinate of the second point.</param>
            <param name="y2">The y-coordinate of the second point.</param>
        </member>
        <member name="M:Night.Graphics.Line(Night.PointF[])">
            <summary>
            Draws a sequence of connected line segments.
            </summary>
            <param name="points">An array of points to connect.</param>
        </member>
        <member name="M:Night.Graphics.Polygon(Night.DrawMode,Night.PointF[])">
            <summary>
            Draws a polygon.
            </summary>
            <param name="mode">The drawing mode (Fill or Line).</param>
            <param name="vertices">An array of points representing the polygon's vertices.</param>
        </member>
        <member name="M:Night.Graphics.Circle(Night.DrawMode,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Draws a circle.
            </summary>
            <param name="mode">The drawing mode (Fill or Line).</param>
            <param name="x">The x-coordinate of the circle's center.</param>
            <param name="y">The y-coordinate of the circle's center.</param>
            <param name="radius">The radius of the circle.</param>
            <param name="segments">The number of segments used to draw the circle (more segments means a smoother circle).</param>
        </member>
        <member name="M:Night.Graphics.Draw(Night.Sprite,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a sprite to the screen.
            </summary>
            <param name="sprite">The sprite to draw.</param>
            <param name="x">The x-coordinate to draw the sprite at.</param>
            <param name="y">The y-coordinate to draw the sprite at.</param>
            <param name="rotation">The rotation of the sprite (in radians).</param>
            <param name="scaleX">The horizontal scale factor.</param>
            <param name="scaleY">The vertical scale factor.</param>
            <param name="offsetX">The x-offset for the sprite's origin.</param>
            <param name="offsetY">The y-offset for the sprite's origin.</param>
        </member>
        <member name="M:Night.Graphics.Clear(Night.Color)">
            <summary>
            Clears the screen to a specific color.
            </summary>
            <param name="color">The color to clear the screen with.</param>
        </member>
        <member name="M:Night.Graphics.Present">
            <summary>
            Presents the drawn graphics to the screen (swaps buffers).
            </summary>
        </member>
        <member name="T:Night.ImageData">
            <summary>
            Represents raw pixel data of an image.
            </summary>
        </member>
        <member name="M:Night.ImageData.#ctor(System.Int32,System.Int32,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Night.ImageData"/> class.
            </summary>
            <param name="width">The width of the image.</param>
            <param name="height">The height of the image.</param>
            <param name="data">The pixel data (assumed RGBA, 4 bytes per pixel).</param>
        </member>
        <member name="P:Night.ImageData.Width">
            <summary>
            Gets the width of the image in pixels.
            </summary>
        </member>
        <member name="P:Night.ImageData.Height">
            <summary>
            Gets the height of the image in pixels.
            </summary>
        </member>
        <member name="P:Night.ImageData.Data">
            <summary>
            Gets the raw pixel data.
            Assumed to be in RGBA format, 4 bytes per pixel.
            The data is stored as a copy of the input array.
            </summary>
        </member>
        <member name="T:Night.PointF">
            <summary>
            Represents a 2D point with floating-point coordinates.
            </summary>
        </member>
        <member name="F:Night.PointF.X">
            <summary>
            The X-coordinate of the point.
            </summary>
        </member>
        <member name="F:Night.PointF.Y">
            <summary>
            The Y-coordinate of the point.
            </summary>
        </member>
        <member name="M:Night.PointF.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Night.PointF"/> struct.
            </summary>
            <param name="x">The X-coordinate.</param>
            <param name="y">The Y-coordinate.</param>
        </member>
        <member name="T:Night.Rectangle">
            <summary>
            Represents a rectangle with position (X, Y) and dimensions (Width, Height).
            </summary>
        </member>
        <member name="F:Night.Rectangle.X">
            <summary>
            The X-coordinate of the top-left corner of the rectangle.
            </summary>
        </member>
        <member name="F:Night.Rectangle.Y">
            <summary>
            The Y-coordinate of the top-left corner of the rectangle.
            </summary>
        </member>
        <member name="F:Night.Rectangle.Width">
            <summary>
            The width of the rectangle.
            </summary>
        </member>
        <member name="F:Night.Rectangle.Height">
            <summary>
            The height of the rectangle.
            </summary>
        </member>
        <member name="M:Night.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Night.Rectangle"/> struct.
            </summary>
            <param name="x">The X-coordinate of the top-left corner.</param>
            <param name="y">The Y-coordinate of the top-left corner.</param>
            <param name="width">The width of the rectangle.</param>
            <param name="height">The height of the rectangle.</param>
        </member>
        <member name="T:Night.Sprite">
            <summary>
            Represents a 2D sprite, typically an image loaded into a texture.
            </summary>
        </member>
        <member name="M:Night.Sprite.#ctor(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Night.Sprite"/> class.
            </summary>
            <param name="texture">The SDL texture handle.</param>
            <param name="width">The width of the texture.</param>
            <param name="height">The height of the texture.</param>
        </member>
        <member name="P:Night.Sprite.Texture">
            <summary>
            Gets the SDL texture handle.
            </summary>
        </member>
        <member name="P:Night.Sprite.Width">
            <summary>
            Gets the width of the sprite in pixels.
            </summary>
        </member>
        <member name="P:Night.Sprite.Height">
            <summary>
            Gets the height of the sprite in pixels.
            </summary>
        </member>
        <member name="T:Night.IGame">
            <summary>
            Interface for a game that can be run by the Night Engine.
            Game developers will implement this interface in their main game class.
            </summary>
        </member>
        <member name="M:Night.IGame.Load">
            <summary>
            Called exactly once when the game starts for loading resources.
            </summary>
        </member>
        <member name="M:Night.IGame.Update(System.Double)">
            <summary>
            Callback function used to update the state of the game every frame.
            </summary>
            <param name="deltaTime">The time elapsed since the last frame, in seconds.</param>
        </member>
        <member name="M:Night.IGame.Draw">
            <summary>
            Callback function used to draw on the screen every frame.
            </summary>
        </member>
        <member name="M:Night.IGame.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)">
            <summary>
            Callback function triggered when a key is pressed.
            </summary>
            <param name="key">The logical key symbol that was pressed.</param>
            <param name="scancode">The physical key (scancode) that was pressed.</param>
            <param name="isRepeat">True if this is a key repeat event, false otherwise.</param>
        </member>
        <member name="M:Night.IGame.KeyReleased(Night.KeySymbol,Night.KeyCode)">
            <summary>
            Callback function triggered when a key is released.
            </summary>
            <param name="key">The logical key symbol that was released.</param>
            <param name="scancode">The physical key (scancode) that was released.</param>
        </member>
        <member name="M:Night.IGame.MousePressed(System.Int32,System.Int32,Night.MouseButton,System.Boolean,System.Int32)">
            <summary>
            Callback function triggered when a mouse button is pressed.
            </summary>
            <param name="x">The x-coordinate of the mouse cursor relative to the window.</param>
            <param name="y">The y-coordinate of the mouse cursor relative to the window.</param>
            <param name="button">The mouse button that was pressed.</param>
            <param name="istouch">True if the event was generated by a touch input device, false otherwise.</param>
            <param name="presses">The number of clicks (1 for single-click, 2 for double-click, etc.).</param>
        </member>
        <member name="M:Night.IGame.MouseReleased(System.Int32,System.Int32,Night.MouseButton,System.Boolean,System.Int32)">
            <summary>
            Callback function triggered when a mouse button is released.
            </summary>
            <param name="x">The x-coordinate of the mouse cursor relative to the window.</param>
            <param name="y">The y-coordinate of the mouse cursor relative to the window.</param>
            <param name="button">The mouse button that was released.</param>
            <param name="istouch">True if the event was generated by a touch input device, false otherwise.</param>
            <param name="presses">The number of clicks (typically 1 for release, but may vary).</param>
        </member>
        <member name="T:Night.Keyboard">
            <summary>
            Provides an interface to the user's keyboard.
            </summary>
        </member>
        <member name="M:Night.Keyboard.IsDown(Night.KeyCode)">
            <summary>
            Checks whether a certain key is down.
            </summary>
            <param name="key">The key to check.</param>
            <returns>True if the key is down, false otherwise.</returns>
        </member>
        <member name="T:Night.KeyCode">
            <summary>
            Represents keyboard scancodes. Values correspond to SDL_Scancode.
            </summary>
            <remarks>
            See SDL_scancode.h for the full list of SDL_Scancode values.
            This enum maps directly to SDL_Scancode values, representing the physical key on the keyboard.
            </remarks>
        </member>
        <member name="F:Night.KeyCode.Unknown">
            <summary>An unknown scancode.</summary>
        </member>
        <member name="F:Night.KeyCode.A">
            <summary>The 'A' key.</summary>
        </member>
        <member name="F:Night.KeyCode.B">
            <summary>The 'B' key.</summary>
        </member>
        <member name="F:Night.KeyCode.C">
            <summary>The 'C' key.</summary>
        </member>
        <member name="F:Night.KeyCode.D">
            <summary>The 'D' key.</summary>
        </member>
        <member name="F:Night.KeyCode.E">
            <summary>The 'E' key.</summary>
        </member>
        <member name="F:Night.KeyCode.F">
            <summary>The 'F' key.</summary>
        </member>
        <member name="F:Night.KeyCode.G">
            <summary>The 'G' key.</summary>
        </member>
        <member name="F:Night.KeyCode.H">
            <summary>The 'H' key.</summary>
        </member>
        <member name="F:Night.KeyCode.I">
            <summary>The 'I' key.</summary>
        </member>
        <member name="F:Night.KeyCode.J">
            <summary>The 'J' key.</summary>
        </member>
        <member name="F:Night.KeyCode.K">
            <summary>The 'K' key.</summary>
        </member>
        <member name="F:Night.KeyCode.L">
            <summary>The 'L' key.</summary>
        </member>
        <member name="F:Night.KeyCode.M">
            <summary>The 'M' key.</summary>
        </member>
        <member name="F:Night.KeyCode.N">
            <summary>The 'N' key.</summary>
        </member>
        <member name="F:Night.KeyCode.O">
            <summary>The 'O' key.</summary>
        </member>
        <member name="F:Night.KeyCode.P">
            <summary>The 'P' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Q">
            <summary>The 'Q' key.</summary>
        </member>
        <member name="F:Night.KeyCode.R">
            <summary>The 'R' key.</summary>
        </member>
        <member name="F:Night.KeyCode.S">
            <summary>The 'S' key.</summary>
        </member>
        <member name="F:Night.KeyCode.T">
            <summary>The 'T' key.</summary>
        </member>
        <member name="F:Night.KeyCode.U">
            <summary>The 'U' key.</summary>
        </member>
        <member name="F:Night.KeyCode.V">
            <summary>The 'V' key.</summary>
        </member>
        <member name="F:Night.KeyCode.W">
            <summary>The 'W' key.</summary>
        </member>
        <member name="F:Night.KeyCode.X">
            <summary>The 'X' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Y">
            <summary>The 'Y' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Z">
            <summary>The 'Z' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha1">
            <summary>The '1' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha2">
            <summary>The '2' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha3">
            <summary>The '3' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha4">
            <summary>The '4' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha5">
            <summary>The '5' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha6">
            <summary>The '6' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha7">
            <summary>The '7' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha8">
            <summary>The '8' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha9">
            <summary>The '9' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha0">
            <summary>The '0' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Return">
            <summary>The Return/Enter key.</summary>
        </member>
        <member name="F:Night.KeyCode.Escape">
            <summary>The Escape key.</summary>
        </member>
        <member name="F:Night.KeyCode.Backspace">
            <summary>The Backspace key.</summary>
        </member>
        <member name="F:Night.KeyCode.Tab">
            <summary>The Tab key.</summary>
        </member>
        <member name="F:Night.KeyCode.Space">
            <summary>The Space bar.</summary>
        </member>
        <member name="F:Night.KeyCode.Minus">
            <summary>The Minus '-' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Equals">
            <summary>The Equals '=' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Leftbracket">
            <summary>The Left Bracket '[' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Rightbracket">
            <summary>The Right Bracket ']' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Backslash">
            <summary>The Backslash '' key.</summary>
        </member>
        <member name="F:Night.KeyCode.NonUshash">
            <summary>The Non-US Hash key (e.g., UK pound sign).</summary>
        </member>
        <member name="F:Night.KeyCode.Semicolon">
            <summary>The Semicolon ';' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Apostrophe">
            <summary>The Apostrophe ''' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Grave">
            <summary>The Grave Accent (Backtick) '`' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Comma">
            <summary>The Comma ',' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Period">
            <summary>The Period '.' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Slash">
            <summary>The Slash '/' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Capslock">
            <summary>The Caps Lock key.</summary>
        </member>
        <member name="F:Night.KeyCode.F1">
            <summary>The F1 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F2">
            <summary>The F2 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F3">
            <summary>The F3 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F4">
            <summary>The F4 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F5">
            <summary>The F5 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F6">
            <summary>The F6 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F7">
            <summary>The F7 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F8">
            <summary>The F8 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F9">
            <summary>The F9 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F10">
            <summary>The F10 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F11">
            <summary>The F11 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F12">
            <summary>The F12 key.</summary>
        </member>
        <member name="F:Night.KeyCode.Printscreen">
            <summary>The Print Screen key.</summary>
        </member>
        <member name="F:Night.KeyCode.Scrolllock">
            <summary>The Scroll Lock key.</summary>
        </member>
        <member name="F:Night.KeyCode.Pause">
            <summary>The Pause key.</summary>
        </member>
        <member name="F:Night.KeyCode.Insert">
            <summary>The Insert key.</summary>
        </member>
        <member name="F:Night.KeyCode.Home">
            <summary>The Home key.</summary>
        </member>
        <member name="F:Night.KeyCode.Pageup">
            <summary>The Page Up key.</summary>
        </member>
        <member name="F:Night.KeyCode.Delete">
            <summary>The Delete key.</summary>
        </member>
        <member name="F:Night.KeyCode.End">
            <summary>The End key.</summary>
        </member>
        <member name="F:Night.KeyCode.Pagedown">
            <summary>The Page Down key.</summary>
        </member>
        <member name="F:Night.KeyCode.Right">
            <summary>The Right Arrow key.</summary>
        </member>
        <member name="F:Night.KeyCode.Left">
            <summary>The Left Arrow key.</summary>
        </member>
        <member name="F:Night.KeyCode.Down">
            <summary>The Down Arrow key.</summary>
        </member>
        <member name="F:Night.KeyCode.Up">
            <summary>The Up Arrow key.</summary>
        </member>
        <member name="F:Night.KeyCode.NumlockClear">
            <summary>The Num Lock or Clear key.</summary>
        </member>
        <member name="F:Night.KeyCode.KpDivide">
            <summary>The Keypad Divide '/' key.</summary>
        </member>
        <member name="F:Night.KeyCode.KpMultiply">
            <summary>The Keypad Multiply '*' key.</summary>
        </member>
        <member name="F:Night.KeyCode.KpMinus">
            <summary>The Keypad Minus '-' key.</summary>
        </member>
        <member name="F:Night.KeyCode.KpPlus">
            <summary>The Keypad Plus '+' key.</summary>
        </member>
        <member name="F:Night.KeyCode.KpEnter">
            <summary>The Keypad Enter key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp1">
            <summary>The Keypad '1' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp2">
            <summary>The Keypad '2' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp3">
            <summary>The Keypad '3' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp4">
            <summary>The Keypad '4' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp5">
            <summary>The Keypad '5' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp6">
            <summary>The Keypad '6' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp7">
            <summary>The Keypad '7' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp8">
            <summary>The Keypad '8' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp9">
            <summary>The Keypad '9' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp0">
            <summary>The Keypad '0' key.</summary>
        </member>
        <member name="F:Night.KeyCode.KpPeriod">
            <summary>The Keypad Period '.' key.</summary>
        </member>
        <member name="F:Night.KeyCode.NonUsbackslash">
            <summary>The Non-US Backslash key.</summary>
        </member>
        <member name="F:Night.KeyCode.Application">
            <summary>The Application key (context menu).</summary>
        </member>
        <member name="F:Night.KeyCode.Power">
            <summary>The Power key.</summary>
        </member>
        <member name="F:Night.KeyCode.KpEquals">
            <summary>The Keypad Equals '=' key.</summary>
        </member>
        <member name="F:Night.KeyCode.F13">
            <summary>The F13 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F14">
            <summary>The F14 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F15">
            <summary>The F15 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F16">
            <summary>The F16 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F17">
            <summary>The F17 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F18">
            <summary>The F18 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F19">
            <summary>The F19 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F20">
            <summary>The F20 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F21">
            <summary>The F21 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F22">
            <summary>The F22 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F23">
            <summary>The F23 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F24">
            <summary>The F24 key.</summary>
        </member>
        <member name="F:Night.KeyCode.Execute">
            <summary>The Execute key.</summary>
        </member>
        <member name="F:Night.KeyCode.Help">
            <summary>The Help key.</summary>
        </member>
        <member name="F:Night.KeyCode.Menu">
            <summary>The Menu key.</summary>
        </member>
        <member name="F:Night.KeyCode.Select">
            <summary>The Select key.</summary>
        </member>
        <member name="F:Night.KeyCode.Stop">
            <summary>The Stop key.</summary>
        </member>
        <member name="F:Night.KeyCode.Again">
            <summary>The Again key.</summary>
        </member>
        <member name="F:Night.KeyCode.Undo">
            <summary>The Undo key.</summary>
        </member>
        <member name="F:Night.KeyCode.Cut">
            <summary>The Cut key.</summary>
        </member>
        <member name="F:Night.KeyCode.Copy">
            <summary>The Copy key.</summary>
        </member>
        <member name="F:Night.KeyCode.Paste">
            <summary>The Paste key.</summary>
        </member>
        <member name="F:Night.KeyCode.Find">
            <summary>The Find key.</summary>
        </member>
        <member name="F:Night.KeyCode.Mute">
            <summary>The Mute key.</summary>
        </member>
        <member name="F:Night.KeyCode.VolumeUp">
            <summary>The Volume Up key.</summary>
        </member>
        <member name="F:Night.KeyCode.VolumeDown">
            <summary>The Volume Down key.</summary>
        </member>
        <member name="F:Night.KeyCode.KpComma">
            <summary>The Keypad Comma ',' key.</summary>
        </member>
        <member name="F:Night.KeyCode.LCtrl">
            <summary>The Left Control key.</summary>
        </member>
        <member name="F:Night.KeyCode.LShift">
            <summary>The Left Shift key.</summary>
        </member>
        <member name="F:Night.KeyCode.LAlt">
            <summary>The Left Alt key.</summary>
        </member>
        <member name="F:Night.KeyCode.LGUI">
            <summary>The Left GUI key (Windows/Command/Meta key).</summary>
        </member>
        <member name="F:Night.KeyCode.RCtrl">
            <summary>The Right Control key.</summary>
        </member>
        <member name="F:Night.KeyCode.RShift">
            <summary>The Right Shift key.</summary>
        </member>
        <member name="F:Night.KeyCode.RAlt">
            <summary>The Right Alt key.</summary>
        </member>
        <member name="F:Night.KeyCode.RGUI">
            <summary>The Right GUI key (Windows/Command/Meta key).</summary>
        </member>
        <member name="F:Night.KeyCode.Mode">
            <summary>The Mode Switch key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaPlay">
            <summary>The Media Play key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaPause">
            <summary>The Media Pause key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaRecord">
            <summary>The Media Record key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaFastForward">
            <summary>The Media Fast Forward key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaRewind">
            <summary>The Media Rewind key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaNextTrack">
            <summary>The Media Next Track key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaPreviousTrack">
            <summary>The Media Previous Track key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaStop">
            <summary>The Media Stop key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaEject">
            <summary>The Media Eject key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaPlayPause">
            <summary>The Media Play/Pause key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaSelect">
            <summary>The Media Select key.</summary>
        </member>
        <member name="F:Night.KeyCode.AppSearch">
            <summary>The Application Search key.</summary>
        </member>
        <member name="F:Night.KeyCode.AppHome">
            <summary>The Application Home key.</summary>
        </member>
        <member name="F:Night.KeyCode.AppBack">
            <summary>The Application Back key.</summary>
        </member>
        <member name="F:Night.KeyCode.AppForward">
            <summary>The Application Forward key.</summary>
        </member>
        <member name="F:Night.KeyCode.AppStop">
            <summary>The Application Stop key.</summary>
        </member>
        <member name="F:Night.KeyCode.AppRefresh">
            <summary>The Application Refresh key.</summary>
        </member>
        <member name="F:Night.KeyCode.AppBookmarks">
            <summary>The Application Bookmarks key.</summary>
        </member>
        <member name="T:Night.KeySymbol">
            <summary>
            Represents logical key symbols. Values correspond to SDL_Keycode.
            </summary>
            <remarks>
            This enum maps to SDL_Keycode values, representing the symbol produced by a key press
            under the current keyboard layout.
            </remarks>
        </member>
        <member name="F:Night.KeySymbol.Unknown">
            <summary>An unknown key symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.A">
            <summary>The 'A' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.B">
            <summary>The 'B' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.C">
            <summary>The 'C' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.D">
            <summary>The 'D' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.E">
            <summary>The 'E' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F">
            <summary>The 'F' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.G">
            <summary>The 'G' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.H">
            <summary>The 'H' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.I">
            <summary>The 'I' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.J">
            <summary>The 'J' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.K">
            <summary>The 'K' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.L">
            <summary>The 'L' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.M">
            <summary>The 'M' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.N">
            <summary>The 'N' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.O">
            <summary>The 'O' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.P">
            <summary>The 'P' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Q">
            <summary>The 'Q' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.R">
            <summary>The 'R' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.S">
            <summary>The 'S' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.T">
            <summary>The 'T' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.U">
            <summary>The 'U' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.V">
            <summary>The 'V' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.W">
            <summary>The 'W' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.X">
            <summary>The 'X' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Y">
            <summary>The 'Y' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Z">
            <summary>The 'Z' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha0">
            <summary>The '0' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha1">
            <summary>The '1' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha2">
            <summary>The '2' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha3">
            <summary>The '3' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha4">
            <summary>The '4' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha5">
            <summary>The '5' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha6">
            <summary>The '6' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha7">
            <summary>The '7' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha8">
            <summary>The '8' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha9">
            <summary>The '9' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Return">
            <summary>The Return/Enter symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Escape">
            <summary>The Escape symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Backspace">
            <summary>The Backspace symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Tab">
            <summary>The Tab symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Space">
            <summary>The Space symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Minus">
            <summary>The Minus '-' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Equals">
            <summary>The Equals '=' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Leftbracket">
            <summary>The Left Bracket '[' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Rightbracket">
            <summary>The Right Bracket ']' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Backslash">
            <summary>The Backslash '' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Semicolon">
            <summary>The Semicolon ';' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Apostrophe">
            <summary>The Apostrophe ''' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Grave">
            <summary>The Grave Accent (Backtick) '`' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Comma">
            <summary>The Comma ',' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Period">
            <summary>The Period '.' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Slash">
            <summary>The Slash '/' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F1">
            <summary>The F1 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F2">
            <summary>The F2 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F3">
            <summary>The F3 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F4">
            <summary>The F4 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F5">
            <summary>The F5 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F6">
            <summary>The F6 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F7">
            <summary>The F7 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F8">
            <summary>The F8 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F9">
            <summary>The F9 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F10">
            <summary>The F10 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F11">
            <summary>The F11 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F12">
            <summary>The F12 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Right">
            <summary>The Right Arrow symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Left">
            <summary>The Left Arrow symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Down">
            <summary>The Down Arrow symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Up">
            <summary>The Up Arrow symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.LCtrl">
            <summary>The Left Control symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.LShift">
            <summary>The Left Shift symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.LAlt">
            <summary>The Left Alt symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.LGUI">
            <summary>The Left GUI symbol (Windows/Command/Meta key).</summary>
        </member>
        <member name="F:Night.KeySymbol.RCtrl">
            <summary>The Right Control symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.RShift">
            <summary>The Right Shift symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.RAlt">
            <summary>The Right Alt symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.RGUI">
            <summary>The Right GUI symbol (Windows/Command/Meta key).</summary>
        </member>
        <member name="T:Night.Mouse">
            <summary>
            Provides an interface to the user's mouse.
            </summary>
        </member>
        <member name="M:Night.Mouse.IsDown(Night.MouseButton)">
            <summary>
            Checks whether a certain mouse button is down.
            This function does not detect mouse wheel scrolling.
            </summary>
            <param name="button">The index of a button to check. 1 is the primary mouse button, 2 is the secondary mouse button, 3 is the middle button, 4 is the X1 button (typically "back"), and 5 is the X2 button (typically "forward").</param>
            <returns>True if the button is down, false otherwise.</returns>
        </member>
        <member name="M:Night.Mouse.GetPosition">
            <summary>
            Gets the current position of the mouse cursor in the window.
            </summary>
            <returns>A tuple (int X, int Y) representing the mouse cursor coordinates.</returns>
        </member>
        <member name="M:Night.Mouse.SetVisible(System.Boolean)">
            <summary>
            Sets the visibility of the mouse cursor.
            </summary>
            <param name="visible">True to show the cursor, false to hide it.</param>
        </member>
        <member name="M:Night.Mouse.SetGrabbed(System.Boolean)">
            <summary>
            Grabs the mouse, confining it to the window.
            </summary>
            <param name="grabbed">True to grab the mouse, false to release it.</param>
        </member>
        <member name="M:Night.Mouse.SetRelativeMode(System.Boolean)">
            <summary>
            Sets whether relative mouse mode is enabled for the current window.
            In relative mode, the cursor is hidden and mouse motion is reported as relative to the last position.
            </summary>
            <param name="enabled">True to enable relative mode, false to disable it.</param>
        </member>
        <member name="T:Night.MouseButton">
            <summary>
            Represents mouse buttons. Values correspond to SDL_MouseButtonFlags/
            SDL3.SDL.Button* constants.
            (e.g., Left is 1, Middle is 2, etc.)
            </summary>
        </member>
        <member name="F:Night.MouseButton.Unknown">
            <summary>
            An unknown or unspecified mouse button.
            </summary>
        </member>
        <member name="F:Night.MouseButton.Left">
            <summary>
            The left mouse button.
            </summary>
        </member>
        <member name="F:Night.MouseButton.Middle">
            <summary>
            The middle mouse button.
            </summary>
        </member>
        <member name="F:Night.MouseButton.Right">
            <summary>
            The right mouse button.
            </summary>
        </member>
        <member name="F:Night.MouseButton.X1">
            <summary>
            The first extra mouse button (often "back").
            </summary>
        </member>
        <member name="F:Night.MouseButton.X2">
            <summary>
            The second extra mouse button (often "forward").
            </summary>
        </member>
        <member name="T:Night.NightSDL">
            <summary>
            Provides direct access to some SDL3 functions using SDL3-CS bindings.
            </summary>
        </member>
        <member name="M:Night.NightSDL.GetVersion">
            <summary>
            Get the version of SDL that is linked against the Night Engine.
            Calls the SDL3-CS binding for SDL_GetVersion() and returns a packed int.
            https://wiki.libsdl.org/SDL3/SDL_GetVersion.
            </summary>
            <returns>A string representing the SDL version "major.minor.patch".</returns>
        </member>
        <member name="M:Night.NightSDL.GetError">
            <summary>
            Retrieve a message about the last error that occurred on the current thread.
            Calls the SDL3-CS binding for SDL_GetError() and returns a string.
            https://wiki.libsdl.org/SDL3/SDL_GetError.
            </summary>
            <returns>Returns a message with information about the specific error that occurred, or an empty string if there hasn't been an error message set since the last call to SDL_ClearError().</returns>
        </member>
        <member name="T:Night.System">
            <summary>
            Provides access to system-level information and functions.
            </summary>
        </member>
        <member name="M:Night.System.SetClipboardText(System.String)">
            <summary>
            Puts text in the system's clipboard.
            </summary>
            <param name="text">The new text to hold in the system's clipboard.</param>
            <returns>True if the operation was successful, false otherwise.</returns>
        </member>
        <member name="T:Night.Timer">
            <summary>
            Provides high-resolution timing functionality.
            </summary>
        </member>
        <member name="P:Night.Timer.CurrentFPS">
            <summary>
            Gets or sets the current frames per second. Updated by the framework.
            </summary>
        </member>
        <member name="P:Night.Timer.CurrentDelta">
            <summary>
            Gets or sets the delta time of the current frame. Updated by <see cref="M:Night.Timer.Step"/>.
            </summary>
        </member>
        <member name="P:Night.Timer.CurrentAverageDelta">
            <summary>
            Gets or sets the average delta time over recent frames. Updated by the framework.
            </summary>
        </member>
        <member name="P:Night.Timer.LastStepTime">
            <summary>
            Gets or sets the timestamp of the last call to <see cref="M:Night.Timer.Step"/>. Initialized by <see cref="M:Night.Timer.Initialize"/>.
            </summary>
        </member>
        <member name="P:Night.Timer.PerformanceFrequency">
            <summary>
            Gets the performance counter frequency. Initialized by <see cref="M:Night.Timer.Initialize"/>.
            </summary>
        </member>
        <member name="M:Night.Timer.GetTime">
            <summary>
            Gets the time elapsed since the Timer module was loaded, in seconds.
            </summary>
            <returns>The time in seconds. Given as a decimal, accurate to the microsecond.</returns>
        </member>
        <member name="M:Night.Timer.GetFPS">
            <summary>
            Gets the current frames per second (FPS).
            </summary>
            <returns>The current FPS.</returns>
        </member>
        <member name="M:Night.Timer.GetDelta">
            <summary>
            Gets the time elapsed since the last frame, in seconds.
            This is the same value passed to. <code>IGame.Update(float deltaTime)</code>.
            </summary>
            <returns>The delta time in seconds.</returns>
        </member>
        <member name="M:Night.Timer.GetAverageDelta">
            <summary>
            Returns the average delta time (seconds per frame) over the last second.
            </summary>
            <returns>The average delta time over the last second.</returns>
        </member>
        <member name="M:Night.Timer.Sleep(System.Double)">
            <summary>
            Pauses the current thread for the specified amount of time.
            This function causes the entire thread to pause. Graphics will not draw,
            input events will not trigger, code will not run, and the window will
            be unresponsive if you use this in the main game thread.
            </summary>
            <param name="seconds">Seconds to sleep for.</param>
        </member>
        <member name="M:Night.Timer.Step">
            <summary>
            Measures the time between the last call to this function and the current one.
            Calling this function updates the value returned by <see cref="M:Night.Timer.GetDelta"/>.
            This is typically called once per frame by the game loop to determine the delta time for that frame.
            </summary>
            <returns>The time passed (in seconds) since the last call to Step().</returns>
        </member>
        <member name="M:Night.Timer.Initialize">
            <summary>
            Initializes essential timer values. Must be called once by the framework
            before the game loop begins and after SDL has been initialized.
            </summary>
        </member>
        <member name="T:Night.VersionInfo">
            <summary>
            Provides information about the Night library, such as its version.
            </summary>
        </member>
        <member name="F:Night.VersionInfo.Version">
            <summary>
            Gets the full semantic version string (e.g., "1.0.0", "1.2.3-beta.1").
            This value is updated by the GitHub release Action.
            </summary>
        </member>
        <member name="F:Night.VersionInfo.CodeName">
            <summary>
            Gets the developer-assigned codename for the current version.
            This value is manually updated by the developer.
            </summary>
        </member>
        <member name="M:Night.VersionInfo.GetVersion">
            <summary>
            Gets the Semantic Version of the Night library.
            This version is set during the release process.
            </summary>
            <returns>The library's semantic version string.</returns>
        </member>
        <member name="T:Night.FullscreenType">
            <summary>
            Types of fullscreen modes.
            </summary>
        </member>
        <member name="F:Night.FullscreenType.Exclusive">
            <summary>
            Standard exclusive-fullscreen mode. Changes the display mode (actual resolution) of the monitor.
            </summary>
        </member>
        <member name="F:Night.FullscreenType.Desktop">
            <summary>
            Borderless fullscreen windowed mode. A borderless screen-sized window is created which sits on top of all desktop UI elements.
            The window is automatically resized to match the dimensions of the desktop, and its size cannot be changed.
            </summary>
        </member>
        <member name="T:Night.Window">
            <summary>
            Provides an interface for modifying and retrieving information about the program's window.
            </summary>
        </member>
        <member name="P:Night.Window.RendererPtr">
            <summary>
            Gets the pointer to the internal SDL renderer. For use by Night.Graphics.
            </summary>
        </member>
        <member name="P:Night.Window.Handle">
            <summary>
            Gets the handle to the internal SDL window. For use by other Night modules or internal methods.
            </summary>
        </member>
        <member name="M:Night.Window.SetIcon(System.String)">
            <summary>
            Sets the window icon.
            </summary>
            <param name="imagePath">The path to the icon image file (e.g., .ico, .png, .bmp).
            Uses SDL_image for loading, so supports various formats.</param>
            <returns>True if the icon was set successfully, false otherwise.</returns>
        </member>
        <member name="M:Night.Window.GetIcon">
            <summary>
            Gets the image data of the currently set window icon.
            </summary>
            <returns>The <see cref="T:Night.ImageData"/> of the icon, or null if no icon has been set or an error occurred.</returns>
        </member>
        <member name="M:Night.Window.SetMode(System.Int32,System.Int32,SDL3.SDL.WindowFlags)">
            <summary>
                Sets the display mode and properties of the window.
            </summary>
            <param name="width">The width of the window.</param>
            <param name="height">The height of the window.</param>
            <param name="flags">SDL Window flags to apply.</param>
            <returns>True if the mode was set successfully, false otherwise.</returns>
        </member>
        <member name="M:Night.Window.SetTitle(System.String)">
            <summary>
            Sets the window title.
            </summary>
            <param name="title">The new window title.</param>
        </member>
        <member name="M:Night.Window.IsOpen">
            <summary>
            Checks if the window is open.
            </summary>
            <returns>True if the window is open, false otherwise.</returns>
        </member>
        <member name="M:Night.Window.Close">
            <summary>
            Signals that the window should close.
            This is typically called by the engine when a quit event is received.
            TODO: Does this need to align with Love2D more? https://love2d.org/wiki/love.window.close.
            </summary>
        </member>
        <member name="M:Night.Window.GetDisplayCount">
            <summary>
            Gets the number of connected monitors.
            </summary>
            <returns>The number of currently connected displays.</returns>
        </member>
        <member name="M:Night.Window.GetDesktopDimensions(System.Int32)">
            <summary>
            Gets the width and height of the desktop.
            </summary>
            <param name="displayIndex">The index of the display to query (0 for the primary display).</param>
            <returns>A tuple containing the width and height of the desktop, or (0,0) if an error occurs.</returns>
        </member>
        <member name="M:Night.Window.GetFullscreen">
            <summary>
            Gets whether the window is fullscreen.
            </summary>
            <returns>A tuple: (bool IsFullscreen, FullscreenType FsType).
            IsFullscreen is true if the window is in any fullscreen mode, false otherwise.
            FsType indicates the type of fullscreen mode used.</returns>
        </member>
        <member name="M:Night.Window.SetFullscreen(System.Boolean,Night.FullscreenType)">
            <summary>
            Enters or exits fullscreen. The display to use when entering fullscreen is chosen
            based on which display the window is currently in, if multiple monitors are connected.
            </summary>
            <param name="fullscreen">Whether to enter or exit fullscreen mode.</param>
            <param name="fsType">The type of fullscreen mode to use (Desktop or Exclusive).</param>
            <returns>True if the operation was successful, false otherwise.</returns>
        </member>
        <member name="M:Night.Window.GetFullscreenModes(System.Int32)">
            <summary>
            Gets a list of available fullscreen display modes for a given display.
            </summary>
            <param name="displayIndex">The index of the display (0 for primary).</param>
            <returns>A list of (Width, Height) tuples representing available modes, or an empty list on error.</returns>
        </member>
        <member name="M:Night.Window.GetMode">
            <summary>
            Gets the current window mode (width, height, and flags).
            </summary>
            <returns>A WindowMode struct containing width, height, and current flags.</returns>
        </member>
        <member name="M:Night.Window.GetDPIScale">
            <summary>
            Gets the DPI scale factor of the display containing the window.
            </summary>
            <returns>The DPI scale factor, or 1.0f on error or if not applicable.</returns>
        </member>
        <member name="M:Night.Window.ToPixels(System.Single)">
            <summary>
            Converts a value from density-independent units to pixels, using the window's current DPI scale.
            </summary>
            <param name="value">The value in density-independent units.</param>
            <returns>The equivalent value in pixels.</returns>
        </member>
        <member name="M:Night.Window.FromPixels(System.Single)">
            <summary>
            Converts a value from pixels to density-independent units, using the window's current DPI scale.
            </summary>
            <param name="value">The value in pixels.</param>
            <returns>The equivalent value in density-independent units.</returns>
        </member>
        <member name="M:Night.Window.Shutdown">
            <summary>
            Internal method to shut down the window and renderer, and quit the video subsystem.
            Should be called by the FrameworkLoop at the end of the application.
            </summary>
        </member>
        <member name="M:Night.Window.EnsureVideoInitialized">
            <summary>
            Ensures the SDL Video subsystem is initialized.
            </summary>
        </member>
        <member name="M:Night.Window.GetDesktopDimensionsForDisplayID(System.UInt32)">
            <summary>
            Gets the dimensions of the desktop for a specific display ID.
            </summary>
            <param name="displayID">The actual ID of the display to query.</param>
            <returns>A tuple containing the width and height of the desktop, or (0,0) if an error occurs.</returns>
        </member>
        <member name="T:Night.WindowMode">
            <summary>
            Represents the display mode of a window, including width, height, and other properties.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Width">
            <summary>
            Gets or sets the window width in pixels.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Height">
            <summary>
            Gets or sets the window height in pixels.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Fullscreen">
            <summary>
            Gets or sets a value indicating whether the window is in fullscreen mode.
            </summary>
        </member>
        <member name="F:Night.WindowMode.FullscreenType">
            <summary>
            Gets or sets the type of fullscreen mode used.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Borderless">
            <summary>
            Gets or sets a value indicating whether the window is borderless.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Vsync">
            <summary>
            Gets or sets the VSync mode. 1 if the graphics framerate is synchronized with the monitor's refresh rate, 0 otherwise.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Msaa">
            <summary>
            Gets or sets the number of antialiasing samples used (0 if MSAA is disabled).
            </summary>
        </member>
        <member name="F:Night.WindowMode.Resizable">
            <summary>
            Gets or sets a value indicating whether the window is resizable in windowed mode.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Centered">
            <summary>
            Gets or sets a value indicating whether the window is centered in windowed mode.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Display">
            <summary>
            Gets or sets the 1-based index of the display the window is currently in.
            </summary>
        </member>
        <member name="F:Night.WindowMode.MinWidth">
            <summary>
            Gets or sets the minimum width of the window, if resizable.
            </summary>
        </member>
        <member name="F:Night.WindowMode.MinHeight">
            <summary>
            Gets or sets the minimum height of the window, if resizable.
            </summary>
        </member>
        <member name="F:Night.WindowMode.HighDpi">
            <summary>
            Gets or sets a value indicating whether high-dpi mode is allowed on Retina displays (macOS).
            </summary>
        </member>
        <member name="F:Night.WindowMode.RefreshRate">
            <summary>
            Gets or sets the refresh rate of the screen's current display mode in Hz (0 if undetermined).
            </summary>
        </member>
        <member name="F:Night.WindowMode.X">
            <summary>
            Gets or sets the x-coordinate of the window's position.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Y">
            <summary>
            Gets or sets the y-coordinate of the window's position.
            </summary>
        </member>
    </members>
</doc>



================================================
File: src/SampleGame/bin/Debug/net9.0/config.json
================================================
{
  "window": {
    "title": "Night Sample Game (from config!)",
    "icon": "assets/icon.ico",
    "width": 1024,
    "height": 768,
    "resizable": true,
    "vsync": false,
    "fullscreen": false,
    "borderless": true,
    "x": 100,
    "y": 100
  }
}




================================================
File: src/SampleGame/bin/Debug/net9.0/assets/images/pixel_green.pixi
================================================
[Non-text file]


================================================
File: src/SampleGame/bin/Debug/net9.0/assets/images/player_sprite_blue_32x64.aseprite
================================================
[Non-text file]


================================================
File: src/SampleGame/bin/Release/net9.0/Night.SampleGame
================================================
[Non-text file]


================================================
File: src/SampleGame/bin/Release/net9.0/Night.SampleGame.deps.json
================================================
{
  "runtimeTarget": {
    "name": ".NETCoreApp,Version=v9.0",
    "signature": ""
  },
  "compilationOptions": {},
  "targets": {
    ".NETCoreApp,Version=v9.0": {
      "Night.SampleGame/1.0.0": {
        "dependencies": {
          "Night": "1.0.0"
        },
        "runtime": {
          "Night.SampleGame.dll": {}
        }
      },
      "SDL3-CS/3.2.14.2": {
        "runtime": {
          "lib/net9.0/SDL3-CS.dll": {
            "assemblyVersion": "3.2.14.2",
            "fileVersion": "3.2.14.2"
          }
        }
      },
      "Night/1.0.0": {
        "dependencies": {
          "SDL3-CS": "3.2.14.2"
        },
        "runtime": {
          "Night.dll": {
            "assemblyVersion": "1.0.0.0",
            "fileVersion": "1.0.0.0"
          }
        }
      }
    }
  },
  "libraries": {
    "Night.SampleGame/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "SDL3-CS/3.2.14.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-wqWjIm2EP7PmXRQfwSxY4YJDSrXZ0QmolJMCJcs9KY4b3vYBdlwo0U4/olPMdBx6yRzqhN1nGJjmeC9OJT6L1g==",
      "path": "sdl3-cs/3.2.14.2",
      "hashPath": "sdl3-cs.3.2.14.2.nupkg.sha512"
    },
    "Night/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    }
  }
}


================================================
File: src/SampleGame/bin/Release/net9.0/Night.SampleGame.runtimeconfig.json
================================================
{
  "runtimeOptions": {
    "tfm": "net9.0",
    "framework": {
      "name": "Microsoft.NETCore.App",
      "version": "9.0.0"
    },
    "configProperties": {
      "System.Reflection.Metadata.MetadataUpdater.IsSupported": false,
      "System.Runtime.Serialization.EnableUnsafeBinaryFormatterSerialization": false
    }
  }
}


================================================
File: src/SampleGame/bin/Release/net9.0/config.json
================================================
{
  "window": {
    "title": "Configured by JSON!",
    "width": 1024,
    "height": 768,
    "resizable": true,
    "vsync": 0,
    "fullscreen": false,
    "borderless": true,
    "x": 100,
    "y": 100
  }
} 



================================================
File: src/SampleGame/bin/Release/net9.0/assets/images/pixel_green.pixi
================================================
[Non-text file]


================================================
File: src/SampleGame/bin/Release/net9.0/assets/images/player_sprite_blue_32x64.aseprite
================================================
[Non-text file]


================================================
File: src/SampleGame/obj/Night.SampleGame.csproj.nuget.dgspec.json
================================================
{
  "format": 1,
  "restore": {
    "/Users/danny/Documents/GitHub/any2/src/SampleGame/Night.SampleGame.csproj": {}
  },
  "projects": {
    "/Users/danny/Documents/GitHub/any2/src/Night/Night.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "/Users/danny/Documents/GitHub/any2/src/Night/Night.csproj",
        "projectName": "Night",
        "projectPath": "/Users/danny/Documents/GitHub/any2/src/Night/Night.csproj",
        "packagesPath": "/Users/danny/.nuget/packages/",
        "outputPath": "/Users/danny/Documents/GitHub/any2/src/Night/obj/",
        "projectStyle": "PackageReference",
        "configFilePaths": [
          "/Users/danny/.nuget/NuGet/NuGet.Config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "SDL3-CS": {
              "target": "Package",
              "version": "[*, )"
            },
            "StyleCop.Analyzers.Unstable": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[1.2.0.556, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "/Users/danny/.local/share/mise/installs/dotnet/9.0.300/sdk/9.0.300/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "/Users/danny/Documents/GitHub/any2/src/SampleGame/Night.SampleGame.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "/Users/danny/Documents/GitHub/any2/src/SampleGame/Night.SampleGame.csproj",
        "projectName": "Night.SampleGame",
        "projectPath": "/Users/danny/Documents/GitHub/any2/src/SampleGame/Night.SampleGame.csproj",
        "packagesPath": "/Users/danny/.nuget/packages/",
        "outputPath": "/Users/danny/Documents/GitHub/any2/src/SampleGame/obj/",
        "projectStyle": "PackageReference",
        "configFilePaths": [
          "/Users/danny/.nuget/NuGet/NuGet.Config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "/Users/danny/Documents/GitHub/any2/src/Night/Night.csproj": {
                "projectPath": "/Users/danny/Documents/GitHub/any2/src/Night/Night.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "StyleCop.Analyzers.Unstable": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[1.2.0.556, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "/Users/danny/.local/share/mise/installs/dotnet/9.0.300/sdk/9.0.300/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}


================================================
File: src/SampleGame/obj/Night.SampleGame.csproj.nuget.g.props
================================================
﻿<?xml version="1.0" encoding="utf-8" standalone="no"?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <RestoreSuccess Condition=" '$(RestoreSuccess)' == '' ">True</RestoreSuccess>
    <RestoreTool Condition=" '$(RestoreTool)' == '' ">NuGet</RestoreTool>
    <ProjectAssetsFile Condition=" '$(ProjectAssetsFile)' == '' ">$(MSBuildThisFileDirectory)project.assets.json</ProjectAssetsFile>
    <NuGetPackageRoot Condition=" '$(NuGetPackageRoot)' == '' ">/Users/danny/.nuget/packages/</NuGetPackageRoot>
    <NuGetPackageFolders Condition=" '$(NuGetPackageFolders)' == '' ">/Users/danny/.nuget/packages/</NuGetPackageFolders>
    <NuGetProjectStyle Condition=" '$(NuGetProjectStyle)' == '' ">PackageReference</NuGetProjectStyle>
    <NuGetToolVersion Condition=" '$(NuGetToolVersion)' == '' ">6.14.0</NuGetToolVersion>
  </PropertyGroup>
  <ItemGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <SourceRoot Include="/Users/danny/.nuget/packages/" />
  </ItemGroup>
  <PropertyGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <PkgStyleCop_Analyzers_Unstable Condition=" '$(PkgStyleCop_Analyzers_Unstable)' == '' ">/Users/danny/.nuget/packages/stylecop.analyzers.unstable/1.2.0.556</PkgStyleCop_Analyzers_Unstable>
  </PropertyGroup>
</Project>


================================================
File: src/SampleGame/obj/Night.SampleGame.csproj.nuget.g.targets
================================================
﻿<?xml version="1.0" encoding="utf-8" standalone="no"?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" />


================================================
File: src/SampleGame/obj/project.assets.json
================================================
{
  "version": 3,
  "targets": {
    "net9.0": {
      "SDL3-CS/3.2.14.2": {
        "type": "package",
        "compile": {
          "lib/net9.0/SDL3-CS.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/SDL3-CS.dll": {
            "related": ".xml"
          }
        }
      },
      "StyleCop.Analyzers.Unstable/1.2.0.556": {
        "type": "package"
      },
      "Night/1.0.0": {
        "type": "project",
        "framework": ".NETCoreApp,Version=v9.0",
        "dependencies": {
          "SDL3-CS": "0.0.0"
        },
        "compile": {
          "bin/placeholder/Night.dll": {}
        },
        "runtime": {
          "bin/placeholder/Night.dll": {}
        }
      }
    }
  },
  "libraries": {
    "SDL3-CS/3.2.14.2": {
      "sha512": "wqWjIm2EP7PmXRQfwSxY4YJDSrXZ0QmolJMCJcs9KY4b3vYBdlwo0U4/olPMdBx6yRzqhN1nGJjmeC9OJT6L1g==",
      "type": "package",
      "path": "sdl3-cs/3.2.14.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "CODE_OF_CONDUCT.md",
        "LICENSE",
        "README-nuget.md",
        "README.md",
        "SDL3-CS.xml",
        "lib/net7.0/SDL3-CS.dll",
        "lib/net7.0/SDL3-CS.xml",
        "lib/net8.0/SDL3-CS.dll",
        "lib/net8.0/SDL3-CS.xml",
        "lib/net9.0/SDL3-CS.dll",
        "lib/net9.0/SDL3-CS.xml",
        "logo.png",
        "sdl3-cs.3.2.14.2.nupkg.sha512",
        "sdl3-cs.nuspec"
      ]
    },
    "StyleCop.Analyzers.Unstable/1.2.0.556": {
      "sha512": "zvn9Mqs/ox/83cpYPignI8hJEM2A93s2HkHs8HYMOAQW0PkampyoErAiIyKxgTLqbbad29HX/shv/6LGSjPJNQ==",
      "type": "package",
      "path": "stylecop.analyzers.unstable/1.2.0.556",
      "hasTools": true,
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "THIRD-PARTY-NOTICES.txt",
        "analyzers/dotnet/cs/StyleCop.Analyzers.CodeFixes.dll",
        "analyzers/dotnet/cs/StyleCop.Analyzers.dll",
        "analyzers/dotnet/cs/de-DE/StyleCop.Analyzers.resources.dll",
        "analyzers/dotnet/cs/en-GB/StyleCop.Analyzers.resources.dll",
        "analyzers/dotnet/cs/es-MX/StyleCop.Analyzers.resources.dll",
        "analyzers/dotnet/cs/fr-FR/StyleCop.Analyzers.resources.dll",
        "analyzers/dotnet/cs/pl-PL/StyleCop.Analyzers.resources.dll",
        "analyzers/dotnet/cs/pt-BR/StyleCop.Analyzers.resources.dll",
        "analyzers/dotnet/cs/ru-RU/StyleCop.Analyzers.resources.dll",
        "rulesets/StyleCopAnalyzersDefault.ruleset",
        "stylecop.analyzers.unstable.1.2.0.556.nupkg.sha512",
        "stylecop.analyzers.unstable.nuspec",
        "tools/install.ps1",
        "tools/uninstall.ps1"
      ]
    },
    "Night/1.0.0": {
      "type": "project",
      "path": "../Night/Night.csproj",
      "msbuildProject": "../Night/Night.csproj"
    }
  },
  "projectFileDependencyGroups": {
    "net9.0": [
      "Night >= 1.0.0",
      "StyleCop.Analyzers.Unstable >= 1.2.0.556"
    ]
  },
  "packageFolders": {
    "/Users/danny/.nuget/packages/": {}
  },
  "project": {
    "version": "1.0.0",
    "restore": {
      "projectUniqueName": "/Users/danny/Documents/GitHub/any2/src/SampleGame/Night.SampleGame.csproj",
      "projectName": "Night.SampleGame",
      "projectPath": "/Users/danny/Documents/GitHub/any2/src/SampleGame/Night.SampleGame.csproj",
      "packagesPath": "/Users/danny/.nuget/packages/",
      "outputPath": "/Users/danny/Documents/GitHub/any2/src/SampleGame/obj/",
      "projectStyle": "PackageReference",
      "configFilePaths": [
        "/Users/danny/.nuget/NuGet/NuGet.Config"
      ],
      "originalTargetFrameworks": [
        "net9.0"
      ],
      "sources": {
        "https://api.nuget.org/v3/index.json": {}
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "projectReferences": {
            "/Users/danny/Documents/GitHub/any2/src/Night/Night.csproj": {
              "projectPath": "/Users/danny/Documents/GitHub/any2/src/Night/Night.csproj"
            }
          }
        }
      },
      "warningProperties": {
        "warnAsError": [
          "NU1605"
        ]
      },
      "restoreAuditProperties": {
        "enableAudit": "true",
        "auditLevel": "low",
        "auditMode": "direct"
      },
      "SdkAnalysisLevel": "9.0.300"
    },
    "frameworks": {
      "net9.0": {
        "targetAlias": "net9.0",
        "dependencies": {
          "StyleCop.Analyzers.Unstable": {
            "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
            "suppressParent": "All",
            "target": "Package",
            "version": "[1.2.0.556, )"
          }
        },
        "imports": [
          "net461",
          "net462",
          "net47",
          "net471",
          "net472",
          "net48",
          "net481"
        ],
        "assetTargetFallback": true,
        "warn": true,
        "frameworkReferences": {
          "Microsoft.NETCore.App": {
            "privateAssets": "all"
          }
        },
        "runtimeIdentifierGraphPath": "/Users/danny/.local/share/mise/installs/dotnet/9.0.300/sdk/9.0.300/PortableRuntimeIdentifierGraph.json"
      }
    }
  }
}


================================================
File: src/SampleGame/obj/project.nuget.cache
================================================
{
  "version": 2,
  "dgSpecHash": "FyckdHDJKMI=",
  "success": true,
  "projectFilePath": "/Users/danny/Documents/GitHub/any2/src/SampleGame/Night.SampleGame.csproj",
  "expectedPackageFiles": [
    "/Users/danny/.nuget/packages/sdl3-cs/3.2.14.2/sdl3-cs.3.2.14.2.nupkg.sha512",
    "/Users/danny/.nuget/packages/stylecop.analyzers.unstable/1.2.0.556/stylecop.analyzers.unstable.1.2.0.556.nupkg.sha512"
  ],
  "logs": []
}


================================================
File: src/SampleGame/obj/Debug/net9.0/Night.Sa.E6945040.Up2Date
================================================



================================================
File: src/SampleGame/obj/Debug/net9.0/Night.SampleGame.AssemblyInfo.cs
================================================
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("Night.SampleGame")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+e8acfd8c72548188ce07da1dbb62c652b6e1ed63")]
[assembly: System.Reflection.AssemblyProductAttribute("Night.SampleGame")]
[assembly: System.Reflection.AssemblyTitleAttribute("Night.SampleGame")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]

// Generated by the MSBuild WriteCodeFragment class.




================================================
File: src/SampleGame/obj/Debug/net9.0/Night.SampleGame.AssemblyInfoInputs.cache
================================================
1c569af9d28a7898f2c9ace7c6afcec5bc07987e780a5ca05db55d0ebc6030a6



================================================
File: src/SampleGame/obj/Debug/net9.0/Night.SampleGame.GeneratedMSBuildEditorConfig.editorconfig
================================================
is_global = true
build_property.TargetFramework = net9.0
build_property.TargetPlatformMinVersion = 
build_property.UsingMicrosoftNETSdkWeb = 
build_property.ProjectTypeGuids = 
build_property.InvariantGlobalization = 
build_property.PlatformNeutralAssembly = 
build_property.EnforceExtendedAnalyzerRules = 
build_property._SupportedPlatformList = Linux,macOS,Windows
build_property.RootNamespace = Night.SampleGame
build_property.ProjectDir = /Users/danny/Documents/GitHub/any2/src/SampleGame/
build_property.EnableComHosting = 
build_property.EnableGeneratedComInterfaceComImportInterop = 
build_property.EffectiveAnalysisLevelStyle = 9.0
build_property.EnableCodeStyleSeverity = 



================================================
File: src/SampleGame/obj/Debug/net9.0/Night.SampleGame.GlobalUsings.g.cs
================================================
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.IO;
global using global::System.Linq;
global using global::System.Net.Http;
global using global::System.Threading;
global using global::System.Threading.Tasks;



================================================
File: src/SampleGame/obj/Debug/net9.0/Night.SampleGame.assets.cache
================================================
[Non-text file]


================================================
File: src/SampleGame/obj/Debug/net9.0/Night.SampleGame.csproj.AssemblyReference.cache
================================================
[Non-text file]


================================================
File: src/SampleGame/obj/Debug/net9.0/Night.SampleGame.csproj.CoreCompileInputs.cache
================================================
1a5f42be59ec669a8aa9340c7373987822b166998943eb48e19b2705aa3da57d



================================================
File: src/SampleGame/obj/Debug/net9.0/Night.SampleGame.genruntimeconfig.cache
================================================
8bbfb6f2f645f910c54f38d02356d60b23664ae18cce5e60cea0853d562c7634



================================================
File: src/SampleGame/obj/Debug/net9.0/Night.SampleGame.sourcelink.json
================================================
{"documents":{"/Users/danny/Documents/GitHub/any2/*":"https://raw.githubusercontent.com/nightconcept/any2/e8acfd8c72548188ce07da1dbb62c652b6e1ed63/*","/Users/danny/Documents/GitHub/any2/lib/SDL3-CS/*":"https://raw.githubusercontent.com/edwardgushchin/SDL3-CS/f910675dcf9e0825b10e97b8583c892e0eee14be/*"}}


================================================
File: src/SampleGame/obj/Debug/net9.0/apphost
================================================
[Non-text file]


================================================
File: src/SampleGame/obj/Debug/net9.0/.NETCoreApp,Version=v9.0.AssemblyAttributes.cs
================================================
// <autogenerated />
using System;
using System.Reflection;
[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETCoreApp,Version=v9.0", FrameworkDisplayName = ".NET 9.0")]





================================================
File: src/SampleGame/obj/Release/net9.0/Night.Sa.E6945040.Up2Date
================================================



================================================
File: src/SampleGame/obj/Release/net9.0/Night.SampleGame.AssemblyInfo.cs
================================================
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("Night.SampleGame")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Release")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+24ac3ca6d4b8b5b68fc84dc694eac60dd7de3977")]
[assembly: System.Reflection.AssemblyProductAttribute("Night.SampleGame")]
[assembly: System.Reflection.AssemblyTitleAttribute("Night.SampleGame")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]

// Generated by the MSBuild WriteCodeFragment class.




================================================
File: src/SampleGame/obj/Release/net9.0/Night.SampleGame.AssemblyInfoInputs.cache
================================================
59df8244138e8ae885c16d5587efbe8478a3d079701b3c20f9f21a6afaa5353e



================================================
File: src/SampleGame/obj/Release/net9.0/Night.SampleGame.GeneratedMSBuildEditorConfig.editorconfig
================================================
is_global = true
build_property.TargetFramework = net9.0
build_property.TargetPlatformMinVersion = 
build_property.UsingMicrosoftNETSdkWeb = 
build_property.ProjectTypeGuids = 
build_property.InvariantGlobalization = 
build_property.PlatformNeutralAssembly = 
build_property.EnforceExtendedAnalyzerRules = 
build_property._SupportedPlatformList = Linux,macOS,Windows
build_property.RootNamespace = Night.SampleGame
build_property.ProjectDir = /Users/danny/Documents/GitHub/any2/src/SampleGame/
build_property.EnableComHosting = 
build_property.EnableGeneratedComInterfaceComImportInterop = 
build_property.EffectiveAnalysisLevelStyle = 9.0
build_property.EnableCodeStyleSeverity = 



================================================
File: src/SampleGame/obj/Release/net9.0/Night.SampleGame.GlobalUsings.g.cs
================================================
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.IO;
global using global::System.Linq;
global using global::System.Net.Http;
global using global::System.Threading;
global using global::System.Threading.Tasks;



================================================
File: src/SampleGame/obj/Release/net9.0/Night.SampleGame.assets.cache
================================================
[Non-text file]


================================================
File: src/SampleGame/obj/Release/net9.0/Night.SampleGame.csproj.AssemblyReference.cache
================================================
[Non-text file]


================================================
File: src/SampleGame/obj/Release/net9.0/Night.SampleGame.csproj.CoreCompileInputs.cache
================================================
722a8640664472fb6083e4af4e0844f2ffa9fa339fe31ab38dc437dd2887dae0



================================================
File: src/SampleGame/obj/Release/net9.0/Night.SampleGame.genruntimeconfig.cache
================================================
e9ef6d5d28b70f96cdcf2543d95bc49c1ef1d1dbc7a3ce99fe11aba003ce433d



================================================
File: src/SampleGame/obj/Release/net9.0/Night.SampleGame.sourcelink.json
================================================
{"documents":{"/Users/danny/Documents/GitHub/any2/*":"https://raw.githubusercontent.com/nightconcept/any2/9199592ee1287114365d11edda2ee4a27d5a98c0/*","/Users/danny/Documents/GitHub/any2/lib/SDL3-CS/*":"https://raw.githubusercontent.com/edwardgushchin/SDL3-CS/f910675dcf9e0825b10e97b8583c892e0eee14be/*"}}


================================================
File: src/SampleGame/obj/Release/net9.0/apphost
================================================
[Non-text file]


================================================
File: src/SampleGame/obj/Release/net9.0/.NETCoreApp,Version=v9.0.AssemblyAttributes.cs
================================================
// <autogenerated />
using System;
using System.Reflection;
[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETCoreApp,Version=v9.0", FrameworkDisplayName = ".NET 9.0")]





================================================
File: tests/Night.Tests/FilesystemTests.cs
================================================
// <copyright file="FilesystemTests.cs" company="Night Circle">
// zlib license
//
// Copyright (c) 2025 Danny Solivan, Night Circle
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// </copyright>

using System;
using System.IO;
using System.Text;

using Night;

using Xunit;

/// <summary>
/// Tests for the <see cref="Night.Filesystem"/> class.
/// </summary>
public class FilesystemTests : IDisposable
{
  private const string TestDir = "test_filesystem_temp";
  private const string TestFile = "test_file.txt";
  private const string TestSubDir = "test_subdir";
  private readonly string testFilePath;
  private readonly string testDirPath;
  private readonly string testSubDirPath;
  private readonly string testSymlinkFilePath;
  private readonly string testSymlinkDirPath;

  /// <summary>
  /// Initializes a new instance of the <see cref="FilesystemTests"/> class.
  /// Sets up the test environment by creating temporary directories and files.
  /// </summary>
  public FilesystemTests()
  {
    // Create a temporary directory for test files relative to the test execution directory
    var executionPath = Path.GetDirectoryName(typeof(FilesystemTests).Assembly.Location);
    var testDirFullPath = Path.Combine(executionPath!, TestDir);
    _ = Directory.CreateDirectory(testDirFullPath);

    this.testFilePath = Path.Combine(testDirFullPath, TestFile);
    this.testDirPath = Path.Combine(testDirFullPath, "actual_dir_for_symlink");
    this.testSubDirPath = Path.Combine(testDirFullPath, TestSubDir);
    this.testSymlinkFilePath = Path.Combine(testDirFullPath, "symlink_file.txt");
    this.testSymlinkDirPath = Path.Combine(testDirFullPath, "symlink_dir");

    File.WriteAllText(this.testFilePath, "Hello Night Engine!");
    _ = Directory.CreateDirectory(this.testDirPath);
    _ = Directory.CreateDirectory(this.testSubDirPath);

    // Create symlinks if supported (Windows requires admin rights or dev mode)
    try
    {
      _ = File.CreateSymbolicLink(this.testSymlinkFilePath, this.testFilePath);
    }
    catch (IOException ex)
    {
      Console.WriteLine($"Could not create file symlink: {ex.Message}. This test might be skipped or fail if symlinks are essential.");
    }
    catch (Exception ex)
    {
      Console.WriteLine($"An unexpected error occurred during file symlink creation: {ex.Message}");
    }

    try
    {
      _ = Directory.CreateSymbolicLink(this.testSymlinkDirPath, this.testDirPath);
    }
    catch (IOException ex)
    {
      Console.WriteLine($"Could not create directory symlink: {ex.Message}. This test might be skipped or fail if symlinks are essential.");
    }
    catch (Exception ex)
    {
      Console.WriteLine($"An unexpected error occurred during directory symlink creation: {ex.Message}");
    }
  }

  /// <summary>
  /// Disposes of the test resources by deleting the temporary directory.
  /// </summary>
  public void Dispose()
  {
    // Clean up the temporary directory
    var executionPath = Path.GetDirectoryName(typeof(FilesystemTests).Assembly.Location);
    var testDirFullPath = Path.Combine(executionPath!, TestDir);
    if (Directory.Exists(testDirFullPath))
    {
      Directory.Delete(testDirFullPath, true);
    }
  }

  /// <summary>
  /// Tests that GetInfo returns null when the path is null.
  /// </summary>
  [Fact]
  public void GetInfo_NullPath_ReturnsNull()
  {
    Assert.Null(Night.Filesystem.GetInfo(null!));
  }

  /// <summary>
  /// Tests that GetInfo returns null when the path is empty.
  /// </summary>
  [Fact]
  public void GetInfo_EmptyPath_ReturnsNull()
  {
    Assert.Null(Night.Filesystem.GetInfo(string.Empty));
  }

  /// <summary>
  /// Tests that GetInfo returns null for a non-existent path.
  /// </summary>
  [Fact]
  public void GetInfo_NonExistentPath_ReturnsNull()
  {
    var executionPath = Path.GetDirectoryName(typeof(FilesystemTests).Assembly.Location);
    var testDirFullPath = Path.Combine(executionPath!, TestDir);
    Assert.Null(Night.Filesystem.GetInfo(Path.Combine(testDirFullPath, "non_existent_file.txt")));
  }

  /// <summary>
  /// Tests that GetInfo returns correct FileSystemInfo for an existing file.
  /// </summary>
  [Fact]
  public void GetInfo_ExistingFile_ReturnsFileInfo()
  {
    var info = Night.Filesystem.GetInfo(this.testFilePath);
    Assert.NotNull(info);
    Assert.Equal(Night.FileType.File, info.Type);
    Assert.Equal(new FileInfo(this.testFilePath).Length, info.Size);
    _ = Assert.NotNull(info.ModTime);
  }

  /// <summary>
  /// Tests that GetInfo returns correct FileSystemInfo for an existing file when filtered by type File.
  /// </summary>
  [Fact]
  public void GetInfo_ExistingFile_WithFilterTypeFile_ReturnsFileInfo()
  {
    var info = Night.Filesystem.GetInfo(this.testFilePath, Night.FileType.File);
    Assert.NotNull(info);
    Assert.Equal(Night.FileType.File, info.Type);
  }

  /// <summary>
  /// Tests that GetInfo returns null for an existing file when filtered by type Directory.
  /// </summary>
  [Fact]
  public void GetInfo_ExistingFile_WithFilterTypeDirectory_ReturnsNull()
  {
    var info = Night.Filesystem.GetInfo(this.testFilePath, Night.FileType.Directory);
    Assert.Null(info);
  }

  /// <summary>
  /// Tests that GetInfo returns correct FileSystemInfo for an existing directory.
  /// </summary>
  [Fact]
  public void GetInfo_ExistingDirectory_ReturnsDirectoryInfo()
  {
    var info = Night.Filesystem.GetInfo(this.testSubDirPath);
    Assert.NotNull(info);
    Assert.Equal(Night.FileType.Directory, info.Type);
    Assert.Null(info.Size); // Size is null for directories in our implementation
    _ = Assert.NotNull(info.ModTime);
  }

  /// <summary>
  /// Tests that GetInfo returns correct FileSystemInfo for an existing directory when filtered by type Directory.
  /// </summary>
  [Fact]
  public void GetInfo_ExistingDirectory_WithFilterTypeDirectory_ReturnsDirectoryInfo()
  {
    var info = Night.Filesystem.GetInfo(this.testSubDirPath, Night.FileType.Directory);
    Assert.NotNull(info);
    Assert.Equal(Night.FileType.Directory, info.Type);
  }

  /// <summary>
  /// Tests that GetInfo returns null for an existing directory when filtered by type File.
  /// </summary>
  [Fact]
  public void GetInfo_ExistingDirectory_WithFilterTypeFile_ReturnsNull()
  {
    var info = Night.Filesystem.GetInfo(this.testSubDirPath, Night.FileType.File);
    Assert.Null(info);
  }

  /// <summary>
  /// Tests that GetInfo returns correct FileSystemInfo for a file symlink.
  /// </summary>
  [Fact]
  public void GetInfo_FileSymlink_ReturnsSymlinkInfo()
  {
    if (!File.Exists(this.testSymlinkFilePath) && !Directory.Exists(this.testSymlinkFilePath) /* Symlink could point to dir or file, check both just in case File.Exists is tricky with broken file symlinks */)
    {
      // Skip if symlink creation failed (e.g. permissions on Windows or if it points to a now-deleted item and File.Exists returns false)
      Console.WriteLine($"Skipping symlink test for file: {this.testSymlinkFilePath} as it does not exist or could not be verified.");
      return;
    }

    var info = Night.Filesystem.GetInfo(this.testSymlinkFilePath);
    Assert.NotNull(info);
    Assert.Equal(Night.FileType.Symlink, info.Type);
  }

  /// <summary>
  /// Tests that GetInfo returns correct FileSystemInfo for a directory symlink.
  /// </summary>
  [Fact]
  public void GetInfo_DirectorySymlink_ReturnsSymlinkInfo()
  {
    if (!Directory.Exists(this.testSymlinkDirPath))
    {
      // Skip if symlink creation failed (e.g. permissions on Windows)
      Console.WriteLine($"Skipping symlink test for directory: {this.testSymlinkDirPath} as it does not exist or could not be verified.");
      return;
    }

    var info = Night.Filesystem.GetInfo(this.testSymlinkDirPath);
    Assert.NotNull(info);
    Assert.Equal(Night.FileType.Symlink, info.Type);
  }

  /// <summary>
  /// Tests that GetInfo correctly populates an existing FileSystemInfo object for a valid path.
  /// </summary>
  [Fact]
  public void GetInfo_PopulatesExistingObject_ValidPath()
  {
    var existingInfo = new Night.FileSystemInfo(Night.FileType.File, 0, 0); // Dummy initial values
    var result = Night.Filesystem.GetInfo(this.testFilePath, existingInfo);

    Assert.NotNull(result);
    Assert.Same(existingInfo, result);
    Assert.Equal(Night.FileType.File, existingInfo.Type);
    Assert.Equal(new FileInfo(this.testFilePath).Length, existingInfo.Size);
  }

  /// <summary>
  /// Tests that GetInfo returns null and does not modify an existing FileSystemInfo object for a non-existent path.
  /// </summary>
  [Fact]
  public void GetInfo_PopulatesExistingObject_NonExistentPath_ReturnsNullAndDoesNotChangeObject()
  {
    var originalType = Night.FileType.Other; // Different from what GetInfo might set
    long? originalSize = 12345;
    long? originalModTime = 67890;
    var executionPath = Path.GetDirectoryName(typeof(FilesystemTests).Assembly.Location);
    var testDirFullPath = Path.Combine(executionPath!, TestDir);

    var existingInfo = new Night.FileSystemInfo(originalType, originalSize, originalModTime);
    var result = Night.Filesystem.GetInfo(Path.Combine(testDirFullPath, "non_existent_file.txt"), existingInfo);

    Assert.Null(result);

    // Check that the original object was not modified
    Assert.Equal(originalType, existingInfo.Type);
    Assert.Equal(originalSize, existingInfo.Size);
    Assert.Equal(originalModTime, existingInfo.ModTime);
  }

  /// <summary>
  /// Tests that GetInfo correctly populates an existing FileSystemInfo object with a filter for a valid path and type.
  /// </summary>
  [Fact]
  public void GetInfo_PopulatesExistingObjectWithFilter_ValidPathAndType()
  {
    var existingInfo = new Night.FileSystemInfo(Night.FileType.Directory, 0, 0); // Dummy initial values
    var result = Night.Filesystem.GetInfo(this.testFilePath, Night.FileType.File, existingInfo);

    Assert.NotNull(result);
    Assert.Same(existingInfo, result);
    Assert.Equal(Night.FileType.File, existingInfo.Type);
  }

  /// <summary>
  /// Tests that GetInfo returns null when populating an existing object if the path exists but the type filter does not match.
  /// </summary>
  [Fact]
  public void GetInfo_PopulatesExistingObjectWithFilter_PathExistsButWrongType_ReturnsNull()
  {
    var originalType = Night.FileType.Other;
    var existingInfo = new Night.FileSystemInfo(originalType, null, null);
    var result = Night.Filesystem.GetInfo(this.testFilePath, Night.FileType.Directory, existingInfo); // File exists, but asking for Directory type

    Assert.Null(result);
    Assert.Equal(originalType, existingInfo.Type); // Should not have been modified
  }

  /// <summary>
  /// Tests that ReadBytes returns the correct byte array for an existing file.
  /// </summary>
  [Fact]
  public void ReadBytes_ExistingFile_ReturnsCorrectBytes()
  {
    var expectedBytes = Encoding.UTF8.GetBytes("Hello Night Engine!");
    var actualBytes = Night.Filesystem.ReadBytes(this.testFilePath);
    Assert.Equal(expectedBytes, actualBytes);
  }

  /// <summary>
  /// Tests that ReadBytes throws a FileNotFoundException for a non-existent file.
  /// </summary>
  [Fact]
  public void ReadBytes_NonExistentFile_ThrowsFileNotFound()
  {
    var executionPath = Path.GetDirectoryName(typeof(FilesystemTests).Assembly.Location);
    var testDirFullPath = Path.Combine(executionPath!, TestDir);
    _ = Assert.Throws<FileNotFoundException>(() => Night.Filesystem.ReadBytes(Path.Combine(testDirFullPath, "non_existent_file_for_read.txt")));
  }

  /// <summary>
  /// Tests that ReadText returns the correct string for an existing file.
  /// </summary>
  [Fact]
  public void ReadText_ExistingFile_ReturnsCorrectText()
  {
    var expectedText = "Hello Night Engine!";
    var actualText = Night.Filesystem.ReadText(this.testFilePath);
    Assert.Equal(expectedText, actualText);
  }

  /// <summary>
  /// Tests that ReadText throws a FileNotFoundException for a non-existent file.
  /// </summary>
  [Fact]
  public void ReadText_NonExistentFile_ThrowsFileNotFound()
  {
    var executionPath = Path.GetDirectoryName(typeof(FilesystemTests).Assembly.Location);
    var testDirFullPath = Path.Combine(executionPath!, TestDir);
    _ = Assert.Throws<FileNotFoundException>(() => Night.Filesystem.ReadText(Path.Combine(testDirFullPath, "non_existent_file_for_read.txt")));
  }
}



================================================
File: tests/Night.Tests/Night.Tests.csproj
================================================
﻿<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <AssemblyName>Night.Tests</AssemblyName>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <IsPackable>false</IsPackable>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\Night.Tests.xml</DocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <AdditionalFiles Include="stylecop.json" />
    <ProjectReference Include="..\..\src\Night\Night.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="coverlet.collector" Version="6.0.2" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.12.0" />
    <PackageReference Include="xunit" Version="2.9.2" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.8.2" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="StyleCop.Analyzers.Unstable" Version="1.2.0.556">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <Using Include="Xunit" />
  </ItemGroup>

</Project>



================================================
File: tests/Night.Tests/stylecop.json
================================================
{
  "$schema": "https://raw.githubusercontent.com/DotNetAnalyzers/StyleCopAnalyzers/master/StyleCop.Analyzers/StyleCop.Analyzers/Settings/stylecop.schema.json",
  "settings": {
    "documentationRules": {
      "companyName": "Night Circle",
      "copyrightText": "zlib license\n\nCopyright (c) {copyrightYears} Danny Solivan, {companyName}\n\nThis software is provided 'as-is', without any express or implied\nwarranty. In no event will the authors be held liable for any damages\narising from the use of this software.\n\nPermission is granted to anyone to use this software for any purpose,\nincluding commercial applications, and to alter it and redistribute it\nfreely, subject to the following restrictions:\n\n1. The origin of this software must not be misrepresented; you must not\n   claim that you wrote the original software. If you use this software\n   in a product, an acknowledgment in the product documentation would be\n   appreciated but is not required.\n2. Altered source versions must be plainly marked as such, and must not be\n   misrepresented as being the original software.\n3. This notice may not be removed or altered from any source distribution.",
      "variables": {
        "copyrightYears": "2025"
      }
    }
  }
}



================================================
File: tests/Night.Tests/bin/Debug/net9.0/CoverletSourceRootsMapping_Night.Engine.Tests
================================================
[Non-text file]


================================================
File: tests/Night.Tests/bin/Debug/net9.0/CoverletSourceRootsMapping_Night.Tests
================================================
[Non-text file]


================================================
File: tests/Night.Tests/bin/Debug/net9.0/Night.Engine.Tests.deps.json
================================================
{
  "runtimeTarget": {
    "name": ".NETCoreApp,Version=v9.0",
    "signature": ""
  },
  "compilationOptions": {},
  "targets": {
    ".NETCoreApp,Version=v9.0": {
      "Night.Engine.Tests/1.0.0": {
        "dependencies": {
          "Microsoft.NET.Test.Sdk": "17.12.0",
          "Night.Engine": "1.0.0",
          "coverlet.collector": "6.0.2",
          "xunit": "2.9.2",
          "xunit.runner.visualstudio": "2.8.2"
        },
        "runtime": {
          "Night.Engine.Tests.dll": {}
        }
      },
      "coverlet.collector/6.0.2": {},
      "Microsoft.CodeCoverage/17.12.0": {
        "runtime": {
          "lib/netcoreapp3.1/Microsoft.VisualStudio.CodeCoverage.Shim.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.524.48002"
          }
        }
      },
      "Microsoft.NET.Test.Sdk/17.12.0": {
        "dependencies": {
          "Microsoft.CodeCoverage": "17.12.0",
          "Microsoft.TestPlatform.TestHost": "17.12.0"
        }
      },
      "Microsoft.TestPlatform.ObjectModel/17.12.0": {
        "dependencies": {
          "System.Reflection.Metadata": "1.6.0"
        },
        "runtime": {
          "lib/netcoreapp3.1/Microsoft.TestPlatform.CoreUtilities.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.24.56501"
          },
          "lib/netcoreapp3.1/Microsoft.TestPlatform.PlatformAbstractions.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.24.56501"
          },
          "lib/netcoreapp3.1/Microsoft.VisualStudio.TestPlatform.ObjectModel.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.24.56501"
          }
        },
        "resources": {
          "lib/netcoreapp3.1/cs/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "cs"
          },
          "lib/netcoreapp3.1/cs/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "cs"
          },
          "lib/netcoreapp3.1/de/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "de"
          },
          "lib/netcoreapp3.1/de/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "de"
          },
          "lib/netcoreapp3.1/es/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "es"
          },
          "lib/netcoreapp3.1/es/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "es"
          },
          "lib/netcoreapp3.1/fr/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "fr"
          },
          "lib/netcoreapp3.1/fr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "fr"
          },
          "lib/netcoreapp3.1/it/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "it"
          },
          "lib/netcoreapp3.1/it/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "it"
          },
          "lib/netcoreapp3.1/ja/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "ja"
          },
          "lib/netcoreapp3.1/ja/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "ja"
          },
          "lib/netcoreapp3.1/ko/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "ko"
          },
          "lib/netcoreapp3.1/ko/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "ko"
          },
          "lib/netcoreapp3.1/pl/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "pl"
          },
          "lib/netcoreapp3.1/pl/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "pl"
          },
          "lib/netcoreapp3.1/pt-BR/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/netcoreapp3.1/pt-BR/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/netcoreapp3.1/ru/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "ru"
          },
          "lib/netcoreapp3.1/ru/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "ru"
          },
          "lib/netcoreapp3.1/tr/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "tr"
          },
          "lib/netcoreapp3.1/tr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "tr"
          },
          "lib/netcoreapp3.1/zh-Hans/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/netcoreapp3.1/zh-Hans/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/netcoreapp3.1/zh-Hant/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "zh-Hant"
          },
          "lib/netcoreapp3.1/zh-Hant/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.TestPlatform.TestHost/17.12.0": {
        "dependencies": {
          "Microsoft.TestPlatform.ObjectModel": "17.12.0",
          "Newtonsoft.Json": "13.0.1"
        },
        "runtime": {
          "lib/netcoreapp3.1/Microsoft.TestPlatform.CommunicationUtilities.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.24.56501"
          },
          "lib/netcoreapp3.1/Microsoft.TestPlatform.CrossPlatEngine.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.24.56501"
          },
          "lib/netcoreapp3.1/Microsoft.TestPlatform.Utilities.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.24.56501"
          },
          "lib/netcoreapp3.1/Microsoft.VisualStudio.TestPlatform.Common.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.24.56501"
          },
          "lib/netcoreapp3.1/testhost.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.24.56501"
          }
        },
        "resources": {
          "lib/netcoreapp3.1/cs/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "cs"
          },
          "lib/netcoreapp3.1/cs/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "cs"
          },
          "lib/netcoreapp3.1/cs/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "cs"
          },
          "lib/netcoreapp3.1/de/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "de"
          },
          "lib/netcoreapp3.1/de/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "de"
          },
          "lib/netcoreapp3.1/de/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "de"
          },
          "lib/netcoreapp3.1/es/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "es"
          },
          "lib/netcoreapp3.1/es/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "es"
          },
          "lib/netcoreapp3.1/es/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "es"
          },
          "lib/netcoreapp3.1/fr/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "fr"
          },
          "lib/netcoreapp3.1/fr/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "fr"
          },
          "lib/netcoreapp3.1/fr/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "fr"
          },
          "lib/netcoreapp3.1/it/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "it"
          },
          "lib/netcoreapp3.1/it/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "it"
          },
          "lib/netcoreapp3.1/it/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "it"
          },
          "lib/netcoreapp3.1/ja/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "ja"
          },
          "lib/netcoreapp3.1/ja/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "ja"
          },
          "lib/netcoreapp3.1/ja/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "ja"
          },
          "lib/netcoreapp3.1/ko/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "ko"
          },
          "lib/netcoreapp3.1/ko/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "ko"
          },
          "lib/netcoreapp3.1/ko/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "ko"
          },
          "lib/netcoreapp3.1/pl/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "pl"
          },
          "lib/netcoreapp3.1/pl/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "pl"
          },
          "lib/netcoreapp3.1/pl/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "pl"
          },
          "lib/netcoreapp3.1/pt-BR/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/netcoreapp3.1/pt-BR/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/netcoreapp3.1/pt-BR/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/netcoreapp3.1/ru/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "ru"
          },
          "lib/netcoreapp3.1/ru/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "ru"
          },
          "lib/netcoreapp3.1/ru/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "ru"
          },
          "lib/netcoreapp3.1/tr/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "tr"
          },
          "lib/netcoreapp3.1/tr/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "tr"
          },
          "lib/netcoreapp3.1/tr/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "tr"
          },
          "lib/netcoreapp3.1/zh-Hans/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/netcoreapp3.1/zh-Hans/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/netcoreapp3.1/zh-Hans/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/netcoreapp3.1/zh-Hant/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "zh-Hant"
          },
          "lib/netcoreapp3.1/zh-Hant/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "zh-Hant"
          },
          "lib/netcoreapp3.1/zh-Hant/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Newtonsoft.Json/13.0.1": {
        "runtime": {
          "lib/netstandard2.0/Newtonsoft.Json.dll": {
            "assemblyVersion": "13.0.0.0",
            "fileVersion": "13.0.1.25517"
          }
        }
      },
      "SDL3-CS/3.2.14.2": {
        "runtime": {
          "lib/net9.0/SDL3-CS.dll": {
            "assemblyVersion": "3.2.14.2",
            "fileVersion": "3.2.14.2"
          }
        }
      },
      "System.Reflection.Metadata/1.6.0": {},
      "xunit/2.9.2": {
        "dependencies": {
          "xunit.analyzers": "1.16.0",
          "xunit.assert": "2.9.2",
          "xunit.core": "2.9.2"
        }
      },
      "xunit.abstractions/2.0.3": {
        "runtime": {
          "lib/netstandard2.0/xunit.abstractions.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "0.0.0.0"
          }
        }
      },
      "xunit.analyzers/1.16.0": {},
      "xunit.assert/2.9.2": {
        "runtime": {
          "lib/net6.0/xunit.assert.dll": {
            "assemblyVersion": "2.9.2.0",
            "fileVersion": "2.9.2.0"
          }
        }
      },
      "xunit.core/2.9.2": {
        "dependencies": {
          "xunit.extensibility.core": "2.9.2",
          "xunit.extensibility.execution": "2.9.2"
        }
      },
      "xunit.extensibility.core/2.9.2": {
        "dependencies": {
          "xunit.abstractions": "2.0.3"
        },
        "runtime": {
          "lib/netstandard1.1/xunit.core.dll": {
            "assemblyVersion": "2.9.2.0",
            "fileVersion": "2.9.2.0"
          }
        }
      },
      "xunit.extensibility.execution/2.9.2": {
        "dependencies": {
          "xunit.extensibility.core": "2.9.2"
        },
        "runtime": {
          "lib/netstandard1.1/xunit.execution.dotnet.dll": {
            "assemblyVersion": "2.9.2.0",
            "fileVersion": "2.9.2.0"
          }
        }
      },
      "xunit.runner.visualstudio/2.8.2": {},
      "Night.Engine/1.0.0": {
        "dependencies": {
          "SDL3-CS": "3.2.14.2"
        },
        "runtime": {
          "Night.Engine.dll": {
            "assemblyVersion": "1.0.0.0",
            "fileVersion": "1.0.0.0"
          }
        }
      }
    }
  },
  "libraries": {
    "Night.Engine.Tests/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "coverlet.collector/6.0.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-bJShQ6uWRTQ100ZeyiMqcFlhP7WJ+bCuabUs885dJiBEzMsJMSFr7BOyeCw4rgvQokteGi5rKQTlkhfQPUXg2A==",
      "path": "coverlet.collector/6.0.2",
      "hashPath": "coverlet.collector.6.0.2.nupkg.sha512"
    },
    "Microsoft.CodeCoverage/17.12.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-4svMznBd5JM21JIG2xZKGNanAHNXplxf/kQDFfLHXQ3OnpJkayRK/TjacFjA+EYmoyuNXHo/sOETEfcYtAzIrA==",
      "path": "microsoft.codecoverage/17.12.0",
      "hashPath": "microsoft.codecoverage.17.12.0.nupkg.sha512"
    },
    "Microsoft.NET.Test.Sdk/17.12.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-kt/PKBZ91rFCWxVIJZSgVLk+YR+4KxTuHf799ho8WNiK5ZQpJNAEZCAWX86vcKrs+DiYjiibpYKdGZP6+/N17w==",
      "path": "microsoft.net.test.sdk/17.12.0",
      "hashPath": "microsoft.net.test.sdk.17.12.0.nupkg.sha512"
    },
    "Microsoft.TestPlatform.ObjectModel/17.12.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-TDqkTKLfQuAaPcEb3pDDWnh7b3SyZF+/W9OZvWFp6eJCIiiYFdSB6taE2I6tWrFw5ywhzOb6sreoGJTI6m3rSQ==",
      "path": "microsoft.testplatform.objectmodel/17.12.0",
      "hashPath": "microsoft.testplatform.objectmodel.17.12.0.nupkg.sha512"
    },
    "Microsoft.TestPlatform.TestHost/17.12.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-MiPEJQNyADfwZ4pJNpQex+t9/jOClBGMiCiVVFuELCMSX2nmNfvUor3uFVxNNCg30uxDP8JDYfPnMXQzsfzYyg==",
      "path": "microsoft.testplatform.testhost/17.12.0",
      "hashPath": "microsoft.testplatform.testhost.17.12.0.nupkg.sha512"
    },
    "Newtonsoft.Json/13.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ppPFpBcvxdsfUonNcvITKqLl3bqxWbDCZIzDWHzjpdAHRFfZe0Dw9HmA0+za13IdyrgJwpkDTDA9fHaxOrt20A==",
      "path": "newtonsoft.json/13.0.1",
      "hashPath": "newtonsoft.json.13.0.1.nupkg.sha512"
    },
    "SDL3-CS/3.2.14.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-wqWjIm2EP7PmXRQfwSxY4YJDSrXZ0QmolJMCJcs9KY4b3vYBdlwo0U4/olPMdBx6yRzqhN1nGJjmeC9OJT6L1g==",
      "path": "sdl3-cs/3.2.14.2",
      "hashPath": "sdl3-cs.3.2.14.2.nupkg.sha512"
    },
    "System.Reflection.Metadata/1.6.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-COC1aiAJjCoA5GBF+QKL2uLqEBew4JsCkQmoHKbN3TlOZKa2fKLz5CpiRQKDz0RsAOEGsVKqOD5bomsXq/4STQ==",
      "path": "system.reflection.metadata/1.6.0",
      "hashPath": "system.reflection.metadata.1.6.0.nupkg.sha512"
    },
    "xunit/2.9.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-7LhFS2N9Z6Xgg8aE5lY95cneYivRMfRI8v+4PATa4S64D5Z/Plkg0qa8dTRHSiGRgVZ/CL2gEfJDE5AUhOX+2Q==",
      "path": "xunit/2.9.2",
      "hashPath": "xunit.2.9.2.nupkg.sha512"
    },
    "xunit.abstractions/2.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-pot1I4YOxlWjIb5jmwvvQNbTrZ3lJQ+jUGkGjWE3hEFM0l5gOnBWS+H3qsex68s5cO52g+44vpGzhAt+42vwKg==",
      "path": "xunit.abstractions/2.0.3",
      "hashPath": "xunit.abstractions.2.0.3.nupkg.sha512"
    },
    "xunit.analyzers/1.16.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-hptYM7vGr46GUIgZt21YHO4rfuBAQS2eINbFo16CV/Dqq+24Tp+P5gDCACu1AbFfW4Sp/WRfDPSK8fmUUb8s0Q==",
      "path": "xunit.analyzers/1.16.0",
      "hashPath": "xunit.analyzers.1.16.0.nupkg.sha512"
    },
    "xunit.assert/2.9.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-QkNBAQG4pa66cholm28AxijBjrmki98/vsEh4Sx5iplzotvPgpiotcxqJQMRC8d7RV7nIT8ozh97957hDnZwsQ==",
      "path": "xunit.assert/2.9.2",
      "hashPath": "xunit.assert.2.9.2.nupkg.sha512"
    },
    "xunit.core/2.9.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-O6RrNSdmZ0xgEn5kT927PNwog5vxTtKrWMihhhrT0Sg9jQ7iBDciYOwzBgP2krBEk5/GBXI18R1lKvmnxGcb4w==",
      "path": "xunit.core/2.9.2",
      "hashPath": "xunit.core.2.9.2.nupkg.sha512"
    },
    "xunit.extensibility.core/2.9.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Ol+KlBJz1x8BrdnhN2DeOuLrr1I/cTwtHCggL9BvYqFuVd/TUSzxNT5O0NxCIXth30bsKxgMfdqLTcORtM52yQ==",
      "path": "xunit.extensibility.core/2.9.2",
      "hashPath": "xunit.extensibility.core.2.9.2.nupkg.sha512"
    },
    "xunit.extensibility.execution/2.9.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-rKMpq4GsIUIJibXuZoZ8lYp5EpROlnYaRpwu9Zr0sRZXE7JqJfEEbCsUriZqB+ByXCLFBJyjkTRULMdC+U566g==",
      "path": "xunit.extensibility.execution/2.9.2",
      "hashPath": "xunit.extensibility.execution.2.9.2.nupkg.sha512"
    },
    "xunit.runner.visualstudio/2.8.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-vm1tbfXhFmjFMUmS4M0J0ASXz3/U5XvXBa6DOQUL3fEz4Vt6YPhv+ESCarx6M6D+9kJkJYZKCNvJMas1+nVfmQ==",
      "path": "xunit.runner.visualstudio/2.8.2",
      "hashPath": "xunit.runner.visualstudio.2.8.2.nupkg.sha512"
    },
    "Night.Engine/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    }
  }
}


================================================
File: tests/Night.Tests/bin/Debug/net9.0/Night.Engine.Tests.runtimeconfig.json
================================================
{
  "runtimeOptions": {
    "tfm": "net9.0",
    "framework": {
      "name": "Microsoft.NETCore.App",
      "version": "9.0.0"
    },
    "configProperties": {
      "System.Runtime.Serialization.EnableUnsafeBinaryFormatterSerialization": false
    }
  }
}


================================================
File: tests/Night.Tests/bin/Debug/net9.0/Night.Tests.deps.json
================================================
{
  "runtimeTarget": {
    "name": ".NETCoreApp,Version=v9.0",
    "signature": ""
  },
  "compilationOptions": {},
  "targets": {
    ".NETCoreApp,Version=v9.0": {
      "Night.Tests/1.0.0": {
        "dependencies": {
          "Microsoft.NET.Test.Sdk": "17.12.0",
          "Night": "1.0.0",
          "StyleCop.Analyzers.Unstable": "1.2.0.556",
          "coverlet.collector": "6.0.2",
          "xunit": "2.9.2",
          "xunit.runner.visualstudio": "2.8.2"
        },
        "runtime": {
          "Night.Tests.dll": {}
        }
      },
      "coverlet.collector/6.0.2": {},
      "Microsoft.CodeCoverage/17.12.0": {
        "runtime": {
          "lib/netcoreapp3.1/Microsoft.VisualStudio.CodeCoverage.Shim.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.524.48002"
          }
        }
      },
      "Microsoft.NET.Test.Sdk/17.12.0": {
        "dependencies": {
          "Microsoft.CodeCoverage": "17.12.0",
          "Microsoft.TestPlatform.TestHost": "17.12.0"
        }
      },
      "Microsoft.TestPlatform.ObjectModel/17.12.0": {
        "dependencies": {
          "System.Reflection.Metadata": "1.6.0"
        },
        "runtime": {
          "lib/netcoreapp3.1/Microsoft.TestPlatform.CoreUtilities.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.24.56501"
          },
          "lib/netcoreapp3.1/Microsoft.TestPlatform.PlatformAbstractions.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.24.56501"
          },
          "lib/netcoreapp3.1/Microsoft.VisualStudio.TestPlatform.ObjectModel.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.24.56501"
          }
        },
        "resources": {
          "lib/netcoreapp3.1/cs/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "cs"
          },
          "lib/netcoreapp3.1/cs/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "cs"
          },
          "lib/netcoreapp3.1/de/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "de"
          },
          "lib/netcoreapp3.1/de/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "de"
          },
          "lib/netcoreapp3.1/es/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "es"
          },
          "lib/netcoreapp3.1/es/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "es"
          },
          "lib/netcoreapp3.1/fr/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "fr"
          },
          "lib/netcoreapp3.1/fr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "fr"
          },
          "lib/netcoreapp3.1/it/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "it"
          },
          "lib/netcoreapp3.1/it/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "it"
          },
          "lib/netcoreapp3.1/ja/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "ja"
          },
          "lib/netcoreapp3.1/ja/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "ja"
          },
          "lib/netcoreapp3.1/ko/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "ko"
          },
          "lib/netcoreapp3.1/ko/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "ko"
          },
          "lib/netcoreapp3.1/pl/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "pl"
          },
          "lib/netcoreapp3.1/pl/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "pl"
          },
          "lib/netcoreapp3.1/pt-BR/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/netcoreapp3.1/pt-BR/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/netcoreapp3.1/ru/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "ru"
          },
          "lib/netcoreapp3.1/ru/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "ru"
          },
          "lib/netcoreapp3.1/tr/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "tr"
          },
          "lib/netcoreapp3.1/tr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "tr"
          },
          "lib/netcoreapp3.1/zh-Hans/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/netcoreapp3.1/zh-Hans/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/netcoreapp3.1/zh-Hant/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "zh-Hant"
          },
          "lib/netcoreapp3.1/zh-Hant/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.TestPlatform.TestHost/17.12.0": {
        "dependencies": {
          "Microsoft.TestPlatform.ObjectModel": "17.12.0",
          "Newtonsoft.Json": "13.0.1"
        },
        "runtime": {
          "lib/netcoreapp3.1/Microsoft.TestPlatform.CommunicationUtilities.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.24.56501"
          },
          "lib/netcoreapp3.1/Microsoft.TestPlatform.CrossPlatEngine.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.24.56501"
          },
          "lib/netcoreapp3.1/Microsoft.TestPlatform.Utilities.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.24.56501"
          },
          "lib/netcoreapp3.1/Microsoft.VisualStudio.TestPlatform.Common.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.24.56501"
          },
          "lib/netcoreapp3.1/testhost.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.24.56501"
          }
        },
        "resources": {
          "lib/netcoreapp3.1/cs/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "cs"
          },
          "lib/netcoreapp3.1/cs/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "cs"
          },
          "lib/netcoreapp3.1/cs/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "cs"
          },
          "lib/netcoreapp3.1/de/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "de"
          },
          "lib/netcoreapp3.1/de/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "de"
          },
          "lib/netcoreapp3.1/de/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "de"
          },
          "lib/netcoreapp3.1/es/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "es"
          },
          "lib/netcoreapp3.1/es/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "es"
          },
          "lib/netcoreapp3.1/es/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "es"
          },
          "lib/netcoreapp3.1/fr/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "fr"
          },
          "lib/netcoreapp3.1/fr/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "fr"
          },
          "lib/netcoreapp3.1/fr/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "fr"
          },
          "lib/netcoreapp3.1/it/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "it"
          },
          "lib/netcoreapp3.1/it/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "it"
          },
          "lib/netcoreapp3.1/it/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "it"
          },
          "lib/netcoreapp3.1/ja/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "ja"
          },
          "lib/netcoreapp3.1/ja/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "ja"
          },
          "lib/netcoreapp3.1/ja/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "ja"
          },
          "lib/netcoreapp3.1/ko/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "ko"
          },
          "lib/netcoreapp3.1/ko/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "ko"
          },
          "lib/netcoreapp3.1/ko/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "ko"
          },
          "lib/netcoreapp3.1/pl/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "pl"
          },
          "lib/netcoreapp3.1/pl/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "pl"
          },
          "lib/netcoreapp3.1/pl/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "pl"
          },
          "lib/netcoreapp3.1/pt-BR/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/netcoreapp3.1/pt-BR/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/netcoreapp3.1/pt-BR/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/netcoreapp3.1/ru/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "ru"
          },
          "lib/netcoreapp3.1/ru/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "ru"
          },
          "lib/netcoreapp3.1/ru/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "ru"
          },
          "lib/netcoreapp3.1/tr/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "tr"
          },
          "lib/netcoreapp3.1/tr/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "tr"
          },
          "lib/netcoreapp3.1/tr/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "tr"
          },
          "lib/netcoreapp3.1/zh-Hans/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/netcoreapp3.1/zh-Hans/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/netcoreapp3.1/zh-Hans/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/netcoreapp3.1/zh-Hant/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "zh-Hant"
          },
          "lib/netcoreapp3.1/zh-Hant/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "zh-Hant"
          },
          "lib/netcoreapp3.1/zh-Hant/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Newtonsoft.Json/13.0.1": {
        "runtime": {
          "lib/netstandard2.0/Newtonsoft.Json.dll": {
            "assemblyVersion": "13.0.0.0",
            "fileVersion": "13.0.1.25517"
          }
        }
      },
      "SDL3-CS/3.2.14.2": {
        "runtime": {
          "lib/net9.0/SDL3-CS.dll": {
            "assemblyVersion": "3.2.14.2",
            "fileVersion": "3.2.14.2"
          }
        }
      },
      "StyleCop.Analyzers.Unstable/1.2.0.556": {},
      "System.Reflection.Metadata/1.6.0": {},
      "xunit/2.9.2": {
        "dependencies": {
          "xunit.analyzers": "1.16.0",
          "xunit.assert": "2.9.2",
          "xunit.core": "2.9.2"
        }
      },
      "xunit.abstractions/2.0.3": {
        "runtime": {
          "lib/netstandard2.0/xunit.abstractions.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "0.0.0.0"
          }
        }
      },
      "xunit.analyzers/1.16.0": {},
      "xunit.assert/2.9.2": {
        "runtime": {
          "lib/net6.0/xunit.assert.dll": {
            "assemblyVersion": "2.9.2.0",
            "fileVersion": "2.9.2.0"
          }
        }
      },
      "xunit.core/2.9.2": {
        "dependencies": {
          "xunit.extensibility.core": "2.9.2",
          "xunit.extensibility.execution": "2.9.2"
        }
      },
      "xunit.extensibility.core/2.9.2": {
        "dependencies": {
          "xunit.abstractions": "2.0.3"
        },
        "runtime": {
          "lib/netstandard1.1/xunit.core.dll": {
            "assemblyVersion": "2.9.2.0",
            "fileVersion": "2.9.2.0"
          }
        }
      },
      "xunit.extensibility.execution/2.9.2": {
        "dependencies": {
          "xunit.extensibility.core": "2.9.2"
        },
        "runtime": {
          "lib/netstandard1.1/xunit.execution.dotnet.dll": {
            "assemblyVersion": "2.9.2.0",
            "fileVersion": "2.9.2.0"
          }
        }
      },
      "xunit.runner.visualstudio/2.8.2": {},
      "Night/1.0.0": {
        "dependencies": {
          "SDL3-CS": "3.2.14.2"
        },
        "runtime": {
          "Night.dll": {
            "assemblyVersion": "1.0.0.0",
            "fileVersion": "1.0.0.0"
          }
        }
      }
    }
  },
  "libraries": {
    "Night.Tests/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "coverlet.collector/6.0.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-bJShQ6uWRTQ100ZeyiMqcFlhP7WJ+bCuabUs885dJiBEzMsJMSFr7BOyeCw4rgvQokteGi5rKQTlkhfQPUXg2A==",
      "path": "coverlet.collector/6.0.2",
      "hashPath": "coverlet.collector.6.0.2.nupkg.sha512"
    },
    "Microsoft.CodeCoverage/17.12.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-4svMznBd5JM21JIG2xZKGNanAHNXplxf/kQDFfLHXQ3OnpJkayRK/TjacFjA+EYmoyuNXHo/sOETEfcYtAzIrA==",
      "path": "microsoft.codecoverage/17.12.0",
      "hashPath": "microsoft.codecoverage.17.12.0.nupkg.sha512"
    },
    "Microsoft.NET.Test.Sdk/17.12.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-kt/PKBZ91rFCWxVIJZSgVLk+YR+4KxTuHf799ho8WNiK5ZQpJNAEZCAWX86vcKrs+DiYjiibpYKdGZP6+/N17w==",
      "path": "microsoft.net.test.sdk/17.12.0",
      "hashPath": "microsoft.net.test.sdk.17.12.0.nupkg.sha512"
    },
    "Microsoft.TestPlatform.ObjectModel/17.12.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-TDqkTKLfQuAaPcEb3pDDWnh7b3SyZF+/W9OZvWFp6eJCIiiYFdSB6taE2I6tWrFw5ywhzOb6sreoGJTI6m3rSQ==",
      "path": "microsoft.testplatform.objectmodel/17.12.0",
      "hashPath": "microsoft.testplatform.objectmodel.17.12.0.nupkg.sha512"
    },
    "Microsoft.TestPlatform.TestHost/17.12.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-MiPEJQNyADfwZ4pJNpQex+t9/jOClBGMiCiVVFuELCMSX2nmNfvUor3uFVxNNCg30uxDP8JDYfPnMXQzsfzYyg==",
      "path": "microsoft.testplatform.testhost/17.12.0",
      "hashPath": "microsoft.testplatform.testhost.17.12.0.nupkg.sha512"
    },
    "Newtonsoft.Json/13.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ppPFpBcvxdsfUonNcvITKqLl3bqxWbDCZIzDWHzjpdAHRFfZe0Dw9HmA0+za13IdyrgJwpkDTDA9fHaxOrt20A==",
      "path": "newtonsoft.json/13.0.1",
      "hashPath": "newtonsoft.json.13.0.1.nupkg.sha512"
    },
    "SDL3-CS/3.2.14.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-wqWjIm2EP7PmXRQfwSxY4YJDSrXZ0QmolJMCJcs9KY4b3vYBdlwo0U4/olPMdBx6yRzqhN1nGJjmeC9OJT6L1g==",
      "path": "sdl3-cs/3.2.14.2",
      "hashPath": "sdl3-cs.3.2.14.2.nupkg.sha512"
    },
    "StyleCop.Analyzers.Unstable/1.2.0.556": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-zvn9Mqs/ox/83cpYPignI8hJEM2A93s2HkHs8HYMOAQW0PkampyoErAiIyKxgTLqbbad29HX/shv/6LGSjPJNQ==",
      "path": "stylecop.analyzers.unstable/1.2.0.556",
      "hashPath": "stylecop.analyzers.unstable.1.2.0.556.nupkg.sha512"
    },
    "System.Reflection.Metadata/1.6.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-COC1aiAJjCoA5GBF+QKL2uLqEBew4JsCkQmoHKbN3TlOZKa2fKLz5CpiRQKDz0RsAOEGsVKqOD5bomsXq/4STQ==",
      "path": "system.reflection.metadata/1.6.0",
      "hashPath": "system.reflection.metadata.1.6.0.nupkg.sha512"
    },
    "xunit/2.9.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-7LhFS2N9Z6Xgg8aE5lY95cneYivRMfRI8v+4PATa4S64D5Z/Plkg0qa8dTRHSiGRgVZ/CL2gEfJDE5AUhOX+2Q==",
      "path": "xunit/2.9.2",
      "hashPath": "xunit.2.9.2.nupkg.sha512"
    },
    "xunit.abstractions/2.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-pot1I4YOxlWjIb5jmwvvQNbTrZ3lJQ+jUGkGjWE3hEFM0l5gOnBWS+H3qsex68s5cO52g+44vpGzhAt+42vwKg==",
      "path": "xunit.abstractions/2.0.3",
      "hashPath": "xunit.abstractions.2.0.3.nupkg.sha512"
    },
    "xunit.analyzers/1.16.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-hptYM7vGr46GUIgZt21YHO4rfuBAQS2eINbFo16CV/Dqq+24Tp+P5gDCACu1AbFfW4Sp/WRfDPSK8fmUUb8s0Q==",
      "path": "xunit.analyzers/1.16.0",
      "hashPath": "xunit.analyzers.1.16.0.nupkg.sha512"
    },
    "xunit.assert/2.9.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-QkNBAQG4pa66cholm28AxijBjrmki98/vsEh4Sx5iplzotvPgpiotcxqJQMRC8d7RV7nIT8ozh97957hDnZwsQ==",
      "path": "xunit.assert/2.9.2",
      "hashPath": "xunit.assert.2.9.2.nupkg.sha512"
    },
    "xunit.core/2.9.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-O6RrNSdmZ0xgEn5kT927PNwog5vxTtKrWMihhhrT0Sg9jQ7iBDciYOwzBgP2krBEk5/GBXI18R1lKvmnxGcb4w==",
      "path": "xunit.core/2.9.2",
      "hashPath": "xunit.core.2.9.2.nupkg.sha512"
    },
    "xunit.extensibility.core/2.9.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Ol+KlBJz1x8BrdnhN2DeOuLrr1I/cTwtHCggL9BvYqFuVd/TUSzxNT5O0NxCIXth30bsKxgMfdqLTcORtM52yQ==",
      "path": "xunit.extensibility.core/2.9.2",
      "hashPath": "xunit.extensibility.core.2.9.2.nupkg.sha512"
    },
    "xunit.extensibility.execution/2.9.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-rKMpq4GsIUIJibXuZoZ8lYp5EpROlnYaRpwu9Zr0sRZXE7JqJfEEbCsUriZqB+ByXCLFBJyjkTRULMdC+U566g==",
      "path": "xunit.extensibility.execution/2.9.2",
      "hashPath": "xunit.extensibility.execution.2.9.2.nupkg.sha512"
    },
    "xunit.runner.visualstudio/2.8.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-vm1tbfXhFmjFMUmS4M0J0ASXz3/U5XvXBa6DOQUL3fEz4Vt6YPhv+ESCarx6M6D+9kJkJYZKCNvJMas1+nVfmQ==",
      "path": "xunit.runner.visualstudio/2.8.2",
      "hashPath": "xunit.runner.visualstudio.2.8.2.nupkg.sha512"
    },
    "Night/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    }
  }
}


================================================
File: tests/Night.Tests/bin/Debug/net9.0/Night.Tests.runtimeconfig.json
================================================
{
  "runtimeOptions": {
    "tfm": "net9.0",
    "framework": {
      "name": "Microsoft.NETCore.App",
      "version": "9.0.0"
    },
    "configProperties": {
      "System.Runtime.Serialization.EnableUnsafeBinaryFormatterSerialization": false
    }
  }
}


================================================
File: tests/Night.Tests/bin/Debug/net9.0/Night.Tests.xml
================================================
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Night.Tests</name>
    </assembly>
    <members>
        <member name="T:FilesystemTests">
            <summary>
            Tests for the <see cref="T:Night.Filesystem"/> class.
            </summary>
        </member>
        <member name="M:FilesystemTests.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FilesystemTests"/> class.
            Sets up the test environment by creating temporary directories and files.
            </summary>
        </member>
        <member name="M:FilesystemTests.Dispose">
            <summary>
            Disposes of the test resources by deleting the temporary directory.
            </summary>
        </member>
        <member name="M:FilesystemTests.GetInfo_NullPath_ReturnsNull">
            <summary>
            Tests that GetInfo returns null when the path is null.
            </summary>
        </member>
        <member name="M:FilesystemTests.GetInfo_EmptyPath_ReturnsNull">
            <summary>
            Tests that GetInfo returns null when the path is empty.
            </summary>
        </member>
        <member name="M:FilesystemTests.GetInfo_NonExistentPath_ReturnsNull">
            <summary>
            Tests that GetInfo returns null for a non-existent path.
            </summary>
        </member>
        <member name="M:FilesystemTests.GetInfo_ExistingFile_ReturnsFileInfo">
            <summary>
            Tests that GetInfo returns correct FileSystemInfo for an existing file.
            </summary>
        </member>
        <member name="M:FilesystemTests.GetInfo_ExistingFile_WithFilterTypeFile_ReturnsFileInfo">
            <summary>
            Tests that GetInfo returns correct FileSystemInfo for an existing file when filtered by type File.
            </summary>
        </member>
        <member name="M:FilesystemTests.GetInfo_ExistingFile_WithFilterTypeDirectory_ReturnsNull">
            <summary>
            Tests that GetInfo returns null for an existing file when filtered by type Directory.
            </summary>
        </member>
        <member name="M:FilesystemTests.GetInfo_ExistingDirectory_ReturnsDirectoryInfo">
            <summary>
            Tests that GetInfo returns correct FileSystemInfo for an existing directory.
            </summary>
        </member>
        <member name="M:FilesystemTests.GetInfo_ExistingDirectory_WithFilterTypeDirectory_ReturnsDirectoryInfo">
            <summary>
            Tests that GetInfo returns correct FileSystemInfo for an existing directory when filtered by type Directory.
            </summary>
        </member>
        <member name="M:FilesystemTests.GetInfo_ExistingDirectory_WithFilterTypeFile_ReturnsNull">
            <summary>
            Tests that GetInfo returns null for an existing directory when filtered by type File.
            </summary>
        </member>
        <member name="M:FilesystemTests.GetInfo_FileSymlink_ReturnsSymlinkInfo">
            <summary>
            Tests that GetInfo returns correct FileSystemInfo for a file symlink.
            </summary>
        </member>
        <member name="M:FilesystemTests.GetInfo_DirectorySymlink_ReturnsSymlinkInfo">
            <summary>
            Tests that GetInfo returns correct FileSystemInfo for a directory symlink.
            </summary>
        </member>
        <member name="M:FilesystemTests.GetInfo_PopulatesExistingObject_ValidPath">
            <summary>
            Tests that GetInfo correctly populates an existing FileSystemInfo object for a valid path.
            </summary>
        </member>
        <member name="M:FilesystemTests.GetInfo_PopulatesExistingObject_NonExistentPath_ReturnsNullAndDoesNotChangeObject">
            <summary>
            Tests that GetInfo returns null and does not modify an existing FileSystemInfo object for a non-existent path.
            </summary>
        </member>
        <member name="M:FilesystemTests.GetInfo_PopulatesExistingObjectWithFilter_ValidPathAndType">
            <summary>
            Tests that GetInfo correctly populates an existing FileSystemInfo object with a filter for a valid path and type.
            </summary>
        </member>
        <member name="M:FilesystemTests.GetInfo_PopulatesExistingObjectWithFilter_PathExistsButWrongType_ReturnsNull">
            <summary>
            Tests that GetInfo returns null when populating an existing object if the path exists but the type filter does not match.
            </summary>
        </member>
        <member name="M:FilesystemTests.ReadBytes_ExistingFile_ReturnsCorrectBytes">
            <summary>
            Tests that ReadBytes returns the correct byte array for an existing file.
            </summary>
        </member>
        <member name="M:FilesystemTests.ReadBytes_NonExistentFile_ThrowsFileNotFound">
            <summary>
            Tests that ReadBytes throws a FileNotFoundException for a non-existent file.
            </summary>
        </member>
        <member name="M:FilesystemTests.ReadText_ExistingFile_ReturnsCorrectText">
            <summary>
            Tests that ReadText returns the correct string for an existing file.
            </summary>
        </member>
        <member name="M:FilesystemTests.ReadText_NonExistentFile_ThrowsFileNotFound">
            <summary>
            Tests that ReadText throws a FileNotFoundException for a non-existent file.
            </summary>
        </member>
    </members>
</doc>



================================================
File: tests/Night.Tests/bin/Debug/net9.0/Night.xml
================================================
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Night</name>
    </assembly>
    <members>
        <member name="T:Night.AudioConfig">
            <summary>
            Configuration settings for the audio module.
            </summary>
        </member>
        <member name="P:Night.AudioConfig.MixWithSystem">
            <summary>
            Gets or sets a value indicating whether to mix game audio with system audio (true) or mute system audio (false).
            Relevant primarily for mobile platforms.
            </summary>
        </member>
        <member name="T:Night.ConfigurationManager">
            <summary>
            Manages the loading and accessing of game configuration settings.
            </summary>
        </member>
        <member name="P:Night.ConfigurationManager.CurrentConfig">
            <summary>
            Gets the currently loaded game configuration. If no configuration has been loaded, returns the default configuration.
            </summary>
        </member>
        <member name="P:Night.ConfigurationManager.IsLoaded">
            <summary>
            Gets a value indicating whether the configuration has been loaded.
            </summary>
        </member>
        <member name="M:Night.ConfigurationManager.LoadConfig(System.String)">
            <summary>
            Loads the game configuration from a 'config.json' file.
            If the file is not found, or if an error occurs during loading or parsing, default settings are used.
            The configuration is loaded only once; subsequent calls will not reload the configuration.
            </summary>
            <param name="gameDirectory">The directory to search for 'config.json'. If null, the application's base directory is used.</param>
        </member>
        <member name="T:Night.GameConfig">
            <summary>
            Represents the overall game configuration settings, typically loaded from a config.json file.
            </summary>
        </member>
        <member name="P:Night.GameConfig.Identity">
            <summary>
            Gets or sets the identity of the game. This is used for the save directory.
            </summary>
        </member>
        <member name="P:Night.GameConfig.AppendIdentity">
            <summary>
            Gets or sets a value indicating whether the game identity should be appended to the save directory path.
            </summary>
        </member>
        <member name="P:Night.GameConfig.Version">
            <summary>
            Gets or sets the LÖVE version this game targets. Currently informational.
            </summary>
        </member>
        <member name="P:Night.GameConfig.Console">
            <summary>
            Gets or sets a value indicating whether a console window should be attached (Windows only, currently placeholder).
            </summary>
        </member>
        <member name="P:Night.GameConfig.AccelerometerJoystick">
            <summary>
            Gets or sets a value indicating whether the accelerometer should be used as a joystick.
            </summary>
        </member>
        <member name="P:Night.GameConfig.ExternalStorage">
            <summary>
            Gets or sets a value indicating whether to request external storage access (Android only, currently placeholder).
            </summary>
        </member>
        <member name="P:Night.GameConfig.GammaCorrect">
            <summary>
            Gets or sets a value indicating whether gamma correction should be enabled.
            </summary>
        </member>
        <member name="P:Night.GameConfig.Audio">
            <summary>
            Gets or sets the audio module configuration.
            </summary>
        </member>
        <member name="P:Night.GameConfig.Window">
            <summary>
            Gets or sets the window module configuration.
            </summary>
        </member>
        <member name="P:Night.GameConfig.Modules">
            <summary>
            Gets or sets the configuration for enabling/disabling engine modules.
            </summary>
        </member>
        <member name="T:Night.ModulesConfig">
            <summary>
            Configuration for enabling/disabling engine modules (similar to t.modules in LÖVE's conf.lua).
            </summary>
        </member>
        <member name="P:Night.ModulesConfig.Audio">
            <summary>Gets or sets a value indicating whether the Audio module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Data">
            <summary>Gets or sets a value indicating whether the Data module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Event">
            <summary>Gets or sets a value indicating whether the Event module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Font">
            <summary>Gets or sets a value indicating whether the Font module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Graphics">
            <summary>Gets or sets a value indicating whether the Graphics module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Image">
            <summary>Gets or sets a value indicating whether the Image module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Joystick">
            <summary>Gets or sets a value indicating whether the Joystick module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Keyboard">
            <summary>Gets or sets a value indicating whether the Keyboard module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Math">
            <summary>Gets or sets a value indicating whether the Math module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Mouse">
            <summary>Gets or sets a value indicating whether the Mouse module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Physics">
            <summary>Gets or sets a value indicating whether the Physics module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Sound">
            <summary>Gets or sets a value indicating whether the Sound module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.System">
            <summary>Gets or sets a value indicating whether the System module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Timer">
            <summary>Gets or sets a value indicating whether the Timer module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Touch">
            <summary>Gets or sets a value indicating whether the Touch module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Video">
            <summary>Gets or sets a value indicating whether the Video module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.WindowModule">
            <summary>Gets or sets a value indicating whether the Window module is enabled.</summary>
        </member>
        <member name="P:Night.ModulesConfig.Thread">
            <summary>Gets or sets a value indicating whether the Thread module is enabled.</summary>
        </member>
        <member name="T:Night.WindowConfig">
            <summary>
            Configuration settings for the game window.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Title">
            <summary>
            Gets or sets the window title.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.IconPath">
            <summary>
            Gets or sets the path to the window icon file. Relative to the game's root directory.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Width">
            <summary>
            Gets or sets the window width in pixels.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Height">
            <summary>
            Gets or sets the window height in pixels.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.X">
            <summary>
            Gets or sets the x-coordinate of the window's top-left corner on the screen. Null for centered.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Y">
            <summary>
            Gets or sets the y-coordinate of the window's top-left corner on the screen. Null for centered.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.MinWidth">
            <summary>
            Gets or sets the minimum window width.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.MinHeight">
            <summary>
            Gets or sets the minimum window height.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Resizable">
            <summary>
            Gets or sets a value indicating whether the window is resizable.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Borderless">
            <summary>
            Gets or sets a value indicating whether the window has a border.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Fullscreen">
            <summary>
            Gets or sets a value indicating whether the window is fullscreen.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.FullscreenType">
            <summary>
            Gets or sets the type of fullscreen mode. Expected values: "desktop" or "exclusive".
            </summary>
        </member>
        <member name="P:Night.WindowConfig.VSync">
            <summary>
            Gets or sets a value indicating whether VSync is enabled.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.HighDPI">
            <summary>
            Gets or sets a value indicating whether to enable high-DPI mode if available.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.MSAA">
            <summary>
            Gets or sets the multisample anti-aliasing (MSAA) level.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Depth">
            <summary>
            Gets or sets the depth buffer bits. Null for system default.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Stencil">
            <summary>
            Gets or sets the stencil buffer bits. Null for system default.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.Display">
            <summary>
            Gets or sets the 1-indexed display number to use for the window.
            </summary>
        </member>
        <member name="P:Night.WindowConfig.UseDPIScale">
            <summary>
            Gets or sets a value indicating whether to use DPI scaling.
            </summary>
        </member>
        <member name="T:Night.ErrorHandlerDelegate">
            <summary>
            Defines the delegate for handling unhandled exceptions from game code.
            The error handler function will be called when an unhandled exception occurs
            within the game's Load, Update, Draw, or input callback methods.
            </summary>
            <param name="e">The exception that occurred.</param>
        </member>
        <member name="T:Night.Error">
            <summary>
            Manages the user-defined error handler.
            </summary>
        </member>
        <member name="P:Night.Error.CustomErrorHandler">
            <summary>
            Gets the currently set custom error handler. Returns null if no custom handler is set.
            This is used internally by the framework to invoke the handler.
            </summary>
        </member>
        <member name="M:Night.Error.SetHandler(Night.ErrorHandlerDelegate)">
            <summary>
            Sets a custom function to be called when an unhandled error occurs in game code.
            </summary>
            <param name="handler">The delegate to handle errors.</param>
        </member>
        <member name="M:Night.Error.GetHandler">
            <summary>
            Gets the currently set custom error handler.
            This is used internally by the framework.
            </summary>
            <returns>The custom error handler delegate, or null if none is set.</returns>
        </member>
        <member name="T:Night.FileMode">
            <summary>
            Represents the different modes you can open a File in.
            </summary>
        </member>
        <member name="F:Night.FileMode.Read">
            <summary>
            Open a file for read.
            </summary>
        </member>
        <member name="F:Night.FileMode.Write">
            <summary>
            Open a file for write.
            </summary>
        </member>
        <member name="F:Night.FileMode.Append">
            <summary>
            Open a file for append.
            </summary>
        </member>
        <member name="F:Night.FileMode.Close">
            <summary>
            Do not open a file (represents a closed file.)
            </summary>
        </member>
        <member name="F:Night.FileMode.W">
            <summary>
            Open a file for write.
            </summary>
        </member>
        <member name="F:Night.FileMode.R">
            <summary>
            Open a file for read.
            </summary>
        </member>
        <member name="F:Night.FileMode.A">
            <summary>
            Open a file for append.
            </summary>
        </member>
        <member name="F:Night.FileMode.C">
            <summary>
            Do not open a file (represents a closed file.)
            </summary>
        </member>
        <member name="T:Night.Filesystem">
            <summary>
            Provides basic file system operations.
            Inspired by Love2D's love.filesystem module.
            </summary>
        </member>
        <member name="M:Night.Filesystem.GetInfo(System.String,System.Nullable{Night.FileType})">
            <summary>
            Gets information about the specified file or directory.
            </summary>
            <param name="path">The file or directory path to check.</param>
            <param name="filterType">If supplied, this parameter causes getInfo to only return the info table if the item at the given path matches the specified file type.</param>
            <returns>A FileSystemInfo object containing information about the specified path, or null if nothing exists at the path or if it doesn't match the filterType.</returns>
        </member>
        <member name="M:Night.Filesystem.GetInfo(System.String,Night.FileSystemInfo)">
            <summary>
            Gets information about the specified file or directory and populates an existing FileSystemInfo object.
            </summary>
            <param name="path">The file or directory path to check.</param>
            <param name="info">A FileSystemInfo object which will be filled in.</param>
            <returns>The FileSystemInfo object given as an argument, filled with information, or null if nothing exists at the path.</returns>
        </member>
        <member name="M:Night.Filesystem.GetInfo(System.String,Night.FileType,Night.FileSystemInfo)">
            <summary>
            Gets information about the specified file or directory, filtered by type, and populates an existing FileSystemInfo object.
            </summary>
            <param name="path">The file or directory path to check.</param>
            <param name="filterType">Causes getInfo to only return the info table if the item at the given path matches the specified file type.</param>
            <param name="info">A FileSystemInfo object which will be filled in.</param>
            <returns>The FileSystemInfo object given as an argument, filled with information, or null if nothing exists at the path or if it doesn't match the filterType.</returns>
        </member>
        <member name="M:Night.Filesystem.ReadBytes(System.String)">
            <summary>
            Reads the entire content of a file into a byte array.
            </summary>
            <param name="path">The path to the file to read.</param>
            <returns>A byte array containing the contents of the file.</returns>
            <exception cref="T:System.IO.FileNotFoundException">Thrown if the file is not found.</exception>
        </member>
        <member name="M:Night.Filesystem.ReadText(System.String)">
            <summary>
            Reads the entire content of a file into a string.
            </summary>
            <param name="path">The path to the file to read.</param>
            <returns>A string containing the contents of the file.</returns>
            <exception cref="T:System.IO.FileNotFoundException">Thrown if the file is not found.</exception>
        </member>
        <member name="T:Night.FileSystemInfo">
            <summary>
            Contains information about a file or directory.
            </summary>
        </member>
        <member name="M:Night.FileSystemInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Night.FileSystemInfo"/> class.
            </summary>
        </member>
        <member name="M:Night.FileSystemInfo.#ctor(Night.FileType,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:Night.FileSystemInfo"/> class with specified values.
            </summary>
            <param name="type">The type of the file system object.</param>
            <param name="size">The size of the file in bytes.</param>
            <param name="modTime">The last modification time in Unix epoch seconds.</param>
        </member>
        <member name="P:Night.FileSystemInfo.Type">
            <summary>
            Gets or sets the type of the object at the path (file, directory, symlink, etc.).
            Default is None.
            </summary>
        </member>
        <member name="P:Night.FileSystemInfo.Size">
            <summary>
            Gets or sets the size in bytes of the file, or null if it can't be determined or not applicable (e.g. for a directory).
            </summary>
        </member>
        <member name="P:Night.FileSystemInfo.ModTime">
            <summary>
            Gets or sets the file's last modification time in seconds since the Unix epoch, or null if it can't be determined.
            </summary>
        </member>
        <member name="T:Night.FileType">
            <summary>
            Represents the type of a file system object.
            </summary>
        </member>
        <member name="F:Night.FileType.File">
            <summary>
            A regular file.
            </summary>
        </member>
        <member name="F:Night.FileType.Directory">
            <summary>
            A directory.
            </summary>
        </member>
        <member name="F:Night.FileType.Symlink">
            <summary>
            A symbolic link.
            </summary>
        </member>
        <member name="F:Night.FileType.Other">
            <summary>
            Other type (e.g., device, pipe).
            </summary>
        </member>
        <member name="F:Night.FileType.None">
            <summary>
            The path does not exist or its type cannot be determined.
            </summary>
        </member>
        <member name="T:Night.Framework">
            <summary>
            Manages the main game loop and coordination of game states.
            Provides the main entry point to run a game.
            </summary>
        </member>
        <member name="P:Night.Framework.IsInputInitialized">
            <summary>
            Gets a value indicating whether a flag indicating whether the core SDL systems, particularly for input,
            have been successfully initialized by this Framework's Run method.
            </summary>
        </member>
        <member name="M:Night.Framework.Run(Night.IGame)">
            <summary>
            Runs the game instance.
            The game loop will internally call Load, Update, and Draw methods
            on the provided game logic.
            This method will initialize and shut down required SDL subsystems.
            </summary>
            <param name="game">The game interface to run. Must implement <see cref="T:Night.IGame"/>.</param>
        </member>
        <member name="T:Night.Color">
            <summary>
            Represents a color with Red, Green, Blue, and Alpha components.
            Each component is a byte value ranging from 0 (no intensity) to 255 (full intensity).
            The Alpha component controls the transparency of the color, where 0 is fully transparent and 255 is fully opaque.
            </summary>
        </member>
        <member name="F:Night.Color.Black">
            <summary>Represents the color black.</summary>
        </member>
        <member name="F:Night.Color.White">
            <summary>Represents the color white.</summary>
        </member>
        <member name="F:Night.Color.Red">
            <summary>Represents the color red.</summary>
        </member>
        <member name="F:Night.Color.Green">
            <summary>Represents the color green.</summary>
        </member>
        <member name="F:Night.Color.Blue">
            <summary>Represents the color blue.</summary>
        </member>
        <member name="F:Night.Color.Yellow">
            <summary>Represents the color yellow.</summary>
        </member>
        <member name="F:Night.Color.Magenta">
            <summary>Represents the color magenta.</summary>
        </member>
        <member name="F:Night.Color.Cyan">
            <summary>Represents the color cyan.</summary>
        </member>
        <member name="F:Night.Color.Transparent">
            <summary>Represents a fully transparent color.</summary>
        </member>
        <member name="F:Night.Color.R">
            <summary>
            The red component of the color.
            </summary>
        </member>
        <member name="F:Night.Color.G">
            <summary>
            The green component of the color.
            </summary>
        </member>
        <member name="F:Night.Color.B">
            <summary>
            The blue component of the color.
            </summary>
        </member>
        <member name="F:Night.Color.A">
            <summary>
            The alpha (transparency) component of the color.
            </summary>
        </member>
        <member name="M:Night.Color.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Night.Color"/> struct.
            </summary>
            <param name="r">The red component (0-255).</param>
            <param name="g">The green component (0-255).</param>
            <param name="b">The blue component (0-255).</param>
            <param name="a">The alpha component (0-255). Defaults to 255 (fully opaque).</param>
        </member>
        <member name="T:Night.DrawMode">
            <summary>
            Specifies whether a shape should be drawn filled or as an outline.
            </summary>
        </member>
        <member name="F:Night.DrawMode.Fill">
            <summary>
            Draw the shape filled.
            </summary>
        </member>
        <member name="F:Night.DrawMode.Line">
            <summary>
            Draw the shape as an outline.
            </summary>
        </member>
        <member name="T:Night.Graphics">
            <summary>
            Provides functionality for drawing graphics.
            Mimics Love2D's love.graphics module.
            </summary>
        </member>
        <member name="M:Night.Graphics.NewImage(System.String)">
            <summary>
            Creates a new image (Sprite) from a file.
            </summary>
            <param name="filePath">The path to the image file.</param>
            <returns>A new Sprite object.</returns>
        </member>
        <member name="M:Night.Graphics.SetColor(Night.Color)">
            <summary>
            Sets the active color for drawing operations.
            </summary>
            <param name="color">The color to set.</param>
        </member>
        <member name="M:Night.Graphics.SetColor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the active color for drawing operations using individual RGBA components.
            </summary>
            <param name="r">The red component (0-255).</param>
            <param name="g">The green component (0-255).</param>
            <param name="b">The blue component (0-255).</param>
            <param name="a">The alpha component (0-255), defaults to 255 (opaque).</param>
        </member>
        <member name="M:Night.Graphics.Rectangle(Night.DrawMode,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a rectangle.
            </summary>
            <param name="mode">The drawing mode (Fill or Line).</param>
            <param name="x">The x-coordinate of the top-left corner.</param>
            <param name="y">The y-coordinate of the top-left corner.</param>
            <param name="width">The width of the rectangle.</param>
            <param name="height">The height of the rectangle.</param>
        </member>
        <member name="M:Night.Graphics.Line(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a line segment between two points.
            </summary>
            <param name="x1">The x-coordinate of the first point.</param>
            <param name="y1">The y-coordinate of the first point.</param>
            <param name="x2">The x-coordinate of the second point.</param>
            <param name="y2">The y-coordinate of the second point.</param>
        </member>
        <member name="M:Night.Graphics.Line(Night.PointF[])">
            <summary>
            Draws a sequence of connected line segments.
            </summary>
            <param name="points">An array of points to connect.</param>
        </member>
        <member name="M:Night.Graphics.Polygon(Night.DrawMode,Night.PointF[])">
            <summary>
            Draws a polygon.
            </summary>
            <param name="mode">The drawing mode (Fill or Line).</param>
            <param name="vertices">An array of points representing the polygon's vertices.</param>
        </member>
        <member name="M:Night.Graphics.Circle(Night.DrawMode,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Draws a circle.
            </summary>
            <param name="mode">The drawing mode (Fill or Line).</param>
            <param name="x">The x-coordinate of the circle's center.</param>
            <param name="y">The y-coordinate of the circle's center.</param>
            <param name="radius">The radius of the circle.</param>
            <param name="segments">The number of segments used to draw the circle (more segments means a smoother circle).</param>
        </member>
        <member name="M:Night.Graphics.Draw(Night.Sprite,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a sprite to the screen.
            </summary>
            <param name="sprite">The sprite to draw.</param>
            <param name="x">The x-coordinate to draw the sprite at.</param>
            <param name="y">The y-coordinate to draw the sprite at.</param>
            <param name="rotation">The rotation of the sprite (in radians).</param>
            <param name="scaleX">The horizontal scale factor.</param>
            <param name="scaleY">The vertical scale factor.</param>
            <param name="offsetX">The x-offset for the sprite's origin.</param>
            <param name="offsetY">The y-offset for the sprite's origin.</param>
        </member>
        <member name="M:Night.Graphics.Clear(Night.Color)">
            <summary>
            Clears the screen to a specific color.
            </summary>
            <param name="color">The color to clear the screen with.</param>
        </member>
        <member name="M:Night.Graphics.Present">
            <summary>
            Presents the drawn graphics to the screen (swaps buffers).
            </summary>
        </member>
        <member name="T:Night.ImageData">
            <summary>
            Represents raw pixel data of an image.
            </summary>
        </member>
        <member name="M:Night.ImageData.#ctor(System.Int32,System.Int32,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Night.ImageData"/> class.
            </summary>
            <param name="width">The width of the image.</param>
            <param name="height">The height of the image.</param>
            <param name="data">The pixel data (assumed RGBA, 4 bytes per pixel).</param>
        </member>
        <member name="P:Night.ImageData.Width">
            <summary>
            Gets the width of the image in pixels.
            </summary>
        </member>
        <member name="P:Night.ImageData.Height">
            <summary>
            Gets the height of the image in pixels.
            </summary>
        </member>
        <member name="P:Night.ImageData.Data">
            <summary>
            Gets the raw pixel data.
            Assumed to be in RGBA format, 4 bytes per pixel.
            The data is stored as a copy of the input array.
            </summary>
        </member>
        <member name="T:Night.PointF">
            <summary>
            Represents a 2D point with floating-point coordinates.
            </summary>
        </member>
        <member name="F:Night.PointF.X">
            <summary>
            The X-coordinate of the point.
            </summary>
        </member>
        <member name="F:Night.PointF.Y">
            <summary>
            The Y-coordinate of the point.
            </summary>
        </member>
        <member name="M:Night.PointF.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Night.PointF"/> struct.
            </summary>
            <param name="x">The X-coordinate.</param>
            <param name="y">The Y-coordinate.</param>
        </member>
        <member name="T:Night.Rectangle">
            <summary>
            Represents a rectangle with position (X, Y) and dimensions (Width, Height).
            </summary>
        </member>
        <member name="F:Night.Rectangle.X">
            <summary>
            The X-coordinate of the top-left corner of the rectangle.
            </summary>
        </member>
        <member name="F:Night.Rectangle.Y">
            <summary>
            The Y-coordinate of the top-left corner of the rectangle.
            </summary>
        </member>
        <member name="F:Night.Rectangle.Width">
            <summary>
            The width of the rectangle.
            </summary>
        </member>
        <member name="F:Night.Rectangle.Height">
            <summary>
            The height of the rectangle.
            </summary>
        </member>
        <member name="M:Night.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Night.Rectangle"/> struct.
            </summary>
            <param name="x">The X-coordinate of the top-left corner.</param>
            <param name="y">The Y-coordinate of the top-left corner.</param>
            <param name="width">The width of the rectangle.</param>
            <param name="height">The height of the rectangle.</param>
        </member>
        <member name="T:Night.Sprite">
            <summary>
            Represents a 2D sprite, typically an image loaded into a texture.
            </summary>
        </member>
        <member name="M:Night.Sprite.#ctor(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Night.Sprite"/> class.
            </summary>
            <param name="texture">The SDL texture handle.</param>
            <param name="width">The width of the texture.</param>
            <param name="height">The height of the texture.</param>
        </member>
        <member name="P:Night.Sprite.Texture">
            <summary>
            Gets the SDL texture handle.
            </summary>
        </member>
        <member name="P:Night.Sprite.Width">
            <summary>
            Gets the width of the sprite in pixels.
            </summary>
        </member>
        <member name="P:Night.Sprite.Height">
            <summary>
            Gets the height of the sprite in pixels.
            </summary>
        </member>
        <member name="T:Night.IGame">
            <summary>
            Interface for a game that can be run by the Night Engine.
            Game developers will implement this interface in their main game class.
            </summary>
        </member>
        <member name="M:Night.IGame.Load">
            <summary>
            Called exactly once when the game starts for loading resources.
            </summary>
        </member>
        <member name="M:Night.IGame.Update(System.Double)">
            <summary>
            Callback function used to update the state of the game every frame.
            </summary>
            <param name="deltaTime">The time elapsed since the last frame, in seconds.</param>
        </member>
        <member name="M:Night.IGame.Draw">
            <summary>
            Callback function used to draw on the screen every frame.
            </summary>
        </member>
        <member name="M:Night.IGame.KeyPressed(Night.KeySymbol,Night.KeyCode,System.Boolean)">
            <summary>
            Callback function triggered when a key is pressed.
            </summary>
            <param name="key">The logical key symbol that was pressed.</param>
            <param name="scancode">The physical key (scancode) that was pressed.</param>
            <param name="isRepeat">True if this is a key repeat event, false otherwise.</param>
        </member>
        <member name="M:Night.IGame.KeyReleased(Night.KeySymbol,Night.KeyCode)">
            <summary>
            Callback function triggered when a key is released.
            </summary>
            <param name="key">The logical key symbol that was released.</param>
            <param name="scancode">The physical key (scancode) that was released.</param>
        </member>
        <member name="M:Night.IGame.MousePressed(System.Int32,System.Int32,Night.MouseButton,System.Boolean,System.Int32)">
            <summary>
            Callback function triggered when a mouse button is pressed.
            </summary>
            <param name="x">The x-coordinate of the mouse cursor relative to the window.</param>
            <param name="y">The y-coordinate of the mouse cursor relative to the window.</param>
            <param name="button">The mouse button that was pressed.</param>
            <param name="istouch">True if the event was generated by a touch input device, false otherwise.</param>
            <param name="presses">The number of clicks (1 for single-click, 2 for double-click, etc.).</param>
        </member>
        <member name="M:Night.IGame.MouseReleased(System.Int32,System.Int32,Night.MouseButton,System.Boolean,System.Int32)">
            <summary>
            Callback function triggered when a mouse button is released.
            </summary>
            <param name="x">The x-coordinate of the mouse cursor relative to the window.</param>
            <param name="y">The y-coordinate of the mouse cursor relative to the window.</param>
            <param name="button">The mouse button that was released.</param>
            <param name="istouch">True if the event was generated by a touch input device, false otherwise.</param>
            <param name="presses">The number of clicks (typically 1 for release, but may vary).</param>
        </member>
        <member name="T:Night.Keyboard">
            <summary>
            Provides an interface to the user's keyboard.
            </summary>
        </member>
        <member name="M:Night.Keyboard.IsDown(Night.KeyCode)">
            <summary>
            Checks whether a certain key is down.
            </summary>
            <param name="key">The key to check.</param>
            <returns>True if the key is down, false otherwise.</returns>
        </member>
        <member name="T:Night.KeyCode">
            <summary>
            Represents keyboard scancodes. Values correspond to SDL_Scancode.
            </summary>
            <remarks>
            See SDL_scancode.h for the full list of SDL_Scancode values.
            This enum maps directly to SDL_Scancode values, representing the physical key on the keyboard.
            </remarks>
        </member>
        <member name="F:Night.KeyCode.Unknown">
            <summary>An unknown scancode.</summary>
        </member>
        <member name="F:Night.KeyCode.A">
            <summary>The 'A' key.</summary>
        </member>
        <member name="F:Night.KeyCode.B">
            <summary>The 'B' key.</summary>
        </member>
        <member name="F:Night.KeyCode.C">
            <summary>The 'C' key.</summary>
        </member>
        <member name="F:Night.KeyCode.D">
            <summary>The 'D' key.</summary>
        </member>
        <member name="F:Night.KeyCode.E">
            <summary>The 'E' key.</summary>
        </member>
        <member name="F:Night.KeyCode.F">
            <summary>The 'F' key.</summary>
        </member>
        <member name="F:Night.KeyCode.G">
            <summary>The 'G' key.</summary>
        </member>
        <member name="F:Night.KeyCode.H">
            <summary>The 'H' key.</summary>
        </member>
        <member name="F:Night.KeyCode.I">
            <summary>The 'I' key.</summary>
        </member>
        <member name="F:Night.KeyCode.J">
            <summary>The 'J' key.</summary>
        </member>
        <member name="F:Night.KeyCode.K">
            <summary>The 'K' key.</summary>
        </member>
        <member name="F:Night.KeyCode.L">
            <summary>The 'L' key.</summary>
        </member>
        <member name="F:Night.KeyCode.M">
            <summary>The 'M' key.</summary>
        </member>
        <member name="F:Night.KeyCode.N">
            <summary>The 'N' key.</summary>
        </member>
        <member name="F:Night.KeyCode.O">
            <summary>The 'O' key.</summary>
        </member>
        <member name="F:Night.KeyCode.P">
            <summary>The 'P' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Q">
            <summary>The 'Q' key.</summary>
        </member>
        <member name="F:Night.KeyCode.R">
            <summary>The 'R' key.</summary>
        </member>
        <member name="F:Night.KeyCode.S">
            <summary>The 'S' key.</summary>
        </member>
        <member name="F:Night.KeyCode.T">
            <summary>The 'T' key.</summary>
        </member>
        <member name="F:Night.KeyCode.U">
            <summary>The 'U' key.</summary>
        </member>
        <member name="F:Night.KeyCode.V">
            <summary>The 'V' key.</summary>
        </member>
        <member name="F:Night.KeyCode.W">
            <summary>The 'W' key.</summary>
        </member>
        <member name="F:Night.KeyCode.X">
            <summary>The 'X' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Y">
            <summary>The 'Y' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Z">
            <summary>The 'Z' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha1">
            <summary>The '1' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha2">
            <summary>The '2' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha3">
            <summary>The '3' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha4">
            <summary>The '4' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha5">
            <summary>The '5' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha6">
            <summary>The '6' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha7">
            <summary>The '7' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha8">
            <summary>The '8' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha9">
            <summary>The '9' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Alpha0">
            <summary>The '0' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Return">
            <summary>The Return/Enter key.</summary>
        </member>
        <member name="F:Night.KeyCode.Escape">
            <summary>The Escape key.</summary>
        </member>
        <member name="F:Night.KeyCode.Backspace">
            <summary>The Backspace key.</summary>
        </member>
        <member name="F:Night.KeyCode.Tab">
            <summary>The Tab key.</summary>
        </member>
        <member name="F:Night.KeyCode.Space">
            <summary>The Space bar.</summary>
        </member>
        <member name="F:Night.KeyCode.Minus">
            <summary>The Minus '-' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Equals">
            <summary>The Equals '=' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Leftbracket">
            <summary>The Left Bracket '[' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Rightbracket">
            <summary>The Right Bracket ']' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Backslash">
            <summary>The Backslash '' key.</summary>
        </member>
        <member name="F:Night.KeyCode.NonUshash">
            <summary>The Non-US Hash key (e.g., UK pound sign).</summary>
        </member>
        <member name="F:Night.KeyCode.Semicolon">
            <summary>The Semicolon ';' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Apostrophe">
            <summary>The Apostrophe ''' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Grave">
            <summary>The Grave Accent (Backtick) '`' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Comma">
            <summary>The Comma ',' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Period">
            <summary>The Period '.' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Slash">
            <summary>The Slash '/' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Capslock">
            <summary>The Caps Lock key.</summary>
        </member>
        <member name="F:Night.KeyCode.F1">
            <summary>The F1 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F2">
            <summary>The F2 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F3">
            <summary>The F3 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F4">
            <summary>The F4 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F5">
            <summary>The F5 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F6">
            <summary>The F6 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F7">
            <summary>The F7 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F8">
            <summary>The F8 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F9">
            <summary>The F9 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F10">
            <summary>The F10 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F11">
            <summary>The F11 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F12">
            <summary>The F12 key.</summary>
        </member>
        <member name="F:Night.KeyCode.Printscreen">
            <summary>The Print Screen key.</summary>
        </member>
        <member name="F:Night.KeyCode.Scrolllock">
            <summary>The Scroll Lock key.</summary>
        </member>
        <member name="F:Night.KeyCode.Pause">
            <summary>The Pause key.</summary>
        </member>
        <member name="F:Night.KeyCode.Insert">
            <summary>The Insert key.</summary>
        </member>
        <member name="F:Night.KeyCode.Home">
            <summary>The Home key.</summary>
        </member>
        <member name="F:Night.KeyCode.Pageup">
            <summary>The Page Up key.</summary>
        </member>
        <member name="F:Night.KeyCode.Delete">
            <summary>The Delete key.</summary>
        </member>
        <member name="F:Night.KeyCode.End">
            <summary>The End key.</summary>
        </member>
        <member name="F:Night.KeyCode.Pagedown">
            <summary>The Page Down key.</summary>
        </member>
        <member name="F:Night.KeyCode.Right">
            <summary>The Right Arrow key.</summary>
        </member>
        <member name="F:Night.KeyCode.Left">
            <summary>The Left Arrow key.</summary>
        </member>
        <member name="F:Night.KeyCode.Down">
            <summary>The Down Arrow key.</summary>
        </member>
        <member name="F:Night.KeyCode.Up">
            <summary>The Up Arrow key.</summary>
        </member>
        <member name="F:Night.KeyCode.NumlockClear">
            <summary>The Num Lock or Clear key.</summary>
        </member>
        <member name="F:Night.KeyCode.KpDivide">
            <summary>The Keypad Divide '/' key.</summary>
        </member>
        <member name="F:Night.KeyCode.KpMultiply">
            <summary>The Keypad Multiply '*' key.</summary>
        </member>
        <member name="F:Night.KeyCode.KpMinus">
            <summary>The Keypad Minus '-' key.</summary>
        </member>
        <member name="F:Night.KeyCode.KpPlus">
            <summary>The Keypad Plus '+' key.</summary>
        </member>
        <member name="F:Night.KeyCode.KpEnter">
            <summary>The Keypad Enter key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp1">
            <summary>The Keypad '1' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp2">
            <summary>The Keypad '2' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp3">
            <summary>The Keypad '3' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp4">
            <summary>The Keypad '4' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp5">
            <summary>The Keypad '5' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp6">
            <summary>The Keypad '6' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp7">
            <summary>The Keypad '7' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp8">
            <summary>The Keypad '8' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp9">
            <summary>The Keypad '9' key.</summary>
        </member>
        <member name="F:Night.KeyCode.Kp0">
            <summary>The Keypad '0' key.</summary>
        </member>
        <member name="F:Night.KeyCode.KpPeriod">
            <summary>The Keypad Period '.' key.</summary>
        </member>
        <member name="F:Night.KeyCode.NonUsbackslash">
            <summary>The Non-US Backslash key.</summary>
        </member>
        <member name="F:Night.KeyCode.Application">
            <summary>The Application key (context menu).</summary>
        </member>
        <member name="F:Night.KeyCode.Power">
            <summary>The Power key.</summary>
        </member>
        <member name="F:Night.KeyCode.KpEquals">
            <summary>The Keypad Equals '=' key.</summary>
        </member>
        <member name="F:Night.KeyCode.F13">
            <summary>The F13 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F14">
            <summary>The F14 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F15">
            <summary>The F15 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F16">
            <summary>The F16 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F17">
            <summary>The F17 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F18">
            <summary>The F18 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F19">
            <summary>The F19 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F20">
            <summary>The F20 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F21">
            <summary>The F21 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F22">
            <summary>The F22 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F23">
            <summary>The F23 key.</summary>
        </member>
        <member name="F:Night.KeyCode.F24">
            <summary>The F24 key.</summary>
        </member>
        <member name="F:Night.KeyCode.Execute">
            <summary>The Execute key.</summary>
        </member>
        <member name="F:Night.KeyCode.Help">
            <summary>The Help key.</summary>
        </member>
        <member name="F:Night.KeyCode.Menu">
            <summary>The Menu key.</summary>
        </member>
        <member name="F:Night.KeyCode.Select">
            <summary>The Select key.</summary>
        </member>
        <member name="F:Night.KeyCode.Stop">
            <summary>The Stop key.</summary>
        </member>
        <member name="F:Night.KeyCode.Again">
            <summary>The Again key.</summary>
        </member>
        <member name="F:Night.KeyCode.Undo">
            <summary>The Undo key.</summary>
        </member>
        <member name="F:Night.KeyCode.Cut">
            <summary>The Cut key.</summary>
        </member>
        <member name="F:Night.KeyCode.Copy">
            <summary>The Copy key.</summary>
        </member>
        <member name="F:Night.KeyCode.Paste">
            <summary>The Paste key.</summary>
        </member>
        <member name="F:Night.KeyCode.Find">
            <summary>The Find key.</summary>
        </member>
        <member name="F:Night.KeyCode.Mute">
            <summary>The Mute key.</summary>
        </member>
        <member name="F:Night.KeyCode.VolumeUp">
            <summary>The Volume Up key.</summary>
        </member>
        <member name="F:Night.KeyCode.VolumeDown">
            <summary>The Volume Down key.</summary>
        </member>
        <member name="F:Night.KeyCode.KpComma">
            <summary>The Keypad Comma ',' key.</summary>
        </member>
        <member name="F:Night.KeyCode.LCtrl">
            <summary>The Left Control key.</summary>
        </member>
        <member name="F:Night.KeyCode.LShift">
            <summary>The Left Shift key.</summary>
        </member>
        <member name="F:Night.KeyCode.LAlt">
            <summary>The Left Alt key.</summary>
        </member>
        <member name="F:Night.KeyCode.LGUI">
            <summary>The Left GUI key (Windows/Command/Meta key).</summary>
        </member>
        <member name="F:Night.KeyCode.RCtrl">
            <summary>The Right Control key.</summary>
        </member>
        <member name="F:Night.KeyCode.RShift">
            <summary>The Right Shift key.</summary>
        </member>
        <member name="F:Night.KeyCode.RAlt">
            <summary>The Right Alt key.</summary>
        </member>
        <member name="F:Night.KeyCode.RGUI">
            <summary>The Right GUI key (Windows/Command/Meta key).</summary>
        </member>
        <member name="F:Night.KeyCode.Mode">
            <summary>The Mode Switch key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaPlay">
            <summary>The Media Play key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaPause">
            <summary>The Media Pause key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaRecord">
            <summary>The Media Record key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaFastForward">
            <summary>The Media Fast Forward key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaRewind">
            <summary>The Media Rewind key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaNextTrack">
            <summary>The Media Next Track key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaPreviousTrack">
            <summary>The Media Previous Track key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaStop">
            <summary>The Media Stop key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaEject">
            <summary>The Media Eject key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaPlayPause">
            <summary>The Media Play/Pause key.</summary>
        </member>
        <member name="F:Night.KeyCode.MediaSelect">
            <summary>The Media Select key.</summary>
        </member>
        <member name="F:Night.KeyCode.AppSearch">
            <summary>The Application Search key.</summary>
        </member>
        <member name="F:Night.KeyCode.AppHome">
            <summary>The Application Home key.</summary>
        </member>
        <member name="F:Night.KeyCode.AppBack">
            <summary>The Application Back key.</summary>
        </member>
        <member name="F:Night.KeyCode.AppForward">
            <summary>The Application Forward key.</summary>
        </member>
        <member name="F:Night.KeyCode.AppStop">
            <summary>The Application Stop key.</summary>
        </member>
        <member name="F:Night.KeyCode.AppRefresh">
            <summary>The Application Refresh key.</summary>
        </member>
        <member name="F:Night.KeyCode.AppBookmarks">
            <summary>The Application Bookmarks key.</summary>
        </member>
        <member name="T:Night.KeySymbol">
            <summary>
            Represents logical key symbols. Values correspond to SDL_Keycode.
            </summary>
            <remarks>
            This enum maps to SDL_Keycode values, representing the symbol produced by a key press
            under the current keyboard layout.
            </remarks>
        </member>
        <member name="F:Night.KeySymbol.Unknown">
            <summary>An unknown key symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.A">
            <summary>The 'A' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.B">
            <summary>The 'B' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.C">
            <summary>The 'C' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.D">
            <summary>The 'D' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.E">
            <summary>The 'E' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F">
            <summary>The 'F' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.G">
            <summary>The 'G' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.H">
            <summary>The 'H' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.I">
            <summary>The 'I' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.J">
            <summary>The 'J' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.K">
            <summary>The 'K' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.L">
            <summary>The 'L' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.M">
            <summary>The 'M' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.N">
            <summary>The 'N' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.O">
            <summary>The 'O' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.P">
            <summary>The 'P' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Q">
            <summary>The 'Q' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.R">
            <summary>The 'R' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.S">
            <summary>The 'S' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.T">
            <summary>The 'T' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.U">
            <summary>The 'U' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.V">
            <summary>The 'V' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.W">
            <summary>The 'W' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.X">
            <summary>The 'X' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Y">
            <summary>The 'Y' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Z">
            <summary>The 'Z' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha0">
            <summary>The '0' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha1">
            <summary>The '1' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha2">
            <summary>The '2' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha3">
            <summary>The '3' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha4">
            <summary>The '4' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha5">
            <summary>The '5' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha6">
            <summary>The '6' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha7">
            <summary>The '7' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha8">
            <summary>The '8' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Alpha9">
            <summary>The '9' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Return">
            <summary>The Return/Enter symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Escape">
            <summary>The Escape symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Backspace">
            <summary>The Backspace symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Tab">
            <summary>The Tab symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Space">
            <summary>The Space symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Minus">
            <summary>The Minus '-' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Equals">
            <summary>The Equals '=' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Leftbracket">
            <summary>The Left Bracket '[' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Rightbracket">
            <summary>The Right Bracket ']' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Backslash">
            <summary>The Backslash '' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Semicolon">
            <summary>The Semicolon ';' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Apostrophe">
            <summary>The Apostrophe ''' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Grave">
            <summary>The Grave Accent (Backtick) '`' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Comma">
            <summary>The Comma ',' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Period">
            <summary>The Period '.' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Slash">
            <summary>The Slash '/' symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F1">
            <summary>The F1 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F2">
            <summary>The F2 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F3">
            <summary>The F3 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F4">
            <summary>The F4 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F5">
            <summary>The F5 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F6">
            <summary>The F6 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F7">
            <summary>The F7 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F8">
            <summary>The F8 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F9">
            <summary>The F9 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F10">
            <summary>The F10 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F11">
            <summary>The F11 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.F12">
            <summary>The F12 symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Right">
            <summary>The Right Arrow symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Left">
            <summary>The Left Arrow symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Down">
            <summary>The Down Arrow symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.Up">
            <summary>The Up Arrow symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.LCtrl">
            <summary>The Left Control symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.LShift">
            <summary>The Left Shift symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.LAlt">
            <summary>The Left Alt symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.LGUI">
            <summary>The Left GUI symbol (Windows/Command/Meta key).</summary>
        </member>
        <member name="F:Night.KeySymbol.RCtrl">
            <summary>The Right Control symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.RShift">
            <summary>The Right Shift symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.RAlt">
            <summary>The Right Alt symbol.</summary>
        </member>
        <member name="F:Night.KeySymbol.RGUI">
            <summary>The Right GUI symbol (Windows/Command/Meta key).</summary>
        </member>
        <member name="T:Night.Mouse">
            <summary>
            Provides an interface to the user's mouse.
            </summary>
        </member>
        <member name="M:Night.Mouse.IsDown(Night.MouseButton)">
            <summary>
            Checks whether a certain mouse button is down.
            This function does not detect mouse wheel scrolling.
            </summary>
            <param name="button">The index of a button to check. 1 is the primary mouse button, 2 is the secondary mouse button, 3 is the middle button, 4 is the X1 button (typically "back"), and 5 is the X2 button (typically "forward").</param>
            <returns>True if the button is down, false otherwise.</returns>
        </member>
        <member name="M:Night.Mouse.GetPosition">
            <summary>
            Gets the current position of the mouse cursor in the window.
            </summary>
            <returns>A tuple (int X, int Y) representing the mouse cursor coordinates.</returns>
        </member>
        <member name="M:Night.Mouse.SetVisible(System.Boolean)">
            <summary>
            Sets the visibility of the mouse cursor.
            </summary>
            <param name="visible">True to show the cursor, false to hide it.</param>
        </member>
        <member name="M:Night.Mouse.SetGrabbed(System.Boolean)">
            <summary>
            Grabs the mouse, confining it to the window.
            </summary>
            <param name="grabbed">True to grab the mouse, false to release it.</param>
        </member>
        <member name="M:Night.Mouse.SetRelativeMode(System.Boolean)">
            <summary>
            Sets whether relative mouse mode is enabled for the current window.
            In relative mode, the cursor is hidden and mouse motion is reported as relative to the last position.
            </summary>
            <param name="enabled">True to enable relative mode, false to disable it.</param>
        </member>
        <member name="T:Night.MouseButton">
            <summary>
            Represents mouse buttons. Values correspond to SDL_MouseButtonFlags/
            SDL3.SDL.Button* constants.
            (e.g., Left is 1, Middle is 2, etc.)
            </summary>
        </member>
        <member name="F:Night.MouseButton.Unknown">
            <summary>
            An unknown or unspecified mouse button.
            </summary>
        </member>
        <member name="F:Night.MouseButton.Left">
            <summary>
            The left mouse button.
            </summary>
        </member>
        <member name="F:Night.MouseButton.Middle">
            <summary>
            The middle mouse button.
            </summary>
        </member>
        <member name="F:Night.MouseButton.Right">
            <summary>
            The right mouse button.
            </summary>
        </member>
        <member name="F:Night.MouseButton.X1">
            <summary>
            The first extra mouse button (often "back").
            </summary>
        </member>
        <member name="F:Night.MouseButton.X2">
            <summary>
            The second extra mouse button (often "forward").
            </summary>
        </member>
        <member name="T:Night.NightSDL">
            <summary>
            Provides direct access to some SDL3 functions using SDL3-CS bindings.
            </summary>
        </member>
        <member name="M:Night.NightSDL.GetVersion">
            <summary>
            Get the version of SDL that is linked against the Night Engine.
            Calls the SDL3-CS binding for SDL_GetVersion() and returns a packed int.
            https://wiki.libsdl.org/SDL3/SDL_GetVersion.
            </summary>
            <returns>A string representing the SDL version "major.minor.patch".</returns>
        </member>
        <member name="M:Night.NightSDL.GetError">
            <summary>
            Retrieve a message about the last error that occurred on the current thread.
            Calls the SDL3-CS binding for SDL_GetError() and returns a string.
            https://wiki.libsdl.org/SDL3/SDL_GetError.
            </summary>
            <returns>Returns a message with information about the specific error that occurred, or an empty string if there hasn't been an error message set since the last call to SDL_ClearError().</returns>
        </member>
        <member name="T:Night.System">
            <summary>
            Provides access to system-level information and functions.
            </summary>
        </member>
        <member name="M:Night.System.SetClipboardText(System.String)">
            <summary>
            Puts text in the system's clipboard.
            </summary>
            <param name="text">The new text to hold in the system's clipboard.</param>
            <returns>True if the operation was successful, false otherwise.</returns>
        </member>
        <member name="T:Night.Timer">
            <summary>
            Provides high-resolution timing functionality.
            </summary>
        </member>
        <member name="P:Night.Timer.CurrentFPS">
            <summary>
            Gets or sets the current frames per second. Updated by the framework.
            </summary>
        </member>
        <member name="P:Night.Timer.CurrentDelta">
            <summary>
            Gets or sets the delta time of the current frame. Updated by <see cref="M:Night.Timer.Step"/>.
            </summary>
        </member>
        <member name="P:Night.Timer.CurrentAverageDelta">
            <summary>
            Gets or sets the average delta time over recent frames. Updated by the framework.
            </summary>
        </member>
        <member name="P:Night.Timer.LastStepTime">
            <summary>
            Gets or sets the timestamp of the last call to <see cref="M:Night.Timer.Step"/>. Initialized by <see cref="M:Night.Timer.Initialize"/>.
            </summary>
        </member>
        <member name="P:Night.Timer.PerformanceFrequency">
            <summary>
            Gets the performance counter frequency. Initialized by <see cref="M:Night.Timer.Initialize"/>.
            </summary>
        </member>
        <member name="M:Night.Timer.GetTime">
            <summary>
            Gets the time elapsed since the Timer module was loaded, in seconds.
            </summary>
            <returns>The time in seconds. Given as a decimal, accurate to the microsecond.</returns>
        </member>
        <member name="M:Night.Timer.GetFPS">
            <summary>
            Gets the current frames per second (FPS).
            </summary>
            <returns>The current FPS.</returns>
        </member>
        <member name="M:Night.Timer.GetDelta">
            <summary>
            Gets the time elapsed since the last frame, in seconds.
            This is the same value passed to. <code>IGame.Update(float deltaTime)</code>.
            </summary>
            <returns>The delta time in seconds.</returns>
        </member>
        <member name="M:Night.Timer.GetAverageDelta">
            <summary>
            Returns the average delta time (seconds per frame) over the last second.
            </summary>
            <returns>The average delta time over the last second.</returns>
        </member>
        <member name="M:Night.Timer.Sleep(System.Double)">
            <summary>
            Pauses the current thread for the specified amount of time.
            This function causes the entire thread to pause. Graphics will not draw,
            input events will not trigger, code will not run, and the window will
            be unresponsive if you use this in the main game thread.
            </summary>
            <param name="seconds">Seconds to sleep for.</param>
        </member>
        <member name="M:Night.Timer.Step">
            <summary>
            Measures the time between the last call to this function and the current one.
            Calling this function updates the value returned by <see cref="M:Night.Timer.GetDelta"/>.
            This is typically called once per frame by the game loop to determine the delta time for that frame.
            </summary>
            <returns>The time passed (in seconds) since the last call to Step().</returns>
        </member>
        <member name="M:Night.Timer.Initialize">
            <summary>
            Initializes essential timer values. Must be called once by the framework
            before the game loop begins and after SDL has been initialized.
            </summary>
        </member>
        <member name="T:Night.VersionInfo">
            <summary>
            Provides information about the Night library, such as its version.
            </summary>
        </member>
        <member name="F:Night.VersionInfo.Version">
            <summary>
            Gets the full semantic version string (e.g., "1.0.0", "1.2.3-beta.1").
            This value is updated by the GitHub release Action.
            </summary>
        </member>
        <member name="F:Night.VersionInfo.CodeName">
            <summary>
            Gets the developer-assigned codename for the current version.
            This value is manually updated by the developer.
            </summary>
        </member>
        <member name="M:Night.VersionInfo.GetVersion">
            <summary>
            Gets the Semantic Version of the Night library.
            This version is set during the release process.
            </summary>
            <returns>The library's semantic version string.</returns>
        </member>
        <member name="T:Night.FullscreenType">
            <summary>
            Types of fullscreen modes.
            </summary>
        </member>
        <member name="F:Night.FullscreenType.Exclusive">
            <summary>
            Standard exclusive-fullscreen mode. Changes the display mode (actual resolution) of the monitor.
            </summary>
        </member>
        <member name="F:Night.FullscreenType.Desktop">
            <summary>
            Borderless fullscreen windowed mode. A borderless screen-sized window is created which sits on top of all desktop UI elements.
            The window is automatically resized to match the dimensions of the desktop, and its size cannot be changed.
            </summary>
        </member>
        <member name="T:Night.Window">
            <summary>
            Provides an interface for modifying and retrieving information about the program's window.
            </summary>
        </member>
        <member name="P:Night.Window.RendererPtr">
            <summary>
            Gets the pointer to the internal SDL renderer. For use by Night.Graphics.
            </summary>
        </member>
        <member name="P:Night.Window.Handle">
            <summary>
            Gets the handle to the internal SDL window. For use by other Night modules or internal methods.
            </summary>
        </member>
        <member name="M:Night.Window.SetIcon(System.String)">
            <summary>
            Sets the window icon.
            </summary>
            <param name="imagePath">The path to the icon image file (e.g., .ico, .png, .bmp).
            Uses SDL_image for loading, so supports various formats.</param>
            <returns>True if the icon was set successfully, false otherwise.</returns>
        </member>
        <member name="M:Night.Window.GetIcon">
            <summary>
            Gets the image data of the currently set window icon.
            </summary>
            <returns>The <see cref="T:Night.ImageData"/> of the icon, or null if no icon has been set or an error occurred.</returns>
        </member>
        <member name="M:Night.Window.SetMode(System.Int32,System.Int32,SDL3.SDL.WindowFlags)">
            <summary>
                Sets the display mode and properties of the window.
            </summary>
            <param name="width">The width of the window.</param>
            <param name="height">The height of the window.</param>
            <param name="flags">SDL Window flags to apply.</param>
            <returns>True if the mode was set successfully, false otherwise.</returns>
        </member>
        <member name="M:Night.Window.SetTitle(System.String)">
            <summary>
            Sets the window title.
            </summary>
            <param name="title">The new window title.</param>
        </member>
        <member name="M:Night.Window.IsOpen">
            <summary>
            Checks if the window is open.
            </summary>
            <returns>True if the window is open, false otherwise.</returns>
        </member>
        <member name="M:Night.Window.Close">
            <summary>
            Signals that the window should close.
            This is typically called by the engine when a quit event is received.
            TODO: Does this need to align with Love2D more? https://love2d.org/wiki/love.window.close.
            </summary>
        </member>
        <member name="M:Night.Window.GetDisplayCount">
            <summary>
            Gets the number of connected monitors.
            </summary>
            <returns>The number of currently connected displays.</returns>
        </member>
        <member name="M:Night.Window.GetDesktopDimensions(System.Int32)">
            <summary>
            Gets the width and height of the desktop.
            </summary>
            <param name="displayIndex">The index of the display to query (0 for the primary display).</param>
            <returns>A tuple containing the width and height of the desktop, or (0,0) if an error occurs.</returns>
        </member>
        <member name="M:Night.Window.GetFullscreen">
            <summary>
            Gets whether the window is fullscreen.
            </summary>
            <returns>A tuple: (bool IsFullscreen, FullscreenType FsType).
            IsFullscreen is true if the window is in any fullscreen mode, false otherwise.
            FsType indicates the type of fullscreen mode used.</returns>
        </member>
        <member name="M:Night.Window.SetFullscreen(System.Boolean,Night.FullscreenType)">
            <summary>
            Enters or exits fullscreen. The display to use when entering fullscreen is chosen
            based on which display the window is currently in, if multiple monitors are connected.
            </summary>
            <param name="fullscreen">Whether to enter or exit fullscreen mode.</param>
            <param name="fsType">The type of fullscreen mode to use (Desktop or Exclusive).</param>
            <returns>True if the operation was successful, false otherwise.</returns>
        </member>
        <member name="M:Night.Window.GetFullscreenModes(System.Int32)">
            <summary>
            Gets a list of available fullscreen display modes for a given display.
            </summary>
            <param name="displayIndex">The index of the display (0 for primary).</param>
            <returns>A list of (Width, Height) tuples representing available modes, or an empty list on error.</returns>
        </member>
        <member name="M:Night.Window.GetMode">
            <summary>
            Gets the current window mode (width, height, and flags).
            </summary>
            <returns>A WindowMode struct containing width, height, and current flags.</returns>
        </member>
        <member name="M:Night.Window.GetDPIScale">
            <summary>
            Gets the DPI scale factor of the display containing the window.
            </summary>
            <returns>The DPI scale factor, or 1.0f on error or if not applicable.</returns>
        </member>
        <member name="M:Night.Window.ToPixels(System.Single)">
            <summary>
            Converts a value from density-independent units to pixels, using the window's current DPI scale.
            </summary>
            <param name="value">The value in density-independent units.</param>
            <returns>The equivalent value in pixels.</returns>
        </member>
        <member name="M:Night.Window.FromPixels(System.Single)">
            <summary>
            Converts a value from pixels to density-independent units, using the window's current DPI scale.
            </summary>
            <param name="value">The value in pixels.</param>
            <returns>The equivalent value in density-independent units.</returns>
        </member>
        <member name="M:Night.Window.Shutdown">
            <summary>
            Internal method to shut down the window and renderer, and quit the video subsystem.
            Should be called by the FrameworkLoop at the end of the application.
            </summary>
        </member>
        <member name="M:Night.Window.EnsureVideoInitialized">
            <summary>
            Ensures the SDL Video subsystem is initialized.
            </summary>
        </member>
        <member name="M:Night.Window.GetDesktopDimensionsForDisplayID(System.UInt32)">
            <summary>
            Gets the dimensions of the desktop for a specific display ID.
            </summary>
            <param name="displayID">The actual ID of the display to query.</param>
            <returns>A tuple containing the width and height of the desktop, or (0,0) if an error occurs.</returns>
        </member>
        <member name="T:Night.WindowMode">
            <summary>
            Represents the display mode of a window, including width, height, and other properties.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Width">
            <summary>
            Gets or sets the window width in pixels.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Height">
            <summary>
            Gets or sets the window height in pixels.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Fullscreen">
            <summary>
            Gets or sets a value indicating whether the window is in fullscreen mode.
            </summary>
        </member>
        <member name="F:Night.WindowMode.FullscreenType">
            <summary>
            Gets or sets the type of fullscreen mode used.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Borderless">
            <summary>
            Gets or sets a value indicating whether the window is borderless.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Vsync">
            <summary>
            Gets or sets the VSync mode. 1 if the graphics framerate is synchronized with the monitor's refresh rate, 0 otherwise.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Msaa">
            <summary>
            Gets or sets the number of antialiasing samples used (0 if MSAA is disabled).
            </summary>
        </member>
        <member name="F:Night.WindowMode.Resizable">
            <summary>
            Gets or sets a value indicating whether the window is resizable in windowed mode.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Centered">
            <summary>
            Gets or sets a value indicating whether the window is centered in windowed mode.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Display">
            <summary>
            Gets or sets the 1-based index of the display the window is currently in.
            </summary>
        </member>
        <member name="F:Night.WindowMode.MinWidth">
            <summary>
            Gets or sets the minimum width of the window, if resizable.
            </summary>
        </member>
        <member name="F:Night.WindowMode.MinHeight">
            <summary>
            Gets or sets the minimum height of the window, if resizable.
            </summary>
        </member>
        <member name="F:Night.WindowMode.HighDpi">
            <summary>
            Gets or sets a value indicating whether high-dpi mode is allowed on Retina displays (macOS).
            </summary>
        </member>
        <member name="F:Night.WindowMode.RefreshRate">
            <summary>
            Gets or sets the refresh rate of the screen's current display mode in Hz (0 if undetermined).
            </summary>
        </member>
        <member name="F:Night.WindowMode.X">
            <summary>
            Gets or sets the x-coordinate of the window's position.
            </summary>
        </member>
        <member name="F:Night.WindowMode.Y">
            <summary>
            Gets or sets the y-coordinate of the window's position.
            </summary>
        </member>
    </members>
</doc>



================================================
File: tests/Night.Tests/bin/Debug/net9.0/.msCoverageSourceRootsMapping_Night.Engine.Tests
================================================
[Non-text file]


================================================
File: tests/Night.Tests/bin/Debug/net9.0/.msCoverageSourceRootsMapping_Night.Tests
================================================
[Non-text file]















================================================
File: tests/Night.Tests/bin/Release/net9.0/CoverletSourceRootsMapping_Night.Tests
================================================
[Non-text file]


================================================
File: tests/Night.Tests/bin/Release/net9.0/Night.Tests.deps.json
================================================
{
  "runtimeTarget": {
    "name": ".NETCoreApp,Version=v9.0",
    "signature": ""
  },
  "compilationOptions": {},
  "targets": {
    ".NETCoreApp,Version=v9.0": {
      "Night.Tests/1.0.0": {
        "dependencies": {
          "Microsoft.NET.Test.Sdk": "17.12.0",
          "Night": "1.0.0",
          "coverlet.collector": "6.0.2",
          "xunit": "2.9.2",
          "xunit.runner.visualstudio": "2.8.2"
        },
        "runtime": {
          "Night.Tests.dll": {}
        }
      },
      "coverlet.collector/6.0.2": {},
      "Microsoft.CodeCoverage/17.12.0": {
        "runtime": {
          "lib/netcoreapp3.1/Microsoft.VisualStudio.CodeCoverage.Shim.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.524.48002"
          }
        }
      },
      "Microsoft.NET.Test.Sdk/17.12.0": {
        "dependencies": {
          "Microsoft.CodeCoverage": "17.12.0",
          "Microsoft.TestPlatform.TestHost": "17.12.0"
        }
      },
      "Microsoft.TestPlatform.ObjectModel/17.12.0": {
        "dependencies": {
          "System.Reflection.Metadata": "1.6.0"
        },
        "runtime": {
          "lib/netcoreapp3.1/Microsoft.TestPlatform.CoreUtilities.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.24.56501"
          },
          "lib/netcoreapp3.1/Microsoft.TestPlatform.PlatformAbstractions.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.24.56501"
          },
          "lib/netcoreapp3.1/Microsoft.VisualStudio.TestPlatform.ObjectModel.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.24.56501"
          }
        },
        "resources": {
          "lib/netcoreapp3.1/cs/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "cs"
          },
          "lib/netcoreapp3.1/cs/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "cs"
          },
          "lib/netcoreapp3.1/de/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "de"
          },
          "lib/netcoreapp3.1/de/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "de"
          },
          "lib/netcoreapp3.1/es/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "es"
          },
          "lib/netcoreapp3.1/es/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "es"
          },
          "lib/netcoreapp3.1/fr/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "fr"
          },
          "lib/netcoreapp3.1/fr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "fr"
          },
          "lib/netcoreapp3.1/it/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "it"
          },
          "lib/netcoreapp3.1/it/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "it"
          },
          "lib/netcoreapp3.1/ja/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "ja"
          },
          "lib/netcoreapp3.1/ja/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "ja"
          },
          "lib/netcoreapp3.1/ko/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "ko"
          },
          "lib/netcoreapp3.1/ko/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "ko"
          },
          "lib/netcoreapp3.1/pl/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "pl"
          },
          "lib/netcoreapp3.1/pl/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "pl"
          },
          "lib/netcoreapp3.1/pt-BR/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/netcoreapp3.1/pt-BR/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/netcoreapp3.1/ru/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "ru"
          },
          "lib/netcoreapp3.1/ru/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "ru"
          },
          "lib/netcoreapp3.1/tr/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "tr"
          },
          "lib/netcoreapp3.1/tr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "tr"
          },
          "lib/netcoreapp3.1/zh-Hans/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/netcoreapp3.1/zh-Hans/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/netcoreapp3.1/zh-Hant/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "zh-Hant"
          },
          "lib/netcoreapp3.1/zh-Hant/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.TestPlatform.TestHost/17.12.0": {
        "dependencies": {
          "Microsoft.TestPlatform.ObjectModel": "17.12.0",
          "Newtonsoft.Json": "13.0.1"
        },
        "runtime": {
          "lib/netcoreapp3.1/Microsoft.TestPlatform.CommunicationUtilities.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.24.56501"
          },
          "lib/netcoreapp3.1/Microsoft.TestPlatform.CrossPlatEngine.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.24.56501"
          },
          "lib/netcoreapp3.1/Microsoft.TestPlatform.Utilities.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.24.56501"
          },
          "lib/netcoreapp3.1/Microsoft.VisualStudio.TestPlatform.Common.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.24.56501"
          },
          "lib/netcoreapp3.1/testhost.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1200.24.56501"
          }
        },
        "resources": {
          "lib/netcoreapp3.1/cs/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "cs"
          },
          "lib/netcoreapp3.1/cs/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "cs"
          },
          "lib/netcoreapp3.1/cs/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "cs"
          },
          "lib/netcoreapp3.1/de/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "de"
          },
          "lib/netcoreapp3.1/de/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "de"
          },
          "lib/netcoreapp3.1/de/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "de"
          },
          "lib/netcoreapp3.1/es/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "es"
          },
          "lib/netcoreapp3.1/es/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "es"
          },
          "lib/netcoreapp3.1/es/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "es"
          },
          "lib/netcoreapp3.1/fr/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "fr"
          },
          "lib/netcoreapp3.1/fr/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "fr"
          },
          "lib/netcoreapp3.1/fr/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "fr"
          },
          "lib/netcoreapp3.1/it/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "it"
          },
          "lib/netcoreapp3.1/it/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "it"
          },
          "lib/netcoreapp3.1/it/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "it"
          },
          "lib/netcoreapp3.1/ja/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "ja"
          },
          "lib/netcoreapp3.1/ja/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "ja"
          },
          "lib/netcoreapp3.1/ja/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "ja"
          },
          "lib/netcoreapp3.1/ko/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "ko"
          },
          "lib/netcoreapp3.1/ko/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "ko"
          },
          "lib/netcoreapp3.1/ko/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "ko"
          },
          "lib/netcoreapp3.1/pl/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "pl"
          },
          "lib/netcoreapp3.1/pl/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "pl"
          },
          "lib/netcoreapp3.1/pl/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "pl"
          },
          "lib/netcoreapp3.1/pt-BR/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/netcoreapp3.1/pt-BR/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/netcoreapp3.1/pt-BR/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/netcoreapp3.1/ru/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "ru"
          },
          "lib/netcoreapp3.1/ru/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "ru"
          },
          "lib/netcoreapp3.1/ru/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "ru"
          },
          "lib/netcoreapp3.1/tr/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "tr"
          },
          "lib/netcoreapp3.1/tr/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "tr"
          },
          "lib/netcoreapp3.1/tr/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "tr"
          },
          "lib/netcoreapp3.1/zh-Hans/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/netcoreapp3.1/zh-Hans/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/netcoreapp3.1/zh-Hans/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/netcoreapp3.1/zh-Hant/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "zh-Hant"
          },
          "lib/netcoreapp3.1/zh-Hant/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "zh-Hant"
          },
          "lib/netcoreapp3.1/zh-Hant/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Newtonsoft.Json/13.0.1": {
        "runtime": {
          "lib/netstandard2.0/Newtonsoft.Json.dll": {
            "assemblyVersion": "13.0.0.0",
            "fileVersion": "13.0.1.25517"
          }
        }
      },
      "SDL3-CS/3.2.14.2": {
        "runtime": {
          "lib/net9.0/SDL3-CS.dll": {
            "assemblyVersion": "3.2.14.2",
            "fileVersion": "3.2.14.2"
          }
        }
      },
      "System.Reflection.Metadata/1.6.0": {},
      "xunit/2.9.2": {
        "dependencies": {
          "xunit.analyzers": "1.16.0",
          "xunit.assert": "2.9.2",
          "xunit.core": "2.9.2"
        }
      },
      "xunit.abstractions/2.0.3": {
        "runtime": {
          "lib/netstandard2.0/xunit.abstractions.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "0.0.0.0"
          }
        }
      },
      "xunit.analyzers/1.16.0": {},
      "xunit.assert/2.9.2": {
        "runtime": {
          "lib/net6.0/xunit.assert.dll": {
            "assemblyVersion": "2.9.2.0",
            "fileVersion": "2.9.2.0"
          }
        }
      },
      "xunit.core/2.9.2": {
        "dependencies": {
          "xunit.extensibility.core": "2.9.2",
          "xunit.extensibility.execution": "2.9.2"
        }
      },
      "xunit.extensibility.core/2.9.2": {
        "dependencies": {
          "xunit.abstractions": "2.0.3"
        },
        "runtime": {
          "lib/netstandard1.1/xunit.core.dll": {
            "assemblyVersion": "2.9.2.0",
            "fileVersion": "2.9.2.0"
          }
        }
      },
      "xunit.extensibility.execution/2.9.2": {
        "dependencies": {
          "xunit.extensibility.core": "2.9.2"
        },
        "runtime": {
          "lib/netstandard1.1/xunit.execution.dotnet.dll": {
            "assemblyVersion": "2.9.2.0",
            "fileVersion": "2.9.2.0"
          }
        }
      },
      "xunit.runner.visualstudio/2.8.2": {},
      "Night/1.0.0": {
        "dependencies": {
          "SDL3-CS": "3.2.14.2"
        },
        "runtime": {
          "Night.dll": {
            "assemblyVersion": "1.0.0.0",
            "fileVersion": "1.0.0.0"
          }
        }
      }
    }
  },
  "libraries": {
    "Night.Tests/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "coverlet.collector/6.0.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-bJShQ6uWRTQ100ZeyiMqcFlhP7WJ+bCuabUs885dJiBEzMsJMSFr7BOyeCw4rgvQokteGi5rKQTlkhfQPUXg2A==",
      "path": "coverlet.collector/6.0.2",
      "hashPath": "coverlet.collector.6.0.2.nupkg.sha512"
    },
    "Microsoft.CodeCoverage/17.12.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-4svMznBd5JM21JIG2xZKGNanAHNXplxf/kQDFfLHXQ3OnpJkayRK/TjacFjA+EYmoyuNXHo/sOETEfcYtAzIrA==",
      "path": "microsoft.codecoverage/17.12.0",
      "hashPath": "microsoft.codecoverage.17.12.0.nupkg.sha512"
    },
    "Microsoft.NET.Test.Sdk/17.12.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-kt/PKBZ91rFCWxVIJZSgVLk+YR+4KxTuHf799ho8WNiK5ZQpJNAEZCAWX86vcKrs+DiYjiibpYKdGZP6+/N17w==",
      "path": "microsoft.net.test.sdk/17.12.0",
      "hashPath": "microsoft.net.test.sdk.17.12.0.nupkg.sha512"
    },
    "Microsoft.TestPlatform.ObjectModel/17.12.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-TDqkTKLfQuAaPcEb3pDDWnh7b3SyZF+/W9OZvWFp6eJCIiiYFdSB6taE2I6tWrFw5ywhzOb6sreoGJTI6m3rSQ==",
      "path": "microsoft.testplatform.objectmodel/17.12.0",
      "hashPath": "microsoft.testplatform.objectmodel.17.12.0.nupkg.sha512"
    },
    "Microsoft.TestPlatform.TestHost/17.12.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-MiPEJQNyADfwZ4pJNpQex+t9/jOClBGMiCiVVFuELCMSX2nmNfvUor3uFVxNNCg30uxDP8JDYfPnMXQzsfzYyg==",
      "path": "microsoft.testplatform.testhost/17.12.0",
      "hashPath": "microsoft.testplatform.testhost.17.12.0.nupkg.sha512"
    },
    "Newtonsoft.Json/13.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ppPFpBcvxdsfUonNcvITKqLl3bqxWbDCZIzDWHzjpdAHRFfZe0Dw9HmA0+za13IdyrgJwpkDTDA9fHaxOrt20A==",
      "path": "newtonsoft.json/13.0.1",
      "hashPath": "newtonsoft.json.13.0.1.nupkg.sha512"
    },
    "SDL3-CS/3.2.14.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-wqWjIm2EP7PmXRQfwSxY4YJDSrXZ0QmolJMCJcs9KY4b3vYBdlwo0U4/olPMdBx6yRzqhN1nGJjmeC9OJT6L1g==",
      "path": "sdl3-cs/3.2.14.2",
      "hashPath": "sdl3-cs.3.2.14.2.nupkg.sha512"
    },
    "System.Reflection.Metadata/1.6.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-COC1aiAJjCoA5GBF+QKL2uLqEBew4JsCkQmoHKbN3TlOZKa2fKLz5CpiRQKDz0RsAOEGsVKqOD5bomsXq/4STQ==",
      "path": "system.reflection.metadata/1.6.0",
      "hashPath": "system.reflection.metadata.1.6.0.nupkg.sha512"
    },
    "xunit/2.9.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-7LhFS2N9Z6Xgg8aE5lY95cneYivRMfRI8v+4PATa4S64D5Z/Plkg0qa8dTRHSiGRgVZ/CL2gEfJDE5AUhOX+2Q==",
      "path": "xunit/2.9.2",
      "hashPath": "xunit.2.9.2.nupkg.sha512"
    },
    "xunit.abstractions/2.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-pot1I4YOxlWjIb5jmwvvQNbTrZ3lJQ+jUGkGjWE3hEFM0l5gOnBWS+H3qsex68s5cO52g+44vpGzhAt+42vwKg==",
      "path": "xunit.abstractions/2.0.3",
      "hashPath": "xunit.abstractions.2.0.3.nupkg.sha512"
    },
    "xunit.analyzers/1.16.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-hptYM7vGr46GUIgZt21YHO4rfuBAQS2eINbFo16CV/Dqq+24Tp+P5gDCACu1AbFfW4Sp/WRfDPSK8fmUUb8s0Q==",
      "path": "xunit.analyzers/1.16.0",
      "hashPath": "xunit.analyzers.1.16.0.nupkg.sha512"
    },
    "xunit.assert/2.9.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-QkNBAQG4pa66cholm28AxijBjrmki98/vsEh4Sx5iplzotvPgpiotcxqJQMRC8d7RV7nIT8ozh97957hDnZwsQ==",
      "path": "xunit.assert/2.9.2",
      "hashPath": "xunit.assert.2.9.2.nupkg.sha512"
    },
    "xunit.core/2.9.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-O6RrNSdmZ0xgEn5kT927PNwog5vxTtKrWMihhhrT0Sg9jQ7iBDciYOwzBgP2krBEk5/GBXI18R1lKvmnxGcb4w==",
      "path": "xunit.core/2.9.2",
      "hashPath": "xunit.core.2.9.2.nupkg.sha512"
    },
    "xunit.extensibility.core/2.9.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Ol+KlBJz1x8BrdnhN2DeOuLrr1I/cTwtHCggL9BvYqFuVd/TUSzxNT5O0NxCIXth30bsKxgMfdqLTcORtM52yQ==",
      "path": "xunit.extensibility.core/2.9.2",
      "hashPath": "xunit.extensibility.core.2.9.2.nupkg.sha512"
    },
    "xunit.extensibility.execution/2.9.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-rKMpq4GsIUIJibXuZoZ8lYp5EpROlnYaRpwu9Zr0sRZXE7JqJfEEbCsUriZqB+ByXCLFBJyjkTRULMdC+U566g==",
      "path": "xunit.extensibility.execution/2.9.2",
      "hashPath": "xunit.extensibility.execution.2.9.2.nupkg.sha512"
    },
    "xunit.runner.visualstudio/2.8.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-vm1tbfXhFmjFMUmS4M0J0ASXz3/U5XvXBa6DOQUL3fEz4Vt6YPhv+ESCarx6M6D+9kJkJYZKCNvJMas1+nVfmQ==",
      "path": "xunit.runner.visualstudio/2.8.2",
      "hashPath": "xunit.runner.visualstudio.2.8.2.nupkg.sha512"
    },
    "Night/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    }
  }
}


================================================
File: tests/Night.Tests/bin/Release/net9.0/Night.Tests.runtimeconfig.json
================================================
{
  "runtimeOptions": {
    "tfm": "net9.0",
    "framework": {
      "name": "Microsoft.NETCore.App",
      "version": "9.0.0"
    },
    "configProperties": {
      "System.Reflection.Metadata.MetadataUpdater.IsSupported": false,
      "System.Runtime.Serialization.EnableUnsafeBinaryFormatterSerialization": false
    }
  }
}


================================================
File: tests/Night.Tests/bin/Release/net9.0/.msCoverageSourceRootsMapping_Night.Tests
================================================
[Non-text file]















================================================
File: tests/Night.Tests/obj/Night.Engine.Tests.csproj.nuget.dgspec.json
================================================
{
  "format": 1,
  "restore": {
    "/Users/danny/Documents/GitHub/any2/tests/Night.Engine.Tests/Night.Engine.Tests.csproj": {}
  },
  "projects": {
    "/Users/danny/Documents/GitHub/any2/src/Night.Engine/Night.Engine.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "/Users/danny/Documents/GitHub/any2/src/Night.Engine/Night.Engine.csproj",
        "projectName": "Night.Engine",
        "projectPath": "/Users/danny/Documents/GitHub/any2/src/Night.Engine/Night.Engine.csproj",
        "packagesPath": "/Users/danny/.nuget/packages/",
        "outputPath": "/Users/danny/Documents/GitHub/any2/src/Night.Engine/obj/",
        "projectStyle": "PackageReference",
        "configFilePaths": [
          "/Users/danny/.nuget/NuGet/NuGet.Config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "SDL3-CS": {
              "target": "Package",
              "version": "[*, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "/Users/danny/.local/share/mise/installs/dotnet/9.0.300/sdk/9.0.300/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "/Users/danny/Documents/GitHub/any2/tests/Night.Engine.Tests/Night.Engine.Tests.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "/Users/danny/Documents/GitHub/any2/tests/Night.Engine.Tests/Night.Engine.Tests.csproj",
        "projectName": "Night.Engine.Tests",
        "projectPath": "/Users/danny/Documents/GitHub/any2/tests/Night.Engine.Tests/Night.Engine.Tests.csproj",
        "packagesPath": "/Users/danny/.nuget/packages/",
        "outputPath": "/Users/danny/Documents/GitHub/any2/tests/Night.Engine.Tests/obj/",
        "projectStyle": "PackageReference",
        "configFilePaths": [
          "/Users/danny/.nuget/NuGet/NuGet.Config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "/Users/danny/Documents/GitHub/any2/src/Night.Engine/Night.Engine.csproj": {
                "projectPath": "/Users/danny/Documents/GitHub/any2/src/Night.Engine/Night.Engine.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Microsoft.NET.Test.Sdk": {
              "target": "Package",
              "version": "[17.12.0, )"
            },
            "coverlet.collector": {
              "target": "Package",
              "version": "[6.0.2, )"
            },
            "xunit": {
              "target": "Package",
              "version": "[2.9.2, )"
            },
            "xunit.runner.visualstudio": {
              "target": "Package",
              "version": "[2.8.2, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "/Users/danny/.local/share/mise/installs/dotnet/9.0.300/sdk/9.0.300/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}


================================================
File: tests/Night.Tests/obj/Night.Engine.Tests.csproj.nuget.g.props
================================================
﻿<?xml version="1.0" encoding="utf-8" standalone="no"?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <RestoreSuccess Condition=" '$(RestoreSuccess)' == '' ">True</RestoreSuccess>
    <RestoreTool Condition=" '$(RestoreTool)' == '' ">NuGet</RestoreTool>
    <ProjectAssetsFile Condition=" '$(ProjectAssetsFile)' == '' ">$(MSBuildThisFileDirectory)project.assets.json</ProjectAssetsFile>
    <NuGetPackageRoot Condition=" '$(NuGetPackageRoot)' == '' ">/Users/danny/.nuget/packages/</NuGetPackageRoot>
    <NuGetPackageFolders Condition=" '$(NuGetPackageFolders)' == '' ">/Users/danny/.nuget/packages/</NuGetPackageFolders>
    <NuGetProjectStyle Condition=" '$(NuGetProjectStyle)' == '' ">PackageReference</NuGetProjectStyle>
    <NuGetToolVersion Condition=" '$(NuGetToolVersion)' == '' ">6.14.0</NuGetToolVersion>
  </PropertyGroup>
  <ItemGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <SourceRoot Include="/Users/danny/.nuget/packages/" />
  </ItemGroup>
  <ImportGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <Import Project="$(NuGetPackageRoot)xunit.runner.visualstudio/2.8.2/build/net6.0/xunit.runner.visualstudio.props" Condition="Exists('$(NuGetPackageRoot)xunit.runner.visualstudio/2.8.2/build/net6.0/xunit.runner.visualstudio.props')" />
    <Import Project="$(NuGetPackageRoot)xunit.core/2.9.2/build/xunit.core.props" Condition="Exists('$(NuGetPackageRoot)xunit.core/2.9.2/build/xunit.core.props')" />
    <Import Project="$(NuGetPackageRoot)microsoft.testplatform.testhost/17.12.0/build/netcoreapp3.1/Microsoft.TestPlatform.TestHost.props" Condition="Exists('$(NuGetPackageRoot)microsoft.testplatform.testhost/17.12.0/build/netcoreapp3.1/Microsoft.TestPlatform.TestHost.props')" />
    <Import Project="$(NuGetPackageRoot)microsoft.codecoverage/17.12.0/build/netstandard2.0/Microsoft.CodeCoverage.props" Condition="Exists('$(NuGetPackageRoot)microsoft.codecoverage/17.12.0/build/netstandard2.0/Microsoft.CodeCoverage.props')" />
    <Import Project="$(NuGetPackageRoot)microsoft.net.test.sdk/17.12.0/build/netcoreapp3.1/Microsoft.NET.Test.Sdk.props" Condition="Exists('$(NuGetPackageRoot)microsoft.net.test.sdk/17.12.0/build/netcoreapp3.1/Microsoft.NET.Test.Sdk.props')" />
  </ImportGroup>
  <PropertyGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <Pkgxunit_analyzers Condition=" '$(Pkgxunit_analyzers)' == '' ">/Users/danny/.nuget/packages/xunit.analyzers/1.16.0</Pkgxunit_analyzers>
  </PropertyGroup>
</Project>


================================================
File: tests/Night.Tests/obj/Night.Engine.Tests.csproj.nuget.g.targets
================================================
﻿<?xml version="1.0" encoding="utf-8" standalone="no"?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ImportGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <Import Project="$(NuGetPackageRoot)xunit.core/2.9.2/build/xunit.core.targets" Condition="Exists('$(NuGetPackageRoot)xunit.core/2.9.2/build/xunit.core.targets')" />
    <Import Project="$(NuGetPackageRoot)microsoft.codecoverage/17.12.0/build/netstandard2.0/Microsoft.CodeCoverage.targets" Condition="Exists('$(NuGetPackageRoot)microsoft.codecoverage/17.12.0/build/netstandard2.0/Microsoft.CodeCoverage.targets')" />
    <Import Project="$(NuGetPackageRoot)microsoft.net.test.sdk/17.12.0/build/netcoreapp3.1/Microsoft.NET.Test.Sdk.targets" Condition="Exists('$(NuGetPackageRoot)microsoft.net.test.sdk/17.12.0/build/netcoreapp3.1/Microsoft.NET.Test.Sdk.targets')" />
    <Import Project="$(NuGetPackageRoot)coverlet.collector/6.0.2/build/netstandard2.0/coverlet.collector.targets" Condition="Exists('$(NuGetPackageRoot)coverlet.collector/6.0.2/build/netstandard2.0/coverlet.collector.targets')" />
  </ImportGroup>
</Project>


================================================
File: tests/Night.Tests/obj/Night.Tests.csproj.nuget.dgspec.json
================================================
{
  "format": 1,
  "restore": {
    "/Users/danny/Documents/GitHub/any2/tests/Night.Tests/Night.Tests.csproj": {}
  },
  "projects": {
    "/Users/danny/Documents/GitHub/any2/src/Night/Night.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "/Users/danny/Documents/GitHub/any2/src/Night/Night.csproj",
        "projectName": "Night",
        "projectPath": "/Users/danny/Documents/GitHub/any2/src/Night/Night.csproj",
        "packagesPath": "/Users/danny/.nuget/packages/",
        "outputPath": "/Users/danny/Documents/GitHub/any2/src/Night/obj/",
        "projectStyle": "PackageReference",
        "configFilePaths": [
          "/Users/danny/.nuget/NuGet/NuGet.Config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "SDL3-CS": {
              "target": "Package",
              "version": "[*, )"
            },
            "StyleCop.Analyzers.Unstable": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[1.2.0.556, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "/Users/danny/.local/share/mise/installs/dotnet/9.0.300/sdk/9.0.300/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "/Users/danny/Documents/GitHub/any2/tests/Night.Tests/Night.Tests.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "/Users/danny/Documents/GitHub/any2/tests/Night.Tests/Night.Tests.csproj",
        "projectName": "Night.Tests",
        "projectPath": "/Users/danny/Documents/GitHub/any2/tests/Night.Tests/Night.Tests.csproj",
        "packagesPath": "/Users/danny/.nuget/packages/",
        "outputPath": "/Users/danny/Documents/GitHub/any2/tests/Night.Tests/obj/",
        "projectStyle": "PackageReference",
        "configFilePaths": [
          "/Users/danny/.nuget/NuGet/NuGet.Config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "/Users/danny/Documents/GitHub/any2/src/Night/Night.csproj": {
                "projectPath": "/Users/danny/Documents/GitHub/any2/src/Night/Night.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Microsoft.NET.Test.Sdk": {
              "target": "Package",
              "version": "[17.12.0, )"
            },
            "StyleCop.Analyzers.Unstable": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[1.2.0.556, )"
            },
            "coverlet.collector": {
              "target": "Package",
              "version": "[6.0.2, )"
            },
            "xunit": {
              "target": "Package",
              "version": "[2.9.2, )"
            },
            "xunit.runner.visualstudio": {
              "target": "Package",
              "version": "[2.8.2, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "/Users/danny/.local/share/mise/installs/dotnet/9.0.300/sdk/9.0.300/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}


================================================
File: tests/Night.Tests/obj/Night.Tests.csproj.nuget.g.props
================================================
﻿<?xml version="1.0" encoding="utf-8" standalone="no"?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <RestoreSuccess Condition=" '$(RestoreSuccess)' == '' ">True</RestoreSuccess>
    <RestoreTool Condition=" '$(RestoreTool)' == '' ">NuGet</RestoreTool>
    <ProjectAssetsFile Condition=" '$(ProjectAssetsFile)' == '' ">$(MSBuildThisFileDirectory)project.assets.json</ProjectAssetsFile>
    <NuGetPackageRoot Condition=" '$(NuGetPackageRoot)' == '' ">/Users/danny/.nuget/packages/</NuGetPackageRoot>
    <NuGetPackageFolders Condition=" '$(NuGetPackageFolders)' == '' ">/Users/danny/.nuget/packages/</NuGetPackageFolders>
    <NuGetProjectStyle Condition=" '$(NuGetProjectStyle)' == '' ">PackageReference</NuGetProjectStyle>
    <NuGetToolVersion Condition=" '$(NuGetToolVersion)' == '' ">6.14.0</NuGetToolVersion>
  </PropertyGroup>
  <ItemGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <SourceRoot Include="/Users/danny/.nuget/packages/" />
  </ItemGroup>
  <ImportGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <Import Project="$(NuGetPackageRoot)xunit.runner.visualstudio/2.8.2/build/net6.0/xunit.runner.visualstudio.props" Condition="Exists('$(NuGetPackageRoot)xunit.runner.visualstudio/2.8.2/build/net6.0/xunit.runner.visualstudio.props')" />
    <Import Project="$(NuGetPackageRoot)xunit.core/2.9.2/build/xunit.core.props" Condition="Exists('$(NuGetPackageRoot)xunit.core/2.9.2/build/xunit.core.props')" />
    <Import Project="$(NuGetPackageRoot)microsoft.testplatform.testhost/17.12.0/build/netcoreapp3.1/Microsoft.TestPlatform.TestHost.props" Condition="Exists('$(NuGetPackageRoot)microsoft.testplatform.testhost/17.12.0/build/netcoreapp3.1/Microsoft.TestPlatform.TestHost.props')" />
    <Import Project="$(NuGetPackageRoot)microsoft.codecoverage/17.12.0/build/netstandard2.0/Microsoft.CodeCoverage.props" Condition="Exists('$(NuGetPackageRoot)microsoft.codecoverage/17.12.0/build/netstandard2.0/Microsoft.CodeCoverage.props')" />
    <Import Project="$(NuGetPackageRoot)microsoft.net.test.sdk/17.12.0/build/netcoreapp3.1/Microsoft.NET.Test.Sdk.props" Condition="Exists('$(NuGetPackageRoot)microsoft.net.test.sdk/17.12.0/build/netcoreapp3.1/Microsoft.NET.Test.Sdk.props')" />
  </ImportGroup>
  <PropertyGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <Pkgxunit_analyzers Condition=" '$(Pkgxunit_analyzers)' == '' ">/Users/danny/.nuget/packages/xunit.analyzers/1.16.0</Pkgxunit_analyzers>
    <PkgStyleCop_Analyzers_Unstable Condition=" '$(PkgStyleCop_Analyzers_Unstable)' == '' ">/Users/danny/.nuget/packages/stylecop.analyzers.unstable/1.2.0.556</PkgStyleCop_Analyzers_Unstable>
  </PropertyGroup>
</Project>


================================================
File: tests/Night.Tests/obj/Night.Tests.csproj.nuget.g.targets
================================================
﻿<?xml version="1.0" encoding="utf-8" standalone="no"?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ImportGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <Import Project="$(NuGetPackageRoot)xunit.core/2.9.2/build/xunit.core.targets" Condition="Exists('$(NuGetPackageRoot)xunit.core/2.9.2/build/xunit.core.targets')" />
    <Import Project="$(NuGetPackageRoot)microsoft.codecoverage/17.12.0/build/netstandard2.0/Microsoft.CodeCoverage.targets" Condition="Exists('$(NuGetPackageRoot)microsoft.codecoverage/17.12.0/build/netstandard2.0/Microsoft.CodeCoverage.targets')" />
    <Import Project="$(NuGetPackageRoot)microsoft.net.test.sdk/17.12.0/build/netcoreapp3.1/Microsoft.NET.Test.Sdk.targets" Condition="Exists('$(NuGetPackageRoot)microsoft.net.test.sdk/17.12.0/build/netcoreapp3.1/Microsoft.NET.Test.Sdk.targets')" />
    <Import Project="$(NuGetPackageRoot)coverlet.collector/6.0.2/build/netstandard2.0/coverlet.collector.targets" Condition="Exists('$(NuGetPackageRoot)coverlet.collector/6.0.2/build/netstandard2.0/coverlet.collector.targets')" />
  </ImportGroup>
</Project>


================================================
File: tests/Night.Tests/obj/project.assets.json
================================================
{
  "version": 3,
  "targets": {
    "net9.0": {
      "coverlet.collector/6.0.2": {
        "type": "package",
        "build": {
          "build/netstandard2.0/coverlet.collector.targets": {}
        }
      },
      "Microsoft.CodeCoverage/17.12.0": {
        "type": "package",
        "compile": {
          "lib/netcoreapp3.1/Microsoft.VisualStudio.CodeCoverage.Shim.dll": {}
        },
        "runtime": {
          "lib/netcoreapp3.1/Microsoft.VisualStudio.CodeCoverage.Shim.dll": {}
        },
        "build": {
          "build/netstandard2.0/Microsoft.CodeCoverage.props": {},
          "build/netstandard2.0/Microsoft.CodeCoverage.targets": {}
        }
      },
      "Microsoft.NET.Test.Sdk/17.12.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.CodeCoverage": "17.12.0",
          "Microsoft.TestPlatform.TestHost": "17.12.0"
        },
        "compile": {
          "lib/netcoreapp3.1/_._": {}
        },
        "runtime": {
          "lib/netcoreapp3.1/_._": {}
        },
        "build": {
          "build/netcoreapp3.1/Microsoft.NET.Test.Sdk.props": {},
          "build/netcoreapp3.1/Microsoft.NET.Test.Sdk.targets": {}
        },
        "buildMultiTargeting": {
          "buildMultiTargeting/Microsoft.NET.Test.Sdk.props": {}
        }
      },
      "Microsoft.TestPlatform.ObjectModel/17.12.0": {
        "type": "package",
        "dependencies": {
          "System.Reflection.Metadata": "1.6.0"
        },
        "compile": {
          "lib/netcoreapp3.1/Microsoft.TestPlatform.CoreUtilities.dll": {},
          "lib/netcoreapp3.1/Microsoft.TestPlatform.PlatformAbstractions.dll": {},
          "lib/netcoreapp3.1/Microsoft.VisualStudio.TestPlatform.ObjectModel.dll": {}
        },
        "runtime": {
          "lib/netcoreapp3.1/Microsoft.TestPlatform.CoreUtilities.dll": {},
          "lib/netcoreapp3.1/Microsoft.TestPlatform.PlatformAbstractions.dll": {},
          "lib/netcoreapp3.1/Microsoft.VisualStudio.TestPlatform.ObjectModel.dll": {}
        },
        "resource": {
          "lib/netcoreapp3.1/cs/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "cs"
          },
          "lib/netcoreapp3.1/cs/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "cs"
          },
          "lib/netcoreapp3.1/de/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "de"
          },
          "lib/netcoreapp3.1/de/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "de"
          },
          "lib/netcoreapp3.1/es/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "es"
          },
          "lib/netcoreapp3.1/es/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "es"
          },
          "lib/netcoreapp3.1/fr/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "fr"
          },
          "lib/netcoreapp3.1/fr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "fr"
          },
          "lib/netcoreapp3.1/it/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "it"
          },
          "lib/netcoreapp3.1/it/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "it"
          },
          "lib/netcoreapp3.1/ja/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "ja"
          },
          "lib/netcoreapp3.1/ja/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "ja"
          },
          "lib/netcoreapp3.1/ko/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "ko"
          },
          "lib/netcoreapp3.1/ko/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "ko"
          },
          "lib/netcoreapp3.1/pl/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "pl"
          },
          "lib/netcoreapp3.1/pl/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "pl"
          },
          "lib/netcoreapp3.1/pt-BR/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/netcoreapp3.1/pt-BR/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/netcoreapp3.1/ru/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "ru"
          },
          "lib/netcoreapp3.1/ru/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "ru"
          },
          "lib/netcoreapp3.1/tr/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "tr"
          },
          "lib/netcoreapp3.1/tr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "tr"
          },
          "lib/netcoreapp3.1/zh-Hans/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/netcoreapp3.1/zh-Hans/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/netcoreapp3.1/zh-Hant/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "zh-Hant"
          },
          "lib/netcoreapp3.1/zh-Hant/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.TestPlatform.TestHost/17.12.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.TestPlatform.ObjectModel": "17.12.0",
          "Newtonsoft.Json": "13.0.1"
        },
        "compile": {
          "lib/netcoreapp3.1/Microsoft.TestPlatform.CommunicationUtilities.dll": {},
          "lib/netcoreapp3.1/Microsoft.TestPlatform.CoreUtilities.dll": {},
          "lib/netcoreapp3.1/Microsoft.TestPlatform.CrossPlatEngine.dll": {},
          "lib/netcoreapp3.1/Microsoft.TestPlatform.PlatformAbstractions.dll": {},
          "lib/netcoreapp3.1/Microsoft.TestPlatform.Utilities.dll": {},
          "lib/netcoreapp3.1/Microsoft.VisualStudio.TestPlatform.Common.dll": {},
          "lib/netcoreapp3.1/Microsoft.VisualStudio.TestPlatform.ObjectModel.dll": {},
          "lib/netcoreapp3.1/testhost.dll": {
            "related": ".deps.json"
          }
        },
        "runtime": {
          "lib/netcoreapp3.1/Microsoft.TestPlatform.CommunicationUtilities.dll": {},
          "lib/netcoreapp3.1/Microsoft.TestPlatform.CoreUtilities.dll": {},
          "lib/netcoreapp3.1/Microsoft.TestPlatform.CrossPlatEngine.dll": {},
          "lib/netcoreapp3.1/Microsoft.TestPlatform.PlatformAbstractions.dll": {},
          "lib/netcoreapp3.1/Microsoft.TestPlatform.Utilities.dll": {},
          "lib/netcoreapp3.1/Microsoft.VisualStudio.TestPlatform.Common.dll": {},
          "lib/netcoreapp3.1/Microsoft.VisualStudio.TestPlatform.ObjectModel.dll": {},
          "lib/netcoreapp3.1/testhost.dll": {
            "related": ".deps.json"
          }
        },
        "resource": {
          "lib/netcoreapp3.1/cs/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "cs"
          },
          "lib/netcoreapp3.1/cs/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "cs"
          },
          "lib/netcoreapp3.1/cs/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "cs"
          },
          "lib/netcoreapp3.1/de/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "de"
          },
          "lib/netcoreapp3.1/de/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "de"
          },
          "lib/netcoreapp3.1/de/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "de"
          },
          "lib/netcoreapp3.1/es/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "es"
          },
          "lib/netcoreapp3.1/es/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "es"
          },
          "lib/netcoreapp3.1/es/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "es"
          },
          "lib/netcoreapp3.1/fr/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "fr"
          },
          "lib/netcoreapp3.1/fr/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "fr"
          },
          "lib/netcoreapp3.1/fr/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "fr"
          },
          "lib/netcoreapp3.1/it/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "it"
          },
          "lib/netcoreapp3.1/it/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "it"
          },
          "lib/netcoreapp3.1/it/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "it"
          },
          "lib/netcoreapp3.1/ja/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "ja"
          },
          "lib/netcoreapp3.1/ja/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "ja"
          },
          "lib/netcoreapp3.1/ja/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "ja"
          },
          "lib/netcoreapp3.1/ko/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "ko"
          },
          "lib/netcoreapp3.1/ko/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "ko"
          },
          "lib/netcoreapp3.1/ko/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "ko"
          },
          "lib/netcoreapp3.1/pl/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "pl"
          },
          "lib/netcoreapp3.1/pl/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "pl"
          },
          "lib/netcoreapp3.1/pl/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "pl"
          },
          "lib/netcoreapp3.1/pt-BR/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/netcoreapp3.1/pt-BR/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/netcoreapp3.1/pt-BR/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/netcoreapp3.1/ru/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "ru"
          },
          "lib/netcoreapp3.1/ru/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "ru"
          },
          "lib/netcoreapp3.1/ru/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "ru"
          },
          "lib/netcoreapp3.1/tr/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "tr"
          },
          "lib/netcoreapp3.1/tr/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "tr"
          },
          "lib/netcoreapp3.1/tr/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "tr"
          },
          "lib/netcoreapp3.1/zh-Hans/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/netcoreapp3.1/zh-Hans/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/netcoreapp3.1/zh-Hans/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/netcoreapp3.1/zh-Hant/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "zh-Hant"
          },
          "lib/netcoreapp3.1/zh-Hant/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "zh-Hant"
          },
          "lib/netcoreapp3.1/zh-Hant/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "zh-Hant"
          }
        },
        "build": {
          "build/netcoreapp3.1/Microsoft.TestPlatform.TestHost.props": {}
        }
      },
      "Newtonsoft.Json/13.0.1": {
        "type": "package",
        "compile": {
          "lib/netstandard2.0/Newtonsoft.Json.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/Newtonsoft.Json.dll": {
            "related": ".xml"
          }
        }
      },
      "SDL3-CS/3.2.14.2": {
        "type": "package",
        "compile": {
          "lib/net9.0/SDL3-CS.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/SDL3-CS.dll": {
            "related": ".xml"
          }
        }
      },
      "StyleCop.Analyzers.Unstable/1.2.0.556": {
        "type": "package"
      },
      "System.Reflection.Metadata/1.6.0": {
        "type": "package",
        "compile": {
          "lib/netstandard2.0/System.Reflection.Metadata.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/System.Reflection.Metadata.dll": {
            "related": ".xml"
          }
        }
      },
      "xunit/2.9.2": {
        "type": "package",
        "dependencies": {
          "xunit.analyzers": "1.16.0",
          "xunit.assert": "2.9.2",
          "xunit.core": "[2.9.2]"
        }
      },
      "xunit.abstractions/2.0.3": {
        "type": "package",
        "compile": {
          "lib/netstandard2.0/xunit.abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/xunit.abstractions.dll": {
            "related": ".xml"
          }
        }
      },
      "xunit.analyzers/1.16.0": {
        "type": "package"
      },
      "xunit.assert/2.9.2": {
        "type": "package",
        "compile": {
          "lib/net6.0/xunit.assert.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/xunit.assert.dll": {
            "related": ".xml"
          }
        }
      },
      "xunit.core/2.9.2": {
        "type": "package",
        "dependencies": {
          "xunit.extensibility.core": "[2.9.2]",
          "xunit.extensibility.execution": "[2.9.2]"
        },
        "build": {
          "build/xunit.core.props": {},
          "build/xunit.core.targets": {}
        },
        "buildMultiTargeting": {
          "buildMultiTargeting/xunit.core.props": {},
          "buildMultiTargeting/xunit.core.targets": {}
        }
      },
      "xunit.extensibility.core/2.9.2": {
        "type": "package",
        "dependencies": {
          "xunit.abstractions": "2.0.3"
        },
        "compile": {
          "lib/netstandard1.1/xunit.core.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard1.1/xunit.core.dll": {
            "related": ".xml"
          }
        }
      },
      "xunit.extensibility.execution/2.9.2": {
        "type": "package",
        "dependencies": {
          "xunit.extensibility.core": "[2.9.2]"
        },
        "compile": {
          "lib/netstandard1.1/xunit.execution.dotnet.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard1.1/xunit.execution.dotnet.dll": {
            "related": ".xml"
          }
        }
      },
      "xunit.runner.visualstudio/2.8.2": {
        "type": "package",
        "compile": {
          "lib/net6.0/_._": {}
        },
        "runtime": {
          "lib/net6.0/_._": {}
        },
        "build": {
          "build/net6.0/xunit.runner.visualstudio.props": {}
        }
      },
      "Night/1.0.0": {
        "type": "project",
        "framework": ".NETCoreApp,Version=v9.0",
        "dependencies": {
          "SDL3-CS": "0.0.0"
        },
        "compile": {
          "bin/placeholder/Night.dll": {}
        },
        "runtime": {
          "bin/placeholder/Night.dll": {}
        }
      }
    }
  },
  "libraries": {
    "coverlet.collector/6.0.2": {
      "sha512": "bJShQ6uWRTQ100ZeyiMqcFlhP7WJ+bCuabUs885dJiBEzMsJMSFr7BOyeCw4rgvQokteGi5rKQTlkhfQPUXg2A==",
      "type": "package",
      "path": "coverlet.collector/6.0.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "VSTestIntegration.md",
        "build/netstandard2.0/Microsoft.Bcl.AsyncInterfaces.dll",
        "build/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "build/netstandard2.0/Microsoft.Extensions.DependencyInjection.dll",
        "build/netstandard2.0/Microsoft.Extensions.DependencyModel.dll",
        "build/netstandard2.0/Microsoft.Extensions.FileSystemGlobbing.dll",
        "build/netstandard2.0/Microsoft.TestPlatform.CoreUtilities.dll",
        "build/netstandard2.0/Microsoft.TestPlatform.PlatformAbstractions.dll",
        "build/netstandard2.0/Microsoft.VisualStudio.TestPlatform.ObjectModel.dll",
        "build/netstandard2.0/Mono.Cecil.Mdb.dll",
        "build/netstandard2.0/Mono.Cecil.Pdb.dll",
        "build/netstandard2.0/Mono.Cecil.Rocks.dll",
        "build/netstandard2.0/Mono.Cecil.dll",
        "build/netstandard2.0/Newtonsoft.Json.dll",
        "build/netstandard2.0/NuGet.Frameworks.dll",
        "build/netstandard2.0/NuGet.Versioning.dll",
        "build/netstandard2.0/System.Buffers.dll",
        "build/netstandard2.0/System.Collections.Immutable.dll",
        "build/netstandard2.0/System.Memory.dll",
        "build/netstandard2.0/System.Numerics.Vectors.dll",
        "build/netstandard2.0/System.Reflection.Metadata.dll",
        "build/netstandard2.0/System.Runtime.CompilerServices.Unsafe.dll",
        "build/netstandard2.0/System.Text.Encodings.Web.dll",
        "build/netstandard2.0/System.Text.Json.dll",
        "build/netstandard2.0/System.Threading.Tasks.Extensions.dll",
        "build/netstandard2.0/coverlet.collector.deps.json",
        "build/netstandard2.0/coverlet.collector.dll",
        "build/netstandard2.0/coverlet.collector.pdb",
        "build/netstandard2.0/coverlet.collector.targets",
        "build/netstandard2.0/coverlet.core.dll",
        "build/netstandard2.0/coverlet.core.pdb",
        "build/netstandard2.0/coverlet.core.xml",
        "build/netstandard2.0/cs/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "build/netstandard2.0/cs/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "build/netstandard2.0/de/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "build/netstandard2.0/de/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "build/netstandard2.0/es/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "build/netstandard2.0/es/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "build/netstandard2.0/fr/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "build/netstandard2.0/fr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "build/netstandard2.0/it/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "build/netstandard2.0/it/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "build/netstandard2.0/ja/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "build/netstandard2.0/ja/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "build/netstandard2.0/ko/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "build/netstandard2.0/ko/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "build/netstandard2.0/pl/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "build/netstandard2.0/pl/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "build/netstandard2.0/pt-BR/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "build/netstandard2.0/pt-BR/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "build/netstandard2.0/ru/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "build/netstandard2.0/ru/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "build/netstandard2.0/tr/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "build/netstandard2.0/tr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "build/netstandard2.0/zh-Hans/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "build/netstandard2.0/zh-Hans/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "build/netstandard2.0/zh-Hant/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "build/netstandard2.0/zh-Hant/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "coverlet-icon.png",
        "coverlet.collector.6.0.2.nupkg.sha512",
        "coverlet.collector.nuspec"
      ]
    },
    "Microsoft.CodeCoverage/17.12.0": {
      "sha512": "4svMznBd5JM21JIG2xZKGNanAHNXplxf/kQDFfLHXQ3OnpJkayRK/TjacFjA+EYmoyuNXHo/sOETEfcYtAzIrA==",
      "type": "package",
      "path": "microsoft.codecoverage/17.12.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "ThirdPartyNotices.txt",
        "build/netstandard2.0/CodeCoverage/CodeCoverage.config",
        "build/netstandard2.0/CodeCoverage/CodeCoverage.exe",
        "build/netstandard2.0/CodeCoverage/Cov_x86.config",
        "build/netstandard2.0/CodeCoverage/amd64/CodeCoverage.exe",
        "build/netstandard2.0/CodeCoverage/amd64/Cov_x64.config",
        "build/netstandard2.0/CodeCoverage/amd64/covrun64.dll",
        "build/netstandard2.0/CodeCoverage/amd64/msdia140.dll",
        "build/netstandard2.0/CodeCoverage/arm64/Cov_arm64.config",
        "build/netstandard2.0/CodeCoverage/arm64/covrunarm64.dll",
        "build/netstandard2.0/CodeCoverage/arm64/msdia140.dll",
        "build/netstandard2.0/CodeCoverage/codecoveragemessages.dll",
        "build/netstandard2.0/CodeCoverage/coreclr/Microsoft.VisualStudio.CodeCoverage.Shim.dll",
        "build/netstandard2.0/CodeCoverage/covrun32.dll",
        "build/netstandard2.0/CodeCoverage/msdia140.dll",
        "build/netstandard2.0/Microsoft.CodeCoverage.Core.dll",
        "build/netstandard2.0/Microsoft.CodeCoverage.Instrumentation.Core.dll",
        "build/netstandard2.0/Microsoft.CodeCoverage.Instrumentation.dll",
        "build/netstandard2.0/Microsoft.CodeCoverage.Interprocess.dll",
        "build/netstandard2.0/Microsoft.CodeCoverage.props",
        "build/netstandard2.0/Microsoft.CodeCoverage.targets",
        "build/netstandard2.0/Microsoft.DiaSymReader.dll",
        "build/netstandard2.0/Microsoft.VisualStudio.TraceDataCollector.dll",
        "build/netstandard2.0/Mono.Cecil.Pdb.dll",
        "build/netstandard2.0/Mono.Cecil.Rocks.dll",
        "build/netstandard2.0/Mono.Cecil.dll",
        "build/netstandard2.0/ThirdPartyNotices.txt",
        "build/netstandard2.0/alpine/x64/Cov_x64.config",
        "build/netstandard2.0/alpine/x64/libCoverageInstrumentationMethod.so",
        "build/netstandard2.0/alpine/x64/libInstrumentationEngine.so",
        "build/netstandard2.0/arm64/MicrosoftInstrumentationEngine_arm64.dll",
        "build/netstandard2.0/cs/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "build/netstandard2.0/de/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "build/netstandard2.0/es/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "build/netstandard2.0/fr/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "build/netstandard2.0/it/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "build/netstandard2.0/ja/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "build/netstandard2.0/ko/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "build/netstandard2.0/macos/x64/Cov_x64.config",
        "build/netstandard2.0/macos/x64/libCoverageInstrumentationMethod.dylib",
        "build/netstandard2.0/macos/x64/libInstrumentationEngine.dylib",
        "build/netstandard2.0/pl/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "build/netstandard2.0/pt-BR/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "build/netstandard2.0/ru/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "build/netstandard2.0/tr/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "build/netstandard2.0/ubuntu/x64/Cov_x64.config",
        "build/netstandard2.0/ubuntu/x64/libCoverageInstrumentationMethod.so",
        "build/netstandard2.0/ubuntu/x64/libInstrumentationEngine.so",
        "build/netstandard2.0/x64/MicrosoftInstrumentationEngine_x64.dll",
        "build/netstandard2.0/x86/MicrosoftInstrumentationEngine_x86.dll",
        "build/netstandard2.0/zh-Hans/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "build/netstandard2.0/zh-Hant/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "lib/net462/Microsoft.VisualStudio.CodeCoverage.Shim.dll",
        "lib/netcoreapp3.1/Microsoft.VisualStudio.CodeCoverage.Shim.dll",
        "microsoft.codecoverage.17.12.0.nupkg.sha512",
        "microsoft.codecoverage.nuspec"
      ]
    },
    "Microsoft.NET.Test.Sdk/17.12.0": {
      "sha512": "kt/PKBZ91rFCWxVIJZSgVLk+YR+4KxTuHf799ho8WNiK5ZQpJNAEZCAWX86vcKrs+DiYjiibpYKdGZP6+/N17w==",
      "type": "package",
      "path": "microsoft.net.test.sdk/17.12.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "build/net462/Microsoft.NET.Test.Sdk.props",
        "build/net462/Microsoft.NET.Test.Sdk.targets",
        "build/netcoreapp3.1/Microsoft.NET.Test.Sdk.Program.cs",
        "build/netcoreapp3.1/Microsoft.NET.Test.Sdk.Program.fs",
        "build/netcoreapp3.1/Microsoft.NET.Test.Sdk.Program.vb",
        "build/netcoreapp3.1/Microsoft.NET.Test.Sdk.props",
        "build/netcoreapp3.1/Microsoft.NET.Test.Sdk.targets",
        "buildMultiTargeting/Microsoft.NET.Test.Sdk.props",
        "lib/net462/_._",
        "lib/netcoreapp3.1/_._",
        "microsoft.net.test.sdk.17.12.0.nupkg.sha512",
        "microsoft.net.test.sdk.nuspec"
      ]
    },
    "Microsoft.TestPlatform.ObjectModel/17.12.0": {
      "sha512": "TDqkTKLfQuAaPcEb3pDDWnh7b3SyZF+/W9OZvWFp6eJCIiiYFdSB6taE2I6tWrFw5ywhzOb6sreoGJTI6m3rSQ==",
      "type": "package",
      "path": "microsoft.testplatform.objectmodel/17.12.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "lib/net462/Microsoft.TestPlatform.CoreUtilities.dll",
        "lib/net462/Microsoft.TestPlatform.PlatformAbstractions.dll",
        "lib/net462/Microsoft.VisualStudio.TestPlatform.ObjectModel.dll",
        "lib/net462/cs/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/cs/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net462/de/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/de/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net462/es/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/es/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net462/fr/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/fr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net462/it/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/it/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net462/ja/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/ja/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net462/ko/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/ko/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net462/pl/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/pl/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net462/pt-BR/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/pt-BR/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net462/ru/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/ru/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net462/tr/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/tr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net462/zh-Hans/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/zh-Hans/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net462/zh-Hant/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/zh-Hant/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netcoreapp3.1/Microsoft.TestPlatform.CoreUtilities.dll",
        "lib/netcoreapp3.1/Microsoft.TestPlatform.PlatformAbstractions.dll",
        "lib/netcoreapp3.1/Microsoft.VisualStudio.TestPlatform.ObjectModel.dll",
        "lib/netcoreapp3.1/cs/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netcoreapp3.1/cs/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netcoreapp3.1/de/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netcoreapp3.1/de/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netcoreapp3.1/es/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netcoreapp3.1/es/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netcoreapp3.1/fr/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netcoreapp3.1/fr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netcoreapp3.1/it/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netcoreapp3.1/it/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netcoreapp3.1/ja/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netcoreapp3.1/ja/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netcoreapp3.1/ko/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netcoreapp3.1/ko/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netcoreapp3.1/pl/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netcoreapp3.1/pl/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netcoreapp3.1/pt-BR/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netcoreapp3.1/pt-BR/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netcoreapp3.1/ru/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netcoreapp3.1/ru/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netcoreapp3.1/tr/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netcoreapp3.1/tr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netcoreapp3.1/zh-Hans/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netcoreapp3.1/zh-Hans/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netcoreapp3.1/zh-Hant/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netcoreapp3.1/zh-Hant/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/Microsoft.TestPlatform.CoreUtilities.dll",
        "lib/netstandard2.0/Microsoft.TestPlatform.PlatformAbstractions.dll",
        "lib/netstandard2.0/Microsoft.VisualStudio.TestPlatform.ObjectModel.dll",
        "lib/netstandard2.0/cs/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/cs/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/de/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/de/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/es/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/es/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/fr/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/fr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/it/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/it/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/ja/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/ja/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/ko/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/ko/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/pl/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/pl/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/pt-BR/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/pt-BR/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/ru/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/ru/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/tr/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/tr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/zh-Hans/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/zh-Hans/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/zh-Hant/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/zh-Hant/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "microsoft.testplatform.objectmodel.17.12.0.nupkg.sha512",
        "microsoft.testplatform.objectmodel.nuspec"
      ]
    },
    "Microsoft.TestPlatform.TestHost/17.12.0": {
      "sha512": "MiPEJQNyADfwZ4pJNpQex+t9/jOClBGMiCiVVFuELCMSX2nmNfvUor3uFVxNNCg30uxDP8JDYfPnMXQzsfzYyg==",
      "type": "package",
      "path": "microsoft.testplatform.testhost/17.12.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "ThirdPartyNotices.txt",
        "build/netcoreapp3.1/Microsoft.TestPlatform.TestHost.props",
        "build/netcoreapp3.1/x64/testhost.dll",
        "build/netcoreapp3.1/x64/testhost.exe",
        "build/netcoreapp3.1/x86/testhost.x86.dll",
        "build/netcoreapp3.1/x86/testhost.x86.exe",
        "lib/net462/_._",
        "lib/netcoreapp3.1/Microsoft.TestPlatform.CommunicationUtilities.dll",
        "lib/netcoreapp3.1/Microsoft.TestPlatform.CoreUtilities.dll",
        "lib/netcoreapp3.1/Microsoft.TestPlatform.CrossPlatEngine.dll",
        "lib/netcoreapp3.1/Microsoft.TestPlatform.PlatformAbstractions.dll",
        "lib/netcoreapp3.1/Microsoft.TestPlatform.Utilities.dll",
        "lib/netcoreapp3.1/Microsoft.VisualStudio.TestPlatform.Common.dll",
        "lib/netcoreapp3.1/Microsoft.VisualStudio.TestPlatform.ObjectModel.dll",
        "lib/netcoreapp3.1/cs/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/netcoreapp3.1/cs/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/netcoreapp3.1/cs/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "lib/netcoreapp3.1/de/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/netcoreapp3.1/de/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/netcoreapp3.1/de/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "lib/netcoreapp3.1/es/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/netcoreapp3.1/es/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/netcoreapp3.1/es/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "lib/netcoreapp3.1/fr/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/netcoreapp3.1/fr/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/netcoreapp3.1/fr/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "lib/netcoreapp3.1/it/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/netcoreapp3.1/it/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/netcoreapp3.1/it/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "lib/netcoreapp3.1/ja/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/netcoreapp3.1/ja/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/netcoreapp3.1/ja/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "lib/netcoreapp3.1/ko/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/netcoreapp3.1/ko/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/netcoreapp3.1/ko/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "lib/netcoreapp3.1/pl/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/netcoreapp3.1/pl/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/netcoreapp3.1/pl/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "lib/netcoreapp3.1/pt-BR/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/netcoreapp3.1/pt-BR/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/netcoreapp3.1/pt-BR/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "lib/netcoreapp3.1/ru/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/netcoreapp3.1/ru/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/netcoreapp3.1/ru/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "lib/netcoreapp3.1/testhost.deps.json",
        "lib/netcoreapp3.1/testhost.dll",
        "lib/netcoreapp3.1/tr/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/netcoreapp3.1/tr/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/netcoreapp3.1/tr/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "lib/netcoreapp3.1/x64/msdia140.dll",
        "lib/netcoreapp3.1/x86/msdia140.dll",
        "lib/netcoreapp3.1/zh-Hans/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/netcoreapp3.1/zh-Hans/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/netcoreapp3.1/zh-Hans/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "lib/netcoreapp3.1/zh-Hant/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/netcoreapp3.1/zh-Hant/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/netcoreapp3.1/zh-Hant/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "microsoft.testplatform.testhost.17.12.0.nupkg.sha512",
        "microsoft.testplatform.testhost.nuspec"
      ]
    },
    "Newtonsoft.Json/13.0.1": {
      "sha512": "ppPFpBcvxdsfUonNcvITKqLl3bqxWbDCZIzDWHzjpdAHRFfZe0Dw9HmA0+za13IdyrgJwpkDTDA9fHaxOrt20A==",
      "type": "package",
      "path": "newtonsoft.json/13.0.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.md",
        "lib/net20/Newtonsoft.Json.dll",
        "lib/net20/Newtonsoft.Json.xml",
        "lib/net35/Newtonsoft.Json.dll",
        "lib/net35/Newtonsoft.Json.xml",
        "lib/net40/Newtonsoft.Json.dll",
        "lib/net40/Newtonsoft.Json.xml",
        "lib/net45/Newtonsoft.Json.dll",
        "lib/net45/Newtonsoft.Json.xml",
        "lib/netstandard1.0/Newtonsoft.Json.dll",
        "lib/netstandard1.0/Newtonsoft.Json.xml",
        "lib/netstandard1.3/Newtonsoft.Json.dll",
        "lib/netstandard1.3/Newtonsoft.Json.xml",
        "lib/netstandard2.0/Newtonsoft.Json.dll",
        "lib/netstandard2.0/Newtonsoft.Json.xml",
        "newtonsoft.json.13.0.1.nupkg.sha512",
        "newtonsoft.json.nuspec",
        "packageIcon.png"
      ]
    },
    "SDL3-CS/3.2.14.2": {
      "sha512": "wqWjIm2EP7PmXRQfwSxY4YJDSrXZ0QmolJMCJcs9KY4b3vYBdlwo0U4/olPMdBx6yRzqhN1nGJjmeC9OJT6L1g==",
      "type": "package",
      "path": "sdl3-cs/3.2.14.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "CODE_OF_CONDUCT.md",
        "LICENSE",
        "README-nuget.md",
        "README.md",
        "SDL3-CS.xml",
        "lib/net7.0/SDL3-CS.dll",
        "lib/net7.0/SDL3-CS.xml",
        "lib/net8.0/SDL3-CS.dll",
        "lib/net8.0/SDL3-CS.xml",
        "lib/net9.0/SDL3-CS.dll",
        "lib/net9.0/SDL3-CS.xml",
        "logo.png",
        "sdl3-cs.3.2.14.2.nupkg.sha512",
        "sdl3-cs.nuspec"
      ]
    },
    "StyleCop.Analyzers.Unstable/1.2.0.556": {
      "sha512": "zvn9Mqs/ox/83cpYPignI8hJEM2A93s2HkHs8HYMOAQW0PkampyoErAiIyKxgTLqbbad29HX/shv/6LGSjPJNQ==",
      "type": "package",
      "path": "stylecop.analyzers.unstable/1.2.0.556",
      "hasTools": true,
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "THIRD-PARTY-NOTICES.txt",
        "analyzers/dotnet/cs/StyleCop.Analyzers.CodeFixes.dll",
        "analyzers/dotnet/cs/StyleCop.Analyzers.dll",
        "analyzers/dotnet/cs/de-DE/StyleCop.Analyzers.resources.dll",
        "analyzers/dotnet/cs/en-GB/StyleCop.Analyzers.resources.dll",
        "analyzers/dotnet/cs/es-MX/StyleCop.Analyzers.resources.dll",
        "analyzers/dotnet/cs/fr-FR/StyleCop.Analyzers.resources.dll",
        "analyzers/dotnet/cs/pl-PL/StyleCop.Analyzers.resources.dll",
        "analyzers/dotnet/cs/pt-BR/StyleCop.Analyzers.resources.dll",
        "analyzers/dotnet/cs/ru-RU/StyleCop.Analyzers.resources.dll",
        "rulesets/StyleCopAnalyzersDefault.ruleset",
        "stylecop.analyzers.unstable.1.2.0.556.nupkg.sha512",
        "stylecop.analyzers.unstable.nuspec",
        "tools/install.ps1",
        "tools/uninstall.ps1"
      ]
    },
    "System.Reflection.Metadata/1.6.0": {
      "sha512": "COC1aiAJjCoA5GBF+QKL2uLqEBew4JsCkQmoHKbN3TlOZKa2fKLz5CpiRQKDz0RsAOEGsVKqOD5bomsXq/4STQ==",
      "type": "package",
      "path": "system.reflection.metadata/1.6.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "lib/netstandard1.1/System.Reflection.Metadata.dll",
        "lib/netstandard1.1/System.Reflection.Metadata.xml",
        "lib/netstandard2.0/System.Reflection.Metadata.dll",
        "lib/netstandard2.0/System.Reflection.Metadata.xml",
        "lib/portable-net45+win8/System.Reflection.Metadata.dll",
        "lib/portable-net45+win8/System.Reflection.Metadata.xml",
        "system.reflection.metadata.1.6.0.nupkg.sha512",
        "system.reflection.metadata.nuspec",
        "useSharedDesignerContext.txt",
        "version.txt"
      ]
    },
    "xunit/2.9.2": {
      "sha512": "7LhFS2N9Z6Xgg8aE5lY95cneYivRMfRI8v+4PATa4S64D5Z/Plkg0qa8dTRHSiGRgVZ/CL2gEfJDE5AUhOX+2Q==",
      "type": "package",
      "path": "xunit/2.9.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "_content/README.md",
        "_content/logo-128-transparent.png",
        "xunit.2.9.2.nupkg.sha512",
        "xunit.nuspec"
      ]
    },
    "xunit.abstractions/2.0.3": {
      "sha512": "pot1I4YOxlWjIb5jmwvvQNbTrZ3lJQ+jUGkGjWE3hEFM0l5gOnBWS+H3qsex68s5cO52g+44vpGzhAt+42vwKg==",
      "type": "package",
      "path": "xunit.abstractions/2.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "lib/net35/xunit.abstractions.dll",
        "lib/net35/xunit.abstractions.xml",
        "lib/netstandard1.0/xunit.abstractions.dll",
        "lib/netstandard1.0/xunit.abstractions.xml",
        "lib/netstandard2.0/xunit.abstractions.dll",
        "lib/netstandard2.0/xunit.abstractions.xml",
        "xunit.abstractions.2.0.3.nupkg.sha512",
        "xunit.abstractions.nuspec"
      ]
    },
    "xunit.analyzers/1.16.0": {
      "sha512": "hptYM7vGr46GUIgZt21YHO4rfuBAQS2eINbFo16CV/Dqq+24Tp+P5gDCACu1AbFfW4Sp/WRfDPSK8fmUUb8s0Q==",
      "type": "package",
      "path": "xunit.analyzers/1.16.0",
      "hasTools": true,
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "_content/README.md",
        "_content/logo-128-transparent.png",
        "analyzers/dotnet/cs/xunit.analyzers.dll",
        "analyzers/dotnet/cs/xunit.analyzers.fixes.dll",
        "tools/install.ps1",
        "tools/uninstall.ps1",
        "xunit.analyzers.1.16.0.nupkg.sha512",
        "xunit.analyzers.nuspec"
      ]
    },
    "xunit.assert/2.9.2": {
      "sha512": "QkNBAQG4pa66cholm28AxijBjrmki98/vsEh4Sx5iplzotvPgpiotcxqJQMRC8d7RV7nIT8ozh97957hDnZwsQ==",
      "type": "package",
      "path": "xunit.assert/2.9.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "_content/README.md",
        "_content/logo-128-transparent.png",
        "lib/net6.0/xunit.assert.dll",
        "lib/net6.0/xunit.assert.xml",
        "lib/netstandard1.1/xunit.assert.dll",
        "lib/netstandard1.1/xunit.assert.xml",
        "xunit.assert.2.9.2.nupkg.sha512",
        "xunit.assert.nuspec"
      ]
    },
    "xunit.core/2.9.2": {
      "sha512": "O6RrNSdmZ0xgEn5kT927PNwog5vxTtKrWMihhhrT0Sg9jQ7iBDciYOwzBgP2krBEk5/GBXI18R1lKvmnxGcb4w==",
      "type": "package",
      "path": "xunit.core/2.9.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "_content/README.md",
        "_content/logo-128-transparent.png",
        "build/xunit.core.props",
        "build/xunit.core.targets",
        "buildMultiTargeting/xunit.core.props",
        "buildMultiTargeting/xunit.core.targets",
        "xunit.core.2.9.2.nupkg.sha512",
        "xunit.core.nuspec"
      ]
    },
    "xunit.extensibility.core/2.9.2": {
      "sha512": "Ol+KlBJz1x8BrdnhN2DeOuLrr1I/cTwtHCggL9BvYqFuVd/TUSzxNT5O0NxCIXth30bsKxgMfdqLTcORtM52yQ==",
      "type": "package",
      "path": "xunit.extensibility.core/2.9.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "_content/README.md",
        "_content/logo-128-transparent.png",
        "lib/net452/xunit.core.dll",
        "lib/net452/xunit.core.dll.tdnet",
        "lib/net452/xunit.core.xml",
        "lib/net452/xunit.runner.tdnet.dll",
        "lib/net452/xunit.runner.utility.net452.dll",
        "lib/netstandard1.1/xunit.core.dll",
        "lib/netstandard1.1/xunit.core.xml",
        "xunit.extensibility.core.2.9.2.nupkg.sha512",
        "xunit.extensibility.core.nuspec"
      ]
    },
    "xunit.extensibility.execution/2.9.2": {
      "sha512": "rKMpq4GsIUIJibXuZoZ8lYp5EpROlnYaRpwu9Zr0sRZXE7JqJfEEbCsUriZqB+ByXCLFBJyjkTRULMdC+U566g==",
      "type": "package",
      "path": "xunit.extensibility.execution/2.9.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "_content/README.md",
        "_content/logo-128-transparent.png",
        "lib/net452/xunit.execution.desktop.dll",
        "lib/net452/xunit.execution.desktop.xml",
        "lib/netstandard1.1/xunit.execution.dotnet.dll",
        "lib/netstandard1.1/xunit.execution.dotnet.xml",
        "xunit.extensibility.execution.2.9.2.nupkg.sha512",
        "xunit.extensibility.execution.nuspec"
      ]
    },
    "xunit.runner.visualstudio/2.8.2": {
      "sha512": "vm1tbfXhFmjFMUmS4M0J0ASXz3/U5XvXBa6DOQUL3fEz4Vt6YPhv+ESCarx6M6D+9kJkJYZKCNvJMas1+nVfmQ==",
      "type": "package",
      "path": "xunit.runner.visualstudio/2.8.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "_content/README.md",
        "_content/logo-128-transparent.png",
        "build/net462/xunit.abstractions.dll",
        "build/net462/xunit.runner.reporters.net452.dll",
        "build/net462/xunit.runner.utility.net452.dll",
        "build/net462/xunit.runner.visualstudio.props",
        "build/net462/xunit.runner.visualstudio.testadapter.dll",
        "build/net6.0/xunit.abstractions.dll",
        "build/net6.0/xunit.runner.reporters.netcoreapp10.dll",
        "build/net6.0/xunit.runner.utility.netcoreapp10.dll",
        "build/net6.0/xunit.runner.visualstudio.props",
        "build/net6.0/xunit.runner.visualstudio.testadapter.dll",
        "lib/net462/_._",
        "lib/net6.0/_._",
        "xunit.runner.visualstudio.2.8.2.nupkg.sha512",
        "xunit.runner.visualstudio.nuspec"
      ]
    },
    "Night/1.0.0": {
      "type": "project",
      "path": "../../src/Night/Night.csproj",
      "msbuildProject": "../../src/Night/Night.csproj"
    }
  },
  "projectFileDependencyGroups": {
    "net9.0": [
      "Microsoft.NET.Test.Sdk >= 17.12.0",
      "Night >= 1.0.0",
      "StyleCop.Analyzers.Unstable >= 1.2.0.556",
      "coverlet.collector >= 6.0.2",
      "xunit >= 2.9.2",
      "xunit.runner.visualstudio >= 2.8.2"
    ]
  },
  "packageFolders": {
    "/Users/danny/.nuget/packages/": {}
  },
  "project": {
    "version": "1.0.0",
    "restore": {
      "projectUniqueName": "/Users/danny/Documents/GitHub/any2/tests/Night.Tests/Night.Tests.csproj",
      "projectName": "Night.Tests",
      "projectPath": "/Users/danny/Documents/GitHub/any2/tests/Night.Tests/Night.Tests.csproj",
      "packagesPath": "/Users/danny/.nuget/packages/",
      "outputPath": "/Users/danny/Documents/GitHub/any2/tests/Night.Tests/obj/",
      "projectStyle": "PackageReference",
      "configFilePaths": [
        "/Users/danny/.nuget/NuGet/NuGet.Config"
      ],
      "originalTargetFrameworks": [
        "net9.0"
      ],
      "sources": {
        "https://api.nuget.org/v3/index.json": {}
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "projectReferences": {
            "/Users/danny/Documents/GitHub/any2/src/Night/Night.csproj": {
              "projectPath": "/Users/danny/Documents/GitHub/any2/src/Night/Night.csproj"
            }
          }
        }
      },
      "warningProperties": {
        "warnAsError": [
          "NU1605"
        ]
      },
      "restoreAuditProperties": {
        "enableAudit": "true",
        "auditLevel": "low",
        "auditMode": "direct"
      },
      "SdkAnalysisLevel": "9.0.300"
    },
    "frameworks": {
      "net9.0": {
        "targetAlias": "net9.0",
        "dependencies": {
          "Microsoft.NET.Test.Sdk": {
            "target": "Package",
            "version": "[17.12.0, )"
          },
          "StyleCop.Analyzers.Unstable": {
            "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
            "suppressParent": "All",
            "target": "Package",
            "version": "[1.2.0.556, )"
          },
          "coverlet.collector": {
            "target": "Package",
            "version": "[6.0.2, )"
          },
          "xunit": {
            "target": "Package",
            "version": "[2.9.2, )"
          },
          "xunit.runner.visualstudio": {
            "target": "Package",
            "version": "[2.8.2, )"
          }
        },
        "imports": [
          "net461",
          "net462",
          "net47",
          "net471",
          "net472",
          "net48",
          "net481"
        ],
        "assetTargetFallback": true,
        "warn": true,
        "frameworkReferences": {
          "Microsoft.NETCore.App": {
            "privateAssets": "all"
          }
        },
        "runtimeIdentifierGraphPath": "/Users/danny/.local/share/mise/installs/dotnet/9.0.300/sdk/9.0.300/PortableRuntimeIdentifierGraph.json"
      }
    }
  }
}


================================================
File: tests/Night.Tests/obj/project.nuget.cache
================================================
{
  "version": 2,
  "dgSpecHash": "ZGKUX2iKjkw=",
  "success": true,
  "projectFilePath": "/Users/danny/Documents/GitHub/any2/tests/Night.Tests/Night.Tests.csproj",
  "expectedPackageFiles": [
    "/Users/danny/.nuget/packages/coverlet.collector/6.0.2/coverlet.collector.6.0.2.nupkg.sha512",
    "/Users/danny/.nuget/packages/microsoft.codecoverage/17.12.0/microsoft.codecoverage.17.12.0.nupkg.sha512",
    "/Users/danny/.nuget/packages/microsoft.net.test.sdk/17.12.0/microsoft.net.test.sdk.17.12.0.nupkg.sha512",
    "/Users/danny/.nuget/packages/microsoft.testplatform.objectmodel/17.12.0/microsoft.testplatform.objectmodel.17.12.0.nupkg.sha512",
    "/Users/danny/.nuget/packages/microsoft.testplatform.testhost/17.12.0/microsoft.testplatform.testhost.17.12.0.nupkg.sha512",
    "/Users/danny/.nuget/packages/newtonsoft.json/13.0.1/newtonsoft.json.13.0.1.nupkg.sha512",
    "/Users/danny/.nuget/packages/sdl3-cs/3.2.14.2/sdl3-cs.3.2.14.2.nupkg.sha512",
    "/Users/danny/.nuget/packages/stylecop.analyzers.unstable/1.2.0.556/stylecop.analyzers.unstable.1.2.0.556.nupkg.sha512",
    "/Users/danny/.nuget/packages/system.reflection.metadata/1.6.0/system.reflection.metadata.1.6.0.nupkg.sha512",
    "/Users/danny/.nuget/packages/xunit/2.9.2/xunit.2.9.2.nupkg.sha512",
    "/Users/danny/.nuget/packages/xunit.abstractions/2.0.3/xunit.abstractions.2.0.3.nupkg.sha512",
    "/Users/danny/.nuget/packages/xunit.analyzers/1.16.0/xunit.analyzers.1.16.0.nupkg.sha512",
    "/Users/danny/.nuget/packages/xunit.assert/2.9.2/xunit.assert.2.9.2.nupkg.sha512",
    "/Users/danny/.nuget/packages/xunit.core/2.9.2/xunit.core.2.9.2.nupkg.sha512",
    "/Users/danny/.nuget/packages/xunit.extensibility.core/2.9.2/xunit.extensibility.core.2.9.2.nupkg.sha512",
    "/Users/danny/.nuget/packages/xunit.extensibility.execution/2.9.2/xunit.extensibility.execution.2.9.2.nupkg.sha512",
    "/Users/danny/.nuget/packages/xunit.runner.visualstudio/2.8.2/xunit.runner.visualstudio.2.8.2.nupkg.sha512"
  ],
  "logs": []
}


================================================
File: tests/Night.Tests/obj/Debug/net9.0/Night.En.ACB7F3D8.Up2Date
================================================



================================================
File: tests/Night.Tests/obj/Debug/net9.0/Night.Engine.Tests.AssemblyInfo.cs
================================================
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("Night.Engine.Tests")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+9199592ee1287114365d11edda2ee4a27d5a98c0")]
[assembly: System.Reflection.AssemblyProductAttribute("Night.Engine.Tests")]
[assembly: System.Reflection.AssemblyTitleAttribute("Night.Engine.Tests")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]

// Generated by the MSBuild WriteCodeFragment class.




================================================
File: tests/Night.Tests/obj/Debug/net9.0/Night.Engine.Tests.AssemblyInfoInputs.cache
================================================
f040431231c5afa2742360ca4082cedeb8d8ed3dbb5ed988334f8e9305ade09a



================================================
File: tests/Night.Tests/obj/Debug/net9.0/Night.Engine.Tests.GeneratedMSBuildEditorConfig.editorconfig
================================================
is_global = true
build_property.TargetFramework = net9.0
build_property.TargetPlatformMinVersion = 
build_property.UsingMicrosoftNETSdkWeb = 
build_property.ProjectTypeGuids = 
build_property.InvariantGlobalization = 
build_property.PlatformNeutralAssembly = 
build_property.EnforceExtendedAnalyzerRules = 
build_property._SupportedPlatformList = Linux,macOS,Windows
build_property.RootNamespace = Night.Engine.Tests
build_property.ProjectDir = /Users/danny/Documents/GitHub/any2/tests/Night.Engine.Tests/
build_property.EnableComHosting = 
build_property.EnableGeneratedComInterfaceComImportInterop = 
build_property.EffectiveAnalysisLevelStyle = 9.0
build_property.EnableCodeStyleSeverity = 



================================================
File: tests/Night.Tests/obj/Debug/net9.0/Night.Engine.Tests.GlobalUsings.g.cs
================================================
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.IO;
global using global::System.Linq;
global using global::System.Net.Http;
global using global::System.Threading;
global using global::System.Threading.Tasks;
global using global::Xunit;



================================================
File: tests/Night.Tests/obj/Debug/net9.0/Night.Engine.Tests.assets.cache
================================================
[Non-text file]


================================================
File: tests/Night.Tests/obj/Debug/net9.0/Night.Engine.Tests.csproj.AssemblyReference.cache
================================================
[Non-text file]


================================================
File: tests/Night.Tests/obj/Debug/net9.0/Night.Engine.Tests.csproj.CoreCompileInputs.cache
================================================
804893afb84a2106acc78b32119e8605aea2e7a519ee51e48faf64c2116ef767



================================================
File: tests/Night.Tests/obj/Debug/net9.0/Night.Engine.Tests.genruntimeconfig.cache
================================================
1788b9fe64b50655f1e1b15fa7323bbb1908e8d975ac5989dfc77f29fd3457d0



================================================
File: tests/Night.Tests/obj/Debug/net9.0/Night.Engine.Tests.sourcelink.json
================================================
{"documents":{"/Users/danny/Documents/GitHub/any2/*":"https://raw.githubusercontent.com/nightconcept/any2/9199592ee1287114365d11edda2ee4a27d5a98c0/*","/Users/danny/Documents/GitHub/any2/lib/SDL3-CS/*":"https://raw.githubusercontent.com/edwardgushchin/SDL3-CS/f910675dcf9e0825b10e97b8583c892e0eee14be/*"}}


================================================
File: tests/Night.Tests/obj/Debug/net9.0/Night.Te.8CE7B445.Up2Date
================================================



================================================
File: tests/Night.Tests/obj/Debug/net9.0/Night.Tests.AssemblyInfo.cs
================================================
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("Night.Tests")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+e8acfd8c72548188ce07da1dbb62c652b6e1ed63")]
[assembly: System.Reflection.AssemblyProductAttribute("Night.Tests")]
[assembly: System.Reflection.AssemblyTitleAttribute("Night.Tests")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]

// Generated by the MSBuild WriteCodeFragment class.




================================================
File: tests/Night.Tests/obj/Debug/net9.0/Night.Tests.AssemblyInfoInputs.cache
================================================
d86af12e8a1b8c273b8b790a7ddecac4a675e6d83ee85b066886a6970f4a2d9b



================================================
File: tests/Night.Tests/obj/Debug/net9.0/Night.Tests.GeneratedMSBuildEditorConfig.editorconfig
================================================
is_global = true
build_property.TargetFramework = net9.0
build_property.TargetPlatformMinVersion = 
build_property.UsingMicrosoftNETSdkWeb = 
build_property.ProjectTypeGuids = 
build_property.InvariantGlobalization = 
build_property.PlatformNeutralAssembly = 
build_property.EnforceExtendedAnalyzerRules = 
build_property._SupportedPlatformList = Linux,macOS,Windows
build_property.RootNamespace = Night.Tests
build_property.ProjectDir = /Users/danny/Documents/GitHub/any2/tests/Night.Tests/
build_property.EnableComHosting = 
build_property.EnableGeneratedComInterfaceComImportInterop = 
build_property.EffectiveAnalysisLevelStyle = 9.0
build_property.EnableCodeStyleSeverity = 



================================================
File: tests/Night.Tests/obj/Debug/net9.0/Night.Tests.GlobalUsings.g.cs
================================================
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.IO;
global using global::System.Linq;
global using global::System.Net.Http;
global using global::System.Threading;
global using global::System.Threading.Tasks;
global using global::Xunit;



================================================
File: tests/Night.Tests/obj/Debug/net9.0/Night.Tests.assets.cache
================================================
[Non-text file]


================================================
File: tests/Night.Tests/obj/Debug/net9.0/Night.Tests.csproj.AssemblyReference.cache
================================================
[Non-text file]


================================================
File: tests/Night.Tests/obj/Debug/net9.0/Night.Tests.csproj.CoreCompileInputs.cache
================================================
62cccf8dc7bc5e8006b3efcb9a12104a7430f183b7cbd1c5a1b5ce7383bcc9ff



================================================
File: tests/Night.Tests/obj/Debug/net9.0/Night.Tests.genruntimeconfig.cache
================================================
d53d785cd13fe8861eda2a994b895aa112ff854516c6173e0a310886392f409f



================================================
File: tests/Night.Tests/obj/Debug/net9.0/Night.Tests.sourcelink.json
================================================
{"documents":{"/Users/danny/Documents/GitHub/any2/*":"https://raw.githubusercontent.com/nightconcept/any2/e8acfd8c72548188ce07da1dbb62c652b6e1ed63/*","/Users/danny/Documents/GitHub/any2/lib/SDL3-CS/*":"https://raw.githubusercontent.com/edwardgushchin/SDL3-CS/f910675dcf9e0825b10e97b8583c892e0eee14be/*"}}


================================================
File: tests/Night.Tests/obj/Debug/net9.0/.NETCoreApp,Version=v9.0.AssemblyAttributes.cs
================================================
// <autogenerated />
using System;
using System.Reflection;
[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETCoreApp,Version=v9.0", FrameworkDisplayName = ".NET 9.0")]





================================================
File: tests/Night.Tests/obj/Release/net9.0/Night.Te.8CE7B445.Up2Date
================================================



================================================
File: tests/Night.Tests/obj/Release/net9.0/Night.Tests.AssemblyInfo.cs
================================================
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("Night.Tests")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Release")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+9199592ee1287114365d11edda2ee4a27d5a98c0")]
[assembly: System.Reflection.AssemblyProductAttribute("Night.Tests")]
[assembly: System.Reflection.AssemblyTitleAttribute("Night.Tests")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]

// Generated by the MSBuild WriteCodeFragment class.




================================================
File: tests/Night.Tests/obj/Release/net9.0/Night.Tests.AssemblyInfoInputs.cache
================================================
9288249c0a704a7f3417c3eb44528bf1ca5795f0b13b4899e57a106b7d554686



================================================
File: tests/Night.Tests/obj/Release/net9.0/Night.Tests.GeneratedMSBuildEditorConfig.editorconfig
================================================
is_global = true
build_property.TargetFramework = net9.0
build_property.TargetPlatformMinVersion = 
build_property.UsingMicrosoftNETSdkWeb = 
build_property.ProjectTypeGuids = 
build_property.InvariantGlobalization = 
build_property.PlatformNeutralAssembly = 
build_property.EnforceExtendedAnalyzerRules = 
build_property._SupportedPlatformList = Linux,macOS,Windows
build_property.RootNamespace = Night.Tests
build_property.ProjectDir = /Users/danny/Documents/GitHub/any2/tests/Night.Tests/
build_property.EnableComHosting = 
build_property.EnableGeneratedComInterfaceComImportInterop = 
build_property.EffectiveAnalysisLevelStyle = 9.0
build_property.EnableCodeStyleSeverity = 



================================================
File: tests/Night.Tests/obj/Release/net9.0/Night.Tests.GlobalUsings.g.cs
================================================
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.IO;
global using global::System.Linq;
global using global::System.Net.Http;
global using global::System.Threading;
global using global::System.Threading.Tasks;
global using global::Xunit;



================================================
File: tests/Night.Tests/obj/Release/net9.0/Night.Tests.assets.cache
================================================
[Non-text file]


================================================
File: tests/Night.Tests/obj/Release/net9.0/Night.Tests.csproj.AssemblyReference.cache
================================================
[Non-text file]


================================================
File: tests/Night.Tests/obj/Release/net9.0/Night.Tests.csproj.CoreCompileInputs.cache
================================================
d18837008e0cdec4e4a506e1eb6c507ac41ab709c7926f6161b31ea23edd163e



================================================
File: tests/Night.Tests/obj/Release/net9.0/Night.Tests.genruntimeconfig.cache
================================================
361cedffbdd790b646e674ff1aa835603a5019ac4c3f1d327a7f13f781470954



================================================
File: tests/Night.Tests/obj/Release/net9.0/Night.Tests.sourcelink.json
================================================
{"documents":{"/Users/danny/Documents/GitHub/any2/*":"https://raw.githubusercontent.com/nightconcept/any2/9199592ee1287114365d11edda2ee4a27d5a98c0/*","/Users/danny/Documents/GitHub/any2/lib/SDL3-CS/*":"https://raw.githubusercontent.com/edwardgushchin/SDL3-CS/f910675dcf9e0825b10e97b8583c892e0eee14be/*"}}


================================================
File: tests/Night.Tests/obj/Release/net9.0/.NETCoreApp,Version=v9.0.AssemblyAttributes.cs
================================================
// <autogenerated />
using System;
using System.Reflection;
[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETCoreApp,Version=v9.0", FrameworkDisplayName = ".NET 9.0")]





================================================
File: tools/manifest.json
================================================
{
    "crunch": {
        "version": "2025.05.29"
    }
}


================================================
File: tools/codegen/PRD.md
================================================
# Texture Atlas C# Source Generator: Project Overview

## 1. Introduction & Goal

This project will create a C# Source Generator to process JSON texture atlas files. The primary goal is to provide type-safe, auto-generated C# constants and data structures for accessing sprite information within a C# game engine, improving developer workflow and reducing runtime errors.

## 2. Problem Statement

Manually referencing sprite data using strings (e.g., "Orc-Attack01.png") or hardcoded coordinates is error-prone (typos, outdated data) and difficult to maintain. Changes in the atlas require manual updates in code, leading to potential desynchronization and bugs. This generator will eliminate these issues.

## 3. Proposed Solution: Key Features

The C# Source Generator will:

- **Input:** Consume one or more `.json` atlas files (matching the provided structure) marked as `AdditionalFiles` in the consuming C# project.

- **Parsing:** Deserialize the JSON structure, including atlas metadata and the list of images with their properties (Name, X, Y, W, H, TrimOffsetX, TrimOffsetY, UntrimmedWidth, UntrimmedHeight).

- **Code Generation:** For each atlas JSON file, generate a C# static class. For an atlas named "orcs_atlas.json":

  - **Namespace:** The generated code will reside in a configurable or default namespace (e.g., `GameEngine.Generated.Atlases`).

  - **Main Class:** `public static class OrcsAtlasSprites` (derived from the JSON file name).

  - **Sprite Keys:** An enum `public enum SpriteKey { Orc, Orc_Attack02, Orc_Attack01, ... }` for unique sprite identification. Names will be sanitized (e.g., "Orc-Attack01.png" -> `Orc_Attack01`).

  - **Sprite Data Struct:** `public readonly struct SpriteData { public string OriginalName { get; } public int X { get; } ... public int UntrimmedHeight { get; } ... }`.

  - **Access Mechanism:** A static, readonly dictionary: `public static readonly System.Collections.Generic.IReadOnlyDictionary<SpriteKey, SpriteData> Definitions;` providing access to all sprites.

- **Robustness:** Handle potential naming collisions for sanitized sprite keys gracefully (e.g., by appending a unique suffix if necessary, though simple sanitization is the initial focus).

## 4. Success Criteria

- The Source Generator produces C# code that compiles successfully within the game engine project.

- Generated sprite data (coordinates, dimensions) accurately reflects the JSON input.

- Developers can use the generated enums and structs with IDE autocompletion and compile-time type checking.

- Changes to the input JSON files trigger regeneration of the C# code upon the next build.

- Basic error reporting for malformed JSON or critical processing issues.

## 5. Out of Scope (Initial Version)

- Generating code from atlas formats other than the specified JSON structure.

- Aggregating multiple distinct atlas files into a single generated C# class (each JSON will initially generate its own corresponding static class).

- Advanced animation sequence generation from sprite names (focus on individual sprite definitions).

- A GUI or editor interface for managing atlases or the generator.



================================================
File: tools/codegen/example.json
================================================
{
  "Name": "orcs_atlas",
  "Width": 4096,
  "Height": 1024,
  "Images": [
    {
      "Name": "Orc.png",
      "X": 0,
      "Y": 0,
      "W": 724,
      "H": 516,
      "TrimOffsetX": -42,
      "TrimOffsetY": -41,
      "UntrimmedWidth": 800,
      "UntrimmedHeight": 600
    },
    {
      "Name": "Orc-Attack02.png",
      "X": 725,
      "Y": 0,
      "W": 518,
      "H": 33,
      "TrimOffsetX": -44,
      "TrimOffsetY": -33,
      "UntrimmedWidth": 600,
      "UntrimmedHeight": 100
    },
    {
      "Name": "Orc-Attack01.png",
      "X": 1244,
      "Y": 0,
      "W": 527,
      "H": 29,
      "TrimOffsetX": -44,
      "TrimOffsetY": -33,
      "UntrimmedWidth": 600,
      "UntrimmedHeight": 100
    },
    {
      "Name": "Orc-Walk.png",
      "X": 1772,
      "Y": 0,
      "W": 722,
      "H": 16,
      "TrimOffsetX": -44,
      "TrimOffsetY": -41,
      "UntrimmedWidth": 800,
      "UntrimmedHeight": 100
    },
    {
      "Name": "Orc-Idle.png",
      "X": 2495,
      "Y": 0,
      "W": 522,
      "H": 16,
      "TrimOffsetX": -44,
      "TrimOffsetY": -41,
      "UntrimmedWidth": 600,
      "UntrimmedHeight": 100
    },
    {
      "Name": "Orc-Death.png",
      "X": 3018,
      "Y": 0,
      "W": 321,
      "H": 18,
      "TrimOffsetX": -44,
      "TrimOffsetY": -39,
      "UntrimmedWidth": 400,
      "UntrimmedHeight": 100
    },
    {
      "Name": "Orc-Hurt.png",
      "X": 3340,
      "Y": 0,
      "W": 323,
      "H": 15,
      "TrimOffsetX": -42,
      "TrimOffsetY": -42,
      "UntrimmedWidth": 400,
      "UntrimmedHeight": 100
    }
  ]
}


================================================
File: tools/crunch/linux/crunch
================================================
[Non-text file]


================================================
File: tools/crunch/macos/crunch
================================================
[Non-text file]



================================================
File: .config/dotnet-tools.json
================================================
{
  "version": 1,
  "isRoot": true,
  "tools": {
    "docfx": {
      "version": "2.78.3",
      "commands": [
        "docfx"
      ],
      "rollForward": false
    }
  }
}



================================================
File: .github/CODEOWNERS
================================================
# This is a CODEOWNERS file.
#
# Lines starting with '#' are comments.
# Each line is a file pattern followed by one or more owners.
# These patterns follow the same rules as .gitignore.
#
# Owners can be:
# - A GitHub username (e.g., @octocat)
# - A GitHub team name (e.g., @my-org/my-team)
# - An email address (e.g., user@example.com)
#
# Order matters: the last matching pattern takes the most precedence.
#
# Example:
# *       @global-owner1 @global-owner2  # All files are owned by these users/teams
# *.js    @js-owner                      # .js files are owned by @js-owner
# /docs/  docs@example.com               # Files in the /docs/ directory are owned by docs@example.com

# All files in the repository are owned by nightconcept
* @nightconcept dark@nightconcept.net

# You can add more specific rules below if needed.
# For example, if different parts of the project have different owners:
#
# /cmd/      @nightconcept
# /internal/ @nightconcept
# /scripts/  dark@nightconcept.net



================================================
File: .github/copilot-instructions.md
================================================
# AI Project Guidelines (Condensed)

**Objective:** Define mandatory process, coding, testing, and interaction standards for AI assistance.

## 1. Preparation

* **Project Context (Session Start):** ALWAYS review key project docs: `docs/PRD.md` (architecture, goals, tech stack, versions, structure, style guide), `docs/digest.txt` (current state summary), `docs/TASKS.md` (assignments).
* **Task Prep (Before Work):**
    * ALWAYS consult `docs/TASKS.md` for your assignment. If missing, add it (concise description, `YYYY-MM-DD`).
    * ALWAYS review relevant existing code *before* suggesting changes.

## 2. Implementation Planning

**Present this plan before providing code for a task:**

* Problem description (brief).
* Solution overview (high-level).
* Implementation steps (list).
* Risks/Challenges (foreseen).

## 3. Development Workflow

* **Plan First:** Present plan (Sec 2) before coding.
* **Focus:** Target the specific task from `TASKS.md`. No unrelated refactoring unless tasked.
* **Modification Approach:**
    * Prioritize minimal, incremental, clean, elegant, idiomatic changes.
    * Explain significant suggestions (Sec 5.4).
    * Propose beneficial low-risk refactoring.
    * Avoid duplication; use helpers/modules.
    * Explain use of language strengths/pitfalls if relevant.
* **Dependencies:** No new/updated external dependencies without explicit maintainer approval (check `docs/PRD.md` for approved stack/versions). Use only approved dependencies.
* **Commits (User Task):** Follow Conventional Commits (`https://www.conventionalcommits.org/en/v1.0.0/`).
* **Manual Testing:** Provide clear user instructions for manually testing the task's changes.

## 4. Folder Structure

* **Strict Adherence:** Follow structure defined in `docs/PRD.md`.
* **Changes:** No adding/removing/relocating files/dirs without prior maintainer approval. Approved structure changes require updating `docs/PRD.md` *before* implementation.
* **Source Location:** All source code must be in `src/`.
* **Precedence:** This rule is foundational.

## 5. Coding Standards

### 5.1. General & Robustness

* Follow language best practices unless overridden by `docs/PRD.md` or these guidelines.
* Prioritize: Clarity, maintainability, efficiency.
* Consider performance & basic security.
* Implement robust error handling (language norms or `PRD.md` spec); handle errors gracefully.

### 5.2. Modularity & Structure

* Keep files focused (ideally < 500 lines); refactor large ones.
* Prefer small, single-purpose functions.
* Structure code logically (per `docs/PRD.md`) into modules.
* Use clear, consistent imports (relative for local packages). Verify paths.

### 5.3. Style & Formatting

* **Priority:** 1) `docs/PRD.md`, 2) These rules, 3) Language common practices.
* **Type Hinting:** Mandatory for functions/classes/modules (dynamic languages).
* **Indentation:** 2 spaces.
* **Function Calls:** No space: `func()` not `func ()`.
* **Line Structure:** Avoid collapsing statements if clarity suffers.
* **Scope:** Default local. More descriptive names for wider scope. Avoid single-letter vars (except iterators/tiny scope; `i` only for loops). Use `_` for ignored vars.
* **Casing:** Match current file style; else language common style. `UPPER_CASE` for constants only.
* **Booleans:** Prefer `is_` prefix for boolean functions.
* **File Headers:** Top comment: Title (descriptive, not filename) + brief purpose. No version/OS info.

### 5.4. Documentation & Comments

* **Docstrings:** Required for public functions, classes, modules (standard format).
* **Code Comments:** Explain non-obvious logic, complex algorithms, decisions (*why*, not *what*).
* **Reasoning Comments:** Use `# Reason:` for complex block rationale.
* **README Updates:** Update `docs/README.md` for core features, dependency changes, or setup/build modifications.

## 6. Testing

* **Goal:** Tests are living documentation specifying behavior. Use common language framework.
* **Behavior Specification:** Tests specify behavior. Type/scope/timing (e.g., E2E, Unit, Integration) defined in `docs/PRD.md` per project phase.
* **Location:** Place tests in `/src/test` (Lua: `/src/spec`), mirroring `src/` structure (Sec 4).
    * Ex: Tests for `src/engine/mod.js` -> `src/test/engine/mod_test.js`.
    * Ex: Lua spec for `src/engine/mod.lua` -> `src/spec/engine/mod_spec.lua`.
* **Content:** Tests clearly describe expected behavior per `PRD.md` goals for the current phase.
    * **Prototype Phase:** Primary focus on automated E2E tests validating core functionality.
* **Strategy & Coverage:** Defined in `PRD.md`, evolves with phases.
    * **Prototype Phase:** E2E priority. Comprehensive unit tests & code coverage metrics (e.g., 100% statement coverage) are **not** the focus *unless* specified in `docs/PRD.md` for a later phase demanding them.
* **Updating Tests:** Review/update tests with code changes to reflect *current* expected behavior. Fix failing/outdated tests promptly.

## 7. AI Interaction Protocols

### 7.1. Engineering Role & Audience

* **Role:** Act as a **Senior Software Engineer**.
* **Audience:** Target **Mid-Level Software Engineers** (code = best practices, clear, documented; explanations thorough; justify complex choices).

### 7.2. Interaction Guidelines

* Ask clarifying questions if needed; do not assume.
* Verify facts (libs, APIs, file paths); do not invent. Use MCP servers if available.
* Do not delete/overwrite code unless instructed or part of the defined task.
* Report significant blockers/errors *during* implementation promptly with context and suggestions.
* If a task seems complex, state potential benefit from a more advanced model **boldly** at the start (e.g., "**Suggestion: This complex refactoring might benefit from a more advanced model.**").
* Be friendly, helpful, collaborative.
* Explicitly state when task requirements are met. Mark task complete in `docs/TASKS.md`.



================================================
File: .github/dependabot.yml
================================================
version: 2
updates:
  - package-ecosystem: "github-actions"
    directory: "/"
    schedule:
      # Check for updates to GitHub Actions every week
      interval: "weekly"



================================================
File: .github/scripts/determine_next_version.py
================================================
import os
import subprocess
import semver
import sys

def get_tags():
    try:
        result = subprocess.run(['git', 'tag', '-l', 'v*', '--sort=v:refname'], capture_output=True, text=True, check=True)
        tags = result.stdout.strip().split('\n')
        return [tag for tag in tags if tag] # Filter out empty strings if any
    except subprocess.CalledProcessError as e:
        print(f"Error fetching tags: {e}", file=sys.stderr)
        return []

def get_latest_semver(tags):
    latest_v = None
    for tag_str in reversed(tags): # Iterate from newest to oldest based on git sort
        try:
            v = semver.VersionInfo.parse(tag_str[1:]) # Remove 'v' prefix
            if latest_v is None or v > latest_v:
                latest_v = v
        except ValueError:
            # Not a valid semver tag, skip
            continue
    return latest_v

def get_latest_prerelease_for_base(tags, base_version, token):
    """
    Finds the latest prerelease tag for a given base version and token.
    Example: base_version = 0.2.0, token = 'alpha' -> finds latest v0.2.0-alpha.N
    Returns a semver.VersionInfo object or None.
    """
    latest_prerelease_v = None
    for tag_str in reversed(tags): # Assumes tags are sorted v:refname
        try:
            v = semver.VersionInfo.parse(tag_str[1:])
            if v.major == base_version.major and \
               v.minor == base_version.minor and \
               v.patch == base_version.patch and \
               v.prerelease and len(v.prerelease) == 2 and v.prerelease[0] == token:
                # Compare numeric part of the prerelease
                if latest_prerelease_v is None or v.prerelease[1] > latest_prerelease_v.prerelease[1]:
                    latest_prerelease_v = v
        except ValueError:
            # Not a valid semver tag or unexpected prerelease format
            continue
        except TypeError:
            # Handle cases where prerelease[1] might not be comparable (e.g., not an int)
            print(f"Warning: Prerelease part of tag {tag_str} is not as expected for comparison.", file=sys.stderr)
            continue
    return latest_prerelease_v

def main():
    bump_type = os.environ.get('BUMP_TYPE')
    if not bump_type:
        print("Error: BUMP_TYPE environment variable not set.", file=sys.stderr)
        sys.exit(1)

    tags = get_tags()
    latest_v = get_latest_semver(tags)

    next_v_str = ""
    is_prerelease = "true"

    if not latest_v:
        if bump_type == 'alpha':
            next_v = semver.VersionInfo(0, 2, 0, prerelease='alpha.1')
            # Check for existing tags and bump if necessary
            temp_next_v_tag = f"v{str(next_v)}"
            while temp_next_v_tag in tags: # 'tags' contains all existing v* tags
                next_v = next_v.bump_prerelease(token='alpha')
                temp_next_v_tag = f"v{str(next_v)}"
            next_v_str = str(next_v)
        else:
            print(f"Error: No existing tags found. Initial bump must be 'alpha' to start with 0.2.0-alpha.1.", file=sys.stderr)
            sys.exit(1)
    else:
        current_v = latest_v
        if bump_type == 'alpha':
            if current_v.prerelease and current_v.prerelease[0] == 'alpha':
                next_v = current_v.bump_prerelease(token='alpha')
            else: # New alpha series for current major.minor.patch or next patch
                # If current is final (e.g. 0.1.0), new alpha is 0.1.0-alpha.1
                # If current is rc (e.g. 0.1.0-rc.1), new alpha is 0.1.0-alpha.1
                # If current is beta (e.g. 0.1.0-beta.1), new alpha is 0.1.0-alpha.1
                next_v = semver.VersionInfo(current_v.major, current_v.minor, current_v.patch, prerelease='alpha.1')

            # Check for existing tags and bump if necessary
            temp_next_v_tag = f"v{str(next_v)}"
            while temp_next_v_tag in tags:
                next_v = next_v.bump_prerelease(token='alpha') # Bumps 'alpha.1' to 'alpha.2', etc.
                temp_next_v_tag = f"v{str(next_v)}"
            next_v_str = str(next_v)
        elif bump_type == 'beta':
            if current_v.prerelease and current_v.prerelease[0] == 'beta':
                next_v = current_v.bump_prerelease(token='beta')
            else: # New beta series, must come from alpha or be a new beta for a version
                # e.g., 0.1.0-alpha.2 -> 0.1.0-beta.1
                next_v = semver.VersionInfo(current_v.major, current_v.minor, current_v.patch, prerelease='beta.1')

            # Check for existing tags and bump if necessary
            temp_next_v_tag = f"v{str(next_v)}"
            while temp_next_v_tag in tags:
                next_v = next_v.bump_prerelease(token='beta')
                temp_next_v_tag = f"v{str(next_v)}"
            next_v_str = str(next_v)
        elif bump_type == 'rc':
            if current_v.prerelease and current_v.prerelease[0] == 'rc':
                next_v = current_v.bump_prerelease(token='rc')
            else: # New RC series
                next_v = semver.VersionInfo(current_v.major, current_v.minor, current_v.patch, prerelease='rc.1')

            # Check for existing tags and bump if necessary
            temp_next_v_tag = f"v{str(next_v)}"
            while temp_next_v_tag in tags:
                next_v = next_v.bump_prerelease(token='rc')
                temp_next_v_tag = f"v{str(next_v)}"
            next_v_str = str(next_v)
        elif bump_type == 'promote_to_final':
            if not current_v.prerelease:
                print(f"Error: Version {current_v} is already final. Cannot promote.", file=sys.stderr)
                sys.exit(1)
            next_v = current_v.finalize_version()
            next_v_str = str(next_v)
            is_prerelease = "false"
        elif bump_type == 'patch':
            # For patch, minor, major, we always bump from the finalized version of the *overall* latest tag.
            base_v = current_v.finalize_version()
            next_v = base_v.bump_patch()
            next_v_str = str(next_v)
            is_prerelease = "false"
        elif bump_type == 'minor':
            base_v = current_v.finalize_version()
            next_v = base_v.bump_minor()
            next_v_str = str(next_v)
            is_prerelease = "false"
        elif bump_type == 'major':
            base_v = current_v.finalize_version()
            next_v = base_v.bump_major()
            next_v_str = str(next_v)
            is_prerelease = "false"
        else:
            print(f"Error: Unknown BUMP_TYPE '{bump_type}'", file=sys.stderr)
            sys.exit(1)

    if not next_v_str.startswith('v'):
        next_v_tag = f"v{next_v_str}"
    else:
        next_v_tag = next_v_str


    print(f"Calculated next version: {next_v_tag}", file=sys.stderr)
    print(f"::set-output name=next_version::{next_v_tag}")
    print(f"::set-output name=is_prerelease::{is_prerelease}")

if __name__ == "__main__":
    main()



================================================
File: .github/workflows/ci.yml
================================================
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive' # Ensure submodules like SDL are checked out

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: | # Specify SDK versions if particular ones are needed, or remove for latest
          9.0.x

    - name: Check Formatting
      run: dotnet format --verify-no-changes --verbosity diagnostic Night.sln

    - name: Restore dependencies
      run: dotnet restore Night.sln

    - name: Build Solution
      run: dotnet build Night.sln --configuration Release --no-restore

    - name: Run Tests (Night.Tests) # Placeholder for engine unit tests
      run: dotnet test tests/Night.Tests/Night.Tests.csproj --no-build --configuration Release # Adjust path if needed

    # - name: Run Tests (Night.SampleGame.Tests) # Placeholder for sample game integration tests (if any)



================================================
File: .github/workflows/codeql-analysis.yml
================================================
name: "CodeQL C# Analysis"

on:
  push:
    branches: ["main"]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: ["main"]

permissions:
  contents: read

jobs:
  analyze:
    name: Analyze C#
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ["csharp"]
        # CodeQL supports [ csharp, cpp, go, java, javascript, python, ruby ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # We must fetch all history for CodeQL to correctly analyze commits
          fetch-depth: 0

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@60168efe1c415ce0f5521ea06d5c2062adbeed1b # v3.28.17
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.

      # Autobuild attempts to build any compiled languages (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually.
      # For .NET Core, ensure that the .NET SDK is available.
      # You might need to add a setup-dotnet step if not using a GitHub-hosted runner with it pre-installed.
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x

      - name: Autobuild
        uses: github/codeql-action/autobuild@60168efe1c415ce0f5521ea06d5c2062adbeed1b # v3.28.17

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@60168efe1c415ce0f5521ea06d5c2062adbeed1b # v3.28.17
        with:
          category: "/language:${{matrix.language}}"



================================================
File: .github/workflows/dependency-review.yml
================================================
# Dependency Review Action
#
# This Action will scan dependency manifest files that change as part of a Pull Request,
# surfacing known-vulnerable versions of the packages declared or updated in the PR.
# Once installed, if the workflow run is marked as required,
# PRs introducing known-vulnerable packages will be blocked from merging.
#
# Source repository: https://github.com/actions/dependency-review-action
name: 'Dependency Review'
on: [pull_request]

permissions:
  contents: read

jobs:
  dependency-review:
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: 'Checkout Repository'
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: 'Dependency Review'
        uses: actions/dependency-review-action@38ecb5b593bf0eb19e335c03f97670f792489a8b # v4.7.0



================================================
File: .github/workflows/docs.yml
================================================
name: Docs CI

on:
  push:
    branches:
      - main
    paths:
      - 'src/Night/**'
      - 'site/**'
      - '.github/workflows/docs.yml'
      - '.config/dotnet-tools.json'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy-docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore .NET tools
        run: dotnet tool restore

      - name: Build documentation
        run: dotnet docfx site/docfx.json

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site/_site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4



================================================
File: .github/workflows/release.yml
================================================
name: Release Night Library (GitHub Release)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Semantic Version for the release (e.g., 1.0.0, 1.0.0-beta.1). This is the pure SemVer.'
        required: true
        type: string

permissions:
  contents: write # To create commits, tags, and releases

jobs:
  release:
    name: Build and Create GitHub Release for Night Library
    runs-on: ubuntu-latest
    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      SOLUTION_FILE_PATH: Night.sln
      MAIN_PROJECT_FILE_PATH: src/Night/Night.csproj
      VERSION_INFO_FILE_PATH: src/Night/VersionInfo.cs # Path to the version C# file
      TEST_PROJECT_FILE_PATH: tests/Night.Tests/Night.Tests.csproj
      PACKAGE_OUTPUT_DIR: ./packages

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required to analyze history

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Validate Version Input (SemVer)
        run: |
          version_input="${{ github.event.inputs.version }}"
          semver_regex="^([0-9]+)\\.([0-9]+)\\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*))?(?:\\+([0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*))?$"
          if [[ ! "$version_input" =~ $semver_regex ]]; then
            echo "Error: Invalid version format. Input must be a pure Semantic Version (e.g., 1.0.0, 1.2.3-beta.1)."
            exit 1
          fi
          echo "SemVer input '$version_input' is valid."
        shell: bash

      - name: Update Version in .csproj
        id: update_version_csproj
        run: |
          $newSemVer = "${{ github.event.inputs.version }}"
          $projectFilePath = "${{ env.MAIN_PROJECT_FILE_PATH }}"
          Write-Host "Attempting to update <Version> in '$projectFilePath' to '$newSemVer'"
          [xml]$csproj = Get-Content -Path $projectFilePath -Raw
          $versionNode = $csproj.SelectSingleNode("//PropertyGroup/Version")
          if (-not $versionNode) {
              $propertyGroupNode = $csproj.SelectSingleNode("//PropertyGroup")
              if (-not $propertyGroupNode) {
                  $propertyGroupNode = $csproj.CreateElement("PropertyGroup")
                  $csproj.Project.AppendChild($propertyGroupNode) | Out-Null
              }
              $versionNode = $csproj.CreateElement("Version")
              $propertyGroupNode.AppendChild($versionNode) | Out-Null
          }
          $versionNode.'#text' = $newSemVer
          $csproj.Save($projectFilePath)
          Write-Host "Saved <Version> $newSemVer to '$projectFilePath'"
          echo "version_tag=v$newSemVer" >> $GITHUB_OUTPUT
        shell: pwsh

      - name: Update Version in VersionInfo.cs
        run: |
          $newSemVer = "${{ github.event.inputs.version }}"
          $versionInfoFilePath = "${{ env.VERSION_INFO_FILE_PATH }}"
          Write-Host "Attempting to update Version constant in '$versionInfoFilePath' to '$newSemVer'"
          $content = Get-Content $versionInfoFilePath -Raw
          # Regex to find 'public const string Version = ".*";' and replace the version string part
          $updatedContent = $content -replace '(?<=public const string Version = ")([^"]*)(?=";)', $newSemVer
          Set-Content -Path $versionInfoFilePath -Value $updatedContent
          Write-Host "Updated Version constant in '$versionInfoFilePath'"
        shell: pwsh

      - name: Commit Version Changes
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git add "${{ env.MAIN_PROJECT_FILE_PATH }}" # .csproj
          git add "${{ env.VERSION_INFO_FILE_PATH }}" # VersionInfo.cs
          git commit -m "Update version to ${{ github.event.inputs.version }} [skip ci]"
          echo "Committed version updates for ${{ github.event.inputs.version }}"
        shell: bash

      - name: Create Git Tag
        run: |
          git tag "${{ steps.update_version_csproj.outputs.version_tag }}"
          echo "Created git tag ${{ steps.update_version_csproj.outputs.version_tag }}"
        shell: bash

      - name: Push Commit and Tag
        run: |
          git push origin HEAD:main --follow-tags
          echo "Pushed commit and tag to remote."
        shell: bash

      - name: Build Solution
        run: dotnet build "${{ env.SOLUTION_FILE_PATH }}" -c Release /p:Version="${{ github.event.inputs.version }}"

      - name: Run Tests
        run: dotnet test "${{ env.SOLUTION_FILE_PATH }}" --no-build -c Release

      - name: Create Package Output Directory
        run: mkdir -p "${{ env.PACKAGE_OUTPUT_DIR }}"

      - name: Package Library
        run: |
          dotnet pack "${{ env.MAIN_PROJECT_FILE_PATH }}" `
            --no-build `
            -c Release `
            -o "${{ env.PACKAGE_OUTPUT_DIR }}" `
            /p:Version="${{ github.event.inputs.version }}" `
            /p:IncludeSymbols=true `
            /p:SymbolPackageFormat=snupkg
        shell: pwsh

      - name: List Packaged Files
        run: ls -R "${{ env.PACKAGE_OUTPUT_DIR }}"
        shell: bash

      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION_TAG: ${{ steps.update_version_csproj.outputs.version_tag }}
          RELEASE_VERSION: ${{ github.event.inputs.version }}
        run: |
          gh release create "$VERSION_TAG" \
            "${{ env.PACKAGE_OUTPUT_DIR }}"/*.nupkg \
            "${{ env.PACKAGE_OUTPUT_DIR }}"/*.snupkg \
            --title "Release $RELEASE_VERSION" \
            --notes "Night Engine Release $RELEASE_VERSION" \
            --draft=false \
            --prerelease=$([[ "$RELEASE_VERSION" == *-* ]] && echo true || echo false)
        shell: bash



================================================
File: .github/workflows/scorecard.yml
================================================
# This workflow uses actions that are not certified by GitHub. They are provided
# by a third-party and are governed by separate terms of service, privacy
# policy, and support documentation.

name: Scorecard supply-chain security
on:
  # For Branch-Protection check. Only the default branch is supported. See
  # https://github.com/ossf/scorecard/blob/main/docs/checks.md#branch-protection
  branch_protection_rule:
  # To guarantee Maintained check is occasionally updated. See
  # https://github.com/ossf/scorecard/blob/main/docs/checks.md#maintained
  schedule:
    - cron: '26 19 * * 2'
  push:
    branches: [ "main" ]

# Declare default permissions as read only.
permissions: read-all

jobs:
  analysis:
    name: Scorecard analysis
    runs-on: ubuntu-latest
    # `publish_results: true` only works when run from the default branch. conditional can be removed if disabled.
    if: github.event.repository.default_branch == github.ref_name || github.event_name == 'pull_request'
    permissions:
      # Needed to upload the results to code-scanning dashboard.
      security-events: write
      # Needed to publish results and get a badge (see publish_results below).
      id-token: write
      # Uncomment the permissions below if installing in a private repository.
      # contents: read
      # actions: read

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: "Checkout code"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: "Run analysis"
        uses: ossf/scorecard-action@f49aabe0b5af0936a0987cfb85d86b75731b0186 # v2.4.1
        with:
          results_file: results.sarif
          results_format: sarif
          # (Optional) "write" PAT token. Uncomment the `repo_token` line below if:
          # - you want to enable the Branch-Protection check on a *public* repository, or
          # - you are installing Scorecard on a *private* repository
          # To create the PAT, follow the steps in https://github.com/ossf/scorecard-action?tab=readme-ov-file#authentication-with-fine-grained-pat-optional.
          # repo_token: ${{ secrets.SCORECARD_TOKEN }}

          # Public repositories:
          #   - Publish results to OpenSSF REST API for easy access by consumers
          #   - Allows the repository to include the Scorecard badge.
          #   - See https://github.com/ossf/scorecard-action#publishing-results.
          # For private repositories:
          #   - `publish_results` will always be set to `false`, regardless
          #     of the value entered here.
          publish_results: true

          # (Optional) Uncomment file_mode if you have a .gitattributes with files marked export-ignore
          # file_mode: git

      # Upload the results as artifacts (optional). Commenting out will disable uploads of run results in SARIF
      # format to the repository Actions tab.
      - name: "Upload artifact"
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: SARIF file
          path: results.sarif
          retention-days: 5

      # Upload the results to GitHub's code scanning dashboard (optional).
      # Commenting out will disable upload of results to your repo's Code Scanning dashboard
      - name: "Upload to code-scanning"
        uses: github/codeql-action/upload-sarif@60168efe1c415ce0f5521ea06d5c2062adbeed1b # v3.28.17
        with:
          sarif_file: results.sarif




